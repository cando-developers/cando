(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    974248,      18176]
NotebookOptionsPosition[    958743,      17743]
NotebookOutlinePosition[    959154,      17761]
CellTagsIndexPosition[    959111,      17758]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Generate optimized energy, gradient, and Hessian expressions for molecular \
mechanics.\
\>", "Subtitle",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.402914001047615*^9}],

Cell[BoxData[
 RowBox[{"Directory", "[", "]"}]], "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.402675593015943*^9, 3.40267560234683*^9}, 
   3.402675719919037*^9, 3.402914001047728*^9}]
}, Open  ]],

Cell[BoxData["\<\"/Users/meister/Development/cando/extensions/cando/src/\
mathematica\"\>"], "Output",
 CellChangeTimes->{{3.61955693636098*^9, 3.619556937398514*^9}, {
   3.702653597250333*^9, 3.702653598698069*^9}, 3.7026542065219917`*^9, {
   3.702664702977771*^9, 3.702664703748498*^9}, 3.702664834741228*^9, 
   3.702664879624086*^9, 3.7028914135672626`*^9, 3.707146188028883*^9, {
   3.7071486731316433`*^9, 3.707148673567717*^9}}],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  "\"\</Users/meister/Development/Cando/extensions/cando/src/mathematica\>\"",
   "]"}]], "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.402675724744155*^9, 3.402675744579932*^9}, {
   3.4026757812426653`*^9, 3.402675795163514*^9}, 3.4029140010477962`*^9, {
   3.404776927640129*^9, 3.4047769282020483`*^9}, {3.485009516098822*^9, 
   3.4850095173434477`*^9}, {3.619556879758088*^9, 3.6195568829874687`*^9}, {
   3.7026648712565193`*^9, 3.702664872815674*^9}, {3.702891394513167*^9, 
   3.702891405664948*^9}}],

Cell[BoxData["\<\"/Users/meister/Development/cando/extensions/cando/src/\
mathematica\"\>"], "Output",
 CellChangeTimes->{{3.619556936691887*^9, 3.619556937459659*^9}, {
   3.702653597583889*^9, 3.702653598769026*^9}, 3.702654206704248*^9, {
   3.70266470316539*^9, 3.702664703807929*^9}, {3.70266487362453*^9, 
   3.702664879745595*^9}, {3.702891407410686*^9, 3.702891413698247*^9}, 
   3.707146188234374*^9, {3.70714867334893*^9, 3.707148673640728*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.408659022451297*^9, 3.408659024556794*^9}}],

Cell["Setup to generate code that is embeded within CANDO", "Subtitle",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.402914001047846*^9, {3.494842902549116*^9, 3.494842937561069*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<optimizeExpressions`\>\"", "]"}]], "Code",
 CellChangeTimes->{{3.4055916304006453`*^9, 3.405591641125656*^9}}],

Cell[CellGroupData[{

Cell["Staple rigid-body energy term", "Title",
 CellChangeTimes->{{3.702666046819551*^9, 3.702666055636635*^9}, 
   3.702667845434409*^9, {3.70714599637531*^9, 3.7071459981568117`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x1", ",", "y1", ",", "z1", ",", "x2", ",", "y2", ",", "z2"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7026651212890797`*^9, 3.702665129345278*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"myrot", "[", 
   RowBox[{
   "a_", ",", "b_", ",", "c_", ",", "d_", ",", "x_", ",", "y_", ",", "z_"}], 
   "]"}], ":=", " ", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{
       RowBox[{"a", "^", "2"}], "+", 
       RowBox[{"b", "^", "2"}], "+", 
       RowBox[{"c", "^", "2"}], "+", 
       RowBox[{"d", "^", "2"}]}], 
      RowBox[{
       RowBox[{"2", "*", "b", "*", "c"}], "-", 
       RowBox[{"2", "*", "a", "*", "d"}]}], 
      RowBox[{
       RowBox[{"2", "*", "b", "*", "d"}], "+", 
       RowBox[{"2", "*", "a", "*", "c"}]}], "x"},
     {
      RowBox[{
       RowBox[{"2", "*", "b", "*", "c"}], "+", 
       RowBox[{"2", "*", "a", "*", "d"}]}], 
      RowBox[{
       RowBox[{"a", "^", "2"}], "-", 
       RowBox[{"b", "^", "2"}], "+", 
       RowBox[{"c", "^", "2"}], "-", 
       RowBox[{"d", "^", "2"}]}], 
      RowBox[{
       RowBox[{"2", "*", "c", "*", "d"}], "-", 
       RowBox[{"2", "*", "a", "*", "b"}]}], "y"},
     {
      RowBox[{
       RowBox[{"2", "*", "b", "*", "d"}], "-", 
       RowBox[{"2", "*", "a", "*", "c"}]}], 
      RowBox[{
       RowBox[{"2", "*", "c", "*", "d"}], "-", 
       RowBox[{"2", "*", "a", "*", "b"}]}], 
      RowBox[{
       RowBox[{"a", "^", "2"}], "-", 
       RowBox[{"b", "^", "2"}], "-", 
       RowBox[{"c", "^", "2"}], "+", 
       RowBox[{"d", "^", "2"}]}], "z"},
     {"0", "0", "0", "1"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.7026559306461163`*^9, 3.702655936949669*^9}, {
  3.702655974247155*^9, 3.702656251609112*^9}, {3.702664933574308*^9, 
  3.7026649473608*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rotk", " ", "=", " ", 
  RowBox[{"myrot", "[", 
   RowBox[{
   "ak", ",", "bk", ",", "ck", ",", "dk", ",", "xk", ",", "yk", ",", "zk"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.702656254507506*^9, 3.702656277970294*^9}, {
  3.70266495526677*^9, 3.702664961330851*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["ak", "2"], "+", 
      SuperscriptBox["bk", "2"], "+", 
      SuperscriptBox["ck", "2"], "+", 
      SuperscriptBox["dk", "2"]}], ",", 
     RowBox[{
      RowBox[{"2", " ", "bk", " ", "ck"}], "-", 
      RowBox[{"2", " ", "ak", " ", "dk"}]}], ",", 
     RowBox[{
      RowBox[{"2", " ", "ak", " ", "ck"}], "+", 
      RowBox[{"2", " ", "bk", " ", "dk"}]}], ",", "xk"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", "bk", " ", "ck"}], "+", 
      RowBox[{"2", " ", "ak", " ", "dk"}]}], ",", 
     RowBox[{
      SuperscriptBox["ak", "2"], "-", 
      SuperscriptBox["bk", "2"], "+", 
      SuperscriptBox["ck", "2"], "-", 
      SuperscriptBox["dk", "2"]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
      RowBox[{"2", " ", "ck", " ", "dk"}]}], ",", "yk"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "ak", " ", "ck"}], "+", 
      RowBox[{"2", " ", "bk", " ", "dk"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
      RowBox[{"2", " ", "ck", " ", "dk"}]}], ",", 
     RowBox[{
      SuperscriptBox["ak", "2"], "-", 
      SuperscriptBox["bk", "2"], "-", 
      SuperscriptBox["ck", "2"], "+", 
      SuperscriptBox["dk", "2"]}], ",", "zk"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.702666638246599*^9, 3.702667221166613*^9, 3.702667910709527*^9, 
   3.702889682891252*^9, 3.7028899616210747`*^9, 3.702891182815988*^9, 
   3.702891413995021*^9, {3.702894454791719*^9, 3.7028944808579617`*^9}, 
   3.707147019294948*^9, 3.70714752001228*^9, 3.707148768252561*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rotl", " ", "=", " ", 
  RowBox[{"myrot", "[", 
   RowBox[{
   "al", ",", "bl", ",", "cl", ",", "dl", ",", "xl", ",", "yl", ",", "zl"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7026563543442907`*^9, 3.702656370478537*^9}, {
  3.702664965941259*^9, 3.702664969022298*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["al", "2"], "+", 
      SuperscriptBox["bl", "2"], "+", 
      SuperscriptBox["cl", "2"], "+", 
      SuperscriptBox["dl", "2"]}], ",", 
     RowBox[{
      RowBox[{"2", " ", "bl", " ", "cl"}], "-", 
      RowBox[{"2", " ", "al", " ", "dl"}]}], ",", 
     RowBox[{
      RowBox[{"2", " ", "al", " ", "cl"}], "+", 
      RowBox[{"2", " ", "bl", " ", "dl"}]}], ",", "xl"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", "bl", " ", "cl"}], "+", 
      RowBox[{"2", " ", "al", " ", "dl"}]}], ",", 
     RowBox[{
      SuperscriptBox["al", "2"], "-", 
      SuperscriptBox["bl", "2"], "+", 
      SuperscriptBox["cl", "2"], "-", 
      SuperscriptBox["dl", "2"]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
      RowBox[{"2", " ", "cl", " ", "dl"}]}], ",", "yl"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "al", " ", "cl"}], "+", 
      RowBox[{"2", " ", "bl", " ", "dl"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
      RowBox[{"2", " ", "cl", " ", "dl"}]}], ",", 
     RowBox[{
      SuperscriptBox["al", "2"], "-", 
      SuperscriptBox["bl", "2"], "-", 
      SuperscriptBox["cl", "2"], "+", 
      SuperscriptBox["dl", "2"]}], ",", "zl"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.702666638307432*^9, 3.702667221242487*^9, 3.7026679107833967`*^9, 
   3.702889682978447*^9, 3.702889961712007*^9, 3.70289118289216*^9, 
   3.702891414072631*^9, {3.702894454869285*^9, 3.702894480913188*^9}, 
   3.707147022911933*^9, 3.707147520086083*^9, 3.707148768341465*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ba", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{"xh1", ",", " ", "yh1", ",", " ", "zh1"}], " ", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{"xh2", ",", " ", "yh2", ",", " ", "zh2"}], " ", "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.702665060868902*^9, 3.702665086478999*^9}, {
  3.7026651779582376`*^9, 3.702665179746352*^9}, {3.702894426628853*^9, 
  3.702894442471896*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eba", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"ba", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ebb", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"bb", ",", "1"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7026651886697617`*^9, 3.702665217534218*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stapleDeviation", " ", "=", " ", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"rotk", ".", "eba"}], "-", 
       RowBox[{"rotl", ".", "ebb"}]}], ")"}], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"rotk", ".", "eba"}], "-", 
       RowBox[{"rotl", ".", "ebb"}]}], ")"}]}], "]"}], " ", "-", " ", 
   "r0"}]}]], "Input",
 CellChangeTimes->{{3.702656391772649*^9, 3.702656402865533*^9}, {
   3.702656445922453*^9, 3.702656481969098*^9}, {3.702656575339932*^9, 
   3.702656580193851*^9}, {3.7026566262200747`*^9, 3.7026566412428913`*^9}, {
   3.702656688525708*^9, 3.7026566889291763`*^9}, {3.702656722909153*^9, 
   3.702656755199275*^9}, {3.70266498573925*^9, 3.7026650398317747`*^9}, {
   3.702665095542657*^9, 3.702665109997888*^9}, {3.702665220867923*^9, 
   3.702665226216156*^9}, {3.70266561581205*^9, 3.702665616016284*^9}, 
   3.702667879269751*^9, {3.707147213299781*^9, 3.7071472325537977`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "r0"}], "+", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["ak", "2"], "+", 
           SuperscriptBox["bk", "2"], "+", 
           SuperscriptBox["ck", "2"], "+", 
           SuperscriptBox["dk", "2"]}], ")"}], " ", "xh1"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["al", "2"], "+", 
           SuperscriptBox["bl", "2"], "+", 
           SuperscriptBox["cl", "2"], "+", 
           SuperscriptBox["dl", "2"]}], ")"}], " ", "xh2"}], "+", "xk", "-", 
        "xl", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "bk", " ", "ck"}], "-", 
           RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "bl", " ", "cl"}], "-", 
           RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "ak", " ", "ck"}], "+", 
           RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "al", " ", "cl"}], "+", 
           RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
       ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "bk", " ", "ck"}], "+", 
           RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "bl", " ", "cl"}], "+", 
           RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["ak", "2"], "-", 
           SuperscriptBox["bk", "2"], "+", 
           SuperscriptBox["ck", "2"], "-", 
           SuperscriptBox["dk", "2"]}], ")"}], " ", "yh1"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["al", "2"], "-", 
           SuperscriptBox["bl", "2"], "+", 
           SuperscriptBox["cl", "2"], "-", 
           SuperscriptBox["dl", "2"]}], ")"}], " ", "yh2"}], "+", "yk", "-", 
        "yl", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
           RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
           RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
       ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "ak", " ", "ck"}], "+", 
           RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "al", " ", "cl"}], "+", 
           RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
           RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
           RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["ak", "2"], "-", 
           SuperscriptBox["bk", "2"], "-", 
           SuperscriptBox["ck", "2"], "+", 
           SuperscriptBox["dk", "2"]}], ")"}], " ", "zh1"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["al", "2"], "-", 
           SuperscriptBox["bl", "2"], "-", 
           SuperscriptBox["cl", "2"], "+", 
           SuperscriptBox["dl", "2"]}], ")"}], " ", "zh2"}], "+", "zk", "-", 
        "zl"}], ")"}], "2"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.702666638428665*^9, 3.702667221416298*^9, 3.7026679109089527`*^9, 
   3.7028896831298027`*^9, 3.702889961892424*^9, 3.702891183065309*^9, 
   3.702891414230192*^9, {3.702894455042652*^9, 3.702894481075836*^9}, 
   3.7071472330454693`*^9, 3.707147520291965*^9, 3.707148768532933*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stapleEnergyFn", " ", "=", " ", 
  RowBox[{"ks", " ", 
   RowBox[{
    RowBox[{"(", "stapleDeviation", ")"}], "^", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.7071472732910233`*^9, 3.707147291106224*^9}}],

Cell[BoxData[
 RowBox[{"ks", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "r0"}], "+", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["ak", "2"], "+", 
              SuperscriptBox["bk", "2"], "+", 
              SuperscriptBox["ck", "2"], "+", 
              SuperscriptBox["dk", "2"]}], ")"}], " ", "xh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["al", "2"], "+", 
              SuperscriptBox["bl", "2"], "+", 
              SuperscriptBox["cl", "2"], "+", 
              SuperscriptBox["dl", "2"]}], ")"}], " ", "xh2"}], "+", "xk", 
           "-", "xl", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "bk", " ", "ck"}], "-", 
              RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "bl", " ", "cl"}], "-", 
              RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "ak", " ", "ck"}], "+", 
              RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "al", " ", "cl"}], "+", 
              RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
          ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "bk", " ", "ck"}], "+", 
              RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "bl", " ", "cl"}], "+", 
              RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["ak", "2"], "-", 
              SuperscriptBox["bk", "2"], "+", 
              SuperscriptBox["ck", "2"], "-", 
              SuperscriptBox["dk", "2"]}], ")"}], " ", "yh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["al", "2"], "-", 
              SuperscriptBox["bl", "2"], "+", 
              SuperscriptBox["cl", "2"], "-", 
              SuperscriptBox["dl", "2"]}], ")"}], " ", "yh2"}], "+", "yk", 
           "-", "yl", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
              RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
              RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
          ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "ak", " ", "ck"}], "+", 
              RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "al", " ", "cl"}], "+", 
              RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
              RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
              RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["ak", "2"], "-", 
              SuperscriptBox["bk", "2"], "-", 
              SuperscriptBox["ck", "2"], "+", 
              SuperscriptBox["dk", "2"]}], ")"}], " ", "zh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["al", "2"], "-", 
              SuperscriptBox["bl", "2"], "-", 
              SuperscriptBox["cl", "2"], "+", 
              SuperscriptBox["dl", "2"]}], ")"}], " ", "zh2"}], "+", "zk", 
           "-", "zl"}], ")"}], "2"]}], ")"}]}]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{3.707147353760356*^9, 3.707147520369309*^9, 
  3.707148768607133*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"stapleVarNames", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ak", ",", "a", ",", "I1", ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"bk", ",", "b", ",", "I1", ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"ck", ",", "c", ",", "I1", ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"dk", ",", "d", ",", "I1", ",", "3"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xk", ",", "x", ",", "I1", ",", "4"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"yk", ",", "y", ",", "I1", ",", "5"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"zk", ",", "z", ",", "I1", ",", "6"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"al", ",", "a", ",", "I2", ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"bl", ",", "b", ",", "I2", ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"cl", ",", "c", ",", "I2", ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"dl", ",", "d", ",", "I2", ",", "3"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xl", ",", "x", ",", "I2", ",", "4"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"yl", ",", "y", ",", "I2", ",", "5"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"zl", ",", "z", ",", "I2", ",", "6"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.702665250051643*^9, 3.7026653039744596`*^9}, {
   3.702665895595372*^9, 3.7026660256467524`*^9}, 3.70266610473518*^9, 
   3.7026678793568573`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stapleSetupRules", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", 
    RowBox[{
    "CCode", "[", "\"\<STAPLE_SET_PARAMETER(I1,rigidBodyA);\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", 
    RowBox[{
    "CCode", "[", "\"\<STAPLE_SET_PARAMETER(I2,rigidBodyB);\>\"", "]"}]}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.702665307282709*^9, 3.7026653539621363`*^9}, {
  3.702666545008964*^9, 3.702666558545693*^9}, {3.702667865268785*^9, 
  3.702667879587242*^9}, {3.702889157006177*^9, 3.702889164364553*^9}, {
  3.706924887140312*^9, 3.7069248986928453`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "stapleVarNames", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"str", " ", "=", " ", 
      RowBox[{"\"\<STAPLE_SET_POSITION(\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"stapleVarNames", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"stapleVarNames", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"stapleVarNames", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], "]"}], "<>", "\"\<);\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "str", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"stapleSetupRules", ",", 
       RowBox[{"CCode", "[", "str", "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7026653697729197`*^9, 3.702665399017919*^9}, {
  3.702667865332658*^9, 3.70266787995826*^9}, {3.702889668272381*^9, 
  3.7028896775365877`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<STAPLE_SET_POINT(xh1,pointA,getX());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<STAPLE_SET_POINT(yh1,pointA,getY());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<STAPLE_SET_POINT(zh1,pointA,getZ());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<STAPLE_SET_POINT(xh2,pointB,getX());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<STAPLE_SET_POINT(yh2,pointB,getY());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<STAPLE_SET_POINT(zh2,pointB,getZ());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.702889717438642*^9, 3.702889744132216*^9}, {
  3.702889799017868*^9, 3.702889838930481*^9}, {3.7028898927791853`*^9, 
  3.702889938491302*^9}, {3.702894463739758*^9, 3.702894468534267*^9}, {
  3.7069249208588142`*^9, 3.706924965222961*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stapleSetupRules", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.702665439946115*^9, 3.702665444877211*^9}, 
   3.702667880041853*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
       "CCode", "[", "\<\"STAPLE_SET_PARAMETER(I1,rigidBodyA);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"STAPLE_SET_PARAMETER(I2,rigidBodyB);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(ak,I1,0);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(bk,I1,1);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(ck,I1,2);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(dk,I1,3);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(xk,I1,4);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(yk,I1,5);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(zk,I1,6);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(al,I2,0);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(bl,I2,1);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(cl,I2,2);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(dl,I2,3);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(xl,I2,4);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(yl,I2,5);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(zl,I2,6);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"STAPLE_SET_POINT(xh1,pointA,getX());\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"STAPLE_SET_POINT(yh1,pointA,getY());\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"STAPLE_SET_POINT(zh1,pointA,getZ());\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"STAPLE_SET_POINT(xh2,pointB,getX());\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"STAPLE_SET_POINT(yh2,pointB,getY());\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"STAPLE_SET_POINT(zh2,pointB,getZ());\"\>", "]"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.702667911181444*^9, 3.702889683448352*^9, 3.702889962257967*^9, 
   3.702891183373643*^9, 3.702891414545534*^9, {3.702894455342057*^9, 
   3.702894481407825*^9}, 3.707147394958623*^9, 3.707147520607356*^9, 
   3.707148768847888*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stapleEnergyRules", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stapleOutputs", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleEnergyRules", ",", 
    RowBox[{"Assign", "[", 
     RowBox[{"Energy", ",", "stapleEnergyFn"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleEnergyRules", ",", 
    RowBox[{"EnergyAccumulate", "[", 
     RowBox[{"\"\<STAPLE\>\"", ",", "Energy"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleOutputs", ",", "Energy"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7026655052521257`*^9, 3.7026655279230843`*^9}, 
   3.702665559899187*^9, 3.7026669034970493`*^9, {3.7026678801394444`*^9, 
   3.702667880549102*^9}, {3.702894354420628*^9, 3.702894355431469*^9}}],

Cell[CellGroupData[{

Cell["Append the Gradient rules", "Subtitle",
 CellChangeTimes->{{3.702665585411888*^9, 3.7026655955445013`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["stapleEnergyFn"], "Input",
 CellChangeTimes->{{3.702665600896058*^9, 3.702665603387577*^9}, 
   3.7026678806356*^9}],

Cell[BoxData[
 RowBox[{"ks", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "r0"}], "+", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["ak", "2"], "+", 
              SuperscriptBox["bk", "2"], "+", 
              SuperscriptBox["ck", "2"], "+", 
              SuperscriptBox["dk", "2"]}], ")"}], " ", "xh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["al", "2"], "+", 
              SuperscriptBox["bl", "2"], "+", 
              SuperscriptBox["cl", "2"], "+", 
              SuperscriptBox["dl", "2"]}], ")"}], " ", "xh2"}], "+", "xk", 
           "-", "xl", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "bk", " ", "ck"}], "-", 
              RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "bl", " ", "cl"}], "-", 
              RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "ak", " ", "ck"}], "+", 
              RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "al", " ", "cl"}], "+", 
              RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
          ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "bk", " ", "ck"}], "+", 
              RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "bl", " ", "cl"}], "+", 
              RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["ak", "2"], "-", 
              SuperscriptBox["bk", "2"], "+", 
              SuperscriptBox["ck", "2"], "-", 
              SuperscriptBox["dk", "2"]}], ")"}], " ", "yh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["al", "2"], "-", 
              SuperscriptBox["bl", "2"], "+", 
              SuperscriptBox["cl", "2"], "-", 
              SuperscriptBox["dl", "2"]}], ")"}], " ", "yh2"}], "+", "yk", 
           "-", "yl", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
              RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
              RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
          ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "ak", " ", "ck"}], "+", 
              RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "al", " ", "cl"}], "+", 
              RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
              RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
              RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["ak", "2"], "-", 
              SuperscriptBox["bk", "2"], "-", 
              SuperscriptBox["ck", "2"], "+", 
              SuperscriptBox["dk", "2"]}], ")"}], " ", "zh1"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["al", "2"], "-", 
              SuperscriptBox["bl", "2"], "-", 
              SuperscriptBox["cl", "2"], "+", 
              SuperscriptBox["dl", "2"]}], ")"}], " ", "zh2"}], "+", "zk", 
           "-", "zl"}], ")"}], "2"]}], ")"}]}]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{
  3.7026666387950172`*^9, 3.702667221849856*^9, 3.7026679113808107`*^9, 
   3.702889683612542*^9, 3.702889962558721*^9, 3.702891183504959*^9, 
   3.702891414678564*^9, 3.702894374360067*^9, {3.7028944554589453`*^9, 
   3.702894481510565*^9}, 3.707147431965355*^9, 3.707147520746846*^9, 
   3.707148768981319*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"stapleForceRules", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7026663167169523`*^9, 3.702666324249215*^9}, 
   3.702667880730946*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AppendGradientAndForce", "[", 
   RowBox[{
   "\"\<STAPLE\>\"", ",", "stapleEnergyRules", ",", "stapleOutputs", ",", 
    "stapleEnergyFn", ",", "stapleVarNames"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.702665662227541*^9, 3.702665675042551*^9}, {
  3.702665719248609*^9, 3.702665779138154*^9}, {3.702667866125484*^9, 
  3.702667880997301*^9}}],

Cell[CellGroupData[{

Cell[BoxData["stapleOutputs"], "Input",
 CellChangeTimes->{{3.702665807907201*^9, 3.7026658098882017`*^9}, 
   3.702667881086121*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Energy", ",", "fak", ",", "fbk", ",", "fck", ",", "fdk", ",", "fxk", ",", 
   "fyk", ",", "fzk", ",", "fal", ",", "fbl", ",", "fcl", ",", "fdl", ",", 
   "fxl", ",", "fyl", ",", "fzl"}], "}"}]], "Output",
 CellChangeTimes->{
  3.702666639803829*^9, 3.702667223135886*^9, 3.70266791275457*^9, 
   3.702889684791482*^9, 3.7028899663778057`*^9, 3.7028911847000313`*^9, 
   3.7028914164493027`*^9, 3.7028943752038813`*^9, {3.7028944569410877`*^9, 
   3.7028944826912527`*^9}, 3.707147466845923*^9, 3.7071475240002813`*^9, 
   3.70714877231773*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Collect terms and convert to C code", "Subsection",
 CellChangeTimes->{{3.401714376596349*^9, 3.401714390085981*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"stapleAllRules", " ", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "stapleSetupRules", ",", "\[IndentingNewLine]", "stapleEnergyRules"}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.410177622861577*^9, 3.410177650326877*^9}, {
   3.410957497343137*^9, 3.410957525179797*^9}, 3.410958727655569*^9, {
   3.702666212925044*^9, 3.70266621369392*^9}, 3.702666368288919*^9, {
   3.702667881180406*^9, 3.702667881299728*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"stapleRules", " ", "=", " ", 
   RowBox[{"Flatten", "[", "stapleAllRules", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4109587363528433`*^9, 3.410958744314476*^9}, {
  3.702666213960264*^9, 3.7026662163072977`*^9}, {3.7026678814059973`*^9, 
  3.702667881458247*^9}}],

Cell[CellGroupData[{

Cell[BoxData["stapleRules"], "Input",
 CellChangeTimes->{{3.411210896309596*^9, 3.411210898002816*^9}, 
   3.702666216845126*^9, 3.702667881574181*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{278., {2., 8.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "CCode", "[", "\<\"STAPLE_SET_PARAMETER(I1,rigidBodyA);\"\>", 
            "]"}], ",", 
           RowBox[{
           "CCode", "[", "\<\"STAPLE_SET_PARAMETER(I2,rigidBodyB);\"\>", 
            "]"}], ",", 
           RowBox[{
           "CCode", "[", "\<\"STAPLE_SET_POSITION(ak,I1,0);\"\>", "]"}], ",", 
           
           RowBox[{"\[LeftSkeleton]", "61", "\[RightSkeleton]"}], ",", 
           RowBox[{
            RowBox[{"-", "gzl"}], "\[Rule]", "fzl"}], ",", 
           RowBox[{
           "CCode", "[", "\<\"STAPLE_FORCE_ACCUMULATE(I2, 6, fzl );\"\>", 
            "]"}]}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{49., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 86, 29632520389989546958, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{52., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 86, 29632520389989546958, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{82., {2., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 86, 29632520389989546958, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{74., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[86]]], "Output",
 CellChangeTimes->{
  3.70266791289823*^9, 3.7028896849821453`*^9, 3.7028899672865753`*^9, 
   3.702891184871729*^9, 3.702891416585243*^9, 3.702894375334017*^9, {
   3.7028944571236*^9, 3.702894482815072*^9}, 3.7071474766614103`*^9, 
   3.707147524804441*^9, 3.70714877253653*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"stapleInput", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{
    "ak", ",", "bk", ",", "ck", ",", "dk", ",", "xk", ",", "yk", ",", "zk", 
     ",", " ", "al", ",", "bl", ",", "cl", ",", "dl", ",", "xl", ",", "yl", 
     ",", "zl"}], " ", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4055952302564087`*^9, 3.405595267347364*^9}, {
   3.408556502824588*^9, 3.4085565040993557`*^9}, {3.702666505031909*^9, 
   3.702666531507627*^9}, 3.702667881776746*^9, {3.707146819345879*^9, 
   3.707146827499598*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleOutputs", ",", "stapleDeviation"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.411152051138565*^9, 3.411152052756624*^9}, {
  3.702666532511979*^9, 3.7026665335664177`*^9}, {3.702667881858635*^9, 
  3.702667881917015*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Assemble the rules, the name of the energy term, the independant variable \
names, etc. into what passes for a structure in Mathematica (I call it a Pack)\
\>", "Subsection",
 CellChangeTimes->{{3.494843911918105*^9, 3.494844017248684*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"staplePack0", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Name", "\[Rule]", "\"\<STAPLE\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AdditionalCDeclares", "\[Rule]", "\"\<\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"DerivativeVariables", "\[Rule]", "stapleInput"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Rules", "\[Rule]", "stapleRules"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"Input", "\[Rule]", "stapleInput"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"Output", "\[Rule]", "stapleOutputs"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.402876557641659*^9, 3.402876568596249*^9}, 
   3.402876852017213*^9, {3.40559527044873*^9, 3.405595281200487*^9}, {
   3.405607646467461*^9, 3.405607646567194*^9}, {3.4056349375263166`*^9, 
   3.405634963865233*^9}, {3.405635515351774*^9, 3.4056355177092333`*^9}, {
   3.407679881947057*^9, 3.4076798872149277`*^9}, {3.407763146777285*^9, 
   3.407763148181219*^9}, {3.40855652062083*^9, 3.408556522452385*^9}, {
   3.408564819262188*^9, 3.408564828757545*^9}, {3.409333145287333*^9, 
   3.40933315235924*^9}, {3.4101776186718473`*^9, 3.410177620470078*^9}, {
   3.411066451212819*^9, 3.411066462017312*^9}, {3.4110669305802307`*^9, 
   3.4110669315625343`*^9}, {3.411072159484359*^9, 3.411072166176531*^9}, {
   3.411072206442031*^9, 3.41107221385695*^9}, {3.411075684409318*^9, 
   3.4110757253172703`*^9}, {3.4110759780540733`*^9, 3.411075995800424*^9}, 
   3.4110793661329203`*^9, {3.702666534898035*^9, 3.702666566906396*^9}, 
   3.702666629707164*^9, {3.702667866896305*^9, 3.702667882200088*^9}, {
   3.707146875689992*^9, 3.707146877680748*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"writeOutputVariablesForDebugging", "[", "staplePack0", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.408752301954282*^9, 3.408752370230307*^9}, {
   3.408821026441674*^9, 3.408821031596847*^9}, 3.4110670621890917`*^9, 
   3.7026665401661*^9, 3.702667882303001*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing finite difference debug code to: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_debugFiniteDifference.cc\"\>"}],
  SequenceForm[
  "Writing finite difference debug code to: ", 
   "_STAPLE_debugFiniteDifference.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.702666640161098*^9, 3.7026672234993134`*^9, 3.702667913192429*^9, 
   3.702889685257442*^9, 3.702889968945541*^9, 3.702891185131735*^9, 
   3.702891416845908*^9, 3.702894376085799*^9, {3.7028944573757677`*^9, 
   3.7028944830412207`*^9}, 3.707147525565599*^9, 3.707148772734853*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing debug variable declares to: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_debugEvalDeclares.cc\"\>"}],
  SequenceForm[
  "Writing debug variable declares to: ", "_STAPLE_debugEvalDeclares.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.702666640161098*^9, 3.7026672234993134`*^9, 3.702667913192429*^9, 
   3.702889685257442*^9, 3.702889968945541*^9, 3.702891185131735*^9, 
   3.702891416845908*^9, 3.702894376085799*^9, {3.7028944573757677`*^9, 
   3.7028944830412207`*^9}, 3.707147525565599*^9, 3.707148772736733*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing xml output debug code to: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_debugEvalSerialize.cc\"\>"}],
  SequenceForm[
  "Writing xml output debug code to: ", "_STAPLE_debugEvalSerialize.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.702666640161098*^9, 3.7026672234993134`*^9, 3.702667913192429*^9, 
   3.702889685257442*^9, 3.702889968945541*^9, 3.702891185131735*^9, 
   3.702891416845908*^9, 3.702894376085799*^9, {3.7028944573757677`*^9, 
   3.7028944830412207`*^9}, 3.707147525565599*^9, 3.707148772738727*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing set variables debug code to: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_debugEvalSet.cc\"\>"}],
  SequenceForm[
  "Writing set variables debug code to: ", "_STAPLE_debugEvalSet.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.702666640161098*^9, 3.7026672234993134`*^9, 3.702667913192429*^9, 
   3.702889685257442*^9, 3.702889968945541*^9, 3.702891185131735*^9, 
   3.702891416845908*^9, 3.702894376085799*^9, {3.7028944573757677`*^9, 
   3.7028944830412207`*^9}, 3.707147525565599*^9, 3.707148772740724*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
staplePack = Block[{PrintTemporary = Print}, packOptimize[staplePack0]];\
\>", "Text",
 CellChangeTimes->{{3.405593154617752*^9, 3.405593181273087*^9}, {
   3.405594926006316*^9, 3.4055949283713083`*^9}, {3.40560847035536*^9, 
   3.405608470488098*^9}, {3.407559202182371*^9, 3.407559202626436*^9}, {
   3.408564854380271*^9, 3.408564873627013*^9}, 3.41106665985861*^9, {
   3.411072816696417*^9, 3.4110728451363277`*^9}, {3.702666540999856*^9, 
   3.702666541884931*^9}, {3.7026678823791237`*^9, 3.70266788249536*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Put the pedal to the metal and generate \"C\" code.", "Subsection",
 CellChangeTimes->{{3.494844094666773*^9, 3.494844119787055*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"staplePack", " ", "=", " ", 
   RowBox[{"packOptimize", "[", "staplePack0", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.405593154617752*^9, 3.405593181273087*^9}, {
   3.405594926006316*^9, 3.4055949283713083`*^9}, {3.40560847035536*^9, 
   3.405608470488098*^9}, {3.407559202182371*^9, 3.407559202626436*^9}, {
   3.408564854380271*^9, 3.408564873627013*^9}, 3.41106665985861*^9, {
   3.411072816696417*^9, 3.4110728451363277`*^9}, {3.411073752072069*^9, 
   3.4110737531085377`*^9}, {3.702666542649117*^9, 3.702666543244851*^9}, {
   3.702667882654457*^9, 3.702667882764448*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028945007192087`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500720838*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.70289450072253*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500761758*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028945007698917`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500771586*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500773323*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500808682*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500810409*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028945008120813`*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500813794*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz318 -> gxk, tzz317 -> gyk, tzz316 \
-> gzk}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894501633451*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028945016353273`*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz318 -> gxk\\n\\ntzz317 \
-> gyk\\n\\ntzz316 -> gzk\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894501637158*^9}],

Cell[BoxData["\<\"After removal: \
CCode[STAPLE_SET_PARAMETER(I1,0);]\\n\\nCCode[STAPLE_SET_PARAMETER(I2,2);]\\n\
\\nCCode[STAPLE_SET_POSITION(ak,I1,0);]\\n\\nCCode[STAPLE_SET_POSITION(bk,I1,\
1);]\\n\\nCCode[STAPLE_SET_POSITION(ck,I1,2);]\\n\\nCCode[STAPLE_SET_POSITION(\
dk,I1,3);]\\n\\nCCode[STAPLE_SET_POSITION(xk,I1,4);]\\n\\nCCode[STAPLE_SET_\
POSITION(yk,I1,5);]\\n\\nCCode[STAPLE_SET_POSITION(zk,I1,6);]\\n\\nCCode[\
STAPLE_SET_POSITION(al,I2,0);]\\n\\nCCode[STAPLE_SET_POSITION(bl,I2,1);]\\n\\\
nCCode[STAPLE_SET_POSITION(cl,I2,2);]\\n\\nCCode[STAPLE_SET_POSITION(dl,I2,3);\
]\\n\\nCCode[STAPLE_SET_POSITION(xl,I2,4);]\\n\\nCCode[STAPLE_SET_POSITION(yl,\
I2,5);]\\n\\nCCode[STAPLE_SET_POSITION(zl,I2,6);]\\n\\nCCode[STAPLE_SET_POINT(\
xh1,1,0);]\\n\\nCCode[STAPLE_SET_POINT(yh1,1,1);]\\n\\nCCode[STAPLE_SET_POINT(\
zh1,1,2);]\\n\\nCCode[STAPLE_SET_POINT(xh2,3,0);]\\n\\nCCode[STAPLE_SET_POINT(\
yh2,3,1);]\\n\\nCCode[STAPLE_SET_POINT(zh2,3,2);]\\n\\npower2[bk] -> tx156\\n\
\\npower2[bl] -> tx157\\n\\npower2[ck] -> tx158\\n\\npower2[cl] -> \
tx159\\n\\npower2[dk] -> tx160\\n\\npower2[dl] -> tx161\\n\\npower2[ak] -> \
tx162\\n\\npower2[al] -> tx163\\n\\n-2. ak -> tzz313\\n\\nbk tzz313 -> \
tx164\\n\\n-2. al -> tzz312\\n\\nbl tzz312 -> tx165\\n\\nck tzz313 -> \
tx166\\n\\n2. ck -> tzz315\\n\\nak tzz315 -> tx167\\n\\nbk tzz315 -> tx168\\n\
\\ncl tzz312 -> tx169\\n\\n2. cl -> tzz314\\n\\nal tzz314 -> tx170\\n\\nbl \
tzz314 -> tx171\\n\\ndk tzz313 -> tx172\\n\\n2. dk -> tzz311\\n\\nak tzz311 \
-> tx173\\n\\nbk tzz311 -> tx174\\n\\nck tzz311 -> tx175\\n\\ndl tzz312 -> \
tx176\\n\\n2. al -> tzz319\\n\\ndl tzz319 -> tx177\\n\\n2. bl -> \
tzz320\\n\\ndl tzz320 -> tx178\\n\\ndl tzz314 -> tx179\\n\\n-tx156 -> \
tx180\\n\\n-tx157 -> tx181\\n\\n-tx158 -> tx182\\n\\n-tx159 -> \
tx183\\n\\n-tx160 -> tx184\\n\\n-tx161 -> tx185\\n\\ntx156 + tx158 + tx160 + \
tx162 -> tx186\\n\\ntx157 + tx159 + tx161 + tx163 -> tx187\\n\\ntx168 + tx172 \
-> tx188\\n\\ntx168 + tx173 -> tx189\\n\\ntx166 + tx174 -> tx190\\n\\ntx167 + \
tx174 -> tx191\\n\\ntx164 + tx175 -> tx192\\n\\ntx171 + tx176 -> \
tx193\\n\\ntx171 + tx177 -> tx194\\n\\ntx169 + tx178 -> tx195\\n\\ntx170 + \
tx178 -> tx196\\n\\ntx165 + tx179 -> tx197\\n\\ntx160 + tx162 + tx180 + tx182 \
-> tx198\\n\\ntx161 + tx163 + tx181 + tx183 -> tx199\\n\\ntx158 + tx162 + \
tx180 + tx184 -> tx200\\n\\ntx159 + tx163 + tx181 + tx185 -> tx201\\n\\ntx186 \
xh1 -> tx202\\n\\ntx189 xh1 -> tx203\\n\\ntx190 xh1 -> tx204\\n\\n-xh2 -> \
tzz325\\n\\ntx187 tzz325 -> tx205\\n\\ntx194 tzz325 -> tx206\\n\\ntx195 \
tzz325 -> tx207\\n\\n-xl -> tx208\\n\\ntx188 yh1 -> tx209\\n\\ntx192 yh1 -> \
tx210\\n\\ntx200 yh1 -> tx211\\n\\n-yh2 -> tzz324\\n\\ntx193 tzz324 -> \
tx212\\n\\ntx197 tzz324 -> tx213\\n\\ntx201 tzz324 -> tx214\\n\\n-yl -> tx215\
\\n\\ntx191 zh1 -> tx216\\n\\ntx192 zh1 -> tx217\\n\\ntx198 zh1 -> \
tx218\\n\\n-zh2 -> tzz323\\n\\ntx196 tzz323 -> tx219\\n\\ntx197 tzz323 -> \
tx220\\n\\ntx199 tzz323 -> tx221\\n\\n-zl -> tx222\\n\\ntx202 + tx205 + tx208 \
+ tx209 + tx212 + tx216 + tx219 + xk -> tx223\\n\\ntx203 + tx206 + tx211 + \
tx214 + tx215 + tx217 + tx220 + yk -> tx224\\n\\ntx204 + tx207 + tx210 + \
tx213 + tx218 + tx221 + tx222 + zk -> tx225\\n\\npower2[tx223] -> \
tx226\\n\\npower2[tx224] -> tx227\\n\\npower2[tx225] -> tx228\\n\\ntx226 + \
tx227 + tx228 -> Energy\\n\\nCCode[STAPLE_ENERGY_ACCUMULATE(Energy);]\\n\\n2. \
ak -> tzz322\\n\\ntzz322 xh1 -> tx229\\n\\n-2. ck xh1 -> tx230\\n\\ntzz311 \
xh1 -> tx231\\n\\ntzz322 yh1 -> tx232\\n\\n-2. yh1 -> tzz330\\n\\nbk tzz330 \
-> tx233\\n\\ndk tzz330 -> tx234\\n\\ntzz322 zh1 -> tx235\\n\\n-2. zh1 -> \
tzz329\\n\\nbk tzz329 -> tx236\\n\\ntzz315 zh1 -> tx237\\n\\ntx230 + tx233 + \
tx235 -> tx238\\n\\ntx231 + tx232 + tx236 -> tx239\\n\\ntx229 + tx234 + tx237 \
-> tx240\\n\\n2. tx225 -> tzz316\\n\\ntx238 tzz316 -> tx241\\n\\n2. tx224 -> \
tzz317\\n\\ntx239 tzz317 -> tx242\\n\\n2. tx223 -> tzz318\\n\\ntx240 tzz318 \
-> tx243\\n\\ntx241 + tx242 + tx243 -> gak\\n\\n-gak -> \
fak\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 0, fak );]\\n\\n2. bk -> tzz321\\n\
\\ntzz321 xh1 -> tx244\\n\\ntzz315 xh1 -> tx245\\n\\ntzz313 yh1 -> \
tx246\\n\\ntzz315 yh1 -> tx247\\n\\ntzz313 zh1 -> tx248\\n\\ntzz311 zh1 -> \
tx249\\n\\ntx231 + tx236 + tx246 -> tx250\\n\\ntx233 + tx245 + tx248 -> tx251\
\\n\\ntx244 + tx247 + tx249 -> tx252\\n\\ntx250 tzz316 -> tx253\\n\\ntx251 \
tzz317 -> tx254\\n\\ntx252 tzz318 -> tx255\\n\\ntx253 + tx254 + tx255 -> \
gbk\\n\\n-gbk -> fbk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 1, fbk \
);]\\n\\ntzz313 xh1 -> tx256\\n\\ntzz321 yh1 -> tx257\\n\\ntzz311 yh1 -> \
tx258\\n\\nck tzz329 -> tx259\\n\\ntx235 + tx245 + tx257 -> tx260\\n\\ntx256 \
+ tx258 + tx259 -> tx261\\n\\ntx252 tzz317 -> tx262\\n\\ntx260 tzz318 -> \
tx263\\n\\ntx261 tzz316 -> tx264\\n\\ntx262 + tx263 + tx264 -> gck\\n\\n-gck \
-> fck\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 2, fck );]\\n\\ntzz321 zh1 -> \
tx265\\n\\ntx231 + tx246 + tx265 -> tx266\\n\\ntx240 tzz317 -> \
tx267\\n\\ntx252 tzz316 -> tx268\\n\\ntx266 tzz318 -> tx269\\n\\ntx267 + \
tx268 + tx269 -> gdk\\n\\n-gdk -> fdk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, \
3, fdk );]\\n\\ntzz318 -> gxk\\n\\n-gxk -> \
fxk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 4, fxk );]\\n\\ntzz317 -> \
gyk\\n\\n-gyk -> fyk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 5, fyk \
);]\\n\\ntzz316 -> gzk\\n\\n-gzk -> \
fzk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 6, fzk );]\\n\\ntzz312 xh2 -> \
tx270\\n\\ntzz314 xh2 -> tx271\\n\\n-2. xh2 -> tzz328\\n\\ndl tzz328 -> tx272\
\\n\\ntzz312 yh2 -> tx273\\n\\ntzz320 yh2 -> tx274\\n\\n2. dl yh2 -> tx275\\n\
\\ntzz312 zh2 -> tx276\\n\\ntzz320 zh2 -> tx277\\n\\n-2. zh2 -> \
tzz326\\n\\ncl tzz326 -> tx278\\n\\ntx271 + tx274 + tx276 -> tx279\\n\\ntx272 \
+ tx273 + tx277 -> tx280\\n\\ntx270 + tx275 + tx278 -> tx281\\n\\ngzk tx279 \
-> tx282\\n\\ngyk tx280 -> tx283\\n\\ngxk tx281 -> tx284\\n\\ntx282 + tx283 + \
tx284 -> gal\\n\\n-gal -> fal\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 0, fal \
);]\\n\\nbl tzz328 -> tx285\\n\\ncl tzz328 -> tx286\\n\\ntzz319 yh2 -> \
tx287\\n\\n-2. yh2 -> tzz327\\n\\ncl tzz327 -> tx288\\n\\ntzz319 zh2 -> tx289\
\\n\\ndl tzz326 -> tx290\\n\\ntx272 + tx277 + tx287 -> tx291\\n\\ntx274 + \
tx286 + tx289 -> tx292\\n\\ntx285 + tx288 + tx290 -> tx293\\n\\ngzk tx291 -> \
tx294\\n\\ngyk tx292 -> tx295\\n\\ngxk tx293 -> tx296\\n\\ntx294 + tx295 + \
tx296 -> gbl\\n\\n-gbl -> fbl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 1, fbl \
);]\\n\\ntzz319 xh2 -> tx297\\n\\nbl tzz327 -> tx298\\n\\ndl tzz327 -> \
tx299\\n\\ntzz314 zh2 -> tx300\\n\\ntx276 + tx286 + tx298 -> tx301\\n\\ntx297 \
+ tx299 + tx300 -> tx302\\n\\ngyk tx293 -> tx303\\n\\ngxk tx301 -> \
tx304\\n\\ngzk tx302 -> tx305\\n\\ntx303 + tx304 + tx305 -> gcl\\n\\n-gcl -> \
fcl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 2, fcl );]\\n\\nbl tzz326 -> tx306\
\\n\\ntx272 + tx287 + tx306 -> tx307\\n\\ngyk tx281 -> tx308\\n\\ngzk tx293 \
-> tx309\\n\\ngxk tx307 -> tx310\\n\\ntx308 + tx309 + tx310 -> gdl\\n\\n-gdl \
-> fdl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 3, fdl );]\\n\\n-2. tx223 -> \
gxl\\n\\n-gxl -> fxl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\n\\n-2. tx224 -> gyl\\n\\n-gyl -> \
fyl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 5, fyl );]\\n\\n-2. tx225 -> \
gzl\\n\\n-gzl -> fzl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 6, fzl );]\"\>"], \
"Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894501638932*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.70289450168962*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz318 -> gxk, tzz317 -> gyk, tzz316 \
-> gzk}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894501691412*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028945016931143`*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz318 -> gxk\\n\\ntzz317 \
-> gyk\\n\\ntzz316 -> gzk\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894501694825*^9}],

Cell[BoxData["\<\"After removal: \
CCode[STAPLE_SET_PARAMETER(I1,0);]\\n\\nCCode[STAPLE_SET_PARAMETER(I2,2);]\\n\
\\nCCode[STAPLE_SET_POSITION(ak,I1,0);]\\n\\nCCode[STAPLE_SET_POSITION(bk,I1,\
1);]\\n\\nCCode[STAPLE_SET_POSITION(ck,I1,2);]\\n\\nCCode[STAPLE_SET_POSITION(\
dk,I1,3);]\\n\\nCCode[STAPLE_SET_POSITION(xk,I1,4);]\\n\\nCCode[STAPLE_SET_\
POSITION(yk,I1,5);]\\n\\nCCode[STAPLE_SET_POSITION(zk,I1,6);]\\n\\nCCode[\
STAPLE_SET_POSITION(al,I2,0);]\\n\\nCCode[STAPLE_SET_POSITION(bl,I2,1);]\\n\\\
nCCode[STAPLE_SET_POSITION(cl,I2,2);]\\n\\nCCode[STAPLE_SET_POSITION(dl,I2,3);\
]\\n\\nCCode[STAPLE_SET_POSITION(xl,I2,4);]\\n\\nCCode[STAPLE_SET_POSITION(yl,\
I2,5);]\\n\\nCCode[STAPLE_SET_POSITION(zl,I2,6);]\\n\\nCCode[STAPLE_SET_POINT(\
xh1,1,0);]\\n\\nCCode[STAPLE_SET_POINT(yh1,1,1);]\\n\\nCCode[STAPLE_SET_POINT(\
zh1,1,2);]\\n\\nCCode[STAPLE_SET_POINT(xh2,3,0);]\\n\\nCCode[STAPLE_SET_POINT(\
yh2,3,1);]\\n\\nCCode[STAPLE_SET_POINT(zh2,3,2);]\\n\\npower2[bk] -> tx156\\n\
\\npower2[bl] -> tx157\\n\\npower2[ck] -> tx158\\n\\npower2[cl] -> \
tx159\\n\\npower2[dk] -> tx160\\n\\npower2[dl] -> tx161\\n\\npower2[ak] -> \
tx162\\n\\npower2[al] -> tx163\\n\\n-2. ak -> tzz313\\n\\nbk tzz313 -> \
tx164\\n\\n-2. al -> tzz312\\n\\nbl tzz312 -> tx165\\n\\nck tzz313 -> \
tx166\\n\\n2. ck -> tzz315\\n\\nak tzz315 -> tx167\\n\\nbk tzz315 -> tx168\\n\
\\ncl tzz312 -> tx169\\n\\n2. cl -> tzz314\\n\\nal tzz314 -> tx170\\n\\nbl \
tzz314 -> tx171\\n\\ndk tzz313 -> tx172\\n\\n2. dk -> tzz311\\n\\nak tzz311 \
-> tx173\\n\\nbk tzz311 -> tx174\\n\\nck tzz311 -> tx175\\n\\ndl tzz312 -> \
tx176\\n\\n2. al -> tzz319\\n\\ndl tzz319 -> tx177\\n\\n2. bl -> \
tzz320\\n\\ndl tzz320 -> tx178\\n\\ndl tzz314 -> tx179\\n\\n-tx156 -> \
tx180\\n\\n-tx157 -> tx181\\n\\n-tx158 -> tx182\\n\\n-tx159 -> \
tx183\\n\\n-tx160 -> tx184\\n\\n-tx161 -> tx185\\n\\ntx156 + tx158 + tx160 + \
tx162 -> tx186\\n\\ntx157 + tx159 + tx161 + tx163 -> tx187\\n\\ntx168 + tx172 \
-> tx188\\n\\ntx168 + tx173 -> tx189\\n\\ntx166 + tx174 -> tx190\\n\\ntx167 + \
tx174 -> tx191\\n\\ntx164 + tx175 -> tx192\\n\\ntx171 + tx176 -> \
tx193\\n\\ntx171 + tx177 -> tx194\\n\\ntx169 + tx178 -> tx195\\n\\ntx170 + \
tx178 -> tx196\\n\\ntx165 + tx179 -> tx197\\n\\ntx160 + tx162 + tx180 + tx182 \
-> tx198\\n\\ntx161 + tx163 + tx181 + tx183 -> tx199\\n\\ntx158 + tx162 + \
tx180 + tx184 -> tx200\\n\\ntx159 + tx163 + tx181 + tx185 -> tx201\\n\\ntx186 \
xh1 -> tx202\\n\\ntx189 xh1 -> tx203\\n\\ntx190 xh1 -> tx204\\n\\n-xh2 -> \
tzz325\\n\\ntx187 tzz325 -> tx205\\n\\ntx194 tzz325 -> tx206\\n\\ntx195 \
tzz325 -> tx207\\n\\n-xl -> tx208\\n\\ntx188 yh1 -> tx209\\n\\ntx192 yh1 -> \
tx210\\n\\ntx200 yh1 -> tx211\\n\\n-yh2 -> tzz324\\n\\ntx193 tzz324 -> \
tx212\\n\\ntx197 tzz324 -> tx213\\n\\ntx201 tzz324 -> tx214\\n\\n-yl -> tx215\
\\n\\ntx191 zh1 -> tx216\\n\\ntx192 zh1 -> tx217\\n\\ntx198 zh1 -> \
tx218\\n\\n-zh2 -> tzz323\\n\\ntx196 tzz323 -> tx219\\n\\ntx197 tzz323 -> \
tx220\\n\\ntx199 tzz323 -> tx221\\n\\n-zl -> tx222\\n\\ntx202 + tx205 + tx208 \
+ tx209 + tx212 + tx216 + tx219 + xk -> tx223\\n\\ntx203 + tx206 + tx211 + \
tx214 + tx215 + tx217 + tx220 + yk -> tx224\\n\\ntx204 + tx207 + tx210 + \
tx213 + tx218 + tx221 + tx222 + zk -> tx225\\n\\npower2[tx223] -> \
tx226\\n\\npower2[tx224] -> tx227\\n\\npower2[tx225] -> tx228\\n\\ntx226 + \
tx227 + tx228 -> Energy\\n\\nCCode[STAPLE_ENERGY_ACCUMULATE(Energy);]\\n\\n2. \
ak -> tzz322\\n\\ntzz322 xh1 -> tx229\\n\\n-2. ck xh1 -> tx230\\n\\ntzz311 \
xh1 -> tx231\\n\\ntzz322 yh1 -> tx232\\n\\n-2. yh1 -> tzz330\\n\\nbk tzz330 \
-> tx233\\n\\ndk tzz330 -> tx234\\n\\ntzz322 zh1 -> tx235\\n\\n-2. zh1 -> \
tzz329\\n\\nbk tzz329 -> tx236\\n\\ntzz315 zh1 -> tx237\\n\\ntx230 + tx233 + \
tx235 -> tx238\\n\\ntx231 + tx232 + tx236 -> tx239\\n\\ntx229 + tx234 + tx237 \
-> tx240\\n\\n2. tx225 -> tzz316\\n\\ntx238 tzz316 -> tx241\\n\\n2. tx224 -> \
tzz317\\n\\ntx239 tzz317 -> tx242\\n\\n2. tx223 -> tzz318\\n\\ntx240 tzz318 \
-> tx243\\n\\ntx241 + tx242 + tx243 -> gak\\n\\n-gak -> \
fak\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 0, fak );]\\n\\n2. bk -> tzz321\\n\
\\ntzz321 xh1 -> tx244\\n\\ntzz315 xh1 -> tx245\\n\\ntzz313 yh1 -> \
tx246\\n\\ntzz315 yh1 -> tx247\\n\\ntzz313 zh1 -> tx248\\n\\ntzz311 zh1 -> \
tx249\\n\\ntx231 + tx236 + tx246 -> tx250\\n\\ntx233 + tx245 + tx248 -> tx251\
\\n\\ntx244 + tx247 + tx249 -> tx252\\n\\ntx250 tzz316 -> tx253\\n\\ntx251 \
tzz317 -> tx254\\n\\ntx252 tzz318 -> tx255\\n\\ntx253 + tx254 + tx255 -> \
gbk\\n\\n-gbk -> fbk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 1, fbk \
);]\\n\\ntzz313 xh1 -> tx256\\n\\ntzz321 yh1 -> tx257\\n\\ntzz311 yh1 -> \
tx258\\n\\nck tzz329 -> tx259\\n\\ntx235 + tx245 + tx257 -> tx260\\n\\ntx256 \
+ tx258 + tx259 -> tx261\\n\\ntx252 tzz317 -> tx262\\n\\ntx260 tzz318 -> \
tx263\\n\\ntx261 tzz316 -> tx264\\n\\ntx262 + tx263 + tx264 -> gck\\n\\n-gck \
-> fck\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 2, fck );]\\n\\ntzz321 zh1 -> \
tx265\\n\\ntx231 + tx246 + tx265 -> tx266\\n\\ntx240 tzz317 -> \
tx267\\n\\ntx252 tzz316 -> tx268\\n\\ntx266 tzz318 -> tx269\\n\\ntx267 + \
tx268 + tx269 -> gdk\\n\\n-gdk -> fdk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, \
3, fdk );]\\n\\ntzz318 -> gxk\\n\\n-gxk -> \
fxk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 4, fxk );]\\n\\ntzz317 -> \
gyk\\n\\n-gyk -> fyk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 5, fyk \
);]\\n\\ntzz316 -> gzk\\n\\n-gzk -> \
fzk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 6, fzk );]\\n\\ntzz312 xh2 -> \
tx270\\n\\ntzz314 xh2 -> tx271\\n\\n-2. xh2 -> tzz328\\n\\ndl tzz328 -> tx272\
\\n\\ntzz312 yh2 -> tx273\\n\\ntzz320 yh2 -> tx274\\n\\n2. dl yh2 -> tx275\\n\
\\ntzz312 zh2 -> tx276\\n\\ntzz320 zh2 -> tx277\\n\\n-2. zh2 -> \
tzz326\\n\\ncl tzz326 -> tx278\\n\\ntx271 + tx274 + tx276 -> tx279\\n\\ntx272 \
+ tx273 + tx277 -> tx280\\n\\ntx270 + tx275 + tx278 -> tx281\\n\\ngzk tx279 \
-> tx282\\n\\ngyk tx280 -> tx283\\n\\ngxk tx281 -> tx284\\n\\ntx282 + tx283 + \
tx284 -> gal\\n\\n-gal -> fal\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 0, fal \
);]\\n\\nbl tzz328 -> tx285\\n\\ncl tzz328 -> tx286\\n\\ntzz319 yh2 -> \
tx287\\n\\n-2. yh2 -> tzz327\\n\\ncl tzz327 -> tx288\\n\\ntzz319 zh2 -> tx289\
\\n\\ndl tzz326 -> tx290\\n\\ntx272 + tx277 + tx287 -> tx291\\n\\ntx274 + \
tx286 + tx289 -> tx292\\n\\ntx285 + tx288 + tx290 -> tx293\\n\\ngzk tx291 -> \
tx294\\n\\ngyk tx292 -> tx295\\n\\ngxk tx293 -> tx296\\n\\ntx294 + tx295 + \
tx296 -> gbl\\n\\n-gbl -> fbl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 1, fbl \
);]\\n\\ntzz319 xh2 -> tx297\\n\\nbl tzz327 -> tx298\\n\\ndl tzz327 -> \
tx299\\n\\ntzz314 zh2 -> tx300\\n\\ntx276 + tx286 + tx298 -> tx301\\n\\ntx297 \
+ tx299 + tx300 -> tx302\\n\\ngyk tx293 -> tx303\\n\\ngxk tx301 -> \
tx304\\n\\ngzk tx302 -> tx305\\n\\ntx303 + tx304 + tx305 -> gcl\\n\\n-gcl -> \
fcl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 2, fcl );]\\n\\nbl tzz326 -> tx306\
\\n\\ntx272 + tx287 + tx306 -> tx307\\n\\ngyk tx281 -> tx308\\n\\ngzk tx293 \
-> tx309\\n\\ngxk tx307 -> tx310\\n\\ntx308 + tx309 + tx310 -> gdl\\n\\n-gdl \
-> fdl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 3, fdl );]\\n\\n-2. tx223 -> \
gxl\\n\\n-gxl -> fxl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\n\\n-2. tx224 -> gyl\\n\\n-gyl -> \
fyl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 5, fyl );]\\n\\n-2. tx225 -> \
gzl\\n\\n-gzl -> fzl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 6, fzl );]\"\>"], \
"Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028945016965322`*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz318 -> gxk, tzz317 -> gyk, tzz316 \
-> gzk}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894501935669*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894501937562*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz318 -> gxk\\n\\ntzz317 \
-> gyk\\n\\ntzz316 -> gzk\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.70289450193943*^9}],

Cell[BoxData["\<\"After removal: \
CCode[STAPLE_SET_PARAMETER(I1,0);]\\n\\nCCode[STAPLE_SET_PARAMETER(I2,2);]\\n\
\\nCCode[STAPLE_SET_POSITION(ak,I1,0);]\\n\\nCCode[STAPLE_SET_POSITION(bk,I1,\
1);]\\n\\nCCode[STAPLE_SET_POSITION(ck,I1,2);]\\n\\nCCode[STAPLE_SET_POSITION(\
dk,I1,3);]\\n\\nCCode[STAPLE_SET_POSITION(xk,I1,4);]\\n\\nCCode[STAPLE_SET_\
POSITION(yk,I1,5);]\\n\\nCCode[STAPLE_SET_POSITION(zk,I1,6);]\\n\\nCCode[\
STAPLE_SET_POSITION(al,I2,0);]\\n\\nCCode[STAPLE_SET_POSITION(bl,I2,1);]\\n\\\
nCCode[STAPLE_SET_POSITION(cl,I2,2);]\\n\\nCCode[STAPLE_SET_POSITION(dl,I2,3);\
]\\n\\nCCode[STAPLE_SET_POSITION(xl,I2,4);]\\n\\nCCode[STAPLE_SET_POSITION(yl,\
I2,5);]\\n\\nCCode[STAPLE_SET_POSITION(zl,I2,6);]\\n\\nCCode[STAPLE_SET_POINT(\
xh1,1,0);]\\n\\nCCode[STAPLE_SET_POINT(yh1,1,1);]\\n\\nCCode[STAPLE_SET_POINT(\
zh1,1,2);]\\n\\nCCode[STAPLE_SET_POINT(xh2,3,0);]\\n\\nCCode[STAPLE_SET_POINT(\
yh2,3,1);]\\n\\nCCode[STAPLE_SET_POINT(zh2,3,2);]\\n\\npower2[bk] -> tx156\\n\
\\npower2[bl] -> tx157\\n\\npower2[ck] -> tx158\\n\\npower2[cl] -> \
tx159\\n\\npower2[dk] -> tx160\\n\\npower2[dl] -> tx161\\n\\npower2[ak] -> \
tx162\\n\\npower2[al] -> tx163\\n\\n-2. ak -> tzz313\\n\\nbk tzz313 -> \
tx164\\n\\n-2. al -> tzz312\\n\\nbl tzz312 -> tx165\\n\\nck tzz313 -> \
tx166\\n\\n2. ck -> tzz315\\n\\nak tzz315 -> tx167\\n\\nbk tzz315 -> tx168\\n\
\\ncl tzz312 -> tx169\\n\\n2. cl -> tzz314\\n\\nal tzz314 -> tx170\\n\\nbl \
tzz314 -> tx171\\n\\ndk tzz313 -> tx172\\n\\n2. dk -> tzz311\\n\\nak tzz311 \
-> tx173\\n\\nbk tzz311 -> tx174\\n\\nck tzz311 -> tx175\\n\\ndl tzz312 -> \
tx176\\n\\n2. al -> tzz319\\n\\ndl tzz319 -> tx177\\n\\n2. bl -> \
tzz320\\n\\ndl tzz320 -> tx178\\n\\ndl tzz314 -> tx179\\n\\n-tx156 -> \
tx180\\n\\n-tx157 -> tx181\\n\\n-tx158 -> tx182\\n\\n-tx159 -> \
tx183\\n\\n-tx160 -> tx184\\n\\n-tx161 -> tx185\\n\\ntx156 + tx158 + tx160 + \
tx162 -> tx186\\n\\ntx157 + tx159 + tx161 + tx163 -> tx187\\n\\ntx168 + tx172 \
-> tx188\\n\\ntx168 + tx173 -> tx189\\n\\ntx166 + tx174 -> tx190\\n\\ntx167 + \
tx174 -> tx191\\n\\ntx164 + tx175 -> tx192\\n\\ntx171 + tx176 -> \
tx193\\n\\ntx171 + tx177 -> tx194\\n\\ntx169 + tx178 -> tx195\\n\\ntx170 + \
tx178 -> tx196\\n\\ntx165 + tx179 -> tx197\\n\\ntx162 + tx180 -> \
tzz334\\n\\ntx160 + tx182 + tzz334 -> tx198\\n\\ntx163 + tx181 -> \
tzz333\\n\\ntx161 + tx183 + tzz333 -> tx199\\n\\ntx158 + tx184 + tzz334 -> \
tx200\\n\\ntx159 + tx185 + tzz333 -> tx201\\n\\ntx186 xh1 -> tx202\\n\\ntx189 \
xh1 -> tx203\\n\\ntx190 xh1 -> tx204\\n\\n-xh2 -> tzz325\\n\\ntx187 tzz325 -> \
tx205\\n\\ntx194 tzz325 -> tx206\\n\\ntx195 tzz325 -> tx207\\n\\n-xl -> tx208\
\\n\\ntx188 yh1 -> tx209\\n\\ntx192 yh1 -> tx210\\n\\ntx200 yh1 -> \
tx211\\n\\n-yh2 -> tzz324\\n\\ntx193 tzz324 -> tx212\\n\\ntx197 tzz324 -> \
tx213\\n\\ntx201 tzz324 -> tx214\\n\\n-yl -> tx215\\n\\ntx191 zh1 -> tx216\\n\
\\ntx192 zh1 -> tx217\\n\\ntx198 zh1 -> tx218\\n\\n-zh2 -> tzz323\\n\\ntx196 \
tzz323 -> tx219\\n\\ntx197 tzz323 -> tx220\\n\\ntx199 tzz323 -> \
tx221\\n\\n-zl -> tx222\\n\\ntx202 + tx205 + tx208 + tx209 + tx212 + tx216 + \
tx219 + xk -> tx223\\n\\ntx203 + tx206 + tx211 + tx214 + tx215 + tx217 + \
tx220 + yk -> tx224\\n\\ntx204 + tx207 + tx210 + tx213 + tx218 + tx221 + \
tx222 + zk -> tx225\\n\\npower2[tx223] -> tx226\\n\\npower2[tx224] -> \
tx227\\n\\npower2[tx225] -> tx228\\n\\ntx226 + tx227 + tx228 -> \
Energy\\n\\nCCode[STAPLE_ENERGY_ACCUMULATE(Energy);]\\n\\n2. ak -> \
tzz322\\n\\ntzz322 xh1 -> tx229\\n\\n-2. ck xh1 -> tx230\\n\\ntzz311 xh1 -> \
tx231\\n\\ntzz322 yh1 -> tx232\\n\\n-2. yh1 -> tzz330\\n\\nbk tzz330 -> tx233\
\\n\\ndk tzz330 -> tx234\\n\\ntzz322 zh1 -> tx235\\n\\n-2. zh1 -> \
tzz329\\n\\nbk tzz329 -> tx236\\n\\ntzz315 zh1 -> tx237\\n\\ntx230 + tx233 + \
tx235 -> tx238\\n\\ntx231 + tx232 + tx236 -> tx239\\n\\ntx229 + tx234 + tx237 \
-> tx240\\n\\n2. tx225 -> tzz316\\n\\ntx238 tzz316 -> tx241\\n\\n2. tx224 -> \
tzz317\\n\\ntx239 tzz317 -> tx242\\n\\n2. tx223 -> tzz318\\n\\ntx240 tzz318 \
-> tx243\\n\\ntx241 + tx242 + tx243 -> gak\\n\\n-gak -> \
fak\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 0, fak );]\\n\\n2. bk -> tzz321\\n\
\\ntzz321 xh1 -> tx244\\n\\ntzz315 xh1 -> tx245\\n\\ntzz313 yh1 -> \
tx246\\n\\ntzz315 yh1 -> tx247\\n\\ntzz313 zh1 -> tx248\\n\\ntzz311 zh1 -> \
tx249\\n\\ntx231 + tx246 -> tzz332\\n\\ntx236 + tzz332 -> tx250\\n\\ntx233 + \
tx245 + tx248 -> tx251\\n\\ntx244 + tx247 + tx249 -> tx252\\n\\ntx250 tzz316 \
-> tx253\\n\\ntx251 tzz317 -> tx254\\n\\ntx252 tzz318 -> tx255\\n\\ntx253 + \
tx254 + tx255 -> gbk\\n\\n-gbk -> fbk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, \
1, fbk );]\\n\\ntzz313 xh1 -> tx256\\n\\ntzz321 yh1 -> tx257\\n\\ntzz311 yh1 \
-> tx258\\n\\nck tzz329 -> tx259\\n\\ntx235 + tx245 + tx257 -> \
tx260\\n\\ntx256 + tx258 + tx259 -> tx261\\n\\ntx252 tzz317 -> \
tx262\\n\\ntx260 tzz318 -> tx263\\n\\ntx261 tzz316 -> tx264\\n\\ntx262 + \
tx263 + tx264 -> gck\\n\\n-gck -> fck\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, \
2, fck );]\\n\\ntzz321 zh1 -> tx265\\n\\ntx265 + tzz332 -> tx266\\n\\ntx240 \
tzz317 -> tx267\\n\\ntx252 tzz316 -> tx268\\n\\ntx266 tzz318 -> \
tx269\\n\\ntx267 + tx268 + tx269 -> gdk\\n\\n-gdk -> \
fdk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 3, fdk );]\\n\\ntzz318 -> \
gxk\\n\\n-gxk -> fxk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 4, fxk \
);]\\n\\ntzz317 -> gyk\\n\\n-gyk -> \
fyk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 5, fyk );]\\n\\ntzz316 -> \
gzk\\n\\n-gzk -> fzk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 6, fzk \
);]\\n\\ntzz312 xh2 -> tx270\\n\\ntzz314 xh2 -> tx271\\n\\n-2. xh2 -> \
tzz328\\n\\ndl tzz328 -> tx272\\n\\ntzz312 yh2 -> tx273\\n\\ntzz320 yh2 -> \
tx274\\n\\n2. dl yh2 -> tx275\\n\\ntzz312 zh2 -> tx276\\n\\ntzz320 zh2 -> \
tx277\\n\\n-2. zh2 -> tzz326\\n\\ncl tzz326 -> tx278\\n\\ntx271 + tx274 + \
tx276 -> tx279\\n\\ntx272 + tx273 + tx277 -> tx280\\n\\ntx270 + tx275 + tx278 \
-> tx281\\n\\ngzk tx279 -> tx282\\n\\ngyk tx280 -> tx283\\n\\ngxk tx281 -> \
tx284\\n\\ntx282 + tx283 + tx284 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\nbl tzz328 -> tx285\
\\n\\ncl tzz328 -> tx286\\n\\ntzz319 yh2 -> tx287\\n\\n-2. yh2 -> \
tzz327\\n\\ncl tzz327 -> tx288\\n\\ntzz319 zh2 -> tx289\\n\\ndl tzz326 -> \
tx290\\n\\ntx272 + tx287 -> tzz331\\n\\ntx277 + tzz331 -> tx291\\n\\ntx274 + \
tx286 + tx289 -> tx292\\n\\ntx285 + tx288 + tx290 -> tx293\\n\\ngzk tx291 -> \
tx294\\n\\ngyk tx292 -> tx295\\n\\ngxk tx293 -> tx296\\n\\ntx294 + tx295 + \
tx296 -> gbl\\n\\n-gbl -> fbl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 1, fbl \
);]\\n\\ntzz319 xh2 -> tx297\\n\\nbl tzz327 -> tx298\\n\\ndl tzz327 -> \
tx299\\n\\ntzz314 zh2 -> tx300\\n\\ntx276 + tx286 + tx298 -> tx301\\n\\ntx297 \
+ tx299 + tx300 -> tx302\\n\\ngyk tx293 -> tx303\\n\\ngxk tx301 -> \
tx304\\n\\ngzk tx302 -> tx305\\n\\ntx303 + tx304 + tx305 -> gcl\\n\\n-gcl -> \
fcl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 2, fcl );]\\n\\nbl tzz326 -> tx306\
\\n\\ntx306 + tzz331 -> tx307\\n\\ngyk tx281 -> tx308\\n\\ngzk tx293 -> tx309\
\\n\\ngxk tx307 -> tx310\\n\\ntx308 + tx309 + tx310 -> gdl\\n\\n-gdl -> \
fdl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 3, fdl );]\\n\\n-2. tx223 -> \
gxl\\n\\n-gxl -> fxl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\n\\n-2. tx224 -> gyl\\n\\n-gyl -> \
fyl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 5, fyl );]\\n\\n-2. tx225 -> \
gzl\\n\\n-gzl -> fzl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 6, fzl );]\"\>"], \
"Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894501941184*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing declares to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_termDeclares.cc\"\>"}],
  SequenceForm["Writing declares to file: ", "_STAPLE_termDeclares.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028945019894876`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing code to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_termCode.cc\"\>"}],
  SequenceForm["Writing code to file: ", "_STAPLE_termCode.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894501991469*^9}],

Cell[BoxData[
 StyleBox["\<\"Set TimesSimplify and PlusSimplify to turn these \
simplifications off and on\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 1],
  FrontFaceColor->RGBColor[0, 0, 1],
  BackFaceColor->RGBColor[0, 0, 1],
  GraphicsColor->RGBColor[0, 0, 1],
  FontSize->24,
  FontSlant->Italic,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.7071475256345043`*^9}],

Cell[BoxData[
 StyleBox["\<\"PlusOptimize = True\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 1],
  FrontFaceColor->RGBColor[0, 0, 1],
  BackFaceColor->RGBColor[0, 0, 1],
  GraphicsColor->RGBColor[0, 0, 1],
  FontSize->20,
  FontSlant->Italic,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.7071475256361027`*^9}],

Cell[BoxData[
 StyleBox["\<\"TimesOptimize = True\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 1],
  FrontFaceColor->RGBColor[0, 0, 1],
  BackFaceColor->RGBColor[0, 0, 1],
  GraphicsColor->RGBColor[0, 0, 1],
  FontSize->20,
  FontSlant->Italic,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147525637727*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.7071475550497*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.7071475550523653`*^9}],

Cell[BoxData["\<\"trivialRules>> outs =                                       \
                                                        2     2     2     2   \
        2     2     2     2                                                   \
                                                                     2        \
                                                   2     2     2     2        \
   2     2     2     2                                                        \
              2                                                               \
                                                    2     2     2     2       \
    2     2     2     2                2\\n{Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, -r0 + Sqrt[((ak  + bk  + ck  + \
dk ) xh1 - (al  + bl  + cl  + dl ) xh2 + xk - xl + (2 bk ck - 2 ak dk) yh1 - \
(2 bl cl - 2 al dl) yh2 + (2 ak ck + 2 bk dk) zh1 - (2 al cl + 2 bl dl) zh2)  \
+ ((2 bk ck + 2 ak dk) xh1 - (2 bl cl + 2 al dl) xh2 + (ak  - bk  + ck  - dk \
) yh1 - (al  - bl  + cl  - dl ) yh2 + yk - yl + (-2 ak bk + 2 ck dk) zh1 - \
(-2 al bl + 2 cl dl) zh2)  + ((-2 ak ck + 2 bk dk) xh1 - (-2 al cl + 2 bl dl) \
xh2 + (-2 ak bk + 2 ck dk) yh1 - (-2 al bl + 2 cl dl) yh2 + (ak  - bk  - ck  \
+ dk ) zh1 - (al  - bl  - cl  + dl ) zh2 + zk - zl) ]}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147555055579*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147555057363*^9}],

Cell[BoxData["\<\"Collecting terms\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.7071475551344624`*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147573766666*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147573769932*^9}],

Cell[BoxData["\<\"trivialRules>> outs =                                       \
                                                        2     2     2     2   \
        2     2     2     2                                                   \
                                                                     2        \
                                                   2     2     2     2        \
   2     2     2     2                                                        \
              2                                                               \
                                                    2     2     2     2       \
    2     2     2     2                2\\n{Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, -r0 + Sqrt[((ak  + bk  + ck  + \
dk ) xh1 - (al  + bl  + cl  + dl ) xh2 + xk - xl + (2 bk ck - 2 ak dk) yh1 - \
(2 bl cl - 2 al dl) yh2 + (2 ak ck + 2 bk dk) zh1 - (2 al cl + 2 bl dl) zh2)  \
+ ((2 bk ck + 2 ak dk) xh1 - (2 bl cl + 2 al dl) xh2 + (ak  - bk  + ck  - dk \
) yh1 - (al  - bl  + cl  - dl ) yh2 + yk - yl + (-2 ak bk + 2 ck dk) zh1 - \
(-2 al bl + 2 cl dl) zh2)  + ((-2 ak ck + 2 bk dk) xh1 - (-2 al cl + 2 bl dl) \
xh2 + (-2 ak bk + 2 ck dk) yh1 - (-2 al bl + 2 cl dl) yh2 + (ak  - bk  - ck  \
+ dk ) zh1 - (al  - bl  - cl  + dl ) zh2 + zk - zl) ]}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147573773498*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147573775867*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147573849036*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.7071475738515987`*^9}],

Cell[BoxData["\<\"trivialRules>> outs =                                       \
                                                        2     2     2     2   \
        2     2     2     2                                                   \
                                                                     2        \
                                                   2     2     2     2        \
   2     2     2     2                                                        \
              2                                                               \
                                                    2     2     2     2       \
    2     2     2     2                2\\n{Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, -r0 + Sqrt[((ak  + bk  + ck  + \
dk ) xh1 - (al  + bl  + cl  + dl ) xh2 + xk - xl + (2 bk ck - 2 ak dk) yh1 - \
(2 bl cl - 2 al dl) yh2 + (2 ak ck + 2 bk dk) zh1 - (2 al cl + 2 bl dl) zh2)  \
+ ((2 bk ck + 2 ak dk) xh1 - (2 bl cl + 2 al dl) xh2 + (ak  - bk  + ck  - dk \
) yh1 - (al  - bl  + cl  - dl ) yh2 + yk - yl + (-2 ak bk + 2 ck dk) zh1 - \
(-2 al bl + 2 cl dl) zh2)  + ((-2 ak ck + 2 bk dk) xh1 - (-2 al cl + 2 bl dl) \
xh2 + (-2 ak bk + 2 ck dk) yh1 - (-2 al bl + 2 cl dl) yh2 + (ak  - bk  - ck  \
+ dk ) zh1 - (al  - bl  - cl  + dl ) zh2 + zk - zl) ]}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147573854704*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147573856853*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147573858886*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147573860828*^9}],

Cell[BoxData["\<\"trivialRules>> outs =                                       \
                                                        2     2     2     2   \
        2     2     2     2                                                   \
                                                                     2        \
                                                   2     2     2     2        \
   2     2     2     2                                                        \
              2                                                               \
                                                    2     2     2     2       \
    2     2     2     2                2\\n{Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, -r0 + Sqrt[((ak  + bk  + ck  + \
dk ) xh1 - (al  + bl  + cl  + dl ) xh2 + xk - xl + (2 bk ck - 2 ak dk) yh1 - \
(2 bl cl - 2 al dl) yh2 + (2 ak ck + 2 bk dk) zh1 - (2 al cl + 2 bl dl) zh2)  \
+ ((2 bk ck + 2 ak dk) xh1 - (2 bl cl + 2 al dl) xh2 + (ak  - bk  + ck  - dk \
) yh1 - (al  - bl  + cl  - dl ) yh2 + yk - yl + (-2 ak bk + 2 ck dk) zh1 - \
(-2 al bl + 2 cl dl) zh2)  + ((-2 ak ck + 2 bk dk) xh1 - (-2 al cl + 2 bl dl) \
xh2 + (-2 ak bk + 2 ck dk) yh1 - (-2 al bl + 2 cl dl) yh2 + (ak  - bk  - ck  \
+ dk ) zh1 - (al  - bl  - cl  + dl ) zh2 + zk - zl) ]}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147573862775*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147573865486*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.7071475760154333`*^9}],

Cell[BoxData["\<\"trivialRules>> outs =                                       \
                                                        2     2     2     2   \
        2     2     2     2                                                   \
                                                                     2        \
                                                   2     2     2     2        \
   2     2     2     2                                                        \
              2                                                               \
                                                    2     2     2     2       \
    2     2     2     2                2\\n{Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, -r0 + Sqrt[((ak  + bk  + ck  + \
dk ) xh1 - (al  + bl  + cl  + dl ) xh2 + xk - xl + (2 bk ck - 2 ak dk) yh1 - \
(2 bl cl - 2 al dl) yh2 + (2 ak ck + 2 bk dk) zh1 - (2 al cl + 2 bl dl) zh2)  \
+ ((2 bk ck + 2 ak dk) xh1 - (2 bl cl + 2 al dl) xh2 + (ak  - bk  + ck  - dk \
) yh1 - (al  - bl  + cl  - dl ) yh2 + yk - yl + (-2 ak bk + 2 ck dk) zh1 - \
(-2 al bl + 2 cl dl) zh2)  + ((-2 ak ck + 2 bk dk) xh1 - (-2 al cl + 2 bl dl) \
xh2 + (-2 ak bk + 2 ck dk) yh1 - (-2 al bl + 2 cl dl) yh2 + (ak  - bk  - ck  \
+ dk ) zh1 - (al  - bl  - cl  + dl ) zh2 + zk - zl) ]}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147576017997*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147576021117*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.70714757634902*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147576351727*^9}],

Cell[BoxData["\<\"trivialRules>> outs =                                       \
                                                        2     2     2     2   \
        2     2     2     2                                                   \
                                                                     2        \
                                                   2     2     2     2        \
   2     2     2     2                                                        \
              2                                                               \
                                                    2     2     2     2       \
    2     2     2     2                2\\n{Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, -r0 + Sqrt[((ak  + bk  + ck  + \
dk ) xh1 - (al  + bl  + cl  + dl ) xh2 + xk - xl + (2 bk ck - 2 ak dk) yh1 - \
(2 bl cl - 2 al dl) yh2 + (2 ak ck + 2 bk dk) zh1 - (2 al cl + 2 bl dl) zh2)  \
+ ((2 bk ck + 2 ak dk) xh1 - (2 bl cl + 2 al dl) xh2 + (ak  - bk  + ck  - dk \
) yh1 - (al  - bl  + cl  - dl ) yh2 + yk - yl + (-2 ak bk + 2 ck dk) zh1 - \
(-2 al bl + 2 cl dl) zh2)  + ((-2 ak ck + 2 bk dk) xh1 - (-2 al cl + 2 bl dl) \
xh2 + (-2 ak bk + 2 ck dk) yh1 - (-2 al bl + 2 cl dl) yh2 + (ak  - bk  - ck  \
+ dk ) zh1 - (al  - bl  - cl  + dl ) zh2 + zk - zl) ]}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147576354114*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.7071475763572197`*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.7071475769513083`*^9}],

Cell[BoxData["\<\"trivialRules>> outs =                                       \
                                                        2     2     2     2   \
        2     2     2     2                                                   \
                                                                     2        \
                                                   2     2     2     2        \
   2     2     2     2                                                        \
              2                                                               \
                                                    2     2     2     2       \
    2     2     2     2                2\\n{Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, -r0 + Sqrt[((ak  + bk  + ck  + \
dk ) xh1 - (al  + bl  + cl  + dl ) xh2 + xk - xl + (2 bk ck - 2 ak dk) yh1 - \
(2 bl cl - 2 al dl) yh2 + (2 ak ck + 2 bk dk) zh1 - (2 al cl + 2 bl dl) zh2)  \
+ ((2 bk ck + 2 ak dk) xh1 - (2 bl cl + 2 al dl) xh2 + (ak  - bk  + ck  - dk \
) yh1 - (al  - bl  + cl  - dl ) yh2 + yk - yl + (-2 ak bk + 2 ck dk) zh1 - \
(-2 al bl + 2 cl dl) zh2)  + ((-2 ak ck + 2 bk dk) xh1 - (-2 al cl + 2 bl dl) \
xh2 + (-2 ak bk + 2 ck dk) yh1 - (-2 al bl + 2 cl dl) yh2 + (ak  - bk  - ck  \
+ dk ) zh1 - (al  - bl  - cl  + dl ) zh2 + zk - zl) ]}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147576954399*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.7071475769579973`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing declares to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_termDeclares.cc\"\>"}],
  SequenceForm["Writing declares to file: ", "_STAPLE_termDeclares.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.7071475770510073`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing code to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_termCode.cc\"\>"}],
  SequenceForm["Writing code to file: ", "_STAPLE_termCode.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.7028944831129293`*^9, 3.707147577054041*^9}],

Cell[BoxData[
 StyleBox["\<\"Set TimesSimplify and PlusSimplify to turn these \
simplifications off and on\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 1],
  FrontFaceColor->RGBColor[0, 0, 1],
  BackFaceColor->RGBColor[0, 0, 1],
  GraphicsColor->RGBColor[0, 0, 1],
  FontSize->24,
  FontSlant->Italic,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.707148772805745*^9}],

Cell[BoxData[
 StyleBox["\<\"PlusOptimize = True\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 1],
  FrontFaceColor->RGBColor[0, 0, 1],
  BackFaceColor->RGBColor[0, 0, 1],
  GraphicsColor->RGBColor[0, 0, 1],
  FontSize->20,
  FontSlant->Italic,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.707148772807548*^9}],

Cell[BoxData[
 StyleBox["\<\"TimesOptimize = True\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 1],
  FrontFaceColor->RGBColor[0, 0, 1],
  BackFaceColor->RGBColor[0, 0, 1],
  GraphicsColor->RGBColor[0, 0, 1],
  FontSize->20,
  FontSlant->Italic,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.707148772809422*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707148793755496*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.707148793758205*^9}],

Cell[BoxData["\<\"trivialRules>> outs =                                       \
                                                        2     2     2     2   \
        2     2     2     2                                                   \
                                                                     2        \
                                                   2     2     2     2        \
   2     2     2     2                                                        \
              2                                                               \
                                                    2     2     2     2       \
    2     2     2     2                2\\n{Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, -r0 + Sqrt[((ak  + bk  + ck  + \
dk ) xh1 - (al  + bl  + cl  + dl ) xh2 + xk - xl + (2 bk ck - 2 ak dk) yh1 - \
(2 bl cl - 2 al dl) yh2 + (2 ak ck + 2 bk dk) zh1 - (2 al cl + 2 bl dl) zh2)  \
+ ((2 bk ck + 2 ak dk) xh1 - (2 bl cl + 2 al dl) xh2 + (ak  - bk  + ck  - dk \
) yh1 - (al  - bl  + cl  - dl ) yh2 + yk - yl + (-2 ak bk + 2 ck dk) zh1 - \
(-2 al bl + 2 cl dl) zh2)  + ((-2 ak ck + 2 bk dk) xh1 - (-2 al cl + 2 bl dl) \
xh2 + (-2 ak bk + 2 ck dk) yh1 - (-2 al bl + 2 cl dl) yh2 + (ak  - bk  - ck  \
+ dk ) zh1 - (al  - bl  - cl  + dl ) zh2 + zk - zl) ]}\"\>"], "Print",
 CellChangeTimes->{3.7071487937604628`*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.707148793763485*^9}],

Cell[BoxData["\<\"Collecting terms\"\>"], "Print",
 CellChangeTimes->{3.707148793821289*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \
\[NoBreak]\\!\\(Null\\\\ \\(\\({\\(\\(Name \[Rule] \\\"STAPLE\\\"\\)\\), \
\\(\\(AdditionalCDeclares \[Rule] \\\"\\\"\\)\\), \\(\\(DerivativeVariables \
\[Rule] \\(\\({ak, bk, ck, dk, xk, yk, zk, al, bl, cl, dl, xl, yl, \
zl}\\)\\)\\)\\), \\(\\(Rules \[Rule] \
\\(\\({\\(\\(CCode[\\\"STAPLE_SET_PARAMETER(I1,rigidBodyA);\\\"]\\)\\), \
\\(\\(CCode[\\\"STAPLE_SET_PARAMETER(I2,rigidBodyB);\\\"]\\)\\), \\(\\(CCode[\
\\\"STAPLE_SET_POSITION(ak,I1,0);\\\"]\\)\\), \\(\\(\[LeftSkeleton] 46 \
\[RightSkeleton]\\)\\), \\(\\(\\(\\(-gbl\\)\\) \[Rule] fbl\\)\\), \\(\\(\
\[LeftSkeleton] 16 \[RightSkeleton]\\)\\)}\\)\\)\\)\\), \\(\\(Input \[Rule] \
\\(\\({ak, bk, ck, dk, xk, yk, zk, al, bl, cl, dl, xl, yl, zl}\\)\\)\\)\\), \
\\(\\(Output \[Rule] \\(\\({Energy, fak, fbk, fck, fdk, fxk, fyk, fzk, fal, \
fbl, fcl, fdl, fxl, fyl, fzl, \\(\\(\\(\\(-r0\\)\\) + \
\\@\\(\\(\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) + \\(\
\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Power[\
\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)}\\)\\)\\)\\)}\\)\\)\\)\[NoBreak] is \
Protected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.707148793823884*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707148814640863*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.707148814644053*^9}],

Cell[BoxData["\<\"trivialRules>> outs =                                       \
                                                        2     2     2     2   \
        2     2     2     2                                                   \
                                                                     2        \
                                                   2     2     2     2        \
   2     2     2     2                                                        \
              2                                                               \
                                                    2     2     2     2       \
    2     2     2     2                2\\n{Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, -r0 + Sqrt[((ak  + bk  + ck  + \
dk ) xh1 - (al  + bl  + cl  + dl ) xh2 + xk - xl + (2 bk ck - 2 ak dk) yh1 - \
(2 bl cl - 2 al dl) yh2 + (2 ak ck + 2 bk dk) zh1 - (2 al cl + 2 bl dl) zh2)  \
+ ((2 bk ck + 2 ak dk) xh1 - (2 bl cl + 2 al dl) xh2 + (ak  - bk  + ck  - dk \
) yh1 - (al  - bl  + cl  - dl ) yh2 + yk - yl + (-2 ak bk + 2 ck dk) zh1 - \
(-2 al bl + 2 cl dl) zh2)  + ((-2 ak ck + 2 bk dk) xh1 - (-2 al cl + 2 bl dl) \
xh2 + (-2 ak bk + 2 ck dk) yh1 - (-2 al bl + 2 cl dl) yh2 + (ak  - bk  - ck  \
+ dk ) zh1 - (al  - bl  - cl  + dl ) zh2 + zk - zl) ]}\"\>"], "Print",
 CellChangeTimes->{3.707148814646738*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.7071488146501217`*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707148814719591*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.7071488147217073`*^9}],

Cell[BoxData["\<\"trivialRules>> outs =                                       \
                                                        2     2     2     2   \
        2     2     2     2                                                   \
                                                                     2        \
                                                   2     2     2     2        \
   2     2     2     2                                                        \
              2                                                               \
                                                    2     2     2     2       \
    2     2     2     2                2\\n{Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, -r0 + Sqrt[((ak  + bk  + ck  + \
dk ) xh1 - (al  + bl  + cl  + dl ) xh2 + xk - xl + (2 bk ck - 2 ak dk) yh1 - \
(2 bl cl - 2 al dl) yh2 + (2 ak ck + 2 bk dk) zh1 - (2 al cl + 2 bl dl) zh2)  \
+ ((2 bk ck + 2 ak dk) xh1 - (2 bl cl + 2 al dl) xh2 + (ak  - bk  + ck  - dk \
) yh1 - (al  - bl  + cl  - dl ) yh2 + yk - yl + (-2 ak bk + 2 ck dk) zh1 - \
(-2 al bl + 2 cl dl) zh2)  + ((-2 ak ck + 2 bk dk) xh1 - (-2 al cl + 2 bl dl) \
xh2 + (-2 ak bk + 2 ck dk) yh1 - (-2 al bl + 2 cl dl) yh2 + (ak  - bk  - ck  \
+ dk ) zh1 - (al  - bl  - cl  + dl ) zh2 + zk - zl) ]}\"\>"], "Print",
 CellChangeTimes->{3.707148814723752*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.707148814726481*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707148814786405*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.707148814788541*^9}],

Cell[BoxData["\<\"trivialRules>> outs =                                       \
                                                        2     2     2     2   \
        2     2     2     2                                                   \
                                                                     2        \
                                                   2     2     2     2        \
   2     2     2     2                                                        \
              2                                                               \
                                                    2     2     2     2       \
    2     2     2     2                2\\n{Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, -r0 + Sqrt[((ak  + bk  + ck  + \
dk ) xh1 - (al  + bl  + cl  + dl ) xh2 + xk - xl + (2 bk ck - 2 ak dk) yh1 - \
(2 bl cl - 2 al dl) yh2 + (2 ak ck + 2 bk dk) zh1 - (2 al cl + 2 bl dl) zh2)  \
+ ((2 bk ck + 2 ak dk) xh1 - (2 bl cl + 2 al dl) xh2 + (ak  - bk  + ck  - dk \
) yh1 - (al  - bl  + cl  - dl ) yh2 + yk - yl + (-2 ak bk + 2 ck dk) zh1 - \
(-2 al bl + 2 cl dl) zh2)  + ((-2 ak ck + 2 bk dk) xh1 - (-2 al cl + 2 bl dl) \
xh2 + (-2 ak bk + 2 ck dk) yh1 - (-2 al bl + 2 cl dl) yh2 + (ak  - bk  - ck  \
+ dk ) zh1 - (al  - bl  - cl  + dl ) zh2 + zk - zl) ]}\"\>"], "Print",
 CellChangeTimes->{3.707148814790823*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.707148814793955*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.70714881682268*^9}],

Cell[BoxData["\<\"trivialRules>> outs =                                       \
                                                        2     2     2     2   \
        2     2     2     2                                                   \
                                                                     2        \
                                                   2     2     2     2        \
   2     2     2     2                                                        \
              2                                                               \
                                                    2     2     2     2       \
    2     2     2     2                2\\n{Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, -r0 + Sqrt[((ak  + bk  + ck  + \
dk ) xh1 - (al  + bl  + cl  + dl ) xh2 + xk - xl + (2 bk ck - 2 ak dk) yh1 - \
(2 bl cl - 2 al dl) yh2 + (2 ak ck + 2 bk dk) zh1 - (2 al cl + 2 bl dl) zh2)  \
+ ((2 bk ck + 2 ak dk) xh1 - (2 bl cl + 2 al dl) xh2 + (ak  - bk  + ck  - dk \
) yh1 - (al  - bl  + cl  - dl ) yh2 + yk - yl + (-2 ak bk + 2 ck dk) zh1 - \
(-2 al bl + 2 cl dl) zh2)  + ((-2 ak ck + 2 bk dk) xh1 - (-2 al cl + 2 bl dl) \
xh2 + (-2 ak bk + 2 ck dk) yh1 - (-2 al bl + 2 cl dl) yh2 + (ak  - bk  - ck  \
+ dk ) zh1 - (al  - bl  - cl  + dl ) zh2 + zk - zl) ]}\"\>"], "Print",
 CellChangeTimes->{3.7071488168257713`*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.7071488168292913`*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707148816903738*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.707148816907072*^9}],

Cell[BoxData["\<\"trivialRules>> outs =                                       \
                                                        2     2     2     2   \
        2     2     2     2                                                   \
                                                                     2        \
                                                   2     2     2     2        \
   2     2     2     2                                                        \
              2                                                               \
                                                    2     2     2     2       \
    2     2     2     2                2\\n{Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, -r0 + Sqrt[((ak  + bk  + ck  + \
dk ) xh1 - (al  + bl  + cl  + dl ) xh2 + xk - xl + (2 bk ck - 2 ak dk) yh1 - \
(2 bl cl - 2 al dl) yh2 + (2 ak ck + 2 bk dk) zh1 - (2 al cl + 2 bl dl) zh2)  \
+ ((2 bk ck + 2 ak dk) xh1 - (2 bl cl + 2 al dl) xh2 + (ak  - bk  + ck  - dk \
) yh1 - (al  - bl  + cl  - dl ) yh2 + yk - yl + (-2 ak bk + 2 ck dk) zh1 - \
(-2 al bl + 2 cl dl) zh2)  + ((-2 ak ck + 2 bk dk) xh1 - (-2 al cl + 2 bl dl) \
xh2 + (-2 ak bk + 2 ck dk) yh1 - (-2 al bl + 2 cl dl) yh2 + (ak  - bk  - ck  \
+ dk ) zh1 - (al  - bl  - cl  + dl ) zh2 + zk - zl) ]}\"\>"], "Print",
 CellChangeTimes->{3.707148816909778*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.707148816913001*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.707148817406674*^9}],

Cell[BoxData["\<\"trivialRules>> outs =                                       \
                                                        2     2     2     2   \
        2     2     2     2                                                   \
                                                                     2        \
                                                   2     2     2     2        \
   2     2     2     2                                                        \
              2                                                               \
                                                    2     2     2     2       \
    2     2     2     2                2\\n{Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, -r0 + Sqrt[((ak  + bk  + ck  + \
dk ) xh1 - (al  + bl  + cl  + dl ) xh2 + xk - xl + (2 bk ck - 2 ak dk) yh1 - \
(2 bl cl - 2 al dl) yh2 + (2 ak ck + 2 bk dk) zh1 - (2 al cl + 2 bl dl) zh2)  \
+ ((2 bk ck + 2 ak dk) xh1 - (2 bl cl + 2 al dl) xh2 + (ak  - bk  + ck  - dk \
) yh1 - (al  - bl  + cl  - dl ) yh2 + yk - yl + (-2 ak bk + 2 ck dk) zh1 - \
(-2 al bl + 2 cl dl) zh2)  + ((-2 ak ck + 2 bk dk) xh1 - (-2 al cl + 2 bl dl) \
xh2 + (-2 ak bk + 2 ck dk) yh1 - (-2 al bl + 2 cl dl) yh2 + (ak  - bk  - ck  \
+ dk ) zh1 - (al  - bl  - cl  + dl ) zh2 + zk - zl) ]}\"\>"], "Print",
 CellChangeTimes->{3.7071488174098377`*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.7071488174133177`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing declares to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_termDeclares.cc\"\>"}],
  SequenceForm["Writing declares to file: ", "_STAPLE_termDeclares.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707148817470096*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing code to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_termCode.cc\"\>"}],
  SequenceForm["Writing code to file: ", "_STAPLE_termCode.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707148817473127*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.702666640270697*^9, 3.702667238826087*^9, 
  3.702667882952414*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.7026672388274307`*^9}],

Cell[BoxData["\<\"Collecting terms\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.70266723887259*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], ":", 
  " ", "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \
\[NoBreak]\\!\\(Null\\\\ \\(\\({\\(\\(Name \[Rule] \\\"CONNECT\\\"\\)\\), \\(\
\\(AdditionalCDeclares \[Rule] \\\"\\\"\\)\\), \\(\\(DerivativeVariables \
\[Rule] \\(\\({x1, y1, z1, x2, y2, z2}\\)\\)\\)\\), \\(\\(Rules \[Rule] \
\\(\\({\\(\\(CCode[\\\"CONNECT_SET_PARAMETER(I1);\\\"]\\)\\), \
\\(\\(CCode[\\\"CONNECT_SET_PARAMETER(I2);\\\"]\\)\\), \
\\(\\(CCode[\\\"CONNECT_SET_POSITION(ak,I1,0);\\\"]\\)\\), \\(\\(\
\[LeftSkeleton] 45 \[RightSkeleton]\\)\\), \\(\\(\\(\\(\\(\\(2\\\\ \
\\(\\(Plus[\\(\\(\[LeftSkeleton] 3 \[RightSkeleton]\\)\\)]\\)\\)\\\\ \
\\(\\(Plus[\\(\\(\[LeftSkeleton] 8 \[RightSkeleton]\\)\\)]\\)\\)\\)\\) + \
\\(\\(2\\\\ \\(\\(Plus[\\(\\(\[LeftSkeleton] 3 \
\[RightSkeleton]\\)\\)]\\)\\)\\\\ \\(\\(Plus[\\(\\(\[LeftSkeleton] 8 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\) + \\(\\(2\\\\ \\(\\(Plus[\\(\\(\
\[LeftSkeleton] 3 \[RightSkeleton]\\)\\)]\\)\\)\\\\ \\(\\(Plus[\\(\\(\
\[LeftSkeleton] 8 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)\\) \[Rule] \
gdl\\)\\), \\(\\(\\(\\(-gdl\\)\\) \[Rule] fdl\\)\\), \\(\\(\[LeftSkeleton] 10 \
\[RightSkeleton]\\)\\)}\\)\\)\\)\\), \\(\\(Input \[Rule] \\(\\({ak, bk, ck, \
dk, xk, yk, zk, ak, bk, ck, dk, xk, yk, zk}\\)\\)\\)\\), \\(\\(Output \[Rule] \
\\(\\({Energy, fak, fbk, fck, fdk, fxk, fyk, fzk, fal, fbl, fcl, fdl, fxl, \
fyl, fzl, connectDeviation}\\)\\)\\)\\)}\\)\\)\\)\[NoBreak] is Protected. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.702666658477009*^9, 3.702667238874064*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667244718501*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667244719933*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.702666640270697*^9, 3.702667244721278*^9, 
  3.702667883206108*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.7026672447226954`*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667244764295*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.70266724476563*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.702666640270697*^9, 3.7026672447676687`*^9, 
  3.702667883390546*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.7026672447691317`*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667244797524*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667244798894*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.702666640270697*^9, 3.7026672448001738`*^9, 
  3.702667883572517*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667244801591*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz318 -> gxk, tzz317 -> gyk, tzz316 \
-> gzk}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.7026672455813513`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.702666640270697*^9, 3.702667245582816*^9, 
  3.702667883759779*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz318 -> gxk\\n\\ntzz317 \
-> gyk\\n\\ntzz316 -> gzk\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667245584216*^9}],

Cell[BoxData["\"\<After removal: \
CCode[STAPLE_SET_PARAMETER(I1);]\\\\n\\\\nCCode[STAPLE_SET_PARAMETER(I2);]\\\\\
n\\\\nCCode[STAPLE_SET_POSITION(ak,I1,0);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(\
bk,I1,1);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(ck,I1,2);]\\\\n\\\\nCCode[\
STAPLE_SET_POSITION(dk,I1,3);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(xk,I1,4);]\\\
\\n\\\\nCCode[STAPLE_SET_POSITION(yk,I1,5);]\\\\n\\\\nCCode[STAPLE_SET_\
POSITION(zk,I1,6);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(al,I2,0);]\\\\n\\\\\
nCCode[STAPLE_SET_POSITION(bl,I2,1);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(cl,\
I2,2);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(dl,I2,3);]\\\\n\\\\nCCode[STAPLE_\
SET_POSITION(xl,I2,4);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(yl,I2,5);]\\\\n\\\\\
nCCode[STAPLE_SET_POSITION(zl,I2,6);]\\\\n\\\\npower2[bk] -> \
tx156\\\\n\\\\npower2[bl] -> tx157\\\\n\\\\npower2[ck] -> \
tx158\\\\n\\\\npower2[cl] -> tx159\\\\n\\\\npower2[dk] -> \
tx160\\\\n\\\\npower2[dl] -> tx161\\\\n\\\\npower2[ak] -> \
tx162\\\\n\\\\npower2[al] -> tx163\\\\n\\\\n-2. ak -> tzz313\\\\n\\\\nbk \
tzz313 -> tx164\\\\n\\\\n-2. al -> tzz312\\\\n\\\\nbl tzz312 -> \
tx165\\\\n\\\\nck tzz313 -> tx166\\\\n\\\\n2. ck -> tzz315\\\\n\\\\nak tzz315 \
-> tx167\\\\n\\\\nbk tzz315 -> tx168\\\\n\\\\ncl tzz312 -> tx169\\\\n\\\\n2. \
cl -> tzz314\\\\n\\\\nal tzz314 -> tx170\\\\n\\\\nbl tzz314 -> \
tx171\\\\n\\\\ndk tzz313 -> tx172\\\\n\\\\n2. dk -> tzz311\\\\n\\\\nak tzz311 \
-> tx173\\\\n\\\\nbk tzz311 -> tx174\\\\n\\\\nck tzz311 -> tx175\\\\n\\\\ndl \
tzz312 -> tx176\\\\n\\\\n2. al -> tzz319\\\\n\\\\ndl tzz319 -> \
tx177\\\\n\\\\n2. bl -> tzz320\\\\n\\\\ndl tzz320 -> tx178\\\\n\\\\ndl tzz314 \
-> tx179\\\\n\\\\n-tx156 -> tx180\\\\n\\\\n-tx157 -> tx181\\\\n\\\\n-tx158 -> \
tx182\\\\n\\\\n-tx159 -> tx183\\\\n\\\\n-tx160 -> tx184\\\\n\\\\n-tx161 -> \
tx185\\\\n\\\\ntx156 + tx158 + tx160 + tx162 -> tx186\\\\n\\\\ntx157 + tx159 \
+ tx161 + tx163 -> tx187\\\\n\\\\ntx168 + tx172 -> tx188\\\\n\\\\ntx168 + \
tx173 -> tx189\\\\n\\\\ntx166 + tx174 -> tx190\\\\n\\\\ntx167 + tx174 -> \
tx191\\\\n\\\\ntx164 + tx175 -> tx192\\\\n\\\\ntx171 + tx176 -> \
tx193\\\\n\\\\ntx171 + tx177 -> tx194\\\\n\\\\ntx169 + tx178 -> \
tx195\\\\n\\\\ntx170 + tx178 -> tx196\\\\n\\\\ntx165 + tx179 -> \
tx197\\\\n\\\\ntx160 + tx162 + tx180 + tx182 -> tx198\\\\n\\\\ntx161 + tx163 \
+ tx181 + tx183 -> tx199\\\\n\\\\ntx158 + tx162 + tx180 + tx184 -> tx200\\\\n\
\\\\ntx159 + tx163 + tx181 + tx185 -> tx201\\\\n\\\\ntx186 x1 -> tx202\\\\n\\\
\\ntx189 x1 -> tx203\\\\n\\\\ntx190 x1 -> tx204\\\\n\\\\n-x2 -> tzz325\\\\n\\\
\\ntx187 tzz325 -> tx205\\\\n\\\\ntx194 tzz325 -> tx206\\\\n\\\\ntx195 tzz325 \
-> tx207\\\\n\\\\n-xl -> tx208\\\\n\\\\ntx188 y1 -> tx209\\\\n\\\\ntx192 y1 \
-> tx210\\\\n\\\\ntx200 y1 -> tx211\\\\n\\\\n-y2 -> tzz324\\\\n\\\\ntx193 \
tzz324 -> tx212\\\\n\\\\ntx197 tzz324 -> tx213\\\\n\\\\ntx201 tzz324 -> tx214\
\\\\n\\\\n-yl -> tx215\\\\n\\\\ntx191 z1 -> tx216\\\\n\\\\ntx192 z1 -> \
tx217\\\\n\\\\ntx198 z1 -> tx218\\\\n\\\\n-z2 -> tzz323\\\\n\\\\ntx196 tzz323 \
-> tx219\\\\n\\\\ntx197 tzz323 -> tx220\\\\n\\\\ntx199 tzz323 -> tx221\\\\n\\\
\\n-zl -> tx222\\\\n\\\\ntx202 + tx205 + tx208 + tx209 + tx212 + tx216 + \
tx219 + xk -> tx223\\\\n\\\\ntx203 + tx206 + tx211 + tx214 + tx215 + tx217 + \
tx220 + yk -> tx224\\\\n\\\\ntx204 + tx207 + tx210 + tx213 + tx218 + tx221 + \
tx222 + zk -> tx225\\\\n\\\\npower2[tx223] -> tx226\\\\n\\\\npower2[tx224] -> \
tx227\\\\n\\\\npower2[tx225] -> tx228\\\\n\\\\ntx226 + tx227 + tx228 -> \
Energy\\\\n\\\\nCCode[staple_ENERGY_ACCUMULATE(Energy);]\\\\n\\\\n2. ak -> \
tzz322\\\\n\\\\ntzz322 x1 -> tx229\\\\n\\\\n-2. ck x1 -> \
tx230\\\\n\\\\ntzz311 x1 -> tx231\\\\n\\\\ntzz322 y1 -> tx232\\\\n\\\\n-2. y1 \
-> tzz330\\\\n\\\\nbk tzz330 -> tx233\\\\n\\\\ndk tzz330 -> \
tx234\\\\n\\\\ntzz322 z1 -> tx235\\\\n\\\\n-2. z1 -> tzz329\\\\n\\\\nbk \
tzz329 -> tx236\\\\n\\\\ntzz315 z1 -> tx237\\\\n\\\\ntx230 + tx233 + tx235 -> \
tx238\\\\n\\\\ntx231 + tx232 + tx236 -> tx239\\\\n\\\\ntx229 + tx234 + tx237 \
-> tx240\\\\n\\\\n2. tx225 -> tzz316\\\\n\\\\ntx238 tzz316 -> \
tx241\\\\n\\\\n2. tx224 -> tzz317\\\\n\\\\ntx239 tzz317 -> tx242\\\\n\\\\n2. \
tx223 -> tzz318\\\\n\\\\ntx240 tzz318 -> tx243\\\\n\\\\ntx241 + tx242 + tx243 \
-> gak\\\\n\\\\n-gak -> fak\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 0, fak \
);]\\\\n\\\\n2. bk -> tzz321\\\\n\\\\ntzz321 x1 -> tx244\\\\n\\\\ntzz315 x1 \
-> tx245\\\\n\\\\ntzz313 y1 -> tx246\\\\n\\\\ntzz315 y1 -> \
tx247\\\\n\\\\ntzz313 z1 -> tx248\\\\n\\\\ntzz311 z1 -> tx249\\\\n\\\\ntx231 \
+ tx236 + tx246 -> tx250\\\\n\\\\ntx233 + tx245 + tx248 -> \
tx251\\\\n\\\\ntx244 + tx247 + tx249 -> tx252\\\\n\\\\ntx250 tzz316 -> \
tx253\\\\n\\\\ntx251 tzz317 -> tx254\\\\n\\\\ntx252 tzz318 -> \
tx255\\\\n\\\\ntx253 + tx254 + tx255 -> gbk\\\\n\\\\n-gbk -> \
fbk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 1, fbk );]\\\\n\\\\ntzz313 x1 \
-> tx256\\\\n\\\\ntzz321 y1 -> tx257\\\\n\\\\ntzz311 y1 -> tx258\\\\n\\\\nck \
tzz329 -> tx259\\\\n\\\\ntx235 + tx245 + tx257 -> tx260\\\\n\\\\ntx256 + \
tx258 + tx259 -> tx261\\\\n\\\\ntx252 tzz317 -> tx262\\\\n\\\\ntx260 tzz318 \
-> tx263\\\\n\\\\ntx261 tzz316 -> tx264\\\\n\\\\ntx262 + tx263 + tx264 -> gck\
\\\\n\\\\n-gck -> fck\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 2, fck );]\\\
\\n\\\\ntzz321 z1 -> tx265\\\\n\\\\ntx231 + tx246 + tx265 -> \
tx266\\\\n\\\\ntx240 tzz317 -> tx267\\\\n\\\\ntx252 tzz316 -> \
tx268\\\\n\\\\ntx266 tzz318 -> tx269\\\\n\\\\ntx267 + tx268 + tx269 -> \
gdk\\\\n\\\\n-gdk -> fdk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 3, fdk \
);]\\\\n\\\\ntzz318 -> gxk\\\\n\\\\n-gxk -> \
fxk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 4, fxk );]\\\\n\\\\ntzz317 -> \
gyk\\\\n\\\\n-gyk -> fyk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 5, fyk \
);]\\\\n\\\\ntzz316 -> gzk\\\\n\\\\n-gzk -> \
fzk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 6, fzk );]\\\\n\\\\ntzz312 x2 \
-> tx270\\\\n\\\\ntzz314 x2 -> tx271\\\\n\\\\n-2. x2 -> tzz328\\\\n\\\\ndl \
tzz328 -> tx272\\\\n\\\\ntzz312 y2 -> tx273\\\\n\\\\ntzz320 y2 -> \
tx274\\\\n\\\\n2. dl y2 -> tx275\\\\n\\\\ntzz312 z2 -> tx276\\\\n\\\\ntzz320 \
z2 -> tx277\\\\n\\\\n-2. z2 -> tzz326\\\\n\\\\ncl tzz326 -> \
tx278\\\\n\\\\ntx271 + tx274 + tx276 -> tx279\\\\n\\\\ntx272 + tx273 + tx277 \
-> tx280\\\\n\\\\ntx270 + tx275 + tx278 -> tx281\\\\n\\\\ngzk tx279 -> \
tx282\\\\n\\\\ngyk tx280 -> tx283\\\\n\\\\ngxk tx281 -> tx284\\\\n\\\\ntx282 \
+ tx283 + tx284 -> gal\\\\n\\\\n-gal -> \
fal\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 0, fal );]\\\\n\\\\nbl tzz328 \
-> tx285\\\\n\\\\ncl tzz328 -> tx286\\\\n\\\\ntzz319 y2 -> tx287\\\\n\\\\n-2. \
y2 -> tzz327\\\\n\\\\ncl tzz327 -> tx288\\\\n\\\\ntzz319 z2 -> \
tx289\\\\n\\\\ndl tzz326 -> tx290\\\\n\\\\ntx272 + tx277 + tx287 -> \
tx291\\\\n\\\\ntx274 + tx286 + tx289 -> tx292\\\\n\\\\ntx285 + tx288 + tx290 \
-> tx293\\\\n\\\\ngzk tx291 -> tx294\\\\n\\\\ngyk tx292 -> tx295\\\\n\\\\ngxk \
tx293 -> tx296\\\\n\\\\ntx294 + tx295 + tx296 -> gbl\\\\n\\\\n-gbl -> \
fbl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 1, fbl );]\\\\n\\\\ntzz319 x2 \
-> tx297\\\\n\\\\nbl tzz327 -> tx298\\\\n\\\\ndl tzz327 -> \
tx299\\\\n\\\\ntzz314 z2 -> tx300\\\\n\\\\ntx276 + tx286 + tx298 -> \
tx301\\\\n\\\\ntx297 + tx299 + tx300 -> tx302\\\\n\\\\ngyk tx293 -> \
tx303\\\\n\\\\ngxk tx301 -> tx304\\\\n\\\\ngzk tx302 -> tx305\\\\n\\\\ntx303 \
+ tx304 + tx305 -> gcl\\\\n\\\\n-gcl -> \
fcl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 2, fcl );]\\\\n\\\\nbl tzz326 \
-> tx306\\\\n\\\\ntx272 + tx287 + tx306 -> tx307\\\\n\\\\ngyk tx281 -> \
tx308\\\\n\\\\ngzk tx293 -> tx309\\\\n\\\\ngxk tx307 -> tx310\\\\n\\\\ntx308 \
+ tx309 + tx310 -> gdl\\\\n\\\\n-gdl -> \
fdl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 3, fdl );]\\\\n\\\\n-2. tx223 \
-> gxl\\\\n\\\\n-gxl -> fxl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\\\n\\\\n-2. tx224 -> gyl\\\\n\\\\n-gyl -> \
fyl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 5, fyl );]\\\\n\\\\n-2. tx225 \
-> gzl\\\\n\\\\n-gzl -> fzl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 6, fzl \
);]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.702666640270697*^9, 3.7026672455856*^9, {3.702667866916711*^9, 
   3.702667883937563*^9}}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667245648881*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz318 -> gxk, tzz317 -> gyk, tzz316 \
-> gzk}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667245650425*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.702666640270697*^9, 3.702667245651865*^9, 
  3.7026678841172247`*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz318 -> gxk\\n\\ntzz317 \
-> gyk\\n\\ntzz316 -> gzk\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667245653268*^9}],

Cell[BoxData["\"\<After removal: \
CCode[STAPLE_SET_PARAMETER(I1);]\\\\n\\\\nCCode[STAPLE_SET_PARAMETER(I2);]\\\\\
n\\\\nCCode[STAPLE_SET_POSITION(ak,I1,0);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(\
bk,I1,1);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(ck,I1,2);]\\\\n\\\\nCCode[\
STAPLE_SET_POSITION(dk,I1,3);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(xk,I1,4);]\\\
\\n\\\\nCCode[STAPLE_SET_POSITION(yk,I1,5);]\\\\n\\\\nCCode[STAPLE_SET_\
POSITION(zk,I1,6);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(al,I2,0);]\\\\n\\\\\
nCCode[STAPLE_SET_POSITION(bl,I2,1);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(cl,\
I2,2);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(dl,I2,3);]\\\\n\\\\nCCode[STAPLE_\
SET_POSITION(xl,I2,4);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(yl,I2,5);]\\\\n\\\\\
nCCode[STAPLE_SET_POSITION(zl,I2,6);]\\\\n\\\\npower2[bk] -> \
tx156\\\\n\\\\npower2[bl] -> tx157\\\\n\\\\npower2[ck] -> \
tx158\\\\n\\\\npower2[cl] -> tx159\\\\n\\\\npower2[dk] -> \
tx160\\\\n\\\\npower2[dl] -> tx161\\\\n\\\\npower2[ak] -> \
tx162\\\\n\\\\npower2[al] -> tx163\\\\n\\\\n-2. ak -> tzz313\\\\n\\\\nbk \
tzz313 -> tx164\\\\n\\\\n-2. al -> tzz312\\\\n\\\\nbl tzz312 -> \
tx165\\\\n\\\\nck tzz313 -> tx166\\\\n\\\\n2. ck -> tzz315\\\\n\\\\nak tzz315 \
-> tx167\\\\n\\\\nbk tzz315 -> tx168\\\\n\\\\ncl tzz312 -> tx169\\\\n\\\\n2. \
cl -> tzz314\\\\n\\\\nal tzz314 -> tx170\\\\n\\\\nbl tzz314 -> \
tx171\\\\n\\\\ndk tzz313 -> tx172\\\\n\\\\n2. dk -> tzz311\\\\n\\\\nak tzz311 \
-> tx173\\\\n\\\\nbk tzz311 -> tx174\\\\n\\\\nck tzz311 -> tx175\\\\n\\\\ndl \
tzz312 -> tx176\\\\n\\\\n2. al -> tzz319\\\\n\\\\ndl tzz319 -> \
tx177\\\\n\\\\n2. bl -> tzz320\\\\n\\\\ndl tzz320 -> tx178\\\\n\\\\ndl tzz314 \
-> tx179\\\\n\\\\n-tx156 -> tx180\\\\n\\\\n-tx157 -> tx181\\\\n\\\\n-tx158 -> \
tx182\\\\n\\\\n-tx159 -> tx183\\\\n\\\\n-tx160 -> tx184\\\\n\\\\n-tx161 -> \
tx185\\\\n\\\\ntx156 + tx158 + tx160 + tx162 -> tx186\\\\n\\\\ntx157 + tx159 \
+ tx161 + tx163 -> tx187\\\\n\\\\ntx168 + tx172 -> tx188\\\\n\\\\ntx168 + \
tx173 -> tx189\\\\n\\\\ntx166 + tx174 -> tx190\\\\n\\\\ntx167 + tx174 -> \
tx191\\\\n\\\\ntx164 + tx175 -> tx192\\\\n\\\\ntx171 + tx176 -> \
tx193\\\\n\\\\ntx171 + tx177 -> tx194\\\\n\\\\ntx169 + tx178 -> \
tx195\\\\n\\\\ntx170 + tx178 -> tx196\\\\n\\\\ntx165 + tx179 -> \
tx197\\\\n\\\\ntx160 + tx162 + tx180 + tx182 -> tx198\\\\n\\\\ntx161 + tx163 \
+ tx181 + tx183 -> tx199\\\\n\\\\ntx158 + tx162 + tx180 + tx184 -> tx200\\\\n\
\\\\ntx159 + tx163 + tx181 + tx185 -> tx201\\\\n\\\\ntx186 x1 -> tx202\\\\n\\\
\\ntx189 x1 -> tx203\\\\n\\\\ntx190 x1 -> tx204\\\\n\\\\n-x2 -> tzz325\\\\n\\\
\\ntx187 tzz325 -> tx205\\\\n\\\\ntx194 tzz325 -> tx206\\\\n\\\\ntx195 tzz325 \
-> tx207\\\\n\\\\n-xl -> tx208\\\\n\\\\ntx188 y1 -> tx209\\\\n\\\\ntx192 y1 \
-> tx210\\\\n\\\\ntx200 y1 -> tx211\\\\n\\\\n-y2 -> tzz324\\\\n\\\\ntx193 \
tzz324 -> tx212\\\\n\\\\ntx197 tzz324 -> tx213\\\\n\\\\ntx201 tzz324 -> tx214\
\\\\n\\\\n-yl -> tx215\\\\n\\\\ntx191 z1 -> tx216\\\\n\\\\ntx192 z1 -> \
tx217\\\\n\\\\ntx198 z1 -> tx218\\\\n\\\\n-z2 -> tzz323\\\\n\\\\ntx196 tzz323 \
-> tx219\\\\n\\\\ntx197 tzz323 -> tx220\\\\n\\\\ntx199 tzz323 -> tx221\\\\n\\\
\\n-zl -> tx222\\\\n\\\\ntx202 + tx205 + tx208 + tx209 + tx212 + tx216 + \
tx219 + xk -> tx223\\\\n\\\\ntx203 + tx206 + tx211 + tx214 + tx215 + tx217 + \
tx220 + yk -> tx224\\\\n\\\\ntx204 + tx207 + tx210 + tx213 + tx218 + tx221 + \
tx222 + zk -> tx225\\\\n\\\\npower2[tx223] -> tx226\\\\n\\\\npower2[tx224] -> \
tx227\\\\n\\\\npower2[tx225] -> tx228\\\\n\\\\ntx226 + tx227 + tx228 -> \
Energy\\\\n\\\\nCCode[staple_ENERGY_ACCUMULATE(Energy);]\\\\n\\\\n2. ak -> \
tzz322\\\\n\\\\ntzz322 x1 -> tx229\\\\n\\\\n-2. ck x1 -> \
tx230\\\\n\\\\ntzz311 x1 -> tx231\\\\n\\\\ntzz322 y1 -> tx232\\\\n\\\\n-2. y1 \
-> tzz330\\\\n\\\\nbk tzz330 -> tx233\\\\n\\\\ndk tzz330 -> \
tx234\\\\n\\\\ntzz322 z1 -> tx235\\\\n\\\\n-2. z1 -> tzz329\\\\n\\\\nbk \
tzz329 -> tx236\\\\n\\\\ntzz315 z1 -> tx237\\\\n\\\\ntx230 + tx233 + tx235 -> \
tx238\\\\n\\\\ntx231 + tx232 + tx236 -> tx239\\\\n\\\\ntx229 + tx234 + tx237 \
-> tx240\\\\n\\\\n2. tx225 -> tzz316\\\\n\\\\ntx238 tzz316 -> \
tx241\\\\n\\\\n2. tx224 -> tzz317\\\\n\\\\ntx239 tzz317 -> tx242\\\\n\\\\n2. \
tx223 -> tzz318\\\\n\\\\ntx240 tzz318 -> tx243\\\\n\\\\ntx241 + tx242 + tx243 \
-> gak\\\\n\\\\n-gak -> fak\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 0, fak \
);]\\\\n\\\\n2. bk -> tzz321\\\\n\\\\ntzz321 x1 -> tx244\\\\n\\\\ntzz315 x1 \
-> tx245\\\\n\\\\ntzz313 y1 -> tx246\\\\n\\\\ntzz315 y1 -> \
tx247\\\\n\\\\ntzz313 z1 -> tx248\\\\n\\\\ntzz311 z1 -> tx249\\\\n\\\\ntx231 \
+ tx236 + tx246 -> tx250\\\\n\\\\ntx233 + tx245 + tx248 -> \
tx251\\\\n\\\\ntx244 + tx247 + tx249 -> tx252\\\\n\\\\ntx250 tzz316 -> \
tx253\\\\n\\\\ntx251 tzz317 -> tx254\\\\n\\\\ntx252 tzz318 -> \
tx255\\\\n\\\\ntx253 + tx254 + tx255 -> gbk\\\\n\\\\n-gbk -> \
fbk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 1, fbk );]\\\\n\\\\ntzz313 x1 \
-> tx256\\\\n\\\\ntzz321 y1 -> tx257\\\\n\\\\ntzz311 y1 -> tx258\\\\n\\\\nck \
tzz329 -> tx259\\\\n\\\\ntx235 + tx245 + tx257 -> tx260\\\\n\\\\ntx256 + \
tx258 + tx259 -> tx261\\\\n\\\\ntx252 tzz317 -> tx262\\\\n\\\\ntx260 tzz318 \
-> tx263\\\\n\\\\ntx261 tzz316 -> tx264\\\\n\\\\ntx262 + tx263 + tx264 -> gck\
\\\\n\\\\n-gck -> fck\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 2, fck );]\\\
\\n\\\\ntzz321 z1 -> tx265\\\\n\\\\ntx231 + tx246 + tx265 -> \
tx266\\\\n\\\\ntx240 tzz317 -> tx267\\\\n\\\\ntx252 tzz316 -> \
tx268\\\\n\\\\ntx266 tzz318 -> tx269\\\\n\\\\ntx267 + tx268 + tx269 -> \
gdk\\\\n\\\\n-gdk -> fdk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 3, fdk \
);]\\\\n\\\\ntzz318 -> gxk\\\\n\\\\n-gxk -> \
fxk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 4, fxk );]\\\\n\\\\ntzz317 -> \
gyk\\\\n\\\\n-gyk -> fyk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 5, fyk \
);]\\\\n\\\\ntzz316 -> gzk\\\\n\\\\n-gzk -> \
fzk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 6, fzk );]\\\\n\\\\ntzz312 x2 \
-> tx270\\\\n\\\\ntzz314 x2 -> tx271\\\\n\\\\n-2. x2 -> tzz328\\\\n\\\\ndl \
tzz328 -> tx272\\\\n\\\\ntzz312 y2 -> tx273\\\\n\\\\ntzz320 y2 -> \
tx274\\\\n\\\\n2. dl y2 -> tx275\\\\n\\\\ntzz312 z2 -> tx276\\\\n\\\\ntzz320 \
z2 -> tx277\\\\n\\\\n-2. z2 -> tzz326\\\\n\\\\ncl tzz326 -> \
tx278\\\\n\\\\ntx271 + tx274 + tx276 -> tx279\\\\n\\\\ntx272 + tx273 + tx277 \
-> tx280\\\\n\\\\ntx270 + tx275 + tx278 -> tx281\\\\n\\\\ngzk tx279 -> \
tx282\\\\n\\\\ngyk tx280 -> tx283\\\\n\\\\ngxk tx281 -> tx284\\\\n\\\\ntx282 \
+ tx283 + tx284 -> gal\\\\n\\\\n-gal -> \
fal\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 0, fal );]\\\\n\\\\nbl tzz328 \
-> tx285\\\\n\\\\ncl tzz328 -> tx286\\\\n\\\\ntzz319 y2 -> tx287\\\\n\\\\n-2. \
y2 -> tzz327\\\\n\\\\ncl tzz327 -> tx288\\\\n\\\\ntzz319 z2 -> \
tx289\\\\n\\\\ndl tzz326 -> tx290\\\\n\\\\ntx272 + tx277 + tx287 -> \
tx291\\\\n\\\\ntx274 + tx286 + tx289 -> tx292\\\\n\\\\ntx285 + tx288 + tx290 \
-> tx293\\\\n\\\\ngzk tx291 -> tx294\\\\n\\\\ngyk tx292 -> tx295\\\\n\\\\ngxk \
tx293 -> tx296\\\\n\\\\ntx294 + tx295 + tx296 -> gbl\\\\n\\\\n-gbl -> \
fbl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 1, fbl );]\\\\n\\\\ntzz319 x2 \
-> tx297\\\\n\\\\nbl tzz327 -> tx298\\\\n\\\\ndl tzz327 -> \
tx299\\\\n\\\\ntzz314 z2 -> tx300\\\\n\\\\ntx276 + tx286 + tx298 -> \
tx301\\\\n\\\\ntx297 + tx299 + tx300 -> tx302\\\\n\\\\ngyk tx293 -> \
tx303\\\\n\\\\ngxk tx301 -> tx304\\\\n\\\\ngzk tx302 -> tx305\\\\n\\\\ntx303 \
+ tx304 + tx305 -> gcl\\\\n\\\\n-gcl -> \
fcl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 2, fcl );]\\\\n\\\\nbl tzz326 \
-> tx306\\\\n\\\\ntx272 + tx287 + tx306 -> tx307\\\\n\\\\ngyk tx281 -> \
tx308\\\\n\\\\ngzk tx293 -> tx309\\\\n\\\\ngxk tx307 -> tx310\\\\n\\\\ntx308 \
+ tx309 + tx310 -> gdl\\\\n\\\\n-gdl -> \
fdl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 3, fdl );]\\\\n\\\\n-2. tx223 \
-> gxl\\\\n\\\\n-gxl -> fxl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\\\n\\\\n-2. tx224 -> gyl\\\\n\\\\n-gyl -> \
fyl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 5, fyl );]\\\\n\\\\n-2. tx225 \
-> gzl\\\\n\\\\n-gzl -> fzl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 6, fzl \
);]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.702666640270697*^9, 3.7026672456546783`*^9, {3.702667867137817*^9, 
   3.7026678842833033`*^9}}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz318 -> gxk, tzz317 -> gyk, tzz316 \
-> gzk}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667245864833*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.702666640270697*^9, 3.702667245866466*^9, 
  3.702667884453957*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz318 -> gxk\\n\\ntzz317 \
-> gyk\\n\\ntzz316 -> gzk\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667245867931*^9}],

Cell[BoxData["\"\<After removal: \
CCode[STAPLE_SET_PARAMETER(I1);]\\\\n\\\\nCCode[STAPLE_SET_PARAMETER(I2);]\\\\\
n\\\\nCCode[STAPLE_SET_POSITION(ak,I1,0);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(\
bk,I1,1);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(ck,I1,2);]\\\\n\\\\nCCode[\
STAPLE_SET_POSITION(dk,I1,3);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(xk,I1,4);]\\\
\\n\\\\nCCode[STAPLE_SET_POSITION(yk,I1,5);]\\\\n\\\\nCCode[STAPLE_SET_\
POSITION(zk,I1,6);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(al,I2,0);]\\\\n\\\\\
nCCode[STAPLE_SET_POSITION(bl,I2,1);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(cl,\
I2,2);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(dl,I2,3);]\\\\n\\\\nCCode[STAPLE_\
SET_POSITION(xl,I2,4);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(yl,I2,5);]\\\\n\\\\\
nCCode[STAPLE_SET_POSITION(zl,I2,6);]\\\\n\\\\npower2[bk] -> \
tx156\\\\n\\\\npower2[bl] -> tx157\\\\n\\\\npower2[ck] -> \
tx158\\\\n\\\\npower2[cl] -> tx159\\\\n\\\\npower2[dk] -> \
tx160\\\\n\\\\npower2[dl] -> tx161\\\\n\\\\npower2[ak] -> \
tx162\\\\n\\\\npower2[al] -> tx163\\\\n\\\\n-2. ak -> tzz313\\\\n\\\\nbk \
tzz313 -> tx164\\\\n\\\\n-2. al -> tzz312\\\\n\\\\nbl tzz312 -> \
tx165\\\\n\\\\nck tzz313 -> tx166\\\\n\\\\n2. ck -> tzz315\\\\n\\\\nak tzz315 \
-> tx167\\\\n\\\\nbk tzz315 -> tx168\\\\n\\\\ncl tzz312 -> tx169\\\\n\\\\n2. \
cl -> tzz314\\\\n\\\\nal tzz314 -> tx170\\\\n\\\\nbl tzz314 -> \
tx171\\\\n\\\\ndk tzz313 -> tx172\\\\n\\\\n2. dk -> tzz311\\\\n\\\\nak tzz311 \
-> tx173\\\\n\\\\nbk tzz311 -> tx174\\\\n\\\\nck tzz311 -> tx175\\\\n\\\\ndl \
tzz312 -> tx176\\\\n\\\\n2. al -> tzz319\\\\n\\\\ndl tzz319 -> \
tx177\\\\n\\\\n2. bl -> tzz320\\\\n\\\\ndl tzz320 -> tx178\\\\n\\\\ndl tzz314 \
-> tx179\\\\n\\\\n-tx156 -> tx180\\\\n\\\\n-tx157 -> tx181\\\\n\\\\n-tx158 -> \
tx182\\\\n\\\\n-tx159 -> tx183\\\\n\\\\n-tx160 -> tx184\\\\n\\\\n-tx161 -> \
tx185\\\\n\\\\ntx156 + tx158 + tx160 + tx162 -> tx186\\\\n\\\\ntx157 + tx159 \
+ tx161 + tx163 -> tx187\\\\n\\\\ntx168 + tx172 -> tx188\\\\n\\\\ntx168 + \
tx173 -> tx189\\\\n\\\\ntx166 + tx174 -> tx190\\\\n\\\\ntx167 + tx174 -> \
tx191\\\\n\\\\ntx164 + tx175 -> tx192\\\\n\\\\ntx171 + tx176 -> \
tx193\\\\n\\\\ntx171 + tx177 -> tx194\\\\n\\\\ntx169 + tx178 -> \
tx195\\\\n\\\\ntx170 + tx178 -> tx196\\\\n\\\\ntx165 + tx179 -> \
tx197\\\\n\\\\ntx162 + tx180 -> tzz334\\\\n\\\\ntx160 + tx182 + tzz334 -> \
tx198\\\\n\\\\ntx163 + tx181 -> tzz333\\\\n\\\\ntx161 + tx183 + tzz333 -> \
tx199\\\\n\\\\ntx158 + tx184 + tzz334 -> tx200\\\\n\\\\ntx159 + tx185 + \
tzz333 -> tx201\\\\n\\\\ntx186 x1 -> tx202\\\\n\\\\ntx189 x1 -> \
tx203\\\\n\\\\ntx190 x1 -> tx204\\\\n\\\\n-x2 -> tzz325\\\\n\\\\ntx187 tzz325 \
-> tx205\\\\n\\\\ntx194 tzz325 -> tx206\\\\n\\\\ntx195 tzz325 -> tx207\\\\n\\\
\\n-xl -> tx208\\\\n\\\\ntx188 y1 -> tx209\\\\n\\\\ntx192 y1 -> \
tx210\\\\n\\\\ntx200 y1 -> tx211\\\\n\\\\n-y2 -> tzz324\\\\n\\\\ntx193 tzz324 \
-> tx212\\\\n\\\\ntx197 tzz324 -> tx213\\\\n\\\\ntx201 tzz324 -> tx214\\\\n\\\
\\n-yl -> tx215\\\\n\\\\ntx191 z1 -> tx216\\\\n\\\\ntx192 z1 -> \
tx217\\\\n\\\\ntx198 z1 -> tx218\\\\n\\\\n-z2 -> tzz323\\\\n\\\\ntx196 tzz323 \
-> tx219\\\\n\\\\ntx197 tzz323 -> tx220\\\\n\\\\ntx199 tzz323 -> tx221\\\\n\\\
\\n-zl -> tx222\\\\n\\\\ntx202 + tx205 + tx208 + tx209 + tx212 + tx216 + \
tx219 + xk -> tx223\\\\n\\\\ntx203 + tx206 + tx211 + tx214 + tx215 + tx217 + \
tx220 + yk -> tx224\\\\n\\\\ntx204 + tx207 + tx210 + tx213 + tx218 + tx221 + \
tx222 + zk -> tx225\\\\n\\\\npower2[tx223] -> tx226\\\\n\\\\npower2[tx224] -> \
tx227\\\\n\\\\npower2[tx225] -> tx228\\\\n\\\\ntx226 + tx227 + tx228 -> \
Energy\\\\n\\\\nCCode[staple_ENERGY_ACCUMULATE(Energy);]\\\\n\\\\n2. ak -> \
tzz322\\\\n\\\\ntzz322 x1 -> tx229\\\\n\\\\n-2. ck x1 -> \
tx230\\\\n\\\\ntzz311 x1 -> tx231\\\\n\\\\ntzz322 y1 -> tx232\\\\n\\\\n-2. y1 \
-> tzz330\\\\n\\\\nbk tzz330 -> tx233\\\\n\\\\ndk tzz330 -> \
tx234\\\\n\\\\ntzz322 z1 -> tx235\\\\n\\\\n-2. z1 -> tzz329\\\\n\\\\nbk \
tzz329 -> tx236\\\\n\\\\ntzz315 z1 -> tx237\\\\n\\\\ntx230 + tx233 + tx235 -> \
tx238\\\\n\\\\ntx231 + tx232 + tx236 -> tx239\\\\n\\\\ntx229 + tx234 + tx237 \
-> tx240\\\\n\\\\n2. tx225 -> tzz316\\\\n\\\\ntx238 tzz316 -> \
tx241\\\\n\\\\n2. tx224 -> tzz317\\\\n\\\\ntx239 tzz317 -> tx242\\\\n\\\\n2. \
tx223 -> tzz318\\\\n\\\\ntx240 tzz318 -> tx243\\\\n\\\\ntx241 + tx242 + tx243 \
-> gak\\\\n\\\\n-gak -> fak\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 0, fak \
);]\\\\n\\\\n2. bk -> tzz321\\\\n\\\\ntzz321 x1 -> tx244\\\\n\\\\ntzz315 x1 \
-> tx245\\\\n\\\\ntzz313 y1 -> tx246\\\\n\\\\ntzz315 y1 -> \
tx247\\\\n\\\\ntzz313 z1 -> tx248\\\\n\\\\ntzz311 z1 -> tx249\\\\n\\\\ntx231 \
+ tx246 -> tzz332\\\\n\\\\ntx236 + tzz332 -> tx250\\\\n\\\\ntx233 + tx245 + \
tx248 -> tx251\\\\n\\\\ntx244 + tx247 + tx249 -> tx252\\\\n\\\\ntx250 tzz316 \
-> tx253\\\\n\\\\ntx251 tzz317 -> tx254\\\\n\\\\ntx252 tzz318 -> tx255\\\\n\\\
\\ntx253 + tx254 + tx255 -> gbk\\\\n\\\\n-gbk -> \
fbk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 1, fbk );]\\\\n\\\\ntzz313 x1 \
-> tx256\\\\n\\\\ntzz321 y1 -> tx257\\\\n\\\\ntzz311 y1 -> tx258\\\\n\\\\nck \
tzz329 -> tx259\\\\n\\\\ntx235 + tx245 + tx257 -> tx260\\\\n\\\\ntx256 + \
tx258 + tx259 -> tx261\\\\n\\\\ntx252 tzz317 -> tx262\\\\n\\\\ntx260 tzz318 \
-> tx263\\\\n\\\\ntx261 tzz316 -> tx264\\\\n\\\\ntx262 + tx263 + tx264 -> gck\
\\\\n\\\\n-gck -> fck\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 2, fck );]\\\
\\n\\\\ntzz321 z1 -> tx265\\\\n\\\\ntx265 + tzz332 -> tx266\\\\n\\\\ntx240 \
tzz317 -> tx267\\\\n\\\\ntx252 tzz316 -> tx268\\\\n\\\\ntx266 tzz318 -> tx269\
\\\\n\\\\ntx267 + tx268 + tx269 -> gdk\\\\n\\\\n-gdk -> \
fdk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 3, fdk );]\\\\n\\\\ntzz318 -> \
gxk\\\\n\\\\n-gxk -> fxk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 4, fxk \
);]\\\\n\\\\ntzz317 -> gyk\\\\n\\\\n-gyk -> \
fyk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 5, fyk );]\\\\n\\\\ntzz316 -> \
gzk\\\\n\\\\n-gzk -> fzk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 6, fzk \
);]\\\\n\\\\ntzz312 x2 -> tx270\\\\n\\\\ntzz314 x2 -> tx271\\\\n\\\\n-2. x2 \
-> tzz328\\\\n\\\\ndl tzz328 -> tx272\\\\n\\\\ntzz312 y2 -> \
tx273\\\\n\\\\ntzz320 y2 -> tx274\\\\n\\\\n2. dl y2 -> tx275\\\\n\\\\ntzz312 \
z2 -> tx276\\\\n\\\\ntzz320 z2 -> tx277\\\\n\\\\n-2. z2 -> tzz326\\\\n\\\\ncl \
tzz326 -> tx278\\\\n\\\\ntx271 + tx274 + tx276 -> tx279\\\\n\\\\ntx272 + \
tx273 + tx277 -> tx280\\\\n\\\\ntx270 + tx275 + tx278 -> tx281\\\\n\\\\ngzk \
tx279 -> tx282\\\\n\\\\ngyk tx280 -> tx283\\\\n\\\\ngxk tx281 -> tx284\\\\n\\\
\\ntx282 + tx283 + tx284 -> gal\\\\n\\\\n-gal -> \
fal\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 0, fal );]\\\\n\\\\nbl tzz328 \
-> tx285\\\\n\\\\ncl tzz328 -> tx286\\\\n\\\\ntzz319 y2 -> tx287\\\\n\\\\n-2. \
y2 -> tzz327\\\\n\\\\ncl tzz327 -> tx288\\\\n\\\\ntzz319 z2 -> \
tx289\\\\n\\\\ndl tzz326 -> tx290\\\\n\\\\ntx272 + tx287 -> \
tzz331\\\\n\\\\ntx277 + tzz331 -> tx291\\\\n\\\\ntx274 + tx286 + tx289 -> \
tx292\\\\n\\\\ntx285 + tx288 + tx290 -> tx293\\\\n\\\\ngzk tx291 -> \
tx294\\\\n\\\\ngyk tx292 -> tx295\\\\n\\\\ngxk tx293 -> tx296\\\\n\\\\ntx294 \
+ tx295 + tx296 -> gbl\\\\n\\\\n-gbl -> \
fbl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 1, fbl );]\\\\n\\\\ntzz319 x2 \
-> tx297\\\\n\\\\nbl tzz327 -> tx298\\\\n\\\\ndl tzz327 -> \
tx299\\\\n\\\\ntzz314 z2 -> tx300\\\\n\\\\ntx276 + tx286 + tx298 -> \
tx301\\\\n\\\\ntx297 + tx299 + tx300 -> tx302\\\\n\\\\ngyk tx293 -> \
tx303\\\\n\\\\ngxk tx301 -> tx304\\\\n\\\\ngzk tx302 -> tx305\\\\n\\\\ntx303 \
+ tx304 + tx305 -> gcl\\\\n\\\\n-gcl -> \
fcl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 2, fcl );]\\\\n\\\\nbl tzz326 \
-> tx306\\\\n\\\\ntx306 + tzz331 -> tx307\\\\n\\\\ngyk tx281 -> \
tx308\\\\n\\\\ngzk tx293 -> tx309\\\\n\\\\ngxk tx307 -> tx310\\\\n\\\\ntx308 \
+ tx309 + tx310 -> gdl\\\\n\\\\n-gdl -> \
fdl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 3, fdl );]\\\\n\\\\n-2. tx223 \
-> gxl\\\\n\\\\n-gxl -> fxl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\\\n\\\\n-2. tx224 -> gyl\\\\n\\\\n-gyl -> \
fyl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 5, fyl );]\\\\n\\\\n-2. tx225 \
-> gzl\\\\n\\\\n-gzl -> fzl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 6, fzl \
);]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.702666640270697*^9, 3.702667245869404*^9, {3.702667867353277*^9, 
   3.7026678846397448`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing declares to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_CONNECT_termDeclares.cc\"\>"}],
  SequenceForm["Writing declares to file: ", "_CONNECT_termDeclares.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667245915365*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing code to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_CONNECT_termCode.cc\"\>"}],
  SequenceForm["Writing code to file: ", "_CONNECT_termCode.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667245916841*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Draw an evaluation tree for the optimized \"C\" code.  It doesn' t do \
anything useful but it looks impressive - I have got to print some of these \
on large format posters.

Inputs (independent variables and parameters) are on the left and drawn in \
Black, and outputs are on the right and also drawn in Black. Computationally \
expensive functions are highlighted in red, Plus functions are blue and Times \
functions are green.\
\>", "Subsection",
 CellChangeTimes->{{3.494844130294557*^9, 3.494844200819201*^9}, {
  3.494844239453156*^9, 3.494844307388302*^9}, {3.494844349909049*^9, 
  3.494844362349473*^9}, {3.494844417981534*^9, 3.49484444617253*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"packGraph", "[", "staplePack", "]"}]], "Input",
 CellChangeTimes->{{3.405634991753235*^9, 3.405634995403973*^9}, {
   3.4085648880849*^9, 3.408564889562644*^9}, 3.7026665440166197`*^9, 
   3.7026678792391*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 8.666666666666668}, {0.03, 16.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 26.}, {0.03, 48.75}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 43.33333333333334}, {0.03, 81.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 60.666666666666664`}, {0.03, 113.75}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.06999999999999999, 78.}, {0.03, 146.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 95.33333333333333}, {0.03, 178.75}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 112.66666666666667`}, {0.03, 211.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 130.}, {0.03, 243.75}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 147.33333333333334`}, {0.03, 211.25}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 5.}, {0.03, 16.25}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 5.}, {0.13, 147.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 164.66666666666669`}, {0.03, 243.75}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 15.}, {0.03, 48.75}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 15.}, {0.13, 164.66666666666669`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 25.}, {0.03, 81.25}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 25.}, {0.13, 147.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.06999999999999999, 182.}, {0.03, 81.25}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 35.}, {0.03, 211.25}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 35.}, {0.13, 182.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 45.}, {0.03, 16.25}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 45.}, {0.13, 182.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 55.}, {0.03, 113.75}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 55.}, {0.13, 164.66666666666669`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 199.33333333333334`}, {0.03, 113.75}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 65.}, {0.03, 243.75}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 65.}, {0.13, 199.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 75.}, {0.03, 48.75}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 75.}, {0.13, 199.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 85.}, {0.03, 146.25}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 85.}, {0.13, 147.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 216.66666666666669`}, {0.03, 146.25}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 95.}, {0.03, 211.25}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 95.}, {0.13, 216.66666666666669`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 105.}, {0.03, 16.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 105.}, {0.13, 216.66666666666669`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 115.}, {0.03, 81.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 115.}, {0.13, 216.66666666666669`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 125.}, {0.03, 178.75}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 125.}, {0.13, 164.66666666666669`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 234.00000000000003`}, {0.03, 243.75}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 135.}, {0.03, 178.75}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 135.}, {0.13, 234.00000000000003`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 251.33333333333331`}, {0.03, 48.75}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 145.}, {0.03, 178.75}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 145.}, {0.13, 251.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 155.}, {0.03, 178.75}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 155.}, {0.13, 199.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 165.}, {0.13, 8.666666666666668}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 175.}, {0.13, 26.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 185.}, {0.13, 43.33333333333334}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 195.}, {0.13, 60.666666666666664`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 205.}, {0.13, 78.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 215.}, {0.13, 95.33333333333333}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 225.}, {0.13, 8.666666666666668}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 225.}, {0.13, 43.33333333333334}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 225.}, {0.13, 78.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.17, 225.}, {0.13, 112.66666666666667`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 235.}, {0.13, 26.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.17, 235.}, {0.13, 60.666666666666664`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 235.}, {0.13, 95.33333333333333}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 235.}, {0.13, 130.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 7.222222222222222}, {0.22999999999999998`, 45.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 7.222222222222222}, {0.22999999999999998`, 85.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 21.666666666666664`}, {0.22999999999999998`, 45.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 21.666666666666664`}, {0.22999999999999998`, 95.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 36.111111111111114`}, {0.22999999999999998`, 25.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 36.111111111111114`}, {0.22999999999999998`, 105.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 50.55555555555556}, {0.22999999999999998`, 35.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 50.55555555555556}, {0.22999999999999998`, 105.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 65.}, {0.22999999999999998`, 5.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 65.}, {0.22999999999999998`, 115.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 79.44444444444444}, {0.22999999999999998`, 75.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 79.44444444444444}, {0.22999999999999998`, 125.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 93.88888888888889}, {0.22999999999999998`, 75.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 93.88888888888889}, {0.22999999999999998`, 135.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 108.33333333333334`}, {0.22999999999999998`, 55.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 108.33333333333334`}, {0.22999999999999998`, 145.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 122.77777777777777`}, {0.22999999999999998`, 65.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 122.77777777777777`}, {0.22999999999999998`, 145.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 137.22222222222223`}, {0.22999999999999998`, 15.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 137.22222222222223`}, {0.22999999999999998`, 155.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 151.66666666666666`}, {0.13, 112.66666666666667`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 151.66666666666666`}, {0.22999999999999998`, 165.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 9.285714285714286}, {0.13, 78.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 9.285714285714286}, {0.22999999999999998`,
      185.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 9.285714285714286}, {0.33, 
     151.66666666666666`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 166.11111111111111`}, {0.13, 130.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 166.11111111111111`}, {0.22999999999999998`, 175.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 27.857142857142854`}, {0.13, 
     95.33333333333333}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 27.857142857142854`}, {
     0.22999999999999998`, 195.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 27.857142857142854`}, {0.33, 
     166.11111111111111`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 46.42857142857143}, {0.13, 
     43.33333333333334}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 46.42857142857143}, {0.22999999999999998`,
      205.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 46.42857142857143}, {0.33, 
     151.66666666666666`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 65.}, {0.13, 60.666666666666664`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 65.}, {0.22999999999999998`, 215.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 65.}, {0.33, 166.11111111111111`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 180.55555555555554`}, {0.22999999999999998`, 225.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 180.55555555555554`}, {0.13, 268.6666666666667}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 83.57142857142858}, {0.33, 
     21.666666666666664`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 83.57142857142858}, {0.13, 
     268.6666666666667}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 102.14285714285715`}, {0.33, 
     36.111111111111114`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 102.14285714285715`}, {0.13, 
     268.6666666666667}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 286.}, {0.03, 276.25}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 195.}, {0.22999999999999998`, 235.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 195.}, {0.13, 286.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 120.71428571428571`}, {0.33, 
     93.88888888888889}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 120.71428571428571`}, {0.13, 286.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 139.28571428571428`}, {0.33, 
     108.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 139.28571428571428`}, {0.13, 286.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 303.33333333333337`}, {0.03, 308.75}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 157.85714285714286`}, {0.33, 
     7.222222222222222}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 157.85714285714286`}, {
     0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 176.42857142857142`}, {0.33, 65.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 176.42857142857142`}, {
     0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 20.}, {0.43, 46.42857142857143}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 20.}, {0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 320.6666666666667}, {0.03, 341.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 195.}, {0.33, 79.44444444444444}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 195.}, {0.13, 320.6666666666667}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 213.57142857142858`}, {0.33, 
     137.22222222222223`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 213.57142857142858`}, {0.13, 
     320.6666666666667}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.47000000000000003`, 60.}, {0.43, 65.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 60.}, {0.13, 320.6666666666667}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 338.00000000000006`}, {0.03, 373.75}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 232.14285714285717`}, {0.33, 
     50.55555555555556}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 232.14285714285717`}, {
     0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 250.71428571428572`}, {0.33, 65.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 250.71428571428572`}, {
     0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 100.}, {0.43, 9.285714285714286}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 100.}, {0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 355.3333333333333}, {0.03, 406.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 269.28571428571433`}, {0.33, 
     122.77777777777777`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 269.28571428571433`}, {0.13, 
     355.3333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 287.8571428571429}, {0.33, 
     137.22222222222223`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 287.8571428571429}, {0.13, 
     355.3333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 140.}, {0.43, 27.857142857142854`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 140.}, {0.13, 355.3333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 372.66666666666663`}, {0.03, 438.75}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 180.}, {0.33, 180.55555555555554`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.47000000000000003`, 180.}, {0.33, 195.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 180.}, {0.13, 303.33333333333337`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 180.}, {0.43, 157.85714285714286`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.47000000000000003`, 180.}, {0.43, 195.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 180.}, {0.43, 232.14285714285717`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 180.}, {0.43, 269.28571428571433`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 180.}, {0.33, 209.44444444444443`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 52.}, {0.43, 83.57142857142858}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 52.}, {0.43, 120.71428571428571`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.5700000000000001, 52.}, {0.53, 20.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.5700000000000001, 52.}, {0.53, 60.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 52.}, {0.13, 338.00000000000006`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 52.}, {0.43, 250.71428571428572`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 52.}, {0.43, 287.8571428571429}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 52.}, {0.43, 306.42857142857144`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 156.}, {0.43, 102.14285714285715`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 156.}, {0.43, 139.28571428571428`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 156.}, {0.43, 176.42857142857142`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 156.}, {0.43, 213.57142857142858`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.5700000000000001, 156.}, {0.53, 100.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.5700000000000001, 156.}, {0.53, 140.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 156.}, {0.13, 372.66666666666663`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.5700000000000001, 156.}, {0.43, 325.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.5700000000000001, 260.}, {0.53, 180.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 20.}, {0.63, 52.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 60.}, {0.63, 156.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 14.444444444444445`}, {0.63, 260.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 14.444444444444445`}, {0.73, 20.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 14.444444444444445`}, {0.73, 60.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 390.}, {0.03, 471.25}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[{{0.87, 26.}, {0.8300000000000001, 14.444444444444445`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.97, 65.}, {0.13, 390.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.97, 65.}, {0.9300000000000002, 26.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 86.66666666666666}, {1.03, 65.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.17, 86.66666666666666}, {1.03, 195.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.17, 86.66666666666666}, {1.1300000000000001`, 
     86.66666666666666}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 407.33333333333337`}, {0.03, 211.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 265.}, {0.13, 407.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 265.}, {0.13, 268.6666666666667}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 275.}, {0.03, 81.25}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 275.}, {0.13, 268.6666666666667}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 285.}, {0.13, 216.66666666666669`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 285.}, {0.13, 268.6666666666667}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 223.88888888888889`}, {0.13, 407.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 223.88888888888889`}, {0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 238.33333333333331`}, {0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 343.5714285714286}, {0.03, 16.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 343.5714285714286}, {0.33, 
     238.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 362.14285714285717`}, {0.03, 146.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 362.14285714285717`}, {0.33, 
     238.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 252.77777777777777`}, {0.13, 407.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 252.77777777777777`}, {0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 267.22222222222223`}, {0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 380.71428571428567`}, {0.03, 16.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 380.71428571428567`}, {0.33, 
     267.22222222222223`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 281.6666666666667}, {0.13, 182.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 281.6666666666667}, {0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 220.}, {0.22999999999999998`, 275.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 220.}, {0.43, 343.5714285714286}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 220.}, {0.33, 252.77777777777777`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 260.}, {0.22999999999999998`, 285.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 260.}, {0.33, 223.88888888888889`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 260.}, {0.43, 380.71428571428567`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 300.}, {0.22999999999999998`, 265.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 300.}, {0.43, 362.14285714285717`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 300.}, {0.33, 281.6666666666667}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 100.}, {0.63, 156.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 43.33333333333333}, {0.53, 220.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 43.33333333333333}, {0.73, 100.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 140.}, {0.63, 52.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 72.22222222222223}, {0.53, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 72.22222222222223}, {0.73, 140.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.5700000000000001, 364.}, {0.53, 180.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 180.}, {0.53, 300.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 180.}, {0.63, 364.}}]}, 
   {RGBColor[1, 0, 0], LineBox[{{0.97, 325.}, {0.9300000000000002, 26.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 78.}, {0.8300000000000001, 43.33333333333333}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 78.}, {0.8300000000000001, 72.22222222222223}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 78.}, {0.73, 180.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 260.}, {1.03, 65.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 260.}, {1.03, 325.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.17, 260.}, {1.03, 195.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.17, 260.}, {1.1300000000000001`, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.27, 20.}, {0.9300000000000002, 78.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.27, 20.}, {1.2300000000000002`, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 17.333333333333336`}, {1.33, 20.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 424.6666666666667}, {0.03, 16.25}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 295.}, {0.13, 424.6666666666667}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 295.}, {0.13, 268.6666666666667}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 305.}, {0.13, 182.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 305.}, {0.13, 268.6666666666667}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 296.1111111111111}, {0.13, 147.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 296.1111111111111}, {0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 310.55555555555554`}, {0.13, 182.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 310.55555555555554`}, {0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 325.}, {0.13, 147.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 325.}, {0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 339.44444444444446`}, {0.13, 216.66666666666669`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 339.44444444444446`}, {0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 399.28571428571433`}, {
     0.22999999999999998`, 285.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 399.28571428571433`}, {0.33, 
     296.1111111111111}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 340.}, {0.43, 380.71428571428567`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 340.}, {0.43, 399.28571428571433`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 380.}, {0.43, 343.5714285714286}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 380.}, {0.22999999999999998`, 305.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.47000000000000003`, 380.}, {0.33, 325.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 417.85714285714283`}, {
     0.22999999999999998`, 295.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 417.85714285714283`}, {0.33, 
     310.55555555555554`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 417.85714285714283`}, {0.33, 
     339.44444444444446`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 101.11111111111111`}, {0.53, 340.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 101.11111111111111`}, {0.73, 100.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 130.}, {0.53, 380.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 130.}, {0.73, 140.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 220.}, {0.43, 417.85714285714283`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 220.}, {0.63, 364.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 130.}, {0.8300000000000001, 101.11111111111111`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 130.}, {0.8300000000000001, 130.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 130.}, {0.73, 220.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.27, 60.}, {0.9300000000000002, 130.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.27, 60.}, {1.2300000000000002`, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 52.}, {1.33, 60.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 315.}, {0.13, 147.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 315.}, {0.13, 268.6666666666667}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 353.88888888888886`}, {0.13, 424.6666666666667}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 353.88888888888886`}, {0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 368.33333333333337`}, {0.13, 216.66666666666669`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 368.33333333333337`}, {0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 436.42857142857144`}, {0.03, 81.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 436.42857142857144`}, {0.33, 
     267.22222222222223`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 455.}, {0.33, 252.77777777777777`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 455.}, {0.22999999999999998`, 305.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 455.}, {0.33, 353.88888888888886`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 420.}, {0.22999999999999998`, 315.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 420.}, {0.33, 368.33333333333337`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 420.}, {0.43, 436.42857142857144`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 158.88888888888889`}, {0.43, 417.85714285714283`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 158.88888888888889`}, {0.73, 140.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 260.}, {0.43, 455.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 260.}, {0.63, 364.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 187.77777777777777`}, {0.53, 420.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 187.77777777777777`}, {0.73, 100.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 182.}, {0.8300000000000001, 158.88888888888889`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 182.}, {0.73, 260.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 182.}, {0.8300000000000001, 187.77777777777777`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.27, 100.}, {0.9300000000000002, 182.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 100.}, {1.2300000000000002`, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 86.66666666666669}, {1.33, 100.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 382.77777777777777`}, {0.13, 424.6666666666667}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 382.77777777777777`}, {0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 460.}, {0.33, 382.77777777777777`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 460.}, {0.43, 399.28571428571433`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 216.66666666666669`}, {0.53, 300.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 216.66666666666669`}, {0.73, 140.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 245.55555555555554`}, {0.43, 417.85714285714283`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 245.55555555555554`}, {0.73, 100.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 300.}, {0.53, 460.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 300.}, {0.63, 364.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 234.00000000000003`}, {0.8300000000000001, 
     216.66666666666669`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 234.00000000000003`}, {0.8300000000000001, 
     245.55555555555554`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 234.00000000000003`}, {0.73, 300.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 140.}, {0.9300000000000002, 234.00000000000003`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 140.}, {1.2300000000000002`, 260.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.37, 121.33333333333333`}, {1.33, 140.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 180.}, {1.2300000000000002`, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.27, 180.}, {0.63, 364.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 156.}, {1.33, 180.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 220.}, {1.2300000000000002`, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.27, 220.}, {0.73, 140.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.37, 190.66666666666666`}, {1.33, 220.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 260.}, {1.2300000000000002`, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.27, 260.}, {0.73, 100.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.37, 225.33333333333334`}, {1.33, 260.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 325.}, {0.13, 164.66666666666669`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 325.}, {0.03, 276.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 335.}, {0.13, 199.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 335.}, {0.03, 276.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 442.}, {0.03, 276.25}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 345.}, {0.03, 178.75}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 345.}, {0.13, 442.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 355.}, {0.13, 164.66666666666669`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 355.}, {0.03, 341.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 365.}, {0.13, 251.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 365.}, {0.03, 341.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 459.33333333333337`}, {0.03, 178.75}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 459.33333333333337`}, {0.03, 341.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 375.}, {0.13, 164.66666666666669`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 375.}, {0.03, 406.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 385.}, {0.13, 251.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 385.}, {0.03, 406.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 476.66666666666674`}, {0.03, 406.25}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 395.}, {0.03, 113.75}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 395.}, {0.13, 476.66666666666674`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 397.22222222222223`}, {0.22999999999999998`, 335.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 397.22222222222223`}, {0.22999999999999998`, 365.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 397.22222222222223`}, {0.22999999999999998`, 375.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 411.66666666666663`}, {0.22999999999999998`, 345.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 411.66666666666663`}, {0.22999999999999998`, 355.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 411.66666666666663`}, {0.22999999999999998`, 385.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 426.1111111111111}, {0.22999999999999998`, 325.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 426.1111111111111}, {0.13, 459.33333333333337`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 426.1111111111111}, {0.22999999999999998`, 395.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 274.44444444444446`}, {0.33, 397.22222222222223`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 274.44444444444446`}, {0.73, 100.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 303.3333333333333}, {0.33, 411.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 303.3333333333333}, {0.73, 140.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 340.}, {0.33, 426.1111111111111}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 340.}, {0.63, 364.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 286.}, {0.8300000000000001, 274.44444444444446`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 286.}, {0.8300000000000001, 303.3333333333333}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 286.}, {0.73, 340.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.27, 300.}, {0.9300000000000002, 286.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 300.}, {1.2300000000000002`, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 260.}, {1.33, 300.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 405.}, {0.03, 48.75}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 405.}, {0.13, 442.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 415.}, {0.03, 113.75}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 415.}, {0.13, 442.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 425.}, {0.13, 234.00000000000003`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 425.}, {0.03, 341.25}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 494.}, {0.03, 341.25}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 435.}, {0.03, 113.75}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 435.}, {0.13, 494.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 445.}, {0.13, 234.00000000000003`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 445.}, {0.03, 406.25}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 455.}, {0.03, 178.75}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 455.}, {0.13, 476.66666666666674`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 440.55555555555554`}, {0.22999999999999998`, 345.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 440.55555555555554`}, {0.22999999999999998`, 425.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 473.5714285714286}, {0.22999999999999998`,
      385.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 473.5714285714286}, {0.33, 
     440.55555555555554`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 455.}, {0.22999999999999998`, 365.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 455.}, {0.22999999999999998`, 415.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 455.}, {0.22999999999999998`, 445.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 469.44444444444446`}, {0.22999999999999998`, 405.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 469.44444444444446`}, {0.22999999999999998`, 435.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 469.44444444444446`}, {0.22999999999999998`, 455.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 332.22222222222223`}, {0.43, 473.5714285714286}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 332.22222222222223`}, {0.73, 100.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 361.1111111111111}, {0.33, 455.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 361.1111111111111}, {0.73, 140.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 380.}, {0.33, 469.44444444444446`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 380.}, {0.63, 364.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 338.00000000000006`}, {0.8300000000000001, 
     332.22222222222223`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 338.00000000000006`}, {0.8300000000000001, 
     361.1111111111111}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 338.00000000000006`}, {0.73, 380.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 340.}, {0.9300000000000002, 338.00000000000006`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 340.}, {1.2300000000000002`, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 294.6666666666667}, {1.33, 340.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 465.}, {0.13, 234.00000000000003`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 465.}, {0.03, 276.25}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 475.}, {0.03, 48.75}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 475.}, {0.13, 494.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 485.}, {0.03, 178.75}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 485.}, {0.13, 494.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 495.}, {0.13, 199.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 495.}, {0.03, 406.25}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 483.88888888888886`}, {0.22999999999999998`, 375.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 483.88888888888886`}, {0.22999999999999998`, 415.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 483.88888888888886`}, {0.22999999999999998`, 475.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 498.33333333333337`}, {0.22999999999999998`, 465.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 498.33333333333337`}, {0.22999999999999998`, 485.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 498.33333333333337`}, {0.22999999999999998`, 495.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 390.}, {0.33, 469.44444444444446`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 390.}, {0.73, 140.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 420.}, {0.33, 483.88888888888886`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 420.}, {0.63, 364.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 418.88888888888886`}, {0.33, 498.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 418.88888888888886`}, {0.73, 100.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 390.}, {0.8300000000000001, 390.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 390.}, {0.73, 420.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 390.}, {0.8300000000000001, 418.88888888888886`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.27, 380.}, {0.9300000000000002, 390.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 380.}, {1.2300000000000002`, 260.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.37, 329.33333333333337`}, {1.33, 380.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 505.}, {0.03, 48.75}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 505.}, {0.13, 476.66666666666674`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 492.14285714285717`}, {
     0.22999999999999998`, 505.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 492.14285714285717`}, {0.33, 
     440.55555555555554`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 447.77777777777777`}, {0.33, 426.1111111111111}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 447.77777777777777`}, {0.73, 140.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 476.66666666666663`}, {0.33, 469.44444444444446`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 476.66666666666663`}, {0.73, 100.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 460.}, {0.43, 492.14285714285717`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 460.}, {0.63, 364.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 442.}, {0.8300000000000001, 447.77777777777777`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 442.}, {0.8300000000000001, 476.66666666666663`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 442.}, {0.73, 460.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.27, 420.}, {0.9300000000000002, 442.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 420.}, {1.2300000000000002`, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 364.}, {1.33, 420.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 460.}, {1.2300000000000002`, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 398.6666666666667}, {0.53, 180.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 398.6666666666667}, {1.33, 460.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 65.}, {1.4300000000000002`, 398.6666666666667}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 433.33333333333337`}, {0.63, 52.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.37, 433.33333333333337`}, {1.33, 460.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 195.}, {1.4300000000000002`, 433.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.37, 468.00000000000006`}, {0.63, 156.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.37, 468.00000000000006`}, {1.33, 460.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 325.}, {1.4300000000000002`, 468.00000000000006`}}]}, 
   {GrayLevel[0], InsetBox["\<\"bk\"\>", {0., 16.25},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx170:power2\"\>", {0.1, 8.666666666666668},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"bl\"\>", {0., 48.75},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx171:power2\"\>", {0.1, 26.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"ck\"\>", {0., 81.25},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx172:power2\"\>", {0.1, 43.33333333333334},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"cl\"\>", {0., 113.75},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx173:power2\"\>", {0.1, 60.666666666666664`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"dk\"\>", {0., 146.25},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx174:power2\"\>", {0.1, 78.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"dl\"\>", {0., 178.75},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx175:power2\"\>", {0.1, 95.33333333333333},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"ak\"\>", {0., 211.25},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx176:power2\"\>", {0.1, 112.66666666666667`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"al\"\>", {0., 243.75},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx177:power2\"\>", {0.1, 130.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz346:Times(-2.)\"\>", {0.1, 147.33333333333334`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx178:Times\"\>", {0.2, 5.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz345:Times(-2.)\"\>", {0.1, 164.66666666666669`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx179:Times\"\>", {0.2, 15.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx180:Times\"\>", {0.2, 25.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz348:Times(2.)\"\>", {0.1, 182.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx181:Times\"\>", {0.2, 35.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx182:Times\"\>", {0.2, 45.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx183:Times\"\>", {0.2, 55.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz347:Times(2.)\"\>", {0.1, 199.33333333333334`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx184:Times\"\>", {0.2, 65.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx185:Times\"\>", {0.2, 75.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx186:Times\"\>", {0.2, 85.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz344:Times(2.)\"\>", {0.1, 216.66666666666669`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx187:Times\"\>", {0.2, 95.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx188:Times\"\>", {0.2, 105.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx189:Times\"\>", {0.2, 115.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx190:Times\"\>", {0.2, 125.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz349:Times(2.)\"\>", {0.1, 234.00000000000003`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx191:Times\"\>", {0.2, 135.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz350:Times(2.)\"\>", {0.1, 251.33333333333331`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx192:Times\"\>", {0.2, 145.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx193:Times\"\>", {0.2, 155.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx194:Times(-1)\"\>", {0.2, 165.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx195:Times(-1)\"\>", {0.2, 175.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx196:Times(-1)\"\>", {0.2, 185.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx197:Times(-1)\"\>", {0.2, 195.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx198:Times(-1)\"\>", {0.2, 205.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx199:Times(-1)\"\>", {0.2, 215.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx200:Plus\"\>", {0.2, 225.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx201:Plus\"\>", {0.2, 235.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx202:Plus\"\>", {0.30000000000000004`, 7.222222222222222},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx203:Plus\"\>", {0.30000000000000004`, 21.666666666666664`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx204:Plus\"\>", {0.30000000000000004`, 36.111111111111114`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx205:Plus\"\>", {0.30000000000000004`, 50.55555555555556},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx206:Plus\"\>", {0.30000000000000004`, 65.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx207:Plus\"\>", {0.30000000000000004`, 79.44444444444444},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx208:Plus\"\>", {0.30000000000000004`, 93.88888888888889},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx209:Plus\"\>", {0.30000000000000004`, 108.33333333333334`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx210:Plus\"\>", {0.30000000000000004`, 122.77777777777777`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx211:Plus\"\>", {0.30000000000000004`, 137.22222222222223`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz365:Plus\"\>", {0.30000000000000004`, 151.66666666666666`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx212:Plus\"\>", {0.4, 9.285714285714286},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz364:Plus\"\>", {0.30000000000000004`, 166.11111111111111`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx213:Plus\"\>", {0.4, 27.857142857142854`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx214:Plus\"\>", {0.4, 46.42857142857143},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx215:Plus\"\>", {0.4, 65.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"xh1\"\>", {0.1, 268.6666666666667},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx216:Times\"\>", {0.30000000000000004`, 180.55555555555554`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx217:Times\"\>", {0.4, 83.57142857142858},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx218:Times\"\>", {0.4, 102.14285714285715`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"xh2\"\>", {0., 276.25},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz355:Times(-1)\"\>", {0.1, 286.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx219:Times\"\>", {0.30000000000000004`, 195.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx220:Times\"\>", {0.4, 120.71428571428571`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx221:Times\"\>", {0.4, 139.28571428571428`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"xl\"\>", {0., 308.75},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx222:Times(-1)\"\>", {0.1, 303.33333333333337`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"yh1\"\>", {0.2, 245.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx223:Times\"\>", {0.4, 157.85714285714286`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx224:Times\"\>", {0.4, 176.42857142857142`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx225:Times\"\>", {0.5, 20.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"yh2\"\>", {0., 341.25},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz354:Times(-1)\"\>", {0.1, 320.6666666666667},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx226:Times\"\>", {0.4, 195.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx227:Times\"\>", {0.4, 213.57142857142858`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx228:Times\"\>", {0.5, 60.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"yl\"\>", {0., 373.75},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx229:Times(-1)\"\>", {0.1, 338.00000000000006`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"zh1\"\>", {0.2, 255.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx230:Times\"\>", {0.4, 232.14285714285717`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx231:Times\"\>", {0.4, 250.71428571428572`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx232:Times\"\>", {0.5, 100.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"zh2\"\>", {0., 406.25},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz353:Times(-1)\"\>", {0.1, 355.3333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx233:Times\"\>", {0.4, 269.28571428571433`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx234:Times\"\>", {0.4, 287.8571428571429},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx235:Times\"\>", {0.5, 140.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"zl\"\>", {0., 438.75},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx236:Times(-1)\"\>", {0.1, 372.66666666666663`},
     Background->Automatic]}, 
   {GrayLevel[0], 
    InsetBox["\<\"xk\"\>", {0.30000000000000004`, 209.44444444444443`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx237:Plus\"\>", {0.5, 180.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"yk\"\>", {0.4, 306.42857142857144`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx238:Plus\"\>", {0.6000000000000001, 52.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"zk\"\>", {0.4, 325.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx239:Plus\"\>", {0.6000000000000001, 156.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx240:power2\"\>", {0.6000000000000001, 260.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx241:power2\"\>", {0.7000000000000001, 20.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx242:power2\"\>", {0.7000000000000001, 60.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx243:Plus\"\>", {0.8, 14.444444444444445`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"r0\"\>", {0., 471.25},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx244:Times(-1)\"\>", {0.1, 390.},
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], InsetBox["\<\"tx245:mysqrt\"\>", {0.9, 26.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx246:Plus\"\>", {1., 65.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx247:power2\"\>", {1.1, 86.66666666666666},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"ks\"\>", {1., 195.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"Energy:Times\"\>", {1.2000000000000002`, 86.66666666666666},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz352:Times(2.)\"\>", {0.1, 407.33333333333337`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx248:Times\"\>", {0.2, 265.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx249:Times(-2.)\"\>", {0.2, 275.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx250:Times\"\>", {0.2, 285.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx251:Times\"\>", {0.30000000000000004`, 223.88888888888889`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz361:Times(-2.)\"\>", {0.30000000000000004`, 238.33333333333331`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx252:Times\"\>", {0.4, 343.5714285714286},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx253:Times\"\>", {0.4, 362.14285714285717`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx254:Times\"\>", {0.30000000000000004`, 252.77777777777777`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz360:Times(-2.)\"\>", {0.30000000000000004`, 267.22222222222223`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx255:Times\"\>", {0.4, 380.71428571428567`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx256:Times\"\>", {0.30000000000000004`, 281.6666666666667},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx257:Plus\"\>", {0.5, 220.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx258:Plus\"\>", {0.5, 260.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx259:Plus\"\>", {0.5, 300.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz341:Times(2.)\"\>", {0.7000000000000001, 100.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx260:Times\"\>", {0.8, 43.33333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz342:Times(2.)\"\>", {0.7000000000000001, 140.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx261:Times\"\>", {0.8, 72.22222222222223},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz343:Times(2.)\"\>", {0.6000000000000001, 364.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx262:Times\"\>", {0.7000000000000001, 180.},
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], InsetBox["\<\"tx263:reciprocal\"\>", {1., 325.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx264:Plus\"\>", {0.9, 78.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz339:Times\"\>", {1.1, 260.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz340:Times\"\>", {1.2000000000000002`, 260.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"gak:Times\"\>", {1.3, 20.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fak:Times(-1)\"\>", {1.4000000000000001`, 17.333333333333336`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz351:Times(2.)\"\>", {0.1, 424.6666666666667},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx265:Times\"\>", {0.2, 295.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx266:Times\"\>", {0.2, 305.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx267:Times\"\>", {0.30000000000000004`, 296.1111111111111},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx268:Times\"\>", {0.30000000000000004`, 310.55555555555554`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx269:Times\"\>", {0.30000000000000004`, 325.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx270:Times\"\>", {0.30000000000000004`, 339.44444444444446`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz363:Plus\"\>", {0.4, 399.28571428571433`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx271:Plus\"\>", {0.5, 340.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx272:Plus\"\>", {0.5, 380.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx273:Plus\"\>", {0.4, 417.85714285714283`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx274:Times\"\>", {0.8, 101.11111111111111`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx275:Times\"\>", {0.8, 130.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx276:Times\"\>", {0.7000000000000001, 220.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx277:Plus\"\>", {0.9, 130.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"gbk:Times\"\>", {1.3, 60.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fbk:Times(-1)\"\>", {1.4000000000000001`, 52.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx278:Times\"\>", {0.2, 315.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx279:Times\"\>", {0.30000000000000004`, 353.88888888888886`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx280:Times\"\>", 
     {0.30000000000000004`, 368.33333333333337`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx281:Times\"\>", {0.4, 436.42857142857144`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx282:Plus\"\>", {0.4, 455.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx283:Plus\"\>", {0.5, 420.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx284:Times\"\>", {0.8, 158.88888888888889`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx285:Times\"\>", {0.7000000000000001, 260.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx286:Times\"\>", {0.8, 187.77777777777777`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx287:Plus\"\>", {0.9, 182.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"gck:Times\"\>", {1.3, 100.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fck:Times(-1)\"\>", {1.4000000000000001`, 86.66666666666669},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx288:Times\"\>", {0.30000000000000004`, 382.77777777777777`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx289:Plus\"\>", {0.5, 460.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx290:Times\"\>", {0.8, 216.66666666666669`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx291:Times\"\>", {0.8, 245.55555555555554`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx292:Times\"\>", {0.7000000000000001, 300.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx293:Plus\"\>", {0.9, 234.00000000000003`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"gdk:Times\"\>", {1.3, 140.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fdk:Times(-1)\"\>", {1.4000000000000001`, 121.33333333333333`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"gxk:Times\"\>", {1.3, 180.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fxk:Times(-1)\"\>", {1.4000000000000001`, 156.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"gyk:Times\"\>", {1.3, 220.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fyk:Times(-1)\"\>", {1.4000000000000001`, 190.66666666666666`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"gzk:Times\"\>", {1.3, 260.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fzk:Times(-1)\"\>", {1.4000000000000001`, 225.33333333333334`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx294:Times\"\>", {0.2, 325.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx295:Times\"\>", {0.2, 335.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz358:Times(-2.)\"\>", {0.1, 442.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx296:Times\"\>", {0.2, 345.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx297:Times\"\>", {0.2, 355.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx298:Times\"\>", {0.2, 365.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx299:Times(2.)\"\>", {0.1, 459.33333333333337`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx300:Times\"\>", {0.2, 375.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx301:Times\"\>", {0.2, 385.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz356:Times(-2.)\"\>", {0.1, 476.66666666666674`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx302:Times\"\>", {0.2, 395.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx303:Plus\"\>", {0.30000000000000004`, 397.22222222222223`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx304:Plus\"\>", {0.30000000000000004`, 411.66666666666663`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx305:Plus\"\>", {0.30000000000000004`, 426.1111111111111},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx306:Times\"\>", {0.8, 274.44444444444446`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx307:Times\"\>", {0.8, 303.3333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx308:Times\"\>", {0.7000000000000001, 340.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx309:Plus\"\>", {0.9, 286.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"gal:Times\"\>", {1.3, 300.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fal:Times(-1)\"\>", {1.4000000000000001`, 260.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx310:Times\"\>", {0.2, 405.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx311:Times\"\>", {0.2, 415.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx312:Times\"\>", {0.2, 425.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz357:Times(-2.)\"\>", {0.1, 494.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx313:Times\"\>", {0.2, 435.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx314:Times\"\>", {0.2, 445.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx315:Times\"\>", {0.2, 455.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz362:Plus\"\>", {0.30000000000000004`, 440.55555555555554`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx316:Plus\"\>", {0.4, 473.5714285714286},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx317:Plus\"\>", {0.30000000000000004`, 455.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx318:Plus\"\>", {0.30000000000000004`, 469.44444444444446`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx319:Times\"\>", {0.8, 332.22222222222223`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx320:Times\"\>", {0.8, 361.1111111111111},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx321:Times\"\>", {0.7000000000000001, 380.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx322:Plus\"\>", {0.9, 338.00000000000006`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"gbl:Times\"\>", {1.3, 340.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fbl:Times(-1)\"\>", {1.4000000000000001`, 294.6666666666667},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx323:Times\"\>", {0.2, 465.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx324:Times\"\>", {0.2, 475.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx325:Times\"\>", {0.2, 485.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx326:Times\"\>", {0.2, 495.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx327:Plus\"\>", {0.30000000000000004`, 483.88888888888886`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx328:Plus\"\>", {0.30000000000000004`, 498.33333333333337`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx329:Times\"\>", {0.8, 390.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx330:Times\"\>", {0.7000000000000001, 420.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx331:Times\"\>", {0.8, 418.88888888888886`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx332:Plus\"\>", {0.9, 390.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"gcl:Times\"\>", {1.3, 380.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fcl:Times(-1)\"\>", {1.4000000000000001`, 329.33333333333337`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx333:Times\"\>", {0.2, 505.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx334:Plus\"\>", {0.4, 492.14285714285717`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx335:Times\"\>", {0.8, 447.77777777777777`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx336:Times\"\>", {0.8, 476.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx337:Times\"\>", {0.7000000000000001, 460.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx338:Plus\"\>", {0.9, 442.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"gdl:Times\"\>", {1.3, 420.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fdl:Times(-1)\"\>", {1.4000000000000001`, 364.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz359:Times(-2.)\"\>", {1.3, 460.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"gxl:Times\"\>", {1.4000000000000001`, 398.6666666666667},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"fxl:Times(-1)\"\>", {1.5, 65.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"gyl:Times\"\>", {1.4000000000000001`, 433.33333333333337`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"fyl:Times(-1)\"\>", {1.5, 195.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"gzl:Times\"\>", {1.4000000000000001`, 468.00000000000006`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"fzl:Times(-1)\"\>", {1.5, 325.},
     Background->Automatic]}},
  AspectRatio->0.41,
  ImageSize->{986.67578125, Automatic}]], "Output",
 CellChangeTimes->{3.702666678818524*^9, 3.7026672464843082`*^9, 
  3.702667942886034*^9, 3.7028897104966097`*^9, 3.7028899993186197`*^9, 
  3.702891214921299*^9, 3.7028914600480623`*^9, 3.7028944028541117`*^9, 
  3.70289450253447*^9, 3.7071475791301727`*^9, 3.707148818433988*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nonbond rigid-body energy term", "Title",
 CellChangeTimes->{{3.702666046819551*^9, 3.702666055636635*^9}, 
   3.702667845434409*^9, {3.707145989570416*^9, 3.707145992887137*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "xh1", ",", "yh1", ",", "zh1", ",", "xh2", ",", "yh2", ",", "zh2"}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "x1", ",", "y1", ",", "z1", ",", "x2", ",", "y2", ",", "z2", ",", " ", 
    "evdw", ",", " ", "eeel", ",", "nonbondRBEquation"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7026651212890797`*^9, 3.702665129345278*^9}, {
   3.707146129988819*^9, 3.707146130257345*^9}, {3.707146172218062*^9, 
   3.7071461815378304`*^9}, 3.70714659797876*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"myrot", "[", 
   RowBox[{
   "a_", ",", "b_", ",", "c_", ",", "d_", ",", "x_", ",", "y_", ",", "z_"}], 
   "]"}], ":=", " ", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{
       RowBox[{"a", "^", "2"}], "+", 
       RowBox[{"b", "^", "2"}], "+", 
       RowBox[{"c", "^", "2"}], "+", 
       RowBox[{"d", "^", "2"}]}], 
      RowBox[{
       RowBox[{"2", "*", "b", "*", "c"}], "-", 
       RowBox[{"2", "*", "a", "*", "d"}]}], 
      RowBox[{
       RowBox[{"2", "*", "b", "*", "d"}], "+", 
       RowBox[{"2", "*", "a", "*", "c"}]}], "x"},
     {
      RowBox[{
       RowBox[{"2", "*", "b", "*", "c"}], "+", 
       RowBox[{"2", "*", "a", "*", "d"}]}], 
      RowBox[{
       RowBox[{"a", "^", "2"}], "-", 
       RowBox[{"b", "^", "2"}], "+", 
       RowBox[{"c", "^", "2"}], "-", 
       RowBox[{"d", "^", "2"}]}], 
      RowBox[{
       RowBox[{"2", "*", "c", "*", "d"}], "-", 
       RowBox[{"2", "*", "a", "*", "b"}]}], "y"},
     {
      RowBox[{
       RowBox[{"2", "*", "b", "*", "d"}], "-", 
       RowBox[{"2", "*", "a", "*", "c"}]}], 
      RowBox[{
       RowBox[{"2", "*", "c", "*", "d"}], "-", 
       RowBox[{"2", "*", "a", "*", "b"}]}], 
      RowBox[{
       RowBox[{"a", "^", "2"}], "-", 
       RowBox[{"b", "^", "2"}], "-", 
       RowBox[{"c", "^", "2"}], "+", 
       RowBox[{"d", "^", "2"}]}], "z"},
     {"0", "0", "0", "1"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.7026559306461163`*^9, 3.702655936949669*^9}, {
  3.702655974247155*^9, 3.702656251609112*^9}, {3.702664933574308*^9, 
  3.7026649473608*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rotk", " ", "=", " ", 
  RowBox[{"myrot", "[", 
   RowBox[{
   "ak", ",", "bk", ",", "ck", ",", "dk", ",", "xk", ",", "yk", ",", "zk"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.702656254507506*^9, 3.702656277970294*^9}, {
  3.70266495526677*^9, 3.702664961330851*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["ak", "2"], "+", 
      SuperscriptBox["bk", "2"], "+", 
      SuperscriptBox["ck", "2"], "+", 
      SuperscriptBox["dk", "2"]}], ",", 
     RowBox[{
      RowBox[{"2", " ", "bk", " ", "ck"}], "-", 
      RowBox[{"2", " ", "ak", " ", "dk"}]}], ",", 
     RowBox[{
      RowBox[{"2", " ", "ak", " ", "ck"}], "+", 
      RowBox[{"2", " ", "bk", " ", "dk"}]}], ",", "xk"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", "bk", " ", "ck"}], "+", 
      RowBox[{"2", " ", "ak", " ", "dk"}]}], ",", 
     RowBox[{
      SuperscriptBox["ak", "2"], "-", 
      SuperscriptBox["bk", "2"], "+", 
      SuperscriptBox["ck", "2"], "-", 
      SuperscriptBox["dk", "2"]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
      RowBox[{"2", " ", "ck", " ", "dk"}]}], ",", "yk"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "ak", " ", "ck"}], "+", 
      RowBox[{"2", " ", "bk", " ", "dk"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
      RowBox[{"2", " ", "ck", " ", "dk"}]}], ",", 
     RowBox[{
      SuperscriptBox["ak", "2"], "-", 
      SuperscriptBox["bk", "2"], "-", 
      SuperscriptBox["ck", "2"], "+", 
      SuperscriptBox["dk", "2"]}], ",", "zk"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.702666638246599*^9, 3.702667221166613*^9, 3.702667910709527*^9, 
   3.702889682891252*^9, 3.7028899616210747`*^9, 3.702891182815988*^9, 
   3.702891413995021*^9, {3.702894454791719*^9, 3.7028944808579617`*^9}, 
   3.707146194580346*^9, 3.707146552767846*^9, 3.7071466294118137`*^9, 
   3.707147965288785*^9, 3.707148148270993*^9, 3.707148676782558*^9, 
   3.707148895397471*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rotl", " ", "=", " ", 
  RowBox[{"myrot", "[", 
   RowBox[{
   "al", ",", "bl", ",", "cl", ",", "dl", ",", "xl", ",", "yl", ",", "zl"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7026563543442907`*^9, 3.702656370478537*^9}, {
  3.702664965941259*^9, 3.702664969022298*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["al", "2"], "+", 
      SuperscriptBox["bl", "2"], "+", 
      SuperscriptBox["cl", "2"], "+", 
      SuperscriptBox["dl", "2"]}], ",", 
     RowBox[{
      RowBox[{"2", " ", "bl", " ", "cl"}], "-", 
      RowBox[{"2", " ", "al", " ", "dl"}]}], ",", 
     RowBox[{
      RowBox[{"2", " ", "al", " ", "cl"}], "+", 
      RowBox[{"2", " ", "bl", " ", "dl"}]}], ",", "xl"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", "bl", " ", "cl"}], "+", 
      RowBox[{"2", " ", "al", " ", "dl"}]}], ",", 
     RowBox[{
      SuperscriptBox["al", "2"], "-", 
      SuperscriptBox["bl", "2"], "+", 
      SuperscriptBox["cl", "2"], "-", 
      SuperscriptBox["dl", "2"]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
      RowBox[{"2", " ", "cl", " ", "dl"}]}], ",", "yl"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "al", " ", "cl"}], "+", 
      RowBox[{"2", " ", "bl", " ", "dl"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
      RowBox[{"2", " ", "cl", " ", "dl"}]}], ",", 
     RowBox[{
      SuperscriptBox["al", "2"], "-", 
      SuperscriptBox["bl", "2"], "-", 
      SuperscriptBox["cl", "2"], "+", 
      SuperscriptBox["dl", "2"]}], ",", "zl"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.702666638307432*^9, 3.702667221242487*^9, 3.7026679107833967`*^9, 
   3.702889682978447*^9, 3.702889961712007*^9, 3.70289118289216*^9, 
   3.702891414072631*^9, {3.702894454869285*^9, 3.702894480913188*^9}, 
   3.707146208080245*^9, 3.7071465528561277`*^9, 3.707146629488344*^9, 
   3.707147965348337*^9, 3.7071481483469543`*^9, 3.70714867691545*^9, 
   3.707148895519107*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ba", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{"xh1", ",", " ", "yh1", ",", " ", "zh1"}], " ", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{"xh2", ",", " ", "yh2", ",", " ", "zh2"}], " ", "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.702665060868902*^9, 3.702665086478999*^9}, {
  3.7026651779582376`*^9, 3.702665179746352*^9}, {3.702894426628853*^9, 
  3.702894442471896*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eba", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"ba", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ebb", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"bb", ",", "1"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7026651886697617`*^9, 3.702665217534218*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nonBondInputs", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{"ba", ",", "bb", ",", "dA", ",", "dC", ",", "dQ1Q2"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.405598799353134*^9, 3.405598800527666*^9}, {
   3.405598839484171*^9, 3.405598850689588*^9}, {3.405599099937523*^9, 
   3.40559912810675*^9}, {3.405599314188497*^9, 3.405599327722315*^9}, 
   3.405600870439898*^9, {3.411175187292178*^9, 3.4111751886209507`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "xh1", ",", "yh1", ",", "zh1", ",", "xh2", ",", "yh2", ",", "zh2", ",", 
   "dA", ",", "dC", ",", "dQ1Q2"}], "}"}]], "Output",
 CellChangeTimes->{3.6195575788114634`*^9, 3.7026542197779293`*^9, 
  3.707146247878749*^9, 3.707146553045834*^9, 3.707146629662651*^9, 
  3.707147965521118*^9, 3.707148148518413*^9, 3.707148677081723*^9, 
  3.707148895647057*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonbondRBDistance", " ", "=", " ", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"rotk", ".", "eba"}], "-", 
       RowBox[{"rotl", ".", "ebb"}]}], ")"}], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"rotk", ".", "eba"}], "-", 
       RowBox[{"rotl", ".", "ebb"}]}], ")"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.411175191371356*^9, 3.4111752070248013`*^9}, {
   3.411197578518401*^9, 3.411197589788989*^9}, {3.707146083954568*^9, 
   3.707146107438168*^9}, {3.707146230475306*^9, 3.7071462420652227`*^9}, 
   3.707146598026679*^9, {3.7071486245449133`*^9, 3.707148629798176*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"evdwEquation", " ", "=", " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox["dA", 
     SuperscriptBox["nonbondRBDistance", "12"]], "-", 
    FractionBox["dC", 
     SuperscriptBox["nonbondRBDistance", "6"]]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.402740997525921*^9, 3.402741044800063*^9}, {
   3.407556720442287*^9, 3.407556726625795*^9}, {3.407557014452285*^9, 
   3.407557034497266*^9}, {3.408662107718624*^9, 3.4086621120938663`*^9}, 
   3.411081883431032*^9, {3.411175212266877*^9, 3.41117523978631*^9}, {
   3.411197604900622*^9, 3.411197623162916*^9}, 3.416871995722517*^9, {
   3.7071465980505657`*^9, 3.707146598062868*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dA", "/", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ak", "2"], "+", 
            SuperscriptBox["bk", "2"], "+", 
            SuperscriptBox["ck", "2"], "+", 
            SuperscriptBox["dk", "2"]}], ")"}], " ", "xh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["al", "2"], "+", 
            SuperscriptBox["bl", "2"], "+", 
            SuperscriptBox["cl", "2"], "+", 
            SuperscriptBox["dl", "2"]}], ")"}], " ", "xh2"}], "+", "xk", "-", 
         "xl", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bk", " ", "ck"}], "-", 
            RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bl", " ", "cl"}], "-", 
            RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "ak", " ", "ck"}], "+", 
            RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "al", " ", "cl"}], "+", 
            RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
        ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bk", " ", "ck"}], "+", 
            RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bl", " ", "cl"}], "+", 
            RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ak", "2"], "-", 
            SuperscriptBox["bk", "2"], "+", 
            SuperscriptBox["ck", "2"], "-", 
            SuperscriptBox["dk", "2"]}], ")"}], " ", "yh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["al", "2"], "-", 
            SuperscriptBox["bl", "2"], "+", 
            SuperscriptBox["cl", "2"], "-", 
            SuperscriptBox["dl", "2"]}], ")"}], " ", "yh2"}], "+", "yk", "-", 
         "yl", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
            RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
            RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
        ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "ak", " ", "ck"}], "+", 
            RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "al", " ", "cl"}], "+", 
            RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
            RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
            RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ak", "2"], "-", 
            SuperscriptBox["bk", "2"], "-", 
            SuperscriptBox["ck", "2"], "+", 
            SuperscriptBox["dk", "2"]}], ")"}], " ", "zh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["al", "2"], "-", 
            SuperscriptBox["bl", "2"], "-", 
            SuperscriptBox["cl", "2"], "+", 
            SuperscriptBox["dl", "2"]}], ")"}], " ", "zh2"}], "+", "zk", "-", 
         "zl"}], ")"}], "2"]}], ")"}], "6"]}], "-", 
  RowBox[{"dC", "/", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ak", "2"], "+", 
            SuperscriptBox["bk", "2"], "+", 
            SuperscriptBox["ck", "2"], "+", 
            SuperscriptBox["dk", "2"]}], ")"}], " ", "xh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["al", "2"], "+", 
            SuperscriptBox["bl", "2"], "+", 
            SuperscriptBox["cl", "2"], "+", 
            SuperscriptBox["dl", "2"]}], ")"}], " ", "xh2"}], "+", "xk", "-", 
         "xl", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bk", " ", "ck"}], "-", 
            RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bl", " ", "cl"}], "-", 
            RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "ak", " ", "ck"}], "+", 
            RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "al", " ", "cl"}], "+", 
            RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
        ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bk", " ", "ck"}], "+", 
            RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bl", " ", "cl"}], "+", 
            RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ak", "2"], "-", 
            SuperscriptBox["bk", "2"], "+", 
            SuperscriptBox["ck", "2"], "-", 
            SuperscriptBox["dk", "2"]}], ")"}], " ", "yh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["al", "2"], "-", 
            SuperscriptBox["bl", "2"], "+", 
            SuperscriptBox["cl", "2"], "-", 
            SuperscriptBox["dl", "2"]}], ")"}], " ", "yh2"}], "+", "yk", "-", 
         "yl", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
            RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
            RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
        ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "ak", " ", "ck"}], "+", 
            RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "al", " ", "cl"}], "+", 
            RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
            RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
            RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ak", "2"], "-", 
            SuperscriptBox["bk", "2"], "-", 
            SuperscriptBox["ck", "2"], "+", 
            SuperscriptBox["dk", "2"]}], ")"}], " ", "zh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["al", "2"], "-", 
            SuperscriptBox["bl", "2"], "-", 
            SuperscriptBox["cl", "2"], "+", 
            SuperscriptBox["dl", "2"]}], ")"}], " ", "zh2"}], "+", "zk", "-", 
         "zl"}], ")"}], "2"]}], ")"}], "3"]}]}]], "Output",
 CellChangeTimes->{3.6195575788781567`*^9, 3.702654219876251*^9, 
  3.707146262532913*^9, 3.707146553186502*^9, 3.707146629797101*^9, 
  3.707147965643334*^9, 3.707148148659349*^9, 3.7071486772178593`*^9, 
  3.707148895768118*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eeelEquation", " ", "=", " ", 
  RowBox[{"(", 
   FractionBox["dQ1Q2", "nonbondRBDistance"], ")"}]}]], "Input",
 CellChangeTimes->{{3.4026534322622623`*^9, 3.402653496407857*^9}, {
   3.4026535524322023`*^9, 3.402653641591628*^9}, {3.4026779483394947`*^9, 
   3.402677953362184*^9}, {3.4026781314714537`*^9, 3.4026781348802843`*^9}, {
   3.40274101413416*^9, 3.402741050316153*^9}, {3.407556736609376*^9, 
   3.4075567425681257`*^9}, {3.407557208386277*^9, 3.407557225106896*^9}, {
   3.408662115934063*^9, 3.408662119317389*^9}, 3.411081885331176*^9, {
   3.411197627982712*^9, 3.411197630382259*^9}, 3.416871999453731*^9, 
   3.707146598063774*^9}],

Cell[BoxData[
 RowBox[{"dQ1Q2", "/", 
  RowBox[{"(", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ak", "2"], "+", 
            SuperscriptBox["bk", "2"], "+", 
            SuperscriptBox["ck", "2"], "+", 
            SuperscriptBox["dk", "2"]}], ")"}], " ", "xh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["al", "2"], "+", 
            SuperscriptBox["bl", "2"], "+", 
            SuperscriptBox["cl", "2"], "+", 
            SuperscriptBox["dl", "2"]}], ")"}], " ", "xh2"}], "+", "xk", "-", 
         "xl", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bk", " ", "ck"}], "-", 
            RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bl", " ", "cl"}], "-", 
            RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "ak", " ", "ck"}], "+", 
            RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "al", " ", "cl"}], "+", 
            RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
        ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bk", " ", "ck"}], "+", 
            RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bl", " ", "cl"}], "+", 
            RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ak", "2"], "-", 
            SuperscriptBox["bk", "2"], "+", 
            SuperscriptBox["ck", "2"], "-", 
            SuperscriptBox["dk", "2"]}], ")"}], " ", "yh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["al", "2"], "-", 
            SuperscriptBox["bl", "2"], "+", 
            SuperscriptBox["cl", "2"], "-", 
            SuperscriptBox["dl", "2"]}], ")"}], " ", "yh2"}], "+", "yk", "-", 
         "yl", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
            RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
            RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
        ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "ak", " ", "ck"}], "+", 
            RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "al", " ", "cl"}], "+", 
            RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
            RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
            RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ak", "2"], "-", 
            SuperscriptBox["bk", "2"], "-", 
            SuperscriptBox["ck", "2"], "+", 
            SuperscriptBox["dk", "2"]}], ")"}], " ", "zh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["al", "2"], "-", 
            SuperscriptBox["bl", "2"], "-", 
            SuperscriptBox["cl", "2"], "+", 
            SuperscriptBox["dl", "2"]}], ")"}], " ", "zh2"}], "+", "zk", "-", 
         "zl"}], ")"}], "2"]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.619557578944563*^9, 3.70265421993542*^9, 
  3.707146275563727*^9, 3.707146553254394*^9, 3.707146629871875*^9, 
  3.707147965716708*^9, 3.70714814874981*^9, 3.7071486772921753`*^9, 
  3.707148895821151*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nonbondRBEnergyFn", " ", "=", " ", 
  RowBox[{"evdwEquation", " ", "+", " ", "eeelEquation"}]}]], "Input",
 CellChangeTimes->{{3.4027412120076227`*^9, 3.402741220906414*^9}, {
   3.4086620876703787`*^9, 3.408662102195766*^9}, 3.7071465980787697`*^9, 
   3.707148142545409*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dA", "/", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ak", "2"], "+", 
            SuperscriptBox["bk", "2"], "+", 
            SuperscriptBox["ck", "2"], "+", 
            SuperscriptBox["dk", "2"]}], ")"}], " ", "xh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["al", "2"], "+", 
            SuperscriptBox["bl", "2"], "+", 
            SuperscriptBox["cl", "2"], "+", 
            SuperscriptBox["dl", "2"]}], ")"}], " ", "xh2"}], "+", "xk", "-", 
         "xl", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bk", " ", "ck"}], "-", 
            RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bl", " ", "cl"}], "-", 
            RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "ak", " ", "ck"}], "+", 
            RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "al", " ", "cl"}], "+", 
            RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
        ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bk", " ", "ck"}], "+", 
            RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bl", " ", "cl"}], "+", 
            RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ak", "2"], "-", 
            SuperscriptBox["bk", "2"], "+", 
            SuperscriptBox["ck", "2"], "-", 
            SuperscriptBox["dk", "2"]}], ")"}], " ", "yh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["al", "2"], "-", 
            SuperscriptBox["bl", "2"], "+", 
            SuperscriptBox["cl", "2"], "-", 
            SuperscriptBox["dl", "2"]}], ")"}], " ", "yh2"}], "+", "yk", "-", 
         "yl", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
            RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
            RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
        ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "ak", " ", "ck"}], "+", 
            RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "al", " ", "cl"}], "+", 
            RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
            RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
            RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ak", "2"], "-", 
            SuperscriptBox["bk", "2"], "-", 
            SuperscriptBox["ck", "2"], "+", 
            SuperscriptBox["dk", "2"]}], ")"}], " ", "zh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["al", "2"], "-", 
            SuperscriptBox["bl", "2"], "-", 
            SuperscriptBox["cl", "2"], "+", 
            SuperscriptBox["dl", "2"]}], ")"}], " ", "zh2"}], "+", "zk", "-", 
         "zl"}], ")"}], "2"]}], ")"}], "6"]}], "-", 
  RowBox[{"dC", "/", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ak", "2"], "+", 
            SuperscriptBox["bk", "2"], "+", 
            SuperscriptBox["ck", "2"], "+", 
            SuperscriptBox["dk", "2"]}], ")"}], " ", "xh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["al", "2"], "+", 
            SuperscriptBox["bl", "2"], "+", 
            SuperscriptBox["cl", "2"], "+", 
            SuperscriptBox["dl", "2"]}], ")"}], " ", "xh2"}], "+", "xk", "-", 
         "xl", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bk", " ", "ck"}], "-", 
            RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bl", " ", "cl"}], "-", 
            RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "ak", " ", "ck"}], "+", 
            RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "al", " ", "cl"}], "+", 
            RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
        ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bk", " ", "ck"}], "+", 
            RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "bl", " ", "cl"}], "+", 
            RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ak", "2"], "-", 
            SuperscriptBox["bk", "2"], "+", 
            SuperscriptBox["ck", "2"], "-", 
            SuperscriptBox["dk", "2"]}], ")"}], " ", "yh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["al", "2"], "-", 
            SuperscriptBox["bl", "2"], "+", 
            SuperscriptBox["cl", "2"], "-", 
            SuperscriptBox["dl", "2"]}], ")"}], " ", "yh2"}], "+", "yk", "-", 
         "yl", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
            RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
            RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
        ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "ak", " ", "ck"}], "+", 
            RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "al", " ", "cl"}], "+", 
            RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
            RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
            RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ak", "2"], "-", 
            SuperscriptBox["bk", "2"], "-", 
            SuperscriptBox["ck", "2"], "+", 
            SuperscriptBox["dk", "2"]}], ")"}], " ", "zh1"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["al", "2"], "-", 
            SuperscriptBox["bl", "2"], "-", 
            SuperscriptBox["cl", "2"], "+", 
            SuperscriptBox["dl", "2"]}], ")"}], " ", "zh2"}], "+", "zk", "-", 
         "zl"}], ")"}], "2"]}], ")"}], "3"]}], "+", 
  RowBox[{"dQ1Q2", "/", 
   RowBox[{"(", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["ak", "2"], "+", 
             SuperscriptBox["bk", "2"], "+", 
             SuperscriptBox["ck", "2"], "+", 
             SuperscriptBox["dk", "2"]}], ")"}], " ", "xh1"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["al", "2"], "+", 
             SuperscriptBox["bl", "2"], "+", 
             SuperscriptBox["cl", "2"], "+", 
             SuperscriptBox["dl", "2"]}], ")"}], " ", "xh2"}], "+", "xk", "-",
           "xl", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "bk", " ", "ck"}], "-", 
             RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
          
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "bl", " ", "cl"}], "-", 
             RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
          
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "ak", " ", "ck"}], "+", 
             RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
          
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "al", " ", "cl"}], "+", 
             RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
         ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "bk", " ", "ck"}], "+", 
             RowBox[{"2", " ", "ak", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
          
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "bl", " ", "cl"}], "+", 
             RowBox[{"2", " ", "al", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
          
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["ak", "2"], "-", 
             SuperscriptBox["bk", "2"], "+", 
             SuperscriptBox["ck", "2"], "-", 
             SuperscriptBox["dk", "2"]}], ")"}], " ", "yh1"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["al", "2"], "-", 
             SuperscriptBox["bl", "2"], "+", 
             SuperscriptBox["cl", "2"], "-", 
             SuperscriptBox["dl", "2"]}], ")"}], " ", "yh2"}], "+", "yk", "-",
           "yl", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
             RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "zh1"}], "-", 
          
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
             RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "zh2"}]}], 
         ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "ak", " ", "ck"}], "+", 
             RowBox[{"2", " ", "bk", " ", "dk"}]}], ")"}], " ", "xh1"}], "-", 
          
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "al", " ", "cl"}], "+", 
             RowBox[{"2", " ", "bl", " ", "dl"}]}], ")"}], " ", "xh2"}], "+", 
          
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "ak", " ", "bk"}], "+", 
             RowBox[{"2", " ", "ck", " ", "dk"}]}], ")"}], " ", "yh1"}], "-", 
          
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "al", " ", "bl"}], "+", 
             RowBox[{"2", " ", "cl", " ", "dl"}]}], ")"}], " ", "yh2"}], "+", 
          
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["ak", "2"], "-", 
             SuperscriptBox["bk", "2"], "-", 
             SuperscriptBox["ck", "2"], "+", 
             SuperscriptBox["dk", "2"]}], ")"}], " ", "zh1"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["al", "2"], "-", 
             SuperscriptBox["bl", "2"], "-", 
             SuperscriptBox["cl", "2"], "+", 
             SuperscriptBox["dl", "2"]}], ")"}], " ", "zh2"}], "+", "zk", "-",
           "zl"}], ")"}], "2"]}], ")"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.619557579005105*^9, 3.7026542201230917`*^9, 3.707146280966736*^9, 
   3.707146553344512*^9, 3.707146629958291*^9, 3.707147965799642*^9, {
   3.707148144158057*^9, 3.707148148852717*^9}, 3.7071486773785133`*^9, 
   3.707148895890641*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonbondRBVarNames", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ak", ",", "a", ",", "I1", ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"bk", ",", "b", ",", "I1", ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"ck", ",", "c", ",", "I1", ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"dk", ",", "d", ",", "I1", ",", "3"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xk", ",", "x", ",", "I1", ",", "4"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"yk", ",", "y", ",", "I1", ",", "5"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"zk", ",", "z", ",", "I1", ",", "6"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"al", ",", "a", ",", "I2", ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"bl", ",", "b", ",", "I2", ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"cl", ",", "c", ",", "I2", ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"dl", ",", "d", ",", "I2", ",", "3"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xl", ",", "x", ",", "I2", ",", "4"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"yl", ",", "y", ",", "I2", ",", "5"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"zl", ",", "z", ",", "I2", ",", "6"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.702665250051643*^9, 3.7026653039744596`*^9}, {
   3.702665895595372*^9, 3.7026660256467524`*^9}, 3.70266610473518*^9, 
   3.7026678793568573`*^9, {3.707146623318904*^9, 3.7071466260237703`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nonbondRBSetupRules", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", 
    RowBox[{"CCode", "[", "\"\<NONBONDRB_SET_PARAMETER(I1);\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", 
    RowBox[{"CCode", "[", "\"\<NONBONDRB_SET_PARAMETER(I2);\>\"", "]"}]}], 
   "]"}], ";", 
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", 
    RowBox[{"CCode", "[", "\"\<NONBONDRB_SET_PARAMETER(dQ1Q2);\>\"", "]"}]}], 
   "]"}], ";", 
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", 
    RowBox[{"CCode", "[", "\"\<NONBONDRB_SET_PARAMETER(dA);\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", 
    RowBox[{"CCode", "[", "\"\<NONBONDRB_SET_PARAMETER(dC);\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.410177124188498*^9, 3.410177277864727*^9}, {
  3.4101777777433367`*^9, 3.410177805652183*^9}, {3.410177935376103*^9, 
  3.410177953524826*^9}, {3.4101782531152697`*^9, 3.410178268853266*^9}, {
  3.487025950138463*^9, 3.487025960189999*^9}, {3.487026052805409*^9, 
  3.487026058323876*^9}, {3.487032089923287*^9, 3.487032096633906*^9}, {
  3.707146598096616*^9, 3.707146611234211*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "nonbondRBVarNames", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"str", " ", "=", " ", 
      RowBox[{"\"\<NONBONDRB_SET_POSITION(\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"nonbondRBVarNames", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"nonbondRBVarNames", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"nonbondRBVarNames", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], "]"}], "<>", "\"\<);\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "str", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"nonbondRBSetupRules", ",", 
       RowBox[{"CCode", "[", "str", "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7026653697729197`*^9, 3.702665399017919*^9}, {
   3.702667865332658*^9, 3.70266787995826*^9}, {3.702889668272381*^9, 
   3.7028896775365877`*^9}, {3.707146392547522*^9, 3.7071463956023283`*^9}, 
   3.7071464796711693`*^9, {3.707146598118466*^9, 3.7071466112672*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<NONBONDRB_SET_POINT(xh1,pointA,getX());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<NONBONDRB_SET_POINT(yh1,pointA,getY());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<NONBONDRB_SET_POINT(zh1,pointA,getZ());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<NONBONDRB_SET_POINT(xh2,pointB,getX());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<NONBONDRB_SET_POINT(yh2,pointB,getY());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<NONBONDRB_SET_POINT(zh2,pointB,getZ());\>\"", "]"}]}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.702889717438642*^9, 3.702889744132216*^9}, {
   3.702889799017868*^9, 3.702889838930481*^9}, {3.7028898927791853`*^9, 
   3.702889938491302*^9}, {3.702894463739758*^9, 3.702894468534267*^9}, {
   3.7069249208588142`*^9, 3.706924965222961*^9}, {3.707146396065494*^9, 
   3.707146398196075*^9}, {3.7071464802256403`*^9, 3.707146482783434*^9}, {
   3.707146598133422*^9, 3.707146611273819*^9}, 3.707148868215211*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nonbondRBSetupRules", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.702665439946115*^9, 3.702665444877211*^9}, 
   3.702667880041853*^9, 3.7071463995801477`*^9, 3.707146598161034*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"CCode", "[", "\<\"NONBONDRB_SET_PARAMETER(I1);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"NONBONDRB_SET_PARAMETER(I2);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"NONBONDRB_SET_PARAMETER(dQ1Q2);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"NONBONDRB_SET_PARAMETER(dA);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"NONBONDRB_SET_PARAMETER(dC);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(ak,I1,0);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(bk,I1,1);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(ck,I1,2);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(dk,I1,3);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(xk,I1,4);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(yk,I1,5);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(zk,I1,6);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(al,I2,0);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(bl,I2,1);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(cl,I2,2);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(dl,I2,3);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(xl,I2,4);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(yl,I2,5);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(zl,I2,6);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POINT(xh1,pointA,getX());\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POINT(yh1,pointA,getY());\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POINT(zh1,pointA,getZ());\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POINT(xh2,pointB,getX());\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POINT(yh2,pointB,getY());\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POINT(zh2,pointB,getZ());\"\>", 
        "]"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7071466905955544`*^9, 3.707147966038775*^9, 
  3.7071481491042023`*^9, 3.707148677824615*^9, 3.707148896112453*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nonbondRBEnergyRules", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonbondRBOutputs", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBEnergyRules", ",", 
    RowBox[{"Assign", "[", 
     RowBox[{"Energy", ",", "nonbondRBEnergyFn"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBEnergyRules", ",", 
    RowBox[{"EnergyAccumulate", "[", 
     RowBox[{"\"\<NONBONDRB\>\"", ",", "Energy"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBOutputs", ",", "Energy"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7026655052521257`*^9, 3.7026655279230843`*^9}, 
   3.702665559899187*^9, 3.7026669034970493`*^9, {3.7026678801394444`*^9, 
   3.702667880549102*^9}, {3.702894354420628*^9, 3.702894355431469*^9}, {
   3.7071464007719297`*^9, 3.70714640422033*^9}, 3.707146496671811*^9, {
   3.707146598194975*^9, 3.707146611469555*^9}}],

Cell[CellGroupData[{

Cell["Append the Gradient rules", "Subtitle",
 CellChangeTimes->{{3.702665585411888*^9, 3.7026655955445013`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonbondRBForceRules", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7026663167169523`*^9, 3.702666324249215*^9}, 
   3.702667880730946*^9, 3.707146406790341*^9, 3.707146598289545*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AppendGradientAndForce", "[", 
   RowBox[{
   "\"\<NONBONDRB\>\"", ",", "nonbondRBEnergyRules", ",", "nonbondRBOutputs", 
    ",", "nonbondRBEnergyFn", ",", "nonbondRBVarNames"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.702665662227541*^9, 3.702665675042551*^9}, {
   3.702665719248609*^9, 3.702665779138154*^9}, {3.702667866125484*^9, 
   3.702667880997301*^9}, {3.707146407972838*^9, 3.7071464111507807`*^9}, 
   3.7071464976561737`*^9, {3.707146598313425*^9, 3.707146611470274*^9}}],

Cell[CellGroupData[{

Cell[BoxData["nonbondRBOutputs"], "Input",
 CellChangeTimes->{{3.702665807907201*^9, 3.7026658098882017`*^9}, 
   3.702667881086121*^9, 3.707146412139628*^9, 3.707146598330749*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Energy", ",", "fak", ",", "fbk", ",", "fck", ",", "fdk", ",", "fxk", ",", 
   "fyk", ",", "fzk", ",", "fal", ",", "fbl", ",", "fcl", ",", "fdl", ",", 
   "fxl", ",", "fyl", ",", "fzl"}], "}"}]], "Output",
 CellChangeTimes->{
  3.702666639803829*^9, 3.702667223135886*^9, 3.70266791275457*^9, 
   3.702889684791482*^9, 3.7028899663778057`*^9, 3.7028911847000313`*^9, 
   3.7028914164493027`*^9, 3.7028943752038813`*^9, {3.7028944569410877`*^9, 
   3.7028944826912527`*^9}, 3.707146554232813*^9, 3.707146633481021*^9, 
   3.707146716631585*^9, 3.707147967555634*^9, 3.707148151278924*^9, 
   3.7071486825196533`*^9, 3.707148897296343*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Collect terms and convert to C code", "Subsection",
 CellChangeTimes->{{3.401714376596349*^9, 3.401714390085981*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonbondRBAllRules", " ", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "nonbondRBSetupRules", ",", "\[IndentingNewLine]", 
     "nonbondRBEnergyRules"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.410177622861577*^9, 3.410177650326877*^9}, {
   3.410957497343137*^9, 3.410957525179797*^9}, 3.410958727655569*^9, {
   3.702666212925044*^9, 3.70266621369392*^9}, 3.702666368288919*^9, {
   3.702667881180406*^9, 3.702667881299728*^9}, {3.7071464132728*^9, 
   3.7071464145021143`*^9}, {3.707146598344638*^9, 3.70714659836265*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonbondRBRules", " ", "=", " ", 
   RowBox[{"Flatten", "[", "nonbondRBAllRules", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4109587363528433`*^9, 3.410958744314476*^9}, {
  3.702666213960264*^9, 3.7026662163072977`*^9}, {3.7026678814059973`*^9, 
  3.702667881458247*^9}, {3.707146415352501*^9, 3.707146415899765*^9}, {
  3.7071465983636627`*^9, 3.707146598378392*^9}}],

Cell[CellGroupData[{

Cell[BoxData["nonbondRBRules"], "Input",
 CellChangeTimes->{{3.411210896309596*^9, 3.411210898002816*^9}, 
   3.702666216845126*^9, 3.702667881574181*^9, 3.707146416619336*^9, 
   3.707146598379375*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{278., {2., 8.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "CCode", "[", "\<\"NONBONDRB_SET_PARAMETER(I1);\"\>", "]"}], ",", 
           RowBox[{
           "CCode", "[", "\<\"NONBONDRB_SET_PARAMETER(I2);\"\>", "]"}], ",", 
           RowBox[{
           "CCode", "[", "\<\"NONBONDRB_SET_PARAMETER(dQ1Q2);\"\>", "]"}], 
           ",", 
           RowBox[{"\[LeftSkeleton]", "64", "\[RightSkeleton]"}], ",", 
           RowBox[{
            RowBox[{"-", "gzl"}], "\[Rule]", "fzl"}], ",", 
           RowBox[{
           "CCode", "[", "\<\"NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzl );\"\>", 
            "]"}]}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{49., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 130, 29632520389989546958, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{52., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 130, 29632520389989546958, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{82., {2., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 130, 29632520389989546958, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{74., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[130]]], "Output",
 CellChangeTimes->{3.707146633662825*^9, 3.707146716844968*^9, 
  3.7071479677556973`*^9, 3.707148152613268*^9, 3.707148682858508*^9, 
  3.707148897519106*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonbondRBInput", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{
    "ak", ",", "bk", ",", "ck", ",", "dk", ",", "xk", ",", "yk", ",", "zk", 
     ",", " ", "al", ",", "bl", ",", "cl", ",", "dl", ",", "xl", ",", "yl", 
     ",", "zl"}], " ", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4055952302564087`*^9, 3.405595267347364*^9}, {
   3.408556502824588*^9, 3.4085565040993557`*^9}, {3.702666505031909*^9, 
   3.702666531507627*^9}, 3.702667881776746*^9, 3.707146417965774*^9, 
   3.707146598482942*^9, {3.7071467577878447`*^9, 3.7071467722715282`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBOutputs", ",", "nonbondRBDeviation"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.411152051138565*^9, 3.411152052756624*^9}, {
  3.702666532511979*^9, 3.7026665335664177`*^9}, {3.702667881858635*^9, 
  3.702667881917015*^9}, {3.707146419199607*^9, 3.707146420036663*^9}, {
  3.7071465984957933`*^9, 3.707146598512059*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Assemble the rules, the name of the energy term, the independant variable \
names, etc. into what passes for a structure in Mathematica (I call it a Pack)\
\>", "Subsection",
 CellChangeTimes->{{3.494843911918105*^9, 3.494844017248684*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonbondRBPack0", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Name", "\[Rule]", "\"\<NONBONDRB\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AdditionalCDeclares", "\[Rule]", "\"\<\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"DerivativeVariables", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{
       "ak", ",", "bk", ",", "ck", ",", "dk", ",", "xk", ",", "yk", ",", "zk",
         ",", " ", "al", ",", "bl", ",", "cl", ",", "dl", ",", "xl", ",", 
        "yl", ",", "zl"}], " ", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Rules", "\[Rule]", "nonbondRBRules"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Input", "\[Rule]", "nonbondRBInput"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Output", "\[Rule]", "nonbondRBOutputs"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.402876557641659*^9, 3.402876568596249*^9}, 
   3.402876852017213*^9, {3.40559527044873*^9, 3.405595281200487*^9}, {
   3.405607646467461*^9, 3.405607646567194*^9}, {3.4056349375263166`*^9, 
   3.405634963865233*^9}, {3.405635515351774*^9, 3.4056355177092333`*^9}, {
   3.407679881947057*^9, 3.4076798872149277`*^9}, {3.407763146777285*^9, 
   3.407763148181219*^9}, {3.40855652062083*^9, 3.408556522452385*^9}, {
   3.408564819262188*^9, 3.408564828757545*^9}, {3.409333145287333*^9, 
   3.40933315235924*^9}, {3.4101776186718473`*^9, 3.410177620470078*^9}, {
   3.411066451212819*^9, 3.411066462017312*^9}, {3.4110669305802307`*^9, 
   3.4110669315625343`*^9}, {3.411072159484359*^9, 3.411072166176531*^9}, {
   3.411072206442031*^9, 3.41107221385695*^9}, {3.411075684409318*^9, 
   3.4110757253172703`*^9}, {3.4110759780540733`*^9, 3.411075995800424*^9}, 
   3.4110793661329203`*^9, {3.702666534898035*^9, 3.702666566906396*^9}, 
   3.702666629707164*^9, {3.702667866896305*^9, 3.702667882200088*^9}, {
   3.707146421913271*^9, 3.707146423966762*^9}, 3.707146521366686*^9, {
   3.707146598513423*^9, 3.707146611509274*^9}, 3.7071467898539743`*^9, {
   3.70714690827442*^9, 3.707146910803536*^9}, {3.7071487417012367`*^9, 
   3.707148749346298*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"writeOutputVariablesForDebugging", "[", "nonbondRBPack0", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.408752301954282*^9, 3.408752370230307*^9}, {
   3.408821026441674*^9, 3.408821031596847*^9}, 3.4110670621890917`*^9, 
   3.7026665401661*^9, 3.702667882303001*^9, 3.707146424991373*^9, 
   3.707146598531271*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing finite difference debug code to: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBONDRB_debugFiniteDifference.cc\"\>"}],
  SequenceForm[
  "Writing finite difference debug code to: ", 
   "_NONBONDRB_debugFiniteDifference.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707146554833856*^9, 3.707146633962528*^9, 
  3.7071467171447773`*^9, 3.70714796795452*^9, 3.7071481528408737`*^9, 
  3.707148683052206*^9, 3.707148897711896*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing debug variable declares to: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBONDRB_debugEvalDeclares.cc\"\>"}],
  SequenceForm[
  "Writing debug variable declares to: ", "_NONBONDRB_debugEvalDeclares.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707146554833856*^9, 3.707146633962528*^9, 
  3.7071467171447773`*^9, 3.70714796795452*^9, 3.7071481528408737`*^9, 
  3.707148683052206*^9, 3.7071488977136183`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing xml output debug code to: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBONDRB_debugEvalSerialize.cc\"\>"}],
  SequenceForm[
  "Writing xml output debug code to: ", "_NONBONDRB_debugEvalSerialize.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707146554833856*^9, 3.707146633962528*^9, 
  3.7071467171447773`*^9, 3.70714796795452*^9, 3.7071481528408737`*^9, 
  3.707148683052206*^9, 3.7071488977152557`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing set variables debug code to: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBONDRB_debugEvalSet.cc\"\>"}],
  SequenceForm[
  "Writing set variables debug code to: ", "_NONBONDRB_debugEvalSet.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707146554833856*^9, 3.707146633962528*^9, 
  3.7071467171447773`*^9, 3.70714796795452*^9, 3.7071481528408737`*^9, 
  3.707148683052206*^9, 3.7071488977167597`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Put the pedal to the metal and generate \"C\" code.", "Subsection",
 CellChangeTimes->{{3.494844094666773*^9, 3.494844119787055*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"nonbondRBPack", " ", "=", " ", 
   RowBox[{"packOptimize", "[", "nonbondRBPack0", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.405593154617752*^9, 3.405593181273087*^9}, {
   3.405594926006316*^9, 3.4055949283713083`*^9}, {3.40560847035536*^9, 
   3.405608470488098*^9}, {3.407559202182371*^9, 3.407559202626436*^9}, {
   3.408564854380271*^9, 3.408564873627013*^9}, 3.41106665985861*^9, {
   3.411072816696417*^9, 3.4110728451363277`*^9}, {3.411073752072069*^9, 
   3.4110737531085377`*^9}, {3.702666542649117*^9, 3.702666543244851*^9}, {
   3.702667882654457*^9, 3.702667882764448*^9}, {3.7071464283508587`*^9, 
   3.707146428815312*^9}, {3.707146598545204*^9, 3.707146598562158*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.707148721971036*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707148721973386*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.707148721975644*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707148722862508*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.707148722864479*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707148722866301*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.707148722868168*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707148723068412*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tx440 -> tx433, tx289 -> tx436, \
tx292 -> tx437}\"\>"], "Print",
 CellChangeTimes->{3.707148723070277*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707148723072081*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tx440 -> tx433\\n\\ntx289 \
-> tx436\\n\\ntx292 -> tx437\"\>"], "Print",
 CellChangeTimes->{3.707148723074074*^9}],

Cell[BoxData["\<\"After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(I2);]\\\
n\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(\
dA);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(ak,I1,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bk,I1,1);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(ck,I1,2);]\\n\\nCCode[NONBONDRB_SET_POSITION(dk,I1,3);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(xk,I1,4);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(yk,I1,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zk,I1,6);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(al,I2,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bl,I2,1);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(cl,I2,2);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(dl,I2,3);]\\n\\nCCode[NONBONDRB_SET_POSITION(xl,I2,4);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(yl,I2,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zl,I2,6);]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ());]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh2,pointB,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh2,pointB,getZ());]\
\\n\\npower2[bk] -> tx216\\n\\npower2[bl] -> tx217\\n\\npower2[ck] -> \
tx218\\n\\npower2[cl] -> tx219\\n\\npower2[dk] -> tx220\\n\\npower2[dl] -> \
tx221\\n\\npower2[ak] -> tx222\\n\\npower2[al] -> tx223\\n\\n-2. ak bk -> \
tx224\\n\\n-2. al bl -> tx225\\n\\n-2. ak ck -> tx226\\n\\n2. ak ck -> \
tx227\\n\\n2. bk ck -> tx228\\n\\n-2. al cl -> tx229\\n\\n2. al cl -> \
tx230\\n\\n2. bl cl -> tx231\\n\\n-2. ak dk -> tx232\\n\\n2. ak dk -> \
tx233\\n\\n2. bk dk -> tx234\\n\\n2. ck dk -> tx235\\n\\n-2. al dl -> \
tx236\\n\\n2. al dl -> tx237\\n\\n2. bl dl -> tx238\\n\\n2. cl dl -> tx239\\n\
\\n-tx216 -> tx240\\n\\n-tx217 -> tx241\\n\\n-tx218 -> tx242\\n\\n-tx219 -> \
tx243\\n\\n-tx220 -> tx244\\n\\n-tx221 -> tx245\\n\\ntx216 + tx218 + tx220 + \
tx222 -> tx246\\n\\ntx217 + tx219 + tx221 + tx223 -> tx247\\n\\ntx228 + tx232 \
-> tx248\\n\\ntx228 + tx233 -> tx249\\n\\ntx226 + tx234 -> tx250\\n\\ntx227 + \
tx234 -> tx251\\n\\ntx224 + tx235 -> tx252\\n\\ntx231 + tx236 -> \
tx253\\n\\ntx231 + tx237 -> tx254\\n\\ntx229 + tx238 -> tx255\\n\\ntx230 + \
tx238 -> tx256\\n\\ntx225 + tx239 -> tx257\\n\\ntx220 + tx222 + tx240 + tx242 \
-> tx258\\n\\ntx221 + tx223 + tx241 + tx243 -> tx259\\n\\ntx218 + tx222 + \
tx240 + tx244 -> tx260\\n\\ntx219 + tx223 + tx241 + tx245 -> tx261\\n\\ntx246 \
xh1 -> tx262\\n\\ntx249 xh1 -> tx263\\n\\ntx250 xh1 -> tx264\\n\\n-(tx247 \
xh2) -> tx265\\n\\n-(tx254 xh2) -> tx266\\n\\n-(tx255 xh2) -> tx267\\n\\n-xl \
-> tx268\\n\\ntx248 yh1 -> tx269\\n\\ntx252 yh1 -> tx270\\n\\ntx260 yh1 -> \
tx271\\n\\n-(tx253 yh2) -> tx272\\n\\n-(tx257 yh2) -> tx273\\n\\n-(tx261 yh2) \
-> tx274\\n\\n-yl -> tx275\\n\\ntx251 zh1 -> tx276\\n\\ntx252 zh1 -> tx277\\n\
\\ntx258 zh1 -> tx278\\n\\n-(tx256 zh2) -> tx279\\n\\n-(tx257 zh2) -> \
tx280\\n\\n-(tx259 zh2) -> tx281\\n\\n-zl -> tx282\\n\\ntx262 + tx265 + tx268 \
+ tx269 + tx272 + tx276 + tx279 + xk -> tx283\\n\\ntx263 + tx266 + tx271 + \
tx274 + tx275 + tx277 + tx280 + yk -> tx284\\n\\ntx264 + tx267 + tx270 + \
tx273 + tx278 + tx281 + tx282 + zk -> tx285\\n\\npower2[tx283] -> \
tx286\\n\\npower2[tx284] -> tx287\\n\\npower2[tx285] -> tx288\\n\\ntx286 + \
tx287 + tx288 -> tx289\\n\\npowern2[tx289] -> tx439\\n\\nreciprocal[tx289] -> \
tx440\\n\\ntx439 tx440 -> tx431\\n\\npower2[tx431] -> \
tx290\\n\\npower2[tx440] -> tx432\\n\\ntx440 -> tx433\\n\\ntx432 tx433 -> \
tx291\\n\\nmysqrt[tx289] -> tx434\\n\\nreciprocal[tx434] -> tx292\\n\\ndA \
tx290 -> tx293\\n\\n-(dC tx291) -> tx294\\n\\ndQ1Q2 tx292 -> tx295\\n\\ntx293 \
+ tx294 + tx295 -> Energy\\n\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\\n\
\\n2. ak xh1 -> tx296\\n\\n-2. ck xh1 -> tx297\\n\\n2. dk xh1 -> \
tx298\\n\\n2. ak yh1 -> tx299\\n\\n-2. bk yh1 -> tx300\\n\\n-2. dk yh1 -> \
tx301\\n\\n2. ak zh1 -> tx302\\n\\n-2. bk zh1 -> tx303\\n\\n2. ck zh1 -> \
tx304\\n\\ntx297 + tx300 + tx302 -> tx305\\n\\ntx298 + tx299 + tx303 -> tx306\
\\n\\ntx296 + tx301 + tx304 -> tx307\\n\\n2. tx285 tx305 -> tx308\\n\\n2. \
tx284 tx306 -> tx309\\n\\n2. tx283 tx307 -> tx310\\n\\npower2[tx439] -> tx435\
\\n\\ntx431 tx435 -> tx311\\n\\npower2[tx432] -> tx312\\n\\ntx289 -> tx436\\n\
\\ntx292 -> tx437\\n\\nreciprocal[tx436] -> tx438\\n\\ntx437 tx438 -> \
tx313\\n\\ntx308 + tx309 + tx310 -> tx314\\n\\n-6. dA tx311 tx314 -> tx315\\n\
\\n3 dC tx312 tx314 -> tx316\\n\\n-0.5 dQ1Q2 tx313 tx314 -> tx317\\n\\ntx315 \
+ tx316 + tx317 -> gak\\n\\n-gak -> \
fak\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 0, fak );]\\n\\n2. bk xh1 -> \
tx318\\n\\n2. ck xh1 -> tx319\\n\\n-2. ak yh1 -> tx320\\n\\n2. ck yh1 -> \
tx321\\n\\n-2. ak zh1 -> tx322\\n\\n2. dk zh1 -> tx323\\n\\ntx298 + tx303 + \
tx320 -> tx324\\n\\ntx300 + tx319 + tx322 -> tx325\\n\\ntx318 + tx321 + tx323 \
-> tx326\\n\\n2. tx285 tx324 -> tx327\\n\\n2. tx284 tx325 -> tx328\\n\\n2. \
tx283 tx326 -> tx329\\n\\ntx327 + tx328 + tx329 -> tx330\\n\\n-6. dA tx311 \
tx330 -> tx331\\n\\n3 dC tx312 tx330 -> tx332\\n\\n-0.5 dQ1Q2 tx313 tx330 -> \
tx333\\n\\ntx331 + tx332 + tx333 -> gbk\\n\\n-gbk -> \
fbk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 1, fbk );]\\n\\n-2. ak xh1 -> \
tx334\\n\\n2. bk yh1 -> tx335\\n\\n2. dk yh1 -> tx336\\n\\n-2. ck zh1 -> \
tx337\\n\\ntx302 + tx319 + tx335 -> tx338\\n\\ntx334 + tx336 + tx337 -> tx339\
\\n\\n2. tx284 tx326 -> tx340\\n\\n2. tx283 tx338 -> tx341\\n\\n2. tx285 \
tx339 -> tx342\\n\\ntx340 + tx341 + tx342 -> tx343\\n\\n-6. dA tx311 tx343 -> \
tx344\\n\\n3 dC tx312 tx343 -> tx345\\n\\n-0.5 dQ1Q2 tx313 tx343 -> \
tx346\\n\\ntx344 + tx345 + tx346 -> gck\\n\\n-gck -> \
fck\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 2, fck );]\\n\\n2. bk zh1 -> \
tx347\\n\\ntx298 + tx320 + tx347 -> tx348\\n\\n2. tx284 tx307 -> \
tx349\\n\\n2. tx285 tx326 -> tx350\\n\\n2. tx283 tx348 -> tx351\\n\\ntx349 + \
tx350 + tx351 -> tx352\\n\\n-6. dA tx311 tx352 -> tx353\\n\\n3 dC tx312 tx352 \
-> tx354\\n\\n-0.5 dQ1Q2 tx313 tx352 -> tx355\\n\\ntx353 + tx354 + tx355 -> \
gdk\\n\\n-gdk -> fdk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 3, fdk \
);]\\n\\n-12. dA tx283 tx311 -> tx356\\n\\n6. dC tx283 tx312 -> \
tx357\\n\\n-(dQ1Q2 tx283 tx313) -> tx358\\n\\ntx356 + tx357 + tx358 -> gxk\\n\
\\n-gxk -> fxk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 4, fxk );]\\n\\n-12. \
dA tx284 tx311 -> tx359\\n\\n6. dC tx284 tx312 -> tx360\\n\\n-(dQ1Q2 tx284 \
tx313) -> tx361\\n\\ntx359 + tx360 + tx361 -> gyk\\n\\n-gyk -> \
fyk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 5, fyk );]\\n\\n-12. dA tx285 \
tx311 -> tx362\\n\\n6. dC tx285 tx312 -> tx363\\n\\n-(dQ1Q2 tx285 tx313) -> \
tx364\\n\\ntx362 + tx363 + tx364 -> gzk\\n\\n-gzk -> \
fzk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 6, fzk );]\\n\\n-2. al xh2 -> \
tx365\\n\\n2. cl xh2 -> tx366\\n\\n-2. dl xh2 -> tx367\\n\\n-2. al yh2 -> \
tx368\\n\\n2. bl yh2 -> tx369\\n\\n2. dl yh2 -> tx370\\n\\n-2. al zh2 -> \
tx371\\n\\n2. bl zh2 -> tx372\\n\\n-2. cl zh2 -> tx373\\n\\ntx366 + tx369 + \
tx371 -> tx374\\n\\ntx367 + tx368 + tx372 -> tx375\\n\\ntx365 + tx370 + tx373 \
-> tx376\\n\\n2. tx285 tx374 -> tx377\\n\\n2. tx284 tx375 -> tx378\\n\\n2. \
tx283 tx376 -> tx379\\n\\ntx377 + tx378 + tx379 -> tx380\\n\\n-6. dA tx311 \
tx380 -> tx381\\n\\n3 dC tx312 tx380 -> tx382\\n\\n-0.5 dQ1Q2 tx313 tx380 -> \
tx383\\n\\ntx381 + tx382 + tx383 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\n-2. bl xh2 -> \
tx384\\n\\n-2. cl xh2 -> tx385\\n\\n2. al yh2 -> tx386\\n\\n-2. cl yh2 -> \
tx387\\n\\n2. al zh2 -> tx388\\n\\n-2. dl zh2 -> tx389\\n\\ntx367 + tx372 + \
tx386 -> tx390\\n\\ntx369 + tx385 + tx388 -> tx391\\n\\ntx384 + tx387 + tx389 \
-> tx392\\n\\n2. tx285 tx390 -> tx393\\n\\n2. tx284 tx391 -> tx394\\n\\n2. \
tx283 tx392 -> tx395\\n\\ntx393 + tx394 + tx395 -> tx396\\n\\n-6. dA tx311 \
tx396 -> tx397\\n\\n3 dC tx312 tx396 -> tx398\\n\\n-0.5 dQ1Q2 tx313 tx396 -> \
tx399\\n\\ntx397 + tx398 + tx399 -> gbl\\n\\n-gbl -> \
fbl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 1, fbl );]\\n\\n2. al xh2 -> \
tx400\\n\\n-2. bl yh2 -> tx401\\n\\n-2. dl yh2 -> tx402\\n\\n2. cl zh2 -> \
tx403\\n\\ntx371 + tx385 + tx401 -> tx404\\n\\ntx400 + tx402 + tx403 -> tx405\
\\n\\n2. tx284 tx392 -> tx406\\n\\n2. tx283 tx404 -> tx407\\n\\n2. tx285 \
tx405 -> tx408\\n\\ntx406 + tx407 + tx408 -> tx409\\n\\n-6. dA tx311 tx409 -> \
tx410\\n\\n3 dC tx312 tx409 -> tx411\\n\\n-0.5 dQ1Q2 tx313 tx409 -> \
tx412\\n\\ntx410 + tx411 + tx412 -> gcl\\n\\n-gcl -> \
fcl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 2, fcl );]\\n\\n-2. bl zh2 -> \
tx413\\n\\ntx367 + tx386 + tx413 -> tx414\\n\\n2. tx284 tx376 -> \
tx415\\n\\n2. tx285 tx392 -> tx416\\n\\n2. tx283 tx414 -> tx417\\n\\ntx415 + \
tx416 + tx417 -> tx418\\n\\n-6. dA tx311 tx418 -> tx419\\n\\n3 dC tx312 tx418 \
-> tx420\\n\\n-0.5 dQ1Q2 tx313 tx418 -> tx421\\n\\ntx419 + tx420 + tx421 -> \
gdl\\n\\n-gdl -> fdl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 3, fdl \
);]\\n\\n12. dA tx283 tx311 -> tx422\\n\\n-6. dC tx283 tx312 -> \
tx423\\n\\ndQ1Q2 tx283 tx313 -> tx424\\n\\ntx422 + tx423 + tx424 -> \
gxl\\n\\n-gxl -> fxl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\n\\n12. dA tx284 tx311 -> tx425\\n\\n-6. dC tx284 tx312 -> \
tx426\\n\\ndQ1Q2 tx284 tx313 -> tx427\\n\\ntx425 + tx426 + tx427 -> \
gyl\\n\\n-gyl -> fyl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 5, fyl \
);]\\n\\n12. dA tx285 tx311 -> tx428\\n\\n-6. dC tx285 tx312 -> \
tx429\\n\\ndQ1Q2 tx285 tx313 -> tx430\\n\\ntx428 + tx429 + tx430 -> \
gzl\\n\\n-gzl -> fzl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzl \
);]\"\>"], "Print",
 CellChangeTimes->{3.707148723076195*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tx440 -> tx433, tx289 -> tx436, \
tx292 -> tx437}\"\>"], "Print",
 CellChangeTimes->{3.707148725102316*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707148725104978*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tx440 -> tx433\\n\\ntx289 \
-> tx436\\n\\ntx292 -> tx437\"\>"], "Print",
 CellChangeTimes->{3.707148725107293*^9}],

Cell[BoxData["\<\"After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(I2);]\\\
n\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(\
dA);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(ak,I1,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bk,I1,1);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(ck,I1,2);]\\n\\nCCode[NONBONDRB_SET_POSITION(dk,I1,3);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(xk,I1,4);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(yk,I1,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zk,I1,6);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(al,I2,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bl,I2,1);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(cl,I2,2);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(dl,I2,3);]\\n\\nCCode[NONBONDRB_SET_POSITION(xl,I2,4);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(yl,I2,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zl,I2,6);]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ());]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh2,pointB,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh2,pointB,getZ());]\
\\n\\npower2[bk] -> tx216\\n\\npower2[bl] -> tx217\\n\\npower2[ck] -> \
tx218\\n\\npower2[cl] -> tx219\\n\\npower2[dk] -> tx220\\n\\npower2[dl] -> \
tx221\\n\\npower2[ak] -> tx222\\n\\npower2[al] -> tx223\\n\\n-2. ak -> tzz452\
\\n\\nbk tzz452 -> tx224\\n\\n-2. al -> tzz451\\n\\nbl tzz451 -> \
tx225\\n\\nck tzz452 -> tx226\\n\\n2. ck -> tzz454\\n\\nak tzz454 -> tx227\\n\
\\nbk tzz454 -> tx228\\n\\ncl tzz451 -> tx229\\n\\n2. cl -> tzz453\\n\\nal \
tzz453 -> tx230\\n\\nbl tzz453 -> tx231\\n\\ndk tzz452 -> tx232\\n\\n2. dk -> \
tzz450\\n\\nak tzz450 -> tx233\\n\\nbk tzz450 -> tx234\\n\\nck tzz450 -> \
tx235\\n\\ndl tzz451 -> tx236\\n\\n2. al -> tzz455\\n\\ndl tzz455 -> tx237\\n\
\\n2. bl -> tzz458\\n\\ndl tzz458 -> tx238\\n\\ndl tzz453 -> \
tx239\\n\\n-tx216 -> tx240\\n\\n-tx217 -> tx241\\n\\n-tx218 -> \
tx242\\n\\n-tx219 -> tx243\\n\\n-tx220 -> tx244\\n\\n-tx221 -> \
tx245\\n\\ntx216 + tx218 + tx220 + tx222 -> tx246\\n\\ntx217 + tx219 + tx221 \
+ tx223 -> tx247\\n\\ntx228 + tx232 -> tx248\\n\\ntx228 + tx233 -> \
tx249\\n\\ntx226 + tx234 -> tx250\\n\\ntx227 + tx234 -> tx251\\n\\ntx224 + \
tx235 -> tx252\\n\\ntx231 + tx236 -> tx253\\n\\ntx231 + tx237 -> \
tx254\\n\\ntx229 + tx238 -> tx255\\n\\ntx230 + tx238 -> tx256\\n\\ntx225 + \
tx239 -> tx257\\n\\ntx220 + tx222 + tx240 + tx242 -> tx258\\n\\ntx221 + tx223 \
+ tx241 + tx243 -> tx259\\n\\ntx218 + tx222 + tx240 + tx244 -> \
tx260\\n\\ntx219 + tx223 + tx241 + tx245 -> tx261\\n\\ntx246 xh1 -> \
tx262\\n\\ntx249 xh1 -> tx263\\n\\ntx250 xh1 -> tx264\\n\\n-xh2 -> \
tzz463\\n\\ntx247 tzz463 -> tx265\\n\\ntx254 tzz463 -> tx266\\n\\ntx255 \
tzz463 -> tx267\\n\\n-xl -> tx268\\n\\ntx248 yh1 -> tx269\\n\\ntx252 yh1 -> \
tx270\\n\\ntx260 yh1 -> tx271\\n\\n-yh2 -> tzz462\\n\\ntx253 tzz462 -> \
tx272\\n\\ntx257 tzz462 -> tx273\\n\\ntx261 tzz462 -> tx274\\n\\n-yl -> tx275\
\\n\\ntx251 zh1 -> tx276\\n\\ntx252 zh1 -> tx277\\n\\ntx258 zh1 -> \
tx278\\n\\n-zh2 -> tzz461\\n\\ntx256 tzz461 -> tx279\\n\\ntx257 tzz461 -> \
tx280\\n\\ntx259 tzz461 -> tx281\\n\\n-zl -> tx282\\n\\ntx262 + tx265 + tx268 \
+ tx269 + tx272 + tx276 + tx279 + xk -> tx283\\n\\ntx263 + tx266 + tx271 + \
tx274 + tx275 + tx277 + tx280 + yk -> tx284\\n\\ntx264 + tx267 + tx270 + \
tx273 + tx278 + tx281 + tx282 + zk -> tx285\\n\\npower2[tx283] -> \
tx286\\n\\npower2[tx284] -> tx287\\n\\npower2[tx285] -> tx288\\n\\ntx286 + \
tx287 + tx288 -> tx289\\n\\npower2[reciprocal[tx289]] -> \
tx439\\n\\nreciprocal[tx289] -> tx440\\n\\ntx439 tx440 -> \
tx431\\n\\npower2[tx431] -> tx290\\n\\npower2[tx440] -> tx432\\n\\ntx440 -> \
tx433\\n\\ntx432 tx433 -> tx291\\n\\nmysqrt[tx289] -> \
tx434\\n\\nreciprocal[tx434] -> tx292\\n\\ndA tx290 -> tx293\\n\\n-(dC tx291) \
-> tx294\\n\\ndQ1Q2 tx292 -> tx295\\n\\ntx293 + tx294 + tx295 -> \
Energy\\n\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\\n\\n2. ak -> \
tzz460\\n\\ntzz460 xh1 -> tx296\\n\\n-2. ck xh1 -> tx297\\n\\ntzz450 xh1 -> \
tx298\\n\\ntzz460 yh1 -> tx299\\n\\n-2. yh1 -> tzz471\\n\\nbk tzz471 -> tx300\
\\n\\ndk tzz471 -> tx301\\n\\ntzz460 zh1 -> tx302\\n\\n-2. zh1 -> \
tzz470\\n\\nbk tzz470 -> tx303\\n\\ntzz454 zh1 -> tx304\\n\\ntx297 + tx300 + \
tx302 -> tx305\\n\\ntx298 + tx299 + tx303 -> tx306\\n\\ntx296 + tx301 + tx304 \
-> tx307\\n\\n2. tx285 -> tzz445\\n\\ntx305 tzz445 -> tx308\\n\\n2. tx284 -> \
tzz446\\n\\ntx306 tzz446 -> tx309\\n\\n2. tx283 -> tzz447\\n\\ntx307 tzz447 \
-> tx310\\n\\npower2[tx439] -> tx435\\n\\ntx431 tx435 -> \
tx311\\n\\npower2[tx432] -> tx312\\n\\ntx289 -> tx436\\n\\ntx292 -> \
tx437\\n\\nreciprocal[tx436] -> tx438\\n\\ntx437 tx438 -> tx313\\n\\ntx308 + \
tx309 + tx310 -> tx314\\n\\ndA tx311 -> tzz443\\n\\n-6. tzz443 -> \
tzz449\\n\\ntx314 tzz449 -> tx315\\n\\ndC tx312 -> tzz442\\n\\n3 tzz442 -> \
tzz444\\n\\ntx314 tzz444 -> tx316\\n\\ndQ1Q2 tx313 -> tzz441\\n\\n-0.5 tzz441 \
-> tzz448\\n\\ntx314 tzz448 -> tx317\\n\\ntx315 + tx316 + tx317 -> \
gak\\n\\n-gak -> fak\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 0, fak \
);]\\n\\n2. bk -> tzz459\\n\\ntzz459 xh1 -> tx318\\n\\ntzz454 xh1 -> tx319\\n\
\\ntzz452 yh1 -> tx320\\n\\ntzz454 yh1 -> tx321\\n\\ntzz452 zh1 -> \
tx322\\n\\ntzz450 zh1 -> tx323\\n\\ntx298 + tx303 + tx320 -> tx324\\n\\ntx300 \
+ tx319 + tx322 -> tx325\\n\\ntx318 + tx321 + tx323 -> tx326\\n\\ntx324 \
tzz445 -> tx327\\n\\ntx325 tzz446 -> tx328\\n\\ntx326 tzz447 -> \
tx329\\n\\ntx327 + tx328 + tx329 -> tx330\\n\\ntx330 tzz449 -> \
tx331\\n\\ntx330 tzz444 -> tx332\\n\\ntx330 tzz448 -> tx333\\n\\ntx331 + \
tx332 + tx333 -> gbk\\n\\n-gbk -> \
fbk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 1, fbk );]\\n\\ntzz452 xh1 -> \
tx334\\n\\ntzz459 yh1 -> tx335\\n\\ntzz450 yh1 -> tx336\\n\\nck tzz470 -> \
tx337\\n\\ntx302 + tx319 + tx335 -> tx338\\n\\ntx334 + tx336 + tx337 -> tx339\
\\n\\ntx326 tzz446 -> tx340\\n\\ntx338 tzz447 -> tx341\\n\\ntx339 tzz445 -> \
tx342\\n\\ntx340 + tx341 + tx342 -> tx343\\n\\ntx343 tzz449 -> \
tx344\\n\\ntx343 tzz444 -> tx345\\n\\ntx343 tzz448 -> tx346\\n\\ntx344 + \
tx345 + tx346 -> gck\\n\\n-gck -> \
fck\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 2, fck );]\\n\\ntzz459 zh1 -> \
tx347\\n\\ntx298 + tx320 + tx347 -> tx348\\n\\ntx307 tzz446 -> \
tx349\\n\\ntx326 tzz445 -> tx350\\n\\ntx348 tzz447 -> tx351\\n\\ntx349 + \
tx350 + tx351 -> tx352\\n\\ntx352 tzz449 -> tx353\\n\\ntx352 tzz444 -> \
tx354\\n\\ntx352 tzz448 -> tx355\\n\\ntx353 + tx354 + tx355 -> gdk\\n\\n-gdk \
-> fdk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 3, fdk );]\\n\\n-12. tzz443 \
-> tzz469\\n\\ntx283 tzz469 -> tx356\\n\\n6. tzz442 -> tzz457\\n\\ntx283 \
tzz457 -> tx357\\n\\n-tzz441 -> tzz464\\n\\ntx283 tzz464 -> tx358\\n\\ntx356 \
+ tx357 + tx358 -> gxk\\n\\n-gxk -> \
fxk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 4, fxk );]\\n\\ntx284 tzz469 -> \
tx359\\n\\ntx284 tzz457 -> tx360\\n\\ntx284 tzz464 -> tx361\\n\\ntx359 + \
tx360 + tx361 -> gyk\\n\\n-gyk -> \
fyk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 5, fyk );]\\n\\ntx285 tzz469 -> \
tx362\\n\\ntx285 tzz457 -> tx363\\n\\ntx285 tzz464 -> tx364\\n\\ntx362 + \
tx363 + tx364 -> gzk\\n\\n-gzk -> \
fzk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 6, fzk );]\\n\\ntzz451 xh2 -> \
tx365\\n\\ntzz453 xh2 -> tx366\\n\\n-2. xh2 -> tzz467\\n\\ndl tzz467 -> tx367\
\\n\\ntzz451 yh2 -> tx368\\n\\ntzz458 yh2 -> tx369\\n\\n2. dl yh2 -> tx370\\n\
\\ntzz451 zh2 -> tx371\\n\\ntzz458 zh2 -> tx372\\n\\n-2. zh2 -> \
tzz465\\n\\ncl tzz465 -> tx373\\n\\ntx366 + tx369 + tx371 -> tx374\\n\\ntx367 \
+ tx368 + tx372 -> tx375\\n\\ntx365 + tx370 + tx373 -> tx376\\n\\ntx374 \
tzz445 -> tx377\\n\\ntx375 tzz446 -> tx378\\n\\ntx376 tzz447 -> \
tx379\\n\\ntx377 + tx378 + tx379 -> tx380\\n\\ntx380 tzz449 -> \
tx381\\n\\ntx380 tzz444 -> tx382\\n\\ntx380 tzz448 -> tx383\\n\\ntx381 + \
tx382 + tx383 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\nbl tzz467 -> \
tx384\\n\\ncl tzz467 -> tx385\\n\\ntzz455 yh2 -> tx386\\n\\n-2. yh2 -> tzz466\
\\n\\ncl tzz466 -> tx387\\n\\ntzz455 zh2 -> tx388\\n\\ndl tzz465 -> \
tx389\\n\\ntx367 + tx372 + tx386 -> tx390\\n\\ntx369 + tx385 + tx388 -> tx391\
\\n\\ntx384 + tx387 + tx389 -> tx392\\n\\ntx390 tzz445 -> tx393\\n\\ntx391 \
tzz446 -> tx394\\n\\ntx392 tzz447 -> tx395\\n\\ntx393 + tx394 + tx395 -> \
tx396\\n\\ntx396 tzz449 -> tx397\\n\\ntx396 tzz444 -> tx398\\n\\ntx396 tzz448 \
-> tx399\\n\\ntx397 + tx398 + tx399 -> gbl\\n\\n-gbl -> \
fbl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 1, fbl );]\\n\\ntzz455 xh2 -> \
tx400\\n\\nbl tzz466 -> tx401\\n\\ndl tzz466 -> tx402\\n\\ntzz453 zh2 -> \
tx403\\n\\ntx371 + tx385 + tx401 -> tx404\\n\\ntx400 + tx402 + tx403 -> tx405\
\\n\\ntx392 tzz446 -> tx406\\n\\ntx404 tzz447 -> tx407\\n\\ntx405 tzz445 -> \
tx408\\n\\ntx406 + tx407 + tx408 -> tx409\\n\\ntx409 tzz449 -> \
tx410\\n\\ntx409 tzz444 -> tx411\\n\\ntx409 tzz448 -> tx412\\n\\ntx410 + \
tx411 + tx412 -> gcl\\n\\n-gcl -> \
fcl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 2, fcl );]\\n\\nbl tzz465 -> \
tx413\\n\\ntx367 + tx386 + tx413 -> tx414\\n\\ntx376 tzz446 -> \
tx415\\n\\ntx392 tzz445 -> tx416\\n\\ntx414 tzz447 -> tx417\\n\\ntx415 + \
tx416 + tx417 -> tx418\\n\\ntx418 tzz449 -> tx419\\n\\ntx418 tzz444 -> \
tx420\\n\\ntx418 tzz448 -> tx421\\n\\ntx419 + tx420 + tx421 -> gdl\\n\\n-gdl \
-> fdl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 3, fdl );]\\n\\n12. tzz443 \
-> tzz456\\n\\ntx283 tzz456 -> tx422\\n\\n-6. tzz442 -> tzz468\\n\\ntx283 \
tzz468 -> tx423\\n\\ntx283 tzz441 -> tx424\\n\\ntx422 + tx423 + tx424 -> \
gxl\\n\\n-gxl -> fxl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\n\\ntx284 tzz456 -> tx425\\n\\ntx284 tzz468 -> tx426\\n\\ntx284 tzz441 \
-> tx427\\n\\ntx425 + tx426 + tx427 -> gyl\\n\\n-gyl -> \
fyl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 5, fyl );]\\n\\ntx285 tzz456 -> \
tx428\\n\\ntx285 tzz468 -> tx429\\n\\ntx285 tzz441 -> tx430\\n\\ntx428 + \
tx429 + tx430 -> gzl\\n\\n-gzl -> \
fzl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzl );]\"\>"], "Print",
 CellChangeTimes->{3.7071487251095953`*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707148725281839*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tx472 -> tx440, tx440 -> tx433, \
tx289 -> tx436, tx292 -> tx437}\"\>"], "Print",
 CellChangeTimes->{3.707148725283737*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707148725285542*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tx472 -> tx440\\n\\ntx440 \
-> tx433\\n\\ntx289 -> tx436\\n\\ntx292 -> tx437\"\>"], "Print",
 CellChangeTimes->{3.707148725287388*^9}],

Cell[BoxData["\<\"After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(I2);]\\\
n\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(\
dA);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(ak,I1,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bk,I1,1);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(ck,I1,2);]\\n\\nCCode[NONBONDRB_SET_POSITION(dk,I1,3);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(xk,I1,4);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(yk,I1,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zk,I1,6);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(al,I2,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bl,I2,1);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(cl,I2,2);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(dl,I2,3);]\\n\\nCCode[NONBONDRB_SET_POSITION(xl,I2,4);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(yl,I2,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zl,I2,6);]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ());]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh2,pointB,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh2,pointB,getZ());]\
\\n\\npower2[bk] -> tx216\\n\\npower2[bl] -> tx217\\n\\npower2[ck] -> \
tx218\\n\\npower2[cl] -> tx219\\n\\npower2[dk] -> tx220\\n\\npower2[dl] -> \
tx221\\n\\npower2[ak] -> tx222\\n\\npower2[al] -> tx223\\n\\n-2. ak -> tzz452\
\\n\\nbk tzz452 -> tx224\\n\\n-2. al -> tzz451\\n\\nbl tzz451 -> \
tx225\\n\\nck tzz452 -> tx226\\n\\n2. ck -> tzz454\\n\\nak tzz454 -> tx227\\n\
\\nbk tzz454 -> tx228\\n\\ncl tzz451 -> tx229\\n\\n2. cl -> tzz453\\n\\nal \
tzz453 -> tx230\\n\\nbl tzz453 -> tx231\\n\\ndk tzz452 -> tx232\\n\\n2. dk -> \
tzz450\\n\\nak tzz450 -> tx233\\n\\nbk tzz450 -> tx234\\n\\nck tzz450 -> \
tx235\\n\\ndl tzz451 -> tx236\\n\\n2. al -> tzz455\\n\\ndl tzz455 -> tx237\\n\
\\n2. bl -> tzz458\\n\\ndl tzz458 -> tx238\\n\\ndl tzz453 -> \
tx239\\n\\n-tx216 -> tx240\\n\\n-tx217 -> tx241\\n\\n-tx218 -> \
tx242\\n\\n-tx219 -> tx243\\n\\n-tx220 -> tx244\\n\\n-tx221 -> \
tx245\\n\\ntx216 + tx218 + tx220 + tx222 -> tx246\\n\\ntx217 + tx219 + tx221 \
+ tx223 -> tx247\\n\\ntx228 + tx232 -> tx248\\n\\ntx228 + tx233 -> \
tx249\\n\\ntx226 + tx234 -> tx250\\n\\ntx227 + tx234 -> tx251\\n\\ntx224 + \
tx235 -> tx252\\n\\ntx231 + tx236 -> tx253\\n\\ntx231 + tx237 -> \
tx254\\n\\ntx229 + tx238 -> tx255\\n\\ntx230 + tx238 -> tx256\\n\\ntx225 + \
tx239 -> tx257\\n\\ntx220 + tx222 + tx240 + tx242 -> tx258\\n\\ntx221 + tx223 \
+ tx241 + tx243 -> tx259\\n\\ntx218 + tx222 + tx240 + tx244 -> \
tx260\\n\\ntx219 + tx223 + tx241 + tx245 -> tx261\\n\\ntx246 xh1 -> \
tx262\\n\\ntx249 xh1 -> tx263\\n\\ntx250 xh1 -> tx264\\n\\n-xh2 -> \
tzz463\\n\\ntx247 tzz463 -> tx265\\n\\ntx254 tzz463 -> tx266\\n\\ntx255 \
tzz463 -> tx267\\n\\n-xl -> tx268\\n\\ntx248 yh1 -> tx269\\n\\ntx252 yh1 -> \
tx270\\n\\ntx260 yh1 -> tx271\\n\\n-yh2 -> tzz462\\n\\ntx253 tzz462 -> \
tx272\\n\\ntx257 tzz462 -> tx273\\n\\ntx261 tzz462 -> tx274\\n\\n-yl -> tx275\
\\n\\ntx251 zh1 -> tx276\\n\\ntx252 zh1 -> tx277\\n\\ntx258 zh1 -> \
tx278\\n\\n-zh2 -> tzz461\\n\\ntx256 tzz461 -> tx279\\n\\ntx257 tzz461 -> \
tx280\\n\\ntx259 tzz461 -> tx281\\n\\n-zl -> tx282\\n\\ntx262 + tx265 + tx268 \
+ tx269 + tx272 + tx276 + tx279 + xk -> tx283\\n\\ntx263 + tx266 + tx271 + \
tx274 + tx275 + tx277 + tx280 + yk -> tx284\\n\\ntx264 + tx267 + tx270 + \
tx273 + tx278 + tx281 + tx282 + zk -> tx285\\n\\npower2[tx283] -> \
tx286\\n\\npower2[tx284] -> tx287\\n\\npower2[tx285] -> tx288\\n\\ntx286 + \
tx287 + tx288 -> tx289\\n\\nreciprocal[tx289] -> tx472\\n\\npower2[tx472] -> \
tx439\\n\\ntx472 -> tx440\\n\\ntx439 tx440 -> tx431\\n\\npower2[tx431] -> \
tx290\\n\\npower2[tx440] -> tx432\\n\\ntx440 -> tx433\\n\\ntx432 tx433 -> \
tx291\\n\\nmysqrt[tx289] -> tx434\\n\\nreciprocal[tx434] -> tx292\\n\\ndA \
tx290 -> tx293\\n\\n-(dC tx291) -> tx294\\n\\ndQ1Q2 tx292 -> tx295\\n\\ntx293 \
+ tx294 + tx295 -> Energy\\n\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\\n\
\\n2. ak -> tzz460\\n\\ntzz460 xh1 -> tx296\\n\\n-2. ck xh1 -> \
tx297\\n\\ntzz450 xh1 -> tx298\\n\\ntzz460 yh1 -> tx299\\n\\n-2. yh1 -> \
tzz471\\n\\nbk tzz471 -> tx300\\n\\ndk tzz471 -> tx301\\n\\ntzz460 zh1 -> \
tx302\\n\\n-2. zh1 -> tzz470\\n\\nbk tzz470 -> tx303\\n\\ntzz454 zh1 -> tx304\
\\n\\ntx297 + tx300 + tx302 -> tx305\\n\\ntx298 + tx299 + tx303 -> \
tx306\\n\\ntx296 + tx301 + tx304 -> tx307\\n\\n2. tx285 -> tzz445\\n\\ntx305 \
tzz445 -> tx308\\n\\n2. tx284 -> tzz446\\n\\ntx306 tzz446 -> tx309\\n\\n2. \
tx283 -> tzz447\\n\\ntx307 tzz447 -> tx310\\n\\npower2[tx439] -> \
tx435\\n\\ntx431 tx435 -> tx311\\n\\npower2[tx432] -> tx312\\n\\ntx289 -> \
tx436\\n\\ntx292 -> tx437\\n\\nreciprocal[tx436] -> tx438\\n\\ntx437 tx438 -> \
tx313\\n\\ntx308 + tx309 + tx310 -> tx314\\n\\ndA tx311 -> tzz443\\n\\n-6. \
tzz443 -> tzz449\\n\\ntx314 tzz449 -> tx315\\n\\ndC tx312 -> tzz442\\n\\n3 \
tzz442 -> tzz444\\n\\ntx314 tzz444 -> tx316\\n\\ndQ1Q2 tx313 -> \
tzz441\\n\\n-0.5 tzz441 -> tzz448\\n\\ntx314 tzz448 -> tx317\\n\\ntx315 + \
tx316 + tx317 -> gak\\n\\n-gak -> \
fak\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 0, fak );]\\n\\n2. bk -> tzz459\
\\n\\ntzz459 xh1 -> tx318\\n\\ntzz454 xh1 -> tx319\\n\\ntzz452 yh1 -> \
tx320\\n\\ntzz454 yh1 -> tx321\\n\\ntzz452 zh1 -> tx322\\n\\ntzz450 zh1 -> \
tx323\\n\\ntx298 + tx303 + tx320 -> tx324\\n\\ntx300 + tx319 + tx322 -> tx325\
\\n\\ntx318 + tx321 + tx323 -> tx326\\n\\ntx324 tzz445 -> tx327\\n\\ntx325 \
tzz446 -> tx328\\n\\ntx326 tzz447 -> tx329\\n\\ntx327 + tx328 + tx329 -> \
tx330\\n\\ntx330 tzz449 -> tx331\\n\\ntx330 tzz444 -> tx332\\n\\ntx330 tzz448 \
-> tx333\\n\\ntx331 + tx332 + tx333 -> gbk\\n\\n-gbk -> \
fbk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 1, fbk );]\\n\\ntzz452 xh1 -> \
tx334\\n\\ntzz459 yh1 -> tx335\\n\\ntzz450 yh1 -> tx336\\n\\nck tzz470 -> \
tx337\\n\\ntx302 + tx319 + tx335 -> tx338\\n\\ntx334 + tx336 + tx337 -> tx339\
\\n\\ntx326 tzz446 -> tx340\\n\\ntx338 tzz447 -> tx341\\n\\ntx339 tzz445 -> \
tx342\\n\\ntx340 + tx341 + tx342 -> tx343\\n\\ntx343 tzz449 -> \
tx344\\n\\ntx343 tzz444 -> tx345\\n\\ntx343 tzz448 -> tx346\\n\\ntx344 + \
tx345 + tx346 -> gck\\n\\n-gck -> \
fck\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 2, fck );]\\n\\ntzz459 zh1 -> \
tx347\\n\\ntx298 + tx320 + tx347 -> tx348\\n\\ntx307 tzz446 -> \
tx349\\n\\ntx326 tzz445 -> tx350\\n\\ntx348 tzz447 -> tx351\\n\\ntx349 + \
tx350 + tx351 -> tx352\\n\\ntx352 tzz449 -> tx353\\n\\ntx352 tzz444 -> \
tx354\\n\\ntx352 tzz448 -> tx355\\n\\ntx353 + tx354 + tx355 -> gdk\\n\\n-gdk \
-> fdk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 3, fdk );]\\n\\n-12. tzz443 \
-> tzz469\\n\\ntx283 tzz469 -> tx356\\n\\n6. tzz442 -> tzz457\\n\\ntx283 \
tzz457 -> tx357\\n\\n-tzz441 -> tzz464\\n\\ntx283 tzz464 -> tx358\\n\\ntx356 \
+ tx357 + tx358 -> gxk\\n\\n-gxk -> \
fxk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 4, fxk );]\\n\\ntx284 tzz469 -> \
tx359\\n\\ntx284 tzz457 -> tx360\\n\\ntx284 tzz464 -> tx361\\n\\ntx359 + \
tx360 + tx361 -> gyk\\n\\n-gyk -> \
fyk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 5, fyk );]\\n\\ntx285 tzz469 -> \
tx362\\n\\ntx285 tzz457 -> tx363\\n\\ntx285 tzz464 -> tx364\\n\\ntx362 + \
tx363 + tx364 -> gzk\\n\\n-gzk -> \
fzk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 6, fzk );]\\n\\ntzz451 xh2 -> \
tx365\\n\\ntzz453 xh2 -> tx366\\n\\n-2. xh2 -> tzz467\\n\\ndl tzz467 -> tx367\
\\n\\ntzz451 yh2 -> tx368\\n\\ntzz458 yh2 -> tx369\\n\\n2. dl yh2 -> tx370\\n\
\\ntzz451 zh2 -> tx371\\n\\ntzz458 zh2 -> tx372\\n\\n-2. zh2 -> \
tzz465\\n\\ncl tzz465 -> tx373\\n\\ntx366 + tx369 + tx371 -> tx374\\n\\ntx367 \
+ tx368 + tx372 -> tx375\\n\\ntx365 + tx370 + tx373 -> tx376\\n\\ntx374 \
tzz445 -> tx377\\n\\ntx375 tzz446 -> tx378\\n\\ntx376 tzz447 -> \
tx379\\n\\ntx377 + tx378 + tx379 -> tx380\\n\\ntx380 tzz449 -> \
tx381\\n\\ntx380 tzz444 -> tx382\\n\\ntx380 tzz448 -> tx383\\n\\ntx381 + \
tx382 + tx383 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\nbl tzz467 -> \
tx384\\n\\ncl tzz467 -> tx385\\n\\ntzz455 yh2 -> tx386\\n\\n-2. yh2 -> tzz466\
\\n\\ncl tzz466 -> tx387\\n\\ntzz455 zh2 -> tx388\\n\\ndl tzz465 -> \
tx389\\n\\ntx367 + tx372 + tx386 -> tx390\\n\\ntx369 + tx385 + tx388 -> tx391\
\\n\\ntx384 + tx387 + tx389 -> tx392\\n\\ntx390 tzz445 -> tx393\\n\\ntx391 \
tzz446 -> tx394\\n\\ntx392 tzz447 -> tx395\\n\\ntx393 + tx394 + tx395 -> \
tx396\\n\\ntx396 tzz449 -> tx397\\n\\ntx396 tzz444 -> tx398\\n\\ntx396 tzz448 \
-> tx399\\n\\ntx397 + tx398 + tx399 -> gbl\\n\\n-gbl -> \
fbl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 1, fbl );]\\n\\ntzz455 xh2 -> \
tx400\\n\\nbl tzz466 -> tx401\\n\\ndl tzz466 -> tx402\\n\\ntzz453 zh2 -> \
tx403\\n\\ntx371 + tx385 + tx401 -> tx404\\n\\ntx400 + tx402 + tx403 -> tx405\
\\n\\ntx392 tzz446 -> tx406\\n\\ntx404 tzz447 -> tx407\\n\\ntx405 tzz445 -> \
tx408\\n\\ntx406 + tx407 + tx408 -> tx409\\n\\ntx409 tzz449 -> \
tx410\\n\\ntx409 tzz444 -> tx411\\n\\ntx409 tzz448 -> tx412\\n\\ntx410 + \
tx411 + tx412 -> gcl\\n\\n-gcl -> \
fcl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 2, fcl );]\\n\\nbl tzz465 -> \
tx413\\n\\ntx367 + tx386 + tx413 -> tx414\\n\\ntx376 tzz446 -> \
tx415\\n\\ntx392 tzz445 -> tx416\\n\\ntx414 tzz447 -> tx417\\n\\ntx415 + \
tx416 + tx417 -> tx418\\n\\ntx418 tzz449 -> tx419\\n\\ntx418 tzz444 -> \
tx420\\n\\ntx418 tzz448 -> tx421\\n\\ntx419 + tx420 + tx421 -> gdl\\n\\n-gdl \
-> fdl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 3, fdl );]\\n\\n12. tzz443 \
-> tzz456\\n\\ntx283 tzz456 -> tx422\\n\\n-6. tzz442 -> tzz468\\n\\ntx283 \
tzz468 -> tx423\\n\\ntx283 tzz441 -> tx424\\n\\ntx422 + tx423 + tx424 -> \
gxl\\n\\n-gxl -> fxl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\n\\ntx284 tzz456 -> tx425\\n\\ntx284 tzz468 -> tx426\\n\\ntx284 tzz441 \
-> tx427\\n\\ntx425 + tx426 + tx427 -> gyl\\n\\n-gyl -> \
fyl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 5, fyl );]\\n\\ntx285 tzz456 -> \
tx428\\n\\ntx285 tzz468 -> tx429\\n\\ntx285 tzz441 -> tx430\\n\\ntx428 + \
tx429 + tx430 -> gzl\\n\\n-gzl -> \
fzl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzl );]\"\>"], "Print",
 CellChangeTimes->{3.7071487252892733`*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tx472 -> tx440, tx440 -> tx433, \
tx289 -> tx436, tx292 -> tx437}\"\>"], "Print",
 CellChangeTimes->{3.7071487255974293`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.7071487255999613`*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tx472 -> tx440\\n\\ntx440 \
-> tx433\\n\\ntx289 -> tx436\\n\\ntx292 -> tx437\"\>"], "Print",
 CellChangeTimes->{3.7071487256022663`*^9}],

Cell[BoxData["\<\"After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(I2);]\\\
n\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(\
dA);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(ak,I1,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bk,I1,1);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(ck,I1,2);]\\n\\nCCode[NONBONDRB_SET_POSITION(dk,I1,3);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(xk,I1,4);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(yk,I1,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zk,I1,6);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(al,I2,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bl,I2,1);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(cl,I2,2);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(dl,I2,3);]\\n\\nCCode[NONBONDRB_SET_POSITION(xl,I2,4);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(yl,I2,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zl,I2,6);]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ());]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh2,pointB,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh2,pointB,getZ());]\
\\n\\npower2[bk] -> tx216\\n\\npower2[bl] -> tx217\\n\\npower2[ck] -> \
tx218\\n\\npower2[cl] -> tx219\\n\\npower2[dk] -> tx220\\n\\npower2[dl] -> \
tx221\\n\\npower2[ak] -> tx222\\n\\npower2[al] -> tx223\\n\\n-2. ak -> tzz452\
\\n\\nbk tzz452 -> tx224\\n\\n-2. al -> tzz451\\n\\nbl tzz451 -> \
tx225\\n\\nck tzz452 -> tx226\\n\\n2. ck -> tzz454\\n\\nak tzz454 -> tx227\\n\
\\nbk tzz454 -> tx228\\n\\ncl tzz451 -> tx229\\n\\n2. cl -> tzz453\\n\\nal \
tzz453 -> tx230\\n\\nbl tzz453 -> tx231\\n\\ndk tzz452 -> tx232\\n\\n2. dk -> \
tzz450\\n\\nak tzz450 -> tx233\\n\\nbk tzz450 -> tx234\\n\\nck tzz450 -> \
tx235\\n\\ndl tzz451 -> tx236\\n\\n2. al -> tzz455\\n\\ndl tzz455 -> tx237\\n\
\\n2. bl -> tzz458\\n\\ndl tzz458 -> tx238\\n\\ndl tzz453 -> \
tx239\\n\\n-tx216 -> tx240\\n\\n-tx217 -> tx241\\n\\n-tx218 -> \
tx242\\n\\n-tx219 -> tx243\\n\\n-tx220 -> tx244\\n\\n-tx221 -> \
tx245\\n\\ntx216 + tx218 + tx220 + tx222 -> tx246\\n\\ntx217 + tx219 + tx221 \
+ tx223 -> tx247\\n\\ntx228 + tx232 -> tx248\\n\\ntx228 + tx233 -> \
tx249\\n\\ntx226 + tx234 -> tx250\\n\\ntx227 + tx234 -> tx251\\n\\ntx224 + \
tx235 -> tx252\\n\\ntx231 + tx236 -> tx253\\n\\ntx231 + tx237 -> \
tx254\\n\\ntx229 + tx238 -> tx255\\n\\ntx230 + tx238 -> tx256\\n\\ntx225 + \
tx239 -> tx257\\n\\ntx222 + tx240 -> tzz476\\n\\ntx220 + tx242 + tzz476 -> \
tx258\\n\\ntx223 + tx241 -> tzz475\\n\\ntx221 + tx243 + tzz475 -> \
tx259\\n\\ntx218 + tx244 + tzz476 -> tx260\\n\\ntx219 + tx245 + tzz475 -> \
tx261\\n\\ntx246 xh1 -> tx262\\n\\ntx249 xh1 -> tx263\\n\\ntx250 xh1 -> tx264\
\\n\\n-xh2 -> tzz463\\n\\ntx247 tzz463 -> tx265\\n\\ntx254 tzz463 -> tx266\\n\
\\ntx255 tzz463 -> tx267\\n\\n-xl -> tx268\\n\\ntx248 yh1 -> tx269\\n\\ntx252 \
yh1 -> tx270\\n\\ntx260 yh1 -> tx271\\n\\n-yh2 -> tzz462\\n\\ntx253 tzz462 -> \
tx272\\n\\ntx257 tzz462 -> tx273\\n\\ntx261 tzz462 -> tx274\\n\\n-yl -> tx275\
\\n\\ntx251 zh1 -> tx276\\n\\ntx252 zh1 -> tx277\\n\\ntx258 zh1 -> \
tx278\\n\\n-zh2 -> tzz461\\n\\ntx256 tzz461 -> tx279\\n\\ntx257 tzz461 -> \
tx280\\n\\ntx259 tzz461 -> tx281\\n\\n-zl -> tx282\\n\\ntx262 + tx265 + tx268 \
+ tx269 + tx272 + tx276 + tx279 + xk -> tx283\\n\\ntx263 + tx266 + tx271 + \
tx274 + tx275 + tx277 + tx280 + yk -> tx284\\n\\ntx264 + tx267 + tx270 + \
tx273 + tx278 + tx281 + tx282 + zk -> tx285\\n\\npower2[tx283] -> \
tx286\\n\\npower2[tx284] -> tx287\\n\\npower2[tx285] -> tx288\\n\\ntx286 + \
tx287 + tx288 -> tx289\\n\\nreciprocal[tx289] -> tx472\\n\\npower2[tx472] -> \
tx439\\n\\ntx472 -> tx440\\n\\ntx439 tx440 -> tx431\\n\\npower2[tx431] -> \
tx290\\n\\npower2[tx440] -> tx432\\n\\ntx440 -> tx433\\n\\ntx432 tx433 -> \
tx291\\n\\nmysqrt[tx289] -> tx434\\n\\nreciprocal[tx434] -> tx292\\n\\ndA \
tx290 -> tx293\\n\\n-(dC tx291) -> tx294\\n\\ndQ1Q2 tx292 -> tx295\\n\\ntx293 \
+ tx294 + tx295 -> Energy\\n\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\\n\
\\n2. ak -> tzz460\\n\\ntzz460 xh1 -> tx296\\n\\n-2. ck xh1 -> \
tx297\\n\\ntzz450 xh1 -> tx298\\n\\ntzz460 yh1 -> tx299\\n\\n-2. yh1 -> \
tzz471\\n\\nbk tzz471 -> tx300\\n\\ndk tzz471 -> tx301\\n\\ntzz460 zh1 -> \
tx302\\n\\n-2. zh1 -> tzz470\\n\\nbk tzz470 -> tx303\\n\\ntzz454 zh1 -> tx304\
\\n\\ntx297 + tx300 + tx302 -> tx305\\n\\ntx298 + tx299 + tx303 -> \
tx306\\n\\ntx296 + tx301 + tx304 -> tx307\\n\\n2. tx285 -> tzz445\\n\\ntx305 \
tzz445 -> tx308\\n\\n2. tx284 -> tzz446\\n\\ntx306 tzz446 -> tx309\\n\\n2. \
tx283 -> tzz447\\n\\ntx307 tzz447 -> tx310\\n\\npower2[tx439] -> \
tx435\\n\\ntx431 tx435 -> tx311\\n\\npower2[tx432] -> tx312\\n\\ntx289 -> \
tx436\\n\\ntx292 -> tx437\\n\\nreciprocal[tx436] -> tx438\\n\\ntx437 tx438 -> \
tx313\\n\\ntx308 + tx309 + tx310 -> tx314\\n\\ndA tx311 -> tzz443\\n\\n-6. \
tzz443 -> tzz449\\n\\ntx314 tzz449 -> tx315\\n\\ndC tx312 -> tzz442\\n\\n3 \
tzz442 -> tzz444\\n\\ntx314 tzz444 -> tx316\\n\\ndQ1Q2 tx313 -> \
tzz441\\n\\n-0.5 tzz441 -> tzz448\\n\\ntx314 tzz448 -> tx317\\n\\ntx315 + \
tx316 + tx317 -> gak\\n\\n-gak -> \
fak\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 0, fak );]\\n\\n2. bk -> tzz459\
\\n\\ntzz459 xh1 -> tx318\\n\\ntzz454 xh1 -> tx319\\n\\ntzz452 yh1 -> \
tx320\\n\\ntzz454 yh1 -> tx321\\n\\ntzz452 zh1 -> tx322\\n\\ntzz450 zh1 -> \
tx323\\n\\ntx298 + tx320 -> tzz474\\n\\ntx303 + tzz474 -> tx324\\n\\ntx300 + \
tx319 + tx322 -> tx325\\n\\ntx318 + tx321 + tx323 -> tx326\\n\\ntx324 tzz445 \
-> tx327\\n\\ntx325 tzz446 -> tx328\\n\\ntx326 tzz447 -> tx329\\n\\ntx327 + \
tx328 + tx329 -> tx330\\n\\ntx330 tzz449 -> tx331\\n\\ntx330 tzz444 -> \
tx332\\n\\ntx330 tzz448 -> tx333\\n\\ntx331 + tx332 + tx333 -> gbk\\n\\n-gbk \
-> fbk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 1, fbk );]\\n\\ntzz452 xh1 \
-> tx334\\n\\ntzz459 yh1 -> tx335\\n\\ntzz450 yh1 -> tx336\\n\\nck tzz470 -> \
tx337\\n\\ntx302 + tx319 + tx335 -> tx338\\n\\ntx334 + tx336 + tx337 -> tx339\
\\n\\ntx326 tzz446 -> tx340\\n\\ntx338 tzz447 -> tx341\\n\\ntx339 tzz445 -> \
tx342\\n\\ntx340 + tx341 + tx342 -> tx343\\n\\ntx343 tzz449 -> \
tx344\\n\\ntx343 tzz444 -> tx345\\n\\ntx343 tzz448 -> tx346\\n\\ntx344 + \
tx345 + tx346 -> gck\\n\\n-gck -> \
fck\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 2, fck );]\\n\\ntzz459 zh1 -> \
tx347\\n\\ntx347 + tzz474 -> tx348\\n\\ntx307 tzz446 -> tx349\\n\\ntx326 \
tzz445 -> tx350\\n\\ntx348 tzz447 -> tx351\\n\\ntx349 + tx350 + tx351 -> \
tx352\\n\\ntx352 tzz449 -> tx353\\n\\ntx352 tzz444 -> tx354\\n\\ntx352 tzz448 \
-> tx355\\n\\ntx353 + tx354 + tx355 -> gdk\\n\\n-gdk -> \
fdk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 3, fdk );]\\n\\n-12. tzz443 -> \
tzz469\\n\\ntx283 tzz469 -> tx356\\n\\n6. tzz442 -> tzz457\\n\\ntx283 tzz457 \
-> tx357\\n\\n-tzz441 -> tzz464\\n\\ntx283 tzz464 -> tx358\\n\\ntx356 + tx357 \
+ tx358 -> gxk\\n\\n-gxk -> fxk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 4, \
fxk );]\\n\\ntx284 tzz469 -> tx359\\n\\ntx284 tzz457 -> tx360\\n\\ntx284 \
tzz464 -> tx361\\n\\ntx359 + tx360 + tx361 -> gyk\\n\\n-gyk -> \
fyk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 5, fyk );]\\n\\ntx285 tzz469 -> \
tx362\\n\\ntx285 tzz457 -> tx363\\n\\ntx285 tzz464 -> tx364\\n\\ntx362 + \
tx363 + tx364 -> gzk\\n\\n-gzk -> \
fzk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 6, fzk );]\\n\\ntzz451 xh2 -> \
tx365\\n\\ntzz453 xh2 -> tx366\\n\\n-2. xh2 -> tzz467\\n\\ndl tzz467 -> tx367\
\\n\\ntzz451 yh2 -> tx368\\n\\ntzz458 yh2 -> tx369\\n\\n2. dl yh2 -> tx370\\n\
\\ntzz451 zh2 -> tx371\\n\\ntzz458 zh2 -> tx372\\n\\n-2. zh2 -> \
tzz465\\n\\ncl tzz465 -> tx373\\n\\ntx366 + tx369 + tx371 -> tx374\\n\\ntx367 \
+ tx368 + tx372 -> tx375\\n\\ntx365 + tx370 + tx373 -> tx376\\n\\ntx374 \
tzz445 -> tx377\\n\\ntx375 tzz446 -> tx378\\n\\ntx376 tzz447 -> \
tx379\\n\\ntx377 + tx378 + tx379 -> tx380\\n\\ntx380 tzz449 -> \
tx381\\n\\ntx380 tzz444 -> tx382\\n\\ntx380 tzz448 -> tx383\\n\\ntx381 + \
tx382 + tx383 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\nbl tzz467 -> \
tx384\\n\\ncl tzz467 -> tx385\\n\\ntzz455 yh2 -> tx386\\n\\n-2. yh2 -> tzz466\
\\n\\ncl tzz466 -> tx387\\n\\ntzz455 zh2 -> tx388\\n\\ndl tzz465 -> \
tx389\\n\\ntx367 + tx386 -> tzz473\\n\\ntx372 + tzz473 -> tx390\\n\\ntx369 + \
tx385 + tx388 -> tx391\\n\\ntx384 + tx387 + tx389 -> tx392\\n\\ntx390 tzz445 \
-> tx393\\n\\ntx391 tzz446 -> tx394\\n\\ntx392 tzz447 -> tx395\\n\\ntx393 + \
tx394 + tx395 -> tx396\\n\\ntx396 tzz449 -> tx397\\n\\ntx396 tzz444 -> \
tx398\\n\\ntx396 tzz448 -> tx399\\n\\ntx397 + tx398 + tx399 -> gbl\\n\\n-gbl \
-> fbl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 1, fbl );]\\n\\ntzz455 xh2 \
-> tx400\\n\\nbl tzz466 -> tx401\\n\\ndl tzz466 -> tx402\\n\\ntzz453 zh2 -> \
tx403\\n\\ntx371 + tx385 + tx401 -> tx404\\n\\ntx400 + tx402 + tx403 -> tx405\
\\n\\ntx392 tzz446 -> tx406\\n\\ntx404 tzz447 -> tx407\\n\\ntx405 tzz445 -> \
tx408\\n\\ntx406 + tx407 + tx408 -> tx409\\n\\ntx409 tzz449 -> \
tx410\\n\\ntx409 tzz444 -> tx411\\n\\ntx409 tzz448 -> tx412\\n\\ntx410 + \
tx411 + tx412 -> gcl\\n\\n-gcl -> \
fcl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 2, fcl );]\\n\\nbl tzz465 -> \
tx413\\n\\ntx413 + tzz473 -> tx414\\n\\ntx376 tzz446 -> tx415\\n\\ntx392 \
tzz445 -> tx416\\n\\ntx414 tzz447 -> tx417\\n\\ntx415 + tx416 + tx417 -> \
tx418\\n\\ntx418 tzz449 -> tx419\\n\\ntx418 tzz444 -> tx420\\n\\ntx418 tzz448 \
-> tx421\\n\\ntx419 + tx420 + tx421 -> gdl\\n\\n-gdl -> \
fdl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 3, fdl );]\\n\\n12. tzz443 -> \
tzz456\\n\\ntx283 tzz456 -> tx422\\n\\n-6. tzz442 -> tzz468\\n\\ntx283 tzz468 \
-> tx423\\n\\ntx283 tzz441 -> tx424\\n\\ntx422 + tx423 + tx424 -> \
gxl\\n\\n-gxl -> fxl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\n\\ntx284 tzz456 -> tx425\\n\\ntx284 tzz468 -> tx426\\n\\ntx284 tzz441 \
-> tx427\\n\\ntx425 + tx426 + tx427 -> gyl\\n\\n-gyl -> \
fyl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 5, fyl );]\\n\\ntx285 tzz456 -> \
tx428\\n\\ntx285 tzz468 -> tx429\\n\\ntx285 tzz441 -> tx430\\n\\ntx428 + \
tx429 + tx430 -> gzl\\n\\n-gzl -> \
fzl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzl );]\"\>"], "Print",
 CellChangeTimes->{3.7071487256045094`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing declares to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBONDRB_termDeclares.cc\"\>"}],
  SequenceForm["Writing declares to file: ", "_NONBONDRB_termDeclares.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707148725668647*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing code to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBONDRB_termCode.cc\"\>"}],
  SequenceForm["Writing code to file: ", "_NONBONDRB_termCode.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7071487256713753`*^9}],

Cell[BoxData[
 StyleBox["\<\"Set TimesSimplify and PlusSimplify to turn these \
simplifications off and on\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 1],
  FrontFaceColor->RGBColor[0, 0, 1],
  BackFaceColor->RGBColor[0, 0, 1],
  GraphicsColor->RGBColor[0, 0, 1],
  FontSize->24,
  FontSlant->Italic,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148897778242*^9}],

Cell[BoxData[
 StyleBox["\<\"PlusOptimize = True\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 1],
  FrontFaceColor->RGBColor[0, 0, 1],
  BackFaceColor->RGBColor[0, 0, 1],
  GraphicsColor->RGBColor[0, 0, 1],
  FontSize->20,
  FontSlant->Italic,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071488977793207`*^9}],

Cell[BoxData[
 StyleBox["\<\"TimesOptimize = True\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 1],
  FrontFaceColor->RGBColor[0, 0, 1],
  BackFaceColor->RGBColor[0, 0, 1],
  GraphicsColor->RGBColor[0, 0, 1],
  FontSize->20,
  FontSlant->Italic,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148897780418*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148926003927*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489260062027`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148926008192*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489260100822`*^9}],

Cell[BoxData["\<\"Collecting terms\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489260693407`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \
\[NoBreak]\\!\\(Null\\\\ \\(\\({\\(\\(Name \[Rule] \\\"NONBONDRB\\\"\\)\\), \
\\(\\(AdditionalCDeclares \[Rule] \\\"\\\"\\)\\), \\(\\(DerivativeVariables \
\[Rule] \\(\\({ak, bk, ck, dk, xk, yk, zk, al, bl, cl, dl, xl, yl, \
zl}\\)\\)\\)\\), \\(\\(Rules \[Rule] \
\\(\\({\\(\\(CCode[\\\"NONBONDRB_SET_PARAMETER(I1);\\\"]\\)\\), \
\\(\\(CCode[\\\"NONBONDRB_SET_PARAMETER(I2);\\\"]\\)\\), \
\\(\\(CCode[\\\"NONBONDRB_SET_PARAMETER(dQ1Q2);\\\"]\\)\\), \\(\\(\
\[LeftSkeleton] 46 \[RightSkeleton]\\)\\), \\(\\(\\(\\(-gal\\)\\) \[Rule] fal\
\\)\\), \\(\\(\[LeftSkeleton] 19 \[RightSkeleton]\\)\\)}\\)\\)\\)\\), \
\\(\\(Input \[Rule] \\(\\({ak, bk, ck, dk, xk, yk, zk, al, bl, cl, dl, xl, \
yl, zl}\\)\\)\\)\\), \\(\\(Output \[Rule] \\(\\({Energy, fak, fbk, fck, fdk, \
fxk, fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, \
nonbondRBDeviation}\\)\\)\\)\\)}\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.707148707022443*^9, 3.707148926071884*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148944365653*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148944367898*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148944370047*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148944372944*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148945064639*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148945066669*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489450685863`*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148945070593*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489452806377`*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tx440 -> tx433, tx289 -> tx436, \
tx292 -> tx437}\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489452826767`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489452846813`*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tx440 -> tx433\\n\\ntx289 \
-> tx436\\n\\ntx292 -> tx437\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148945286685*^9}],

Cell[BoxData["\<\"After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(I2);]\\\
n\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(\
dA);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(ak,I1,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bk,I1,1);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(ck,I1,2);]\\n\\nCCode[NONBONDRB_SET_POSITION(dk,I1,3);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(xk,I1,4);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(yk,I1,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zk,I1,6);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(al,I2,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bl,I2,1);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(cl,I2,2);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(dl,I2,3);]\\n\\nCCode[NONBONDRB_SET_POSITION(xl,I2,4);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(yl,I2,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zl,I2,6);]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ());]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh2,pointB,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh2,pointB,getZ());]\
\\n\\npower2[bk] -> tx216\\n\\npower2[bl] -> tx217\\n\\npower2[ck] -> \
tx218\\n\\npower2[cl] -> tx219\\n\\npower2[dk] -> tx220\\n\\npower2[dl] -> \
tx221\\n\\npower2[ak] -> tx222\\n\\npower2[al] -> tx223\\n\\n-2. ak bk -> \
tx224\\n\\n-2. al bl -> tx225\\n\\n-2. ak ck -> tx226\\n\\n2. ak ck -> \
tx227\\n\\n2. bk ck -> tx228\\n\\n-2. al cl -> tx229\\n\\n2. al cl -> \
tx230\\n\\n2. bl cl -> tx231\\n\\n-2. ak dk -> tx232\\n\\n2. ak dk -> \
tx233\\n\\n2. bk dk -> tx234\\n\\n2. ck dk -> tx235\\n\\n-2. al dl -> \
tx236\\n\\n2. al dl -> tx237\\n\\n2. bl dl -> tx238\\n\\n2. cl dl -> tx239\\n\
\\n-tx216 -> tx240\\n\\n-tx217 -> tx241\\n\\n-tx218 -> tx242\\n\\n-tx219 -> \
tx243\\n\\n-tx220 -> tx244\\n\\n-tx221 -> tx245\\n\\ntx216 + tx218 + tx220 + \
tx222 -> tx246\\n\\ntx217 + tx219 + tx221 + tx223 -> tx247\\n\\ntx228 + tx232 \
-> tx248\\n\\ntx228 + tx233 -> tx249\\n\\ntx226 + tx234 -> tx250\\n\\ntx227 + \
tx234 -> tx251\\n\\ntx224 + tx235 -> tx252\\n\\ntx231 + tx236 -> \
tx253\\n\\ntx231 + tx237 -> tx254\\n\\ntx229 + tx238 -> tx255\\n\\ntx230 + \
tx238 -> tx256\\n\\ntx225 + tx239 -> tx257\\n\\ntx220 + tx222 + tx240 + tx242 \
-> tx258\\n\\ntx221 + tx223 + tx241 + tx243 -> tx259\\n\\ntx218 + tx222 + \
tx240 + tx244 -> tx260\\n\\ntx219 + tx223 + tx241 + tx245 -> tx261\\n\\ntx246 \
xh1 -> tx262\\n\\ntx249 xh1 -> tx263\\n\\ntx250 xh1 -> tx264\\n\\n-(tx247 \
xh2) -> tx265\\n\\n-(tx254 xh2) -> tx266\\n\\n-(tx255 xh2) -> tx267\\n\\n-xl \
-> tx268\\n\\ntx248 yh1 -> tx269\\n\\ntx252 yh1 -> tx270\\n\\ntx260 yh1 -> \
tx271\\n\\n-(tx253 yh2) -> tx272\\n\\n-(tx257 yh2) -> tx273\\n\\n-(tx261 yh2) \
-> tx274\\n\\n-yl -> tx275\\n\\ntx251 zh1 -> tx276\\n\\ntx252 zh1 -> tx277\\n\
\\ntx258 zh1 -> tx278\\n\\n-(tx256 zh2) -> tx279\\n\\n-(tx257 zh2) -> \
tx280\\n\\n-(tx259 zh2) -> tx281\\n\\n-zl -> tx282\\n\\ntx262 + tx265 + tx268 \
+ tx269 + tx272 + tx276 + tx279 + xk -> tx283\\n\\ntx263 + tx266 + tx271 + \
tx274 + tx275 + tx277 + tx280 + yk -> tx284\\n\\ntx264 + tx267 + tx270 + \
tx273 + tx278 + tx281 + tx282 + zk -> tx285\\n\\npower2[tx283] -> \
tx286\\n\\npower2[tx284] -> tx287\\n\\npower2[tx285] -> tx288\\n\\ntx286 + \
tx287 + tx288 -> tx289\\n\\npowern2[tx289] -> tx439\\n\\nreciprocal[tx289] -> \
tx440\\n\\ntx439 tx440 -> tx431\\n\\npower2[tx431] -> \
tx290\\n\\npower2[tx440] -> tx432\\n\\ntx440 -> tx433\\n\\ntx432 tx433 -> \
tx291\\n\\nmysqrt[tx289] -> tx434\\n\\nreciprocal[tx434] -> tx292\\n\\ndA \
tx290 -> tx293\\n\\n-(dC tx291) -> tx294\\n\\ndQ1Q2 tx292 -> tx295\\n\\ntx293 \
+ tx294 + tx295 -> Energy\\n\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\\n\
\\n2. ak xh1 -> tx296\\n\\n-2. ck xh1 -> tx297\\n\\n2. dk xh1 -> \
tx298\\n\\n2. ak yh1 -> tx299\\n\\n-2. bk yh1 -> tx300\\n\\n-2. dk yh1 -> \
tx301\\n\\n2. ak zh1 -> tx302\\n\\n-2. bk zh1 -> tx303\\n\\n2. ck zh1 -> \
tx304\\n\\ntx297 + tx300 + tx302 -> tx305\\n\\ntx298 + tx299 + tx303 -> tx306\
\\n\\ntx296 + tx301 + tx304 -> tx307\\n\\n2. tx285 tx305 -> tx308\\n\\n2. \
tx284 tx306 -> tx309\\n\\n2. tx283 tx307 -> tx310\\n\\npower2[tx439] -> tx435\
\\n\\ntx431 tx435 -> tx311\\n\\npower2[tx432] -> tx312\\n\\ntx289 -> tx436\\n\
\\ntx292 -> tx437\\n\\nreciprocal[tx436] -> tx438\\n\\ntx437 tx438 -> \
tx313\\n\\ntx308 + tx309 + tx310 -> tx314\\n\\n-6. dA tx311 tx314 -> tx315\\n\
\\n3 dC tx312 tx314 -> tx316\\n\\n-0.5 dQ1Q2 tx313 tx314 -> tx317\\n\\ntx315 \
+ tx316 + tx317 -> gak\\n\\n-gak -> \
fak\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 0, fak );]\\n\\n2. bk xh1 -> \
tx318\\n\\n2. ck xh1 -> tx319\\n\\n-2. ak yh1 -> tx320\\n\\n2. ck yh1 -> \
tx321\\n\\n-2. ak zh1 -> tx322\\n\\n2. dk zh1 -> tx323\\n\\ntx298 + tx303 + \
tx320 -> tx324\\n\\ntx300 + tx319 + tx322 -> tx325\\n\\ntx318 + tx321 + tx323 \
-> tx326\\n\\n2. tx285 tx324 -> tx327\\n\\n2. tx284 tx325 -> tx328\\n\\n2. \
tx283 tx326 -> tx329\\n\\ntx327 + tx328 + tx329 -> tx330\\n\\n-6. dA tx311 \
tx330 -> tx331\\n\\n3 dC tx312 tx330 -> tx332\\n\\n-0.5 dQ1Q2 tx313 tx330 -> \
tx333\\n\\ntx331 + tx332 + tx333 -> gbk\\n\\n-gbk -> \
fbk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 1, fbk );]\\n\\n-2. ak xh1 -> \
tx334\\n\\n2. bk yh1 -> tx335\\n\\n2. dk yh1 -> tx336\\n\\n-2. ck zh1 -> \
tx337\\n\\ntx302 + tx319 + tx335 -> tx338\\n\\ntx334 + tx336 + tx337 -> tx339\
\\n\\n2. tx284 tx326 -> tx340\\n\\n2. tx283 tx338 -> tx341\\n\\n2. tx285 \
tx339 -> tx342\\n\\ntx340 + tx341 + tx342 -> tx343\\n\\n-6. dA tx311 tx343 -> \
tx344\\n\\n3 dC tx312 tx343 -> tx345\\n\\n-0.5 dQ1Q2 tx313 tx343 -> \
tx346\\n\\ntx344 + tx345 + tx346 -> gck\\n\\n-gck -> \
fck\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 2, fck );]\\n\\n2. bk zh1 -> \
tx347\\n\\ntx298 + tx320 + tx347 -> tx348\\n\\n2. tx284 tx307 -> \
tx349\\n\\n2. tx285 tx326 -> tx350\\n\\n2. tx283 tx348 -> tx351\\n\\ntx349 + \
tx350 + tx351 -> tx352\\n\\n-6. dA tx311 tx352 -> tx353\\n\\n3 dC tx312 tx352 \
-> tx354\\n\\n-0.5 dQ1Q2 tx313 tx352 -> tx355\\n\\ntx353 + tx354 + tx355 -> \
gdk\\n\\n-gdk -> fdk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 3, fdk \
);]\\n\\n-12. dA tx283 tx311 -> tx356\\n\\n6. dC tx283 tx312 -> \
tx357\\n\\n-(dQ1Q2 tx283 tx313) -> tx358\\n\\ntx356 + tx357 + tx358 -> gxk\\n\
\\n-gxk -> fxk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 4, fxk );]\\n\\n-12. \
dA tx284 tx311 -> tx359\\n\\n6. dC tx284 tx312 -> tx360\\n\\n-(dQ1Q2 tx284 \
tx313) -> tx361\\n\\ntx359 + tx360 + tx361 -> gyk\\n\\n-gyk -> \
fyk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 5, fyk );]\\n\\n-12. dA tx285 \
tx311 -> tx362\\n\\n6. dC tx285 tx312 -> tx363\\n\\n-(dQ1Q2 tx285 tx313) -> \
tx364\\n\\ntx362 + tx363 + tx364 -> gzk\\n\\n-gzk -> \
fzk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 6, fzk );]\\n\\n-2. al xh2 -> \
tx365\\n\\n2. cl xh2 -> tx366\\n\\n-2. dl xh2 -> tx367\\n\\n-2. al yh2 -> \
tx368\\n\\n2. bl yh2 -> tx369\\n\\n2. dl yh2 -> tx370\\n\\n-2. al zh2 -> \
tx371\\n\\n2. bl zh2 -> tx372\\n\\n-2. cl zh2 -> tx373\\n\\ntx366 + tx369 + \
tx371 -> tx374\\n\\ntx367 + tx368 + tx372 -> tx375\\n\\ntx365 + tx370 + tx373 \
-> tx376\\n\\n2. tx285 tx374 -> tx377\\n\\n2. tx284 tx375 -> tx378\\n\\n2. \
tx283 tx376 -> tx379\\n\\ntx377 + tx378 + tx379 -> tx380\\n\\n-6. dA tx311 \
tx380 -> tx381\\n\\n3 dC tx312 tx380 -> tx382\\n\\n-0.5 dQ1Q2 tx313 tx380 -> \
tx383\\n\\ntx381 + tx382 + tx383 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\n-2. bl xh2 -> \
tx384\\n\\n-2. cl xh2 -> tx385\\n\\n2. al yh2 -> tx386\\n\\n-2. cl yh2 -> \
tx387\\n\\n2. al zh2 -> tx388\\n\\n-2. dl zh2 -> tx389\\n\\ntx367 + tx372 + \
tx386 -> tx390\\n\\ntx369 + tx385 + tx388 -> tx391\\n\\ntx384 + tx387 + tx389 \
-> tx392\\n\\n2. tx285 tx390 -> tx393\\n\\n2. tx284 tx391 -> tx394\\n\\n2. \
tx283 tx392 -> tx395\\n\\ntx393 + tx394 + tx395 -> tx396\\n\\n-6. dA tx311 \
tx396 -> tx397\\n\\n3 dC tx312 tx396 -> tx398\\n\\n-0.5 dQ1Q2 tx313 tx396 -> \
tx399\\n\\ntx397 + tx398 + tx399 -> gbl\\n\\n-gbl -> \
fbl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 1, fbl );]\\n\\n2. al xh2 -> \
tx400\\n\\n-2. bl yh2 -> tx401\\n\\n-2. dl yh2 -> tx402\\n\\n2. cl zh2 -> \
tx403\\n\\ntx371 + tx385 + tx401 -> tx404\\n\\ntx400 + tx402 + tx403 -> tx405\
\\n\\n2. tx284 tx392 -> tx406\\n\\n2. tx283 tx404 -> tx407\\n\\n2. tx285 \
tx405 -> tx408\\n\\ntx406 + tx407 + tx408 -> tx409\\n\\n-6. dA tx311 tx409 -> \
tx410\\n\\n3 dC tx312 tx409 -> tx411\\n\\n-0.5 dQ1Q2 tx313 tx409 -> \
tx412\\n\\ntx410 + tx411 + tx412 -> gcl\\n\\n-gcl -> \
fcl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 2, fcl );]\\n\\n-2. bl zh2 -> \
tx413\\n\\ntx367 + tx386 + tx413 -> tx414\\n\\n2. tx284 tx376 -> \
tx415\\n\\n2. tx285 tx392 -> tx416\\n\\n2. tx283 tx414 -> tx417\\n\\ntx415 + \
tx416 + tx417 -> tx418\\n\\n-6. dA tx311 tx418 -> tx419\\n\\n3 dC tx312 tx418 \
-> tx420\\n\\n-0.5 dQ1Q2 tx313 tx418 -> tx421\\n\\ntx419 + tx420 + tx421 -> \
gdl\\n\\n-gdl -> fdl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 3, fdl \
);]\\n\\n12. dA tx283 tx311 -> tx422\\n\\n-6. dC tx283 tx312 -> \
tx423\\n\\ndQ1Q2 tx283 tx313 -> tx424\\n\\ntx422 + tx423 + tx424 -> \
gxl\\n\\n-gxl -> fxl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\n\\n12. dA tx284 tx311 -> tx425\\n\\n-6. dC tx284 tx312 -> \
tx426\\n\\ndQ1Q2 tx284 tx313 -> tx427\\n\\ntx425 + tx426 + tx427 -> \
gyl\\n\\n-gyl -> fyl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 5, fyl \
);]\\n\\n12. dA tx285 tx311 -> tx428\\n\\n-6. dC tx285 tx312 -> \
tx429\\n\\ndQ1Q2 tx285 tx313 -> tx430\\n\\ntx428 + tx429 + tx430 -> \
gzl\\n\\n-gzl -> fzl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzl \
);]\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148945288711*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tx440 -> tx433, tx289 -> tx436, \
tx292 -> tx437}\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489472319736`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489472347097`*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tx440 -> tx433\\n\\ntx289 \
-> tx436\\n\\ntx292 -> tx437\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489472371197`*^9}],

Cell[BoxData["\<\"After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(I2);]\\\
n\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(\
dA);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(ak,I1,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bk,I1,1);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(ck,I1,2);]\\n\\nCCode[NONBONDRB_SET_POSITION(dk,I1,3);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(xk,I1,4);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(yk,I1,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zk,I1,6);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(al,I2,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bl,I2,1);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(cl,I2,2);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(dl,I2,3);]\\n\\nCCode[NONBONDRB_SET_POSITION(xl,I2,4);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(yl,I2,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zl,I2,6);]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ());]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh2,pointB,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh2,pointB,getZ());]\
\\n\\npower2[bk] -> tx216\\n\\npower2[bl] -> tx217\\n\\npower2[ck] -> \
tx218\\n\\npower2[cl] -> tx219\\n\\npower2[dk] -> tx220\\n\\npower2[dl] -> \
tx221\\n\\npower2[ak] -> tx222\\n\\npower2[al] -> tx223\\n\\n-2. ak -> tzz452\
\\n\\nbk tzz452 -> tx224\\n\\n-2. al -> tzz451\\n\\nbl tzz451 -> \
tx225\\n\\nck tzz452 -> tx226\\n\\n2. ck -> tzz454\\n\\nak tzz454 -> tx227\\n\
\\nbk tzz454 -> tx228\\n\\ncl tzz451 -> tx229\\n\\n2. cl -> tzz453\\n\\nal \
tzz453 -> tx230\\n\\nbl tzz453 -> tx231\\n\\ndk tzz452 -> tx232\\n\\n2. dk -> \
tzz450\\n\\nak tzz450 -> tx233\\n\\nbk tzz450 -> tx234\\n\\nck tzz450 -> \
tx235\\n\\ndl tzz451 -> tx236\\n\\n2. al -> tzz455\\n\\ndl tzz455 -> tx237\\n\
\\n2. bl -> tzz458\\n\\ndl tzz458 -> tx238\\n\\ndl tzz453 -> \
tx239\\n\\n-tx216 -> tx240\\n\\n-tx217 -> tx241\\n\\n-tx218 -> \
tx242\\n\\n-tx219 -> tx243\\n\\n-tx220 -> tx244\\n\\n-tx221 -> \
tx245\\n\\ntx216 + tx218 + tx220 + tx222 -> tx246\\n\\ntx217 + tx219 + tx221 \
+ tx223 -> tx247\\n\\ntx228 + tx232 -> tx248\\n\\ntx228 + tx233 -> \
tx249\\n\\ntx226 + tx234 -> tx250\\n\\ntx227 + tx234 -> tx251\\n\\ntx224 + \
tx235 -> tx252\\n\\ntx231 + tx236 -> tx253\\n\\ntx231 + tx237 -> \
tx254\\n\\ntx229 + tx238 -> tx255\\n\\ntx230 + tx238 -> tx256\\n\\ntx225 + \
tx239 -> tx257\\n\\ntx220 + tx222 + tx240 + tx242 -> tx258\\n\\ntx221 + tx223 \
+ tx241 + tx243 -> tx259\\n\\ntx218 + tx222 + tx240 + tx244 -> \
tx260\\n\\ntx219 + tx223 + tx241 + tx245 -> tx261\\n\\ntx246 xh1 -> \
tx262\\n\\ntx249 xh1 -> tx263\\n\\ntx250 xh1 -> tx264\\n\\n-xh2 -> \
tzz463\\n\\ntx247 tzz463 -> tx265\\n\\ntx254 tzz463 -> tx266\\n\\ntx255 \
tzz463 -> tx267\\n\\n-xl -> tx268\\n\\ntx248 yh1 -> tx269\\n\\ntx252 yh1 -> \
tx270\\n\\ntx260 yh1 -> tx271\\n\\n-yh2 -> tzz462\\n\\ntx253 tzz462 -> \
tx272\\n\\ntx257 tzz462 -> tx273\\n\\ntx261 tzz462 -> tx274\\n\\n-yl -> tx275\
\\n\\ntx251 zh1 -> tx276\\n\\ntx252 zh1 -> tx277\\n\\ntx258 zh1 -> \
tx278\\n\\n-zh2 -> tzz461\\n\\ntx256 tzz461 -> tx279\\n\\ntx257 tzz461 -> \
tx280\\n\\ntx259 tzz461 -> tx281\\n\\n-zl -> tx282\\n\\ntx262 + tx265 + tx268 \
+ tx269 + tx272 + tx276 + tx279 + xk -> tx283\\n\\ntx263 + tx266 + tx271 + \
tx274 + tx275 + tx277 + tx280 + yk -> tx284\\n\\ntx264 + tx267 + tx270 + \
tx273 + tx278 + tx281 + tx282 + zk -> tx285\\n\\npower2[tx283] -> \
tx286\\n\\npower2[tx284] -> tx287\\n\\npower2[tx285] -> tx288\\n\\ntx286 + \
tx287 + tx288 -> tx289\\n\\npower2[reciprocal[tx289]] -> \
tx439\\n\\nreciprocal[tx289] -> tx440\\n\\ntx439 tx440 -> \
tx431\\n\\npower2[tx431] -> tx290\\n\\npower2[tx440] -> tx432\\n\\ntx440 -> \
tx433\\n\\ntx432 tx433 -> tx291\\n\\nmysqrt[tx289] -> \
tx434\\n\\nreciprocal[tx434] -> tx292\\n\\ndA tx290 -> tx293\\n\\n-(dC tx291) \
-> tx294\\n\\ndQ1Q2 tx292 -> tx295\\n\\ntx293 + tx294 + tx295 -> \
Energy\\n\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\\n\\n2. ak -> \
tzz460\\n\\ntzz460 xh1 -> tx296\\n\\n-2. ck xh1 -> tx297\\n\\ntzz450 xh1 -> \
tx298\\n\\ntzz460 yh1 -> tx299\\n\\n-2. yh1 -> tzz471\\n\\nbk tzz471 -> tx300\
\\n\\ndk tzz471 -> tx301\\n\\ntzz460 zh1 -> tx302\\n\\n-2. zh1 -> \
tzz470\\n\\nbk tzz470 -> tx303\\n\\ntzz454 zh1 -> tx304\\n\\ntx297 + tx300 + \
tx302 -> tx305\\n\\ntx298 + tx299 + tx303 -> tx306\\n\\ntx296 + tx301 + tx304 \
-> tx307\\n\\n2. tx285 -> tzz445\\n\\ntx305 tzz445 -> tx308\\n\\n2. tx284 -> \
tzz446\\n\\ntx306 tzz446 -> tx309\\n\\n2. tx283 -> tzz447\\n\\ntx307 tzz447 \
-> tx310\\n\\npower2[tx439] -> tx435\\n\\ntx431 tx435 -> \
tx311\\n\\npower2[tx432] -> tx312\\n\\ntx289 -> tx436\\n\\ntx292 -> \
tx437\\n\\nreciprocal[tx436] -> tx438\\n\\ntx437 tx438 -> tx313\\n\\ntx308 + \
tx309 + tx310 -> tx314\\n\\ndA tx311 -> tzz443\\n\\n-6. tzz443 -> \
tzz449\\n\\ntx314 tzz449 -> tx315\\n\\ndC tx312 -> tzz442\\n\\n3 tzz442 -> \
tzz444\\n\\ntx314 tzz444 -> tx316\\n\\ndQ1Q2 tx313 -> tzz441\\n\\n-0.5 tzz441 \
-> tzz448\\n\\ntx314 tzz448 -> tx317\\n\\ntx315 + tx316 + tx317 -> \
gak\\n\\n-gak -> fak\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 0, fak \
);]\\n\\n2. bk -> tzz459\\n\\ntzz459 xh1 -> tx318\\n\\ntzz454 xh1 -> tx319\\n\
\\ntzz452 yh1 -> tx320\\n\\ntzz454 yh1 -> tx321\\n\\ntzz452 zh1 -> \
tx322\\n\\ntzz450 zh1 -> tx323\\n\\ntx298 + tx303 + tx320 -> tx324\\n\\ntx300 \
+ tx319 + tx322 -> tx325\\n\\ntx318 + tx321 + tx323 -> tx326\\n\\ntx324 \
tzz445 -> tx327\\n\\ntx325 tzz446 -> tx328\\n\\ntx326 tzz447 -> \
tx329\\n\\ntx327 + tx328 + tx329 -> tx330\\n\\ntx330 tzz449 -> \
tx331\\n\\ntx330 tzz444 -> tx332\\n\\ntx330 tzz448 -> tx333\\n\\ntx331 + \
tx332 + tx333 -> gbk\\n\\n-gbk -> \
fbk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 1, fbk );]\\n\\ntzz452 xh1 -> \
tx334\\n\\ntzz459 yh1 -> tx335\\n\\ntzz450 yh1 -> tx336\\n\\nck tzz470 -> \
tx337\\n\\ntx302 + tx319 + tx335 -> tx338\\n\\ntx334 + tx336 + tx337 -> tx339\
\\n\\ntx326 tzz446 -> tx340\\n\\ntx338 tzz447 -> tx341\\n\\ntx339 tzz445 -> \
tx342\\n\\ntx340 + tx341 + tx342 -> tx343\\n\\ntx343 tzz449 -> \
tx344\\n\\ntx343 tzz444 -> tx345\\n\\ntx343 tzz448 -> tx346\\n\\ntx344 + \
tx345 + tx346 -> gck\\n\\n-gck -> \
fck\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 2, fck );]\\n\\ntzz459 zh1 -> \
tx347\\n\\ntx298 + tx320 + tx347 -> tx348\\n\\ntx307 tzz446 -> \
tx349\\n\\ntx326 tzz445 -> tx350\\n\\ntx348 tzz447 -> tx351\\n\\ntx349 + \
tx350 + tx351 -> tx352\\n\\ntx352 tzz449 -> tx353\\n\\ntx352 tzz444 -> \
tx354\\n\\ntx352 tzz448 -> tx355\\n\\ntx353 + tx354 + tx355 -> gdk\\n\\n-gdk \
-> fdk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 3, fdk );]\\n\\n-12. tzz443 \
-> tzz469\\n\\ntx283 tzz469 -> tx356\\n\\n6. tzz442 -> tzz457\\n\\ntx283 \
tzz457 -> tx357\\n\\n-tzz441 -> tzz464\\n\\ntx283 tzz464 -> tx358\\n\\ntx356 \
+ tx357 + tx358 -> gxk\\n\\n-gxk -> \
fxk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 4, fxk );]\\n\\ntx284 tzz469 -> \
tx359\\n\\ntx284 tzz457 -> tx360\\n\\ntx284 tzz464 -> tx361\\n\\ntx359 + \
tx360 + tx361 -> gyk\\n\\n-gyk -> \
fyk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 5, fyk );]\\n\\ntx285 tzz469 -> \
tx362\\n\\ntx285 tzz457 -> tx363\\n\\ntx285 tzz464 -> tx364\\n\\ntx362 + \
tx363 + tx364 -> gzk\\n\\n-gzk -> \
fzk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 6, fzk );]\\n\\ntzz451 xh2 -> \
tx365\\n\\ntzz453 xh2 -> tx366\\n\\n-2. xh2 -> tzz467\\n\\ndl tzz467 -> tx367\
\\n\\ntzz451 yh2 -> tx368\\n\\ntzz458 yh2 -> tx369\\n\\n2. dl yh2 -> tx370\\n\
\\ntzz451 zh2 -> tx371\\n\\ntzz458 zh2 -> tx372\\n\\n-2. zh2 -> \
tzz465\\n\\ncl tzz465 -> tx373\\n\\ntx366 + tx369 + tx371 -> tx374\\n\\ntx367 \
+ tx368 + tx372 -> tx375\\n\\ntx365 + tx370 + tx373 -> tx376\\n\\ntx374 \
tzz445 -> tx377\\n\\ntx375 tzz446 -> tx378\\n\\ntx376 tzz447 -> \
tx379\\n\\ntx377 + tx378 + tx379 -> tx380\\n\\ntx380 tzz449 -> \
tx381\\n\\ntx380 tzz444 -> tx382\\n\\ntx380 tzz448 -> tx383\\n\\ntx381 + \
tx382 + tx383 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\nbl tzz467 -> \
tx384\\n\\ncl tzz467 -> tx385\\n\\ntzz455 yh2 -> tx386\\n\\n-2. yh2 -> tzz466\
\\n\\ncl tzz466 -> tx387\\n\\ntzz455 zh2 -> tx388\\n\\ndl tzz465 -> \
tx389\\n\\ntx367 + tx372 + tx386 -> tx390\\n\\ntx369 + tx385 + tx388 -> tx391\
\\n\\ntx384 + tx387 + tx389 -> tx392\\n\\ntx390 tzz445 -> tx393\\n\\ntx391 \
tzz446 -> tx394\\n\\ntx392 tzz447 -> tx395\\n\\ntx393 + tx394 + tx395 -> \
tx396\\n\\ntx396 tzz449 -> tx397\\n\\ntx396 tzz444 -> tx398\\n\\ntx396 tzz448 \
-> tx399\\n\\ntx397 + tx398 + tx399 -> gbl\\n\\n-gbl -> \
fbl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 1, fbl );]\\n\\ntzz455 xh2 -> \
tx400\\n\\nbl tzz466 -> tx401\\n\\ndl tzz466 -> tx402\\n\\ntzz453 zh2 -> \
tx403\\n\\ntx371 + tx385 + tx401 -> tx404\\n\\ntx400 + tx402 + tx403 -> tx405\
\\n\\ntx392 tzz446 -> tx406\\n\\ntx404 tzz447 -> tx407\\n\\ntx405 tzz445 -> \
tx408\\n\\ntx406 + tx407 + tx408 -> tx409\\n\\ntx409 tzz449 -> \
tx410\\n\\ntx409 tzz444 -> tx411\\n\\ntx409 tzz448 -> tx412\\n\\ntx410 + \
tx411 + tx412 -> gcl\\n\\n-gcl -> \
fcl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 2, fcl );]\\n\\nbl tzz465 -> \
tx413\\n\\ntx367 + tx386 + tx413 -> tx414\\n\\ntx376 tzz446 -> \
tx415\\n\\ntx392 tzz445 -> tx416\\n\\ntx414 tzz447 -> tx417\\n\\ntx415 + \
tx416 + tx417 -> tx418\\n\\ntx418 tzz449 -> tx419\\n\\ntx418 tzz444 -> \
tx420\\n\\ntx418 tzz448 -> tx421\\n\\ntx419 + tx420 + tx421 -> gdl\\n\\n-gdl \
-> fdl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 3, fdl );]\\n\\n12. tzz443 \
-> tzz456\\n\\ntx283 tzz456 -> tx422\\n\\n-6. tzz442 -> tzz468\\n\\ntx283 \
tzz468 -> tx423\\n\\ntx283 tzz441 -> tx424\\n\\ntx422 + tx423 + tx424 -> \
gxl\\n\\n-gxl -> fxl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\n\\ntx284 tzz456 -> tx425\\n\\ntx284 tzz468 -> tx426\\n\\ntx284 tzz441 \
-> tx427\\n\\ntx425 + tx426 + tx427 -> gyl\\n\\n-gyl -> \
fyl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 5, fyl );]\\n\\ntx285 tzz456 -> \
tx428\\n\\ntx285 tzz468 -> tx429\\n\\ntx285 tzz441 -> tx430\\n\\ntx428 + \
tx429 + tx430 -> gzl\\n\\n-gzl -> \
fzl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzl );]\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148947239532*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489474162617`*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tx472 -> tx440, tx440 -> tx433, \
tx289 -> tx436, tx292 -> tx437}\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.70714894741835*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148947420368*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tx472 -> tx440\\n\\ntx440 \
-> tx433\\n\\ntx289 -> tx436\\n\\ntx292 -> tx437\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489474223833`*^9}],

Cell[BoxData["\<\"After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(I2);]\\\
n\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(\
dA);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(ak,I1,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bk,I1,1);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(ck,I1,2);]\\n\\nCCode[NONBONDRB_SET_POSITION(dk,I1,3);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(xk,I1,4);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(yk,I1,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zk,I1,6);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(al,I2,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bl,I2,1);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(cl,I2,2);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(dl,I2,3);]\\n\\nCCode[NONBONDRB_SET_POSITION(xl,I2,4);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(yl,I2,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zl,I2,6);]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ());]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh2,pointB,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh2,pointB,getZ());]\
\\n\\npower2[bk] -> tx216\\n\\npower2[bl] -> tx217\\n\\npower2[ck] -> \
tx218\\n\\npower2[cl] -> tx219\\n\\npower2[dk] -> tx220\\n\\npower2[dl] -> \
tx221\\n\\npower2[ak] -> tx222\\n\\npower2[al] -> tx223\\n\\n-2. ak -> tzz452\
\\n\\nbk tzz452 -> tx224\\n\\n-2. al -> tzz451\\n\\nbl tzz451 -> \
tx225\\n\\nck tzz452 -> tx226\\n\\n2. ck -> tzz454\\n\\nak tzz454 -> tx227\\n\
\\nbk tzz454 -> tx228\\n\\ncl tzz451 -> tx229\\n\\n2. cl -> tzz453\\n\\nal \
tzz453 -> tx230\\n\\nbl tzz453 -> tx231\\n\\ndk tzz452 -> tx232\\n\\n2. dk -> \
tzz450\\n\\nak tzz450 -> tx233\\n\\nbk tzz450 -> tx234\\n\\nck tzz450 -> \
tx235\\n\\ndl tzz451 -> tx236\\n\\n2. al -> tzz455\\n\\ndl tzz455 -> tx237\\n\
\\n2. bl -> tzz458\\n\\ndl tzz458 -> tx238\\n\\ndl tzz453 -> \
tx239\\n\\n-tx216 -> tx240\\n\\n-tx217 -> tx241\\n\\n-tx218 -> \
tx242\\n\\n-tx219 -> tx243\\n\\n-tx220 -> tx244\\n\\n-tx221 -> \
tx245\\n\\ntx216 + tx218 + tx220 + tx222 -> tx246\\n\\ntx217 + tx219 + tx221 \
+ tx223 -> tx247\\n\\ntx228 + tx232 -> tx248\\n\\ntx228 + tx233 -> \
tx249\\n\\ntx226 + tx234 -> tx250\\n\\ntx227 + tx234 -> tx251\\n\\ntx224 + \
tx235 -> tx252\\n\\ntx231 + tx236 -> tx253\\n\\ntx231 + tx237 -> \
tx254\\n\\ntx229 + tx238 -> tx255\\n\\ntx230 + tx238 -> tx256\\n\\ntx225 + \
tx239 -> tx257\\n\\ntx220 + tx222 + tx240 + tx242 -> tx258\\n\\ntx221 + tx223 \
+ tx241 + tx243 -> tx259\\n\\ntx218 + tx222 + tx240 + tx244 -> \
tx260\\n\\ntx219 + tx223 + tx241 + tx245 -> tx261\\n\\ntx246 xh1 -> \
tx262\\n\\ntx249 xh1 -> tx263\\n\\ntx250 xh1 -> tx264\\n\\n-xh2 -> \
tzz463\\n\\ntx247 tzz463 -> tx265\\n\\ntx254 tzz463 -> tx266\\n\\ntx255 \
tzz463 -> tx267\\n\\n-xl -> tx268\\n\\ntx248 yh1 -> tx269\\n\\ntx252 yh1 -> \
tx270\\n\\ntx260 yh1 -> tx271\\n\\n-yh2 -> tzz462\\n\\ntx253 tzz462 -> \
tx272\\n\\ntx257 tzz462 -> tx273\\n\\ntx261 tzz462 -> tx274\\n\\n-yl -> tx275\
\\n\\ntx251 zh1 -> tx276\\n\\ntx252 zh1 -> tx277\\n\\ntx258 zh1 -> \
tx278\\n\\n-zh2 -> tzz461\\n\\ntx256 tzz461 -> tx279\\n\\ntx257 tzz461 -> \
tx280\\n\\ntx259 tzz461 -> tx281\\n\\n-zl -> tx282\\n\\ntx262 + tx265 + tx268 \
+ tx269 + tx272 + tx276 + tx279 + xk -> tx283\\n\\ntx263 + tx266 + tx271 + \
tx274 + tx275 + tx277 + tx280 + yk -> tx284\\n\\ntx264 + tx267 + tx270 + \
tx273 + tx278 + tx281 + tx282 + zk -> tx285\\n\\npower2[tx283] -> \
tx286\\n\\npower2[tx284] -> tx287\\n\\npower2[tx285] -> tx288\\n\\ntx286 + \
tx287 + tx288 -> tx289\\n\\nreciprocal[tx289] -> tx472\\n\\npower2[tx472] -> \
tx439\\n\\ntx472 -> tx440\\n\\ntx439 tx440 -> tx431\\n\\npower2[tx431] -> \
tx290\\n\\npower2[tx440] -> tx432\\n\\ntx440 -> tx433\\n\\ntx432 tx433 -> \
tx291\\n\\nmysqrt[tx289] -> tx434\\n\\nreciprocal[tx434] -> tx292\\n\\ndA \
tx290 -> tx293\\n\\n-(dC tx291) -> tx294\\n\\ndQ1Q2 tx292 -> tx295\\n\\ntx293 \
+ tx294 + tx295 -> Energy\\n\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\\n\
\\n2. ak -> tzz460\\n\\ntzz460 xh1 -> tx296\\n\\n-2. ck xh1 -> \
tx297\\n\\ntzz450 xh1 -> tx298\\n\\ntzz460 yh1 -> tx299\\n\\n-2. yh1 -> \
tzz471\\n\\nbk tzz471 -> tx300\\n\\ndk tzz471 -> tx301\\n\\ntzz460 zh1 -> \
tx302\\n\\n-2. zh1 -> tzz470\\n\\nbk tzz470 -> tx303\\n\\ntzz454 zh1 -> tx304\
\\n\\ntx297 + tx300 + tx302 -> tx305\\n\\ntx298 + tx299 + tx303 -> \
tx306\\n\\ntx296 + tx301 + tx304 -> tx307\\n\\n2. tx285 -> tzz445\\n\\ntx305 \
tzz445 -> tx308\\n\\n2. tx284 -> tzz446\\n\\ntx306 tzz446 -> tx309\\n\\n2. \
tx283 -> tzz447\\n\\ntx307 tzz447 -> tx310\\n\\npower2[tx439] -> \
tx435\\n\\ntx431 tx435 -> tx311\\n\\npower2[tx432] -> tx312\\n\\ntx289 -> \
tx436\\n\\ntx292 -> tx437\\n\\nreciprocal[tx436] -> tx438\\n\\ntx437 tx438 -> \
tx313\\n\\ntx308 + tx309 + tx310 -> tx314\\n\\ndA tx311 -> tzz443\\n\\n-6. \
tzz443 -> tzz449\\n\\ntx314 tzz449 -> tx315\\n\\ndC tx312 -> tzz442\\n\\n3 \
tzz442 -> tzz444\\n\\ntx314 tzz444 -> tx316\\n\\ndQ1Q2 tx313 -> \
tzz441\\n\\n-0.5 tzz441 -> tzz448\\n\\ntx314 tzz448 -> tx317\\n\\ntx315 + \
tx316 + tx317 -> gak\\n\\n-gak -> \
fak\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 0, fak );]\\n\\n2. bk -> tzz459\
\\n\\ntzz459 xh1 -> tx318\\n\\ntzz454 xh1 -> tx319\\n\\ntzz452 yh1 -> \
tx320\\n\\ntzz454 yh1 -> tx321\\n\\ntzz452 zh1 -> tx322\\n\\ntzz450 zh1 -> \
tx323\\n\\ntx298 + tx303 + tx320 -> tx324\\n\\ntx300 + tx319 + tx322 -> tx325\
\\n\\ntx318 + tx321 + tx323 -> tx326\\n\\ntx324 tzz445 -> tx327\\n\\ntx325 \
tzz446 -> tx328\\n\\ntx326 tzz447 -> tx329\\n\\ntx327 + tx328 + tx329 -> \
tx330\\n\\ntx330 tzz449 -> tx331\\n\\ntx330 tzz444 -> tx332\\n\\ntx330 tzz448 \
-> tx333\\n\\ntx331 + tx332 + tx333 -> gbk\\n\\n-gbk -> \
fbk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 1, fbk );]\\n\\ntzz452 xh1 -> \
tx334\\n\\ntzz459 yh1 -> tx335\\n\\ntzz450 yh1 -> tx336\\n\\nck tzz470 -> \
tx337\\n\\ntx302 + tx319 + tx335 -> tx338\\n\\ntx334 + tx336 + tx337 -> tx339\
\\n\\ntx326 tzz446 -> tx340\\n\\ntx338 tzz447 -> tx341\\n\\ntx339 tzz445 -> \
tx342\\n\\ntx340 + tx341 + tx342 -> tx343\\n\\ntx343 tzz449 -> \
tx344\\n\\ntx343 tzz444 -> tx345\\n\\ntx343 tzz448 -> tx346\\n\\ntx344 + \
tx345 + tx346 -> gck\\n\\n-gck -> \
fck\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 2, fck );]\\n\\ntzz459 zh1 -> \
tx347\\n\\ntx298 + tx320 + tx347 -> tx348\\n\\ntx307 tzz446 -> \
tx349\\n\\ntx326 tzz445 -> tx350\\n\\ntx348 tzz447 -> tx351\\n\\ntx349 + \
tx350 + tx351 -> tx352\\n\\ntx352 tzz449 -> tx353\\n\\ntx352 tzz444 -> \
tx354\\n\\ntx352 tzz448 -> tx355\\n\\ntx353 + tx354 + tx355 -> gdk\\n\\n-gdk \
-> fdk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 3, fdk );]\\n\\n-12. tzz443 \
-> tzz469\\n\\ntx283 tzz469 -> tx356\\n\\n6. tzz442 -> tzz457\\n\\ntx283 \
tzz457 -> tx357\\n\\n-tzz441 -> tzz464\\n\\ntx283 tzz464 -> tx358\\n\\ntx356 \
+ tx357 + tx358 -> gxk\\n\\n-gxk -> \
fxk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 4, fxk );]\\n\\ntx284 tzz469 -> \
tx359\\n\\ntx284 tzz457 -> tx360\\n\\ntx284 tzz464 -> tx361\\n\\ntx359 + \
tx360 + tx361 -> gyk\\n\\n-gyk -> \
fyk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 5, fyk );]\\n\\ntx285 tzz469 -> \
tx362\\n\\ntx285 tzz457 -> tx363\\n\\ntx285 tzz464 -> tx364\\n\\ntx362 + \
tx363 + tx364 -> gzk\\n\\n-gzk -> \
fzk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 6, fzk );]\\n\\ntzz451 xh2 -> \
tx365\\n\\ntzz453 xh2 -> tx366\\n\\n-2. xh2 -> tzz467\\n\\ndl tzz467 -> tx367\
\\n\\ntzz451 yh2 -> tx368\\n\\ntzz458 yh2 -> tx369\\n\\n2. dl yh2 -> tx370\\n\
\\ntzz451 zh2 -> tx371\\n\\ntzz458 zh2 -> tx372\\n\\n-2. zh2 -> \
tzz465\\n\\ncl tzz465 -> tx373\\n\\ntx366 + tx369 + tx371 -> tx374\\n\\ntx367 \
+ tx368 + tx372 -> tx375\\n\\ntx365 + tx370 + tx373 -> tx376\\n\\ntx374 \
tzz445 -> tx377\\n\\ntx375 tzz446 -> tx378\\n\\ntx376 tzz447 -> \
tx379\\n\\ntx377 + tx378 + tx379 -> tx380\\n\\ntx380 tzz449 -> \
tx381\\n\\ntx380 tzz444 -> tx382\\n\\ntx380 tzz448 -> tx383\\n\\ntx381 + \
tx382 + tx383 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\nbl tzz467 -> \
tx384\\n\\ncl tzz467 -> tx385\\n\\ntzz455 yh2 -> tx386\\n\\n-2. yh2 -> tzz466\
\\n\\ncl tzz466 -> tx387\\n\\ntzz455 zh2 -> tx388\\n\\ndl tzz465 -> \
tx389\\n\\ntx367 + tx372 + tx386 -> tx390\\n\\ntx369 + tx385 + tx388 -> tx391\
\\n\\ntx384 + tx387 + tx389 -> tx392\\n\\ntx390 tzz445 -> tx393\\n\\ntx391 \
tzz446 -> tx394\\n\\ntx392 tzz447 -> tx395\\n\\ntx393 + tx394 + tx395 -> \
tx396\\n\\ntx396 tzz449 -> tx397\\n\\ntx396 tzz444 -> tx398\\n\\ntx396 tzz448 \
-> tx399\\n\\ntx397 + tx398 + tx399 -> gbl\\n\\n-gbl -> \
fbl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 1, fbl );]\\n\\ntzz455 xh2 -> \
tx400\\n\\nbl tzz466 -> tx401\\n\\ndl tzz466 -> tx402\\n\\ntzz453 zh2 -> \
tx403\\n\\ntx371 + tx385 + tx401 -> tx404\\n\\ntx400 + tx402 + tx403 -> tx405\
\\n\\ntx392 tzz446 -> tx406\\n\\ntx404 tzz447 -> tx407\\n\\ntx405 tzz445 -> \
tx408\\n\\ntx406 + tx407 + tx408 -> tx409\\n\\ntx409 tzz449 -> \
tx410\\n\\ntx409 tzz444 -> tx411\\n\\ntx409 tzz448 -> tx412\\n\\ntx410 + \
tx411 + tx412 -> gcl\\n\\n-gcl -> \
fcl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 2, fcl );]\\n\\nbl tzz465 -> \
tx413\\n\\ntx367 + tx386 + tx413 -> tx414\\n\\ntx376 tzz446 -> \
tx415\\n\\ntx392 tzz445 -> tx416\\n\\ntx414 tzz447 -> tx417\\n\\ntx415 + \
tx416 + tx417 -> tx418\\n\\ntx418 tzz449 -> tx419\\n\\ntx418 tzz444 -> \
tx420\\n\\ntx418 tzz448 -> tx421\\n\\ntx419 + tx420 + tx421 -> gdl\\n\\n-gdl \
-> fdl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 3, fdl );]\\n\\n12. tzz443 \
-> tzz456\\n\\ntx283 tzz456 -> tx422\\n\\n-6. tzz442 -> tzz468\\n\\ntx283 \
tzz468 -> tx423\\n\\ntx283 tzz441 -> tx424\\n\\ntx422 + tx423 + tx424 -> \
gxl\\n\\n-gxl -> fxl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\n\\ntx284 tzz456 -> tx425\\n\\ntx284 tzz468 -> tx426\\n\\ntx284 tzz441 \
-> tx427\\n\\ntx425 + tx426 + tx427 -> gyl\\n\\n-gyl -> \
fyl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 5, fyl );]\\n\\ntx285 tzz456 -> \
tx428\\n\\ntx285 tzz468 -> tx429\\n\\ntx285 tzz441 -> tx430\\n\\ntx428 + \
tx429 + tx430 -> gzl\\n\\n-gzl -> \
fzl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzl );]\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148947424438*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tx472 -> tx440, tx440 -> tx433, \
tx289 -> tx436, tx292 -> tx437}\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148947733173*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148947736103*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tx472 -> tx440\\n\\ntx440 \
-> tx433\\n\\ntx289 -> tx436\\n\\ntx292 -> tx437\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148947738578*^9}],

Cell[BoxData["\<\"After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(I2);]\\\
n\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(\
dA);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(ak,I1,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bk,I1,1);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(ck,I1,2);]\\n\\nCCode[NONBONDRB_SET_POSITION(dk,I1,3);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(xk,I1,4);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(yk,I1,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zk,I1,6);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(al,I2,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bl,I2,1);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(cl,I2,2);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(dl,I2,3);]\\n\\nCCode[NONBONDRB_SET_POSITION(xl,I2,4);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(yl,I2,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zl,I2,6);]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ());]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh2,pointB,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh2,pointB,getZ());]\
\\n\\npower2[bk] -> tx216\\n\\npower2[bl] -> tx217\\n\\npower2[ck] -> \
tx218\\n\\npower2[cl] -> tx219\\n\\npower2[dk] -> tx220\\n\\npower2[dl] -> \
tx221\\n\\npower2[ak] -> tx222\\n\\npower2[al] -> tx223\\n\\n-2. ak -> tzz452\
\\n\\nbk tzz452 -> tx224\\n\\n-2. al -> tzz451\\n\\nbl tzz451 -> \
tx225\\n\\nck tzz452 -> tx226\\n\\n2. ck -> tzz454\\n\\nak tzz454 -> tx227\\n\
\\nbk tzz454 -> tx228\\n\\ncl tzz451 -> tx229\\n\\n2. cl -> tzz453\\n\\nal \
tzz453 -> tx230\\n\\nbl tzz453 -> tx231\\n\\ndk tzz452 -> tx232\\n\\n2. dk -> \
tzz450\\n\\nak tzz450 -> tx233\\n\\nbk tzz450 -> tx234\\n\\nck tzz450 -> \
tx235\\n\\ndl tzz451 -> tx236\\n\\n2. al -> tzz455\\n\\ndl tzz455 -> tx237\\n\
\\n2. bl -> tzz458\\n\\ndl tzz458 -> tx238\\n\\ndl tzz453 -> \
tx239\\n\\n-tx216 -> tx240\\n\\n-tx217 -> tx241\\n\\n-tx218 -> \
tx242\\n\\n-tx219 -> tx243\\n\\n-tx220 -> tx244\\n\\n-tx221 -> \
tx245\\n\\ntx216 + tx218 + tx220 + tx222 -> tx246\\n\\ntx217 + tx219 + tx221 \
+ tx223 -> tx247\\n\\ntx228 + tx232 -> tx248\\n\\ntx228 + tx233 -> \
tx249\\n\\ntx226 + tx234 -> tx250\\n\\ntx227 + tx234 -> tx251\\n\\ntx224 + \
tx235 -> tx252\\n\\ntx231 + tx236 -> tx253\\n\\ntx231 + tx237 -> \
tx254\\n\\ntx229 + tx238 -> tx255\\n\\ntx230 + tx238 -> tx256\\n\\ntx225 + \
tx239 -> tx257\\n\\ntx222 + tx240 -> tzz476\\n\\ntx220 + tx242 + tzz476 -> \
tx258\\n\\ntx223 + tx241 -> tzz475\\n\\ntx221 + tx243 + tzz475 -> \
tx259\\n\\ntx218 + tx244 + tzz476 -> tx260\\n\\ntx219 + tx245 + tzz475 -> \
tx261\\n\\ntx246 xh1 -> tx262\\n\\ntx249 xh1 -> tx263\\n\\ntx250 xh1 -> tx264\
\\n\\n-xh2 -> tzz463\\n\\ntx247 tzz463 -> tx265\\n\\ntx254 tzz463 -> tx266\\n\
\\ntx255 tzz463 -> tx267\\n\\n-xl -> tx268\\n\\ntx248 yh1 -> tx269\\n\\ntx252 \
yh1 -> tx270\\n\\ntx260 yh1 -> tx271\\n\\n-yh2 -> tzz462\\n\\ntx253 tzz462 -> \
tx272\\n\\ntx257 tzz462 -> tx273\\n\\ntx261 tzz462 -> tx274\\n\\n-yl -> tx275\
\\n\\ntx251 zh1 -> tx276\\n\\ntx252 zh1 -> tx277\\n\\ntx258 zh1 -> \
tx278\\n\\n-zh2 -> tzz461\\n\\ntx256 tzz461 -> tx279\\n\\ntx257 tzz461 -> \
tx280\\n\\ntx259 tzz461 -> tx281\\n\\n-zl -> tx282\\n\\ntx262 + tx265 + tx268 \
+ tx269 + tx272 + tx276 + tx279 + xk -> tx283\\n\\ntx263 + tx266 + tx271 + \
tx274 + tx275 + tx277 + tx280 + yk -> tx284\\n\\ntx264 + tx267 + tx270 + \
tx273 + tx278 + tx281 + tx282 + zk -> tx285\\n\\npower2[tx283] -> \
tx286\\n\\npower2[tx284] -> tx287\\n\\npower2[tx285] -> tx288\\n\\ntx286 + \
tx287 + tx288 -> tx289\\n\\nreciprocal[tx289] -> tx472\\n\\npower2[tx472] -> \
tx439\\n\\ntx472 -> tx440\\n\\ntx439 tx440 -> tx431\\n\\npower2[tx431] -> \
tx290\\n\\npower2[tx440] -> tx432\\n\\ntx440 -> tx433\\n\\ntx432 tx433 -> \
tx291\\n\\nmysqrt[tx289] -> tx434\\n\\nreciprocal[tx434] -> tx292\\n\\ndA \
tx290 -> tx293\\n\\n-(dC tx291) -> tx294\\n\\ndQ1Q2 tx292 -> tx295\\n\\ntx293 \
+ tx294 + tx295 -> Energy\\n\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\\n\
\\n2. ak -> tzz460\\n\\ntzz460 xh1 -> tx296\\n\\n-2. ck xh1 -> \
tx297\\n\\ntzz450 xh1 -> tx298\\n\\ntzz460 yh1 -> tx299\\n\\n-2. yh1 -> \
tzz471\\n\\nbk tzz471 -> tx300\\n\\ndk tzz471 -> tx301\\n\\ntzz460 zh1 -> \
tx302\\n\\n-2. zh1 -> tzz470\\n\\nbk tzz470 -> tx303\\n\\ntzz454 zh1 -> tx304\
\\n\\ntx297 + tx300 + tx302 -> tx305\\n\\ntx298 + tx299 + tx303 -> \
tx306\\n\\ntx296 + tx301 + tx304 -> tx307\\n\\n2. tx285 -> tzz445\\n\\ntx305 \
tzz445 -> tx308\\n\\n2. tx284 -> tzz446\\n\\ntx306 tzz446 -> tx309\\n\\n2. \
tx283 -> tzz447\\n\\ntx307 tzz447 -> tx310\\n\\npower2[tx439] -> \
tx435\\n\\ntx431 tx435 -> tx311\\n\\npower2[tx432] -> tx312\\n\\ntx289 -> \
tx436\\n\\ntx292 -> tx437\\n\\nreciprocal[tx436] -> tx438\\n\\ntx437 tx438 -> \
tx313\\n\\ntx308 + tx309 + tx310 -> tx314\\n\\ndA tx311 -> tzz443\\n\\n-6. \
tzz443 -> tzz449\\n\\ntx314 tzz449 -> tx315\\n\\ndC tx312 -> tzz442\\n\\n3 \
tzz442 -> tzz444\\n\\ntx314 tzz444 -> tx316\\n\\ndQ1Q2 tx313 -> \
tzz441\\n\\n-0.5 tzz441 -> tzz448\\n\\ntx314 tzz448 -> tx317\\n\\ntx315 + \
tx316 + tx317 -> gak\\n\\n-gak -> \
fak\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 0, fak );]\\n\\n2. bk -> tzz459\
\\n\\ntzz459 xh1 -> tx318\\n\\ntzz454 xh1 -> tx319\\n\\ntzz452 yh1 -> \
tx320\\n\\ntzz454 yh1 -> tx321\\n\\ntzz452 zh1 -> tx322\\n\\ntzz450 zh1 -> \
tx323\\n\\ntx298 + tx320 -> tzz474\\n\\ntx303 + tzz474 -> tx324\\n\\ntx300 + \
tx319 + tx322 -> tx325\\n\\ntx318 + tx321 + tx323 -> tx326\\n\\ntx324 tzz445 \
-> tx327\\n\\ntx325 tzz446 -> tx328\\n\\ntx326 tzz447 -> tx329\\n\\ntx327 + \
tx328 + tx329 -> tx330\\n\\ntx330 tzz449 -> tx331\\n\\ntx330 tzz444 -> \
tx332\\n\\ntx330 tzz448 -> tx333\\n\\ntx331 + tx332 + tx333 -> gbk\\n\\n-gbk \
-> fbk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 1, fbk );]\\n\\ntzz452 xh1 \
-> tx334\\n\\ntzz459 yh1 -> tx335\\n\\ntzz450 yh1 -> tx336\\n\\nck tzz470 -> \
tx337\\n\\ntx302 + tx319 + tx335 -> tx338\\n\\ntx334 + tx336 + tx337 -> tx339\
\\n\\ntx326 tzz446 -> tx340\\n\\ntx338 tzz447 -> tx341\\n\\ntx339 tzz445 -> \
tx342\\n\\ntx340 + tx341 + tx342 -> tx343\\n\\ntx343 tzz449 -> \
tx344\\n\\ntx343 tzz444 -> tx345\\n\\ntx343 tzz448 -> tx346\\n\\ntx344 + \
tx345 + tx346 -> gck\\n\\n-gck -> \
fck\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 2, fck );]\\n\\ntzz459 zh1 -> \
tx347\\n\\ntx347 + tzz474 -> tx348\\n\\ntx307 tzz446 -> tx349\\n\\ntx326 \
tzz445 -> tx350\\n\\ntx348 tzz447 -> tx351\\n\\ntx349 + tx350 + tx351 -> \
tx352\\n\\ntx352 tzz449 -> tx353\\n\\ntx352 tzz444 -> tx354\\n\\ntx352 tzz448 \
-> tx355\\n\\ntx353 + tx354 + tx355 -> gdk\\n\\n-gdk -> \
fdk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 3, fdk );]\\n\\n-12. tzz443 -> \
tzz469\\n\\ntx283 tzz469 -> tx356\\n\\n6. tzz442 -> tzz457\\n\\ntx283 tzz457 \
-> tx357\\n\\n-tzz441 -> tzz464\\n\\ntx283 tzz464 -> tx358\\n\\ntx356 + tx357 \
+ tx358 -> gxk\\n\\n-gxk -> fxk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 4, \
fxk );]\\n\\ntx284 tzz469 -> tx359\\n\\ntx284 tzz457 -> tx360\\n\\ntx284 \
tzz464 -> tx361\\n\\ntx359 + tx360 + tx361 -> gyk\\n\\n-gyk -> \
fyk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 5, fyk );]\\n\\ntx285 tzz469 -> \
tx362\\n\\ntx285 tzz457 -> tx363\\n\\ntx285 tzz464 -> tx364\\n\\ntx362 + \
tx363 + tx364 -> gzk\\n\\n-gzk -> \
fzk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 6, fzk );]\\n\\ntzz451 xh2 -> \
tx365\\n\\ntzz453 xh2 -> tx366\\n\\n-2. xh2 -> tzz467\\n\\ndl tzz467 -> tx367\
\\n\\ntzz451 yh2 -> tx368\\n\\ntzz458 yh2 -> tx369\\n\\n2. dl yh2 -> tx370\\n\
\\ntzz451 zh2 -> tx371\\n\\ntzz458 zh2 -> tx372\\n\\n-2. zh2 -> \
tzz465\\n\\ncl tzz465 -> tx373\\n\\ntx366 + tx369 + tx371 -> tx374\\n\\ntx367 \
+ tx368 + tx372 -> tx375\\n\\ntx365 + tx370 + tx373 -> tx376\\n\\ntx374 \
tzz445 -> tx377\\n\\ntx375 tzz446 -> tx378\\n\\ntx376 tzz447 -> \
tx379\\n\\ntx377 + tx378 + tx379 -> tx380\\n\\ntx380 tzz449 -> \
tx381\\n\\ntx380 tzz444 -> tx382\\n\\ntx380 tzz448 -> tx383\\n\\ntx381 + \
tx382 + tx383 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\nbl tzz467 -> \
tx384\\n\\ncl tzz467 -> tx385\\n\\ntzz455 yh2 -> tx386\\n\\n-2. yh2 -> tzz466\
\\n\\ncl tzz466 -> tx387\\n\\ntzz455 zh2 -> tx388\\n\\ndl tzz465 -> \
tx389\\n\\ntx367 + tx386 -> tzz473\\n\\ntx372 + tzz473 -> tx390\\n\\ntx369 + \
tx385 + tx388 -> tx391\\n\\ntx384 + tx387 + tx389 -> tx392\\n\\ntx390 tzz445 \
-> tx393\\n\\ntx391 tzz446 -> tx394\\n\\ntx392 tzz447 -> tx395\\n\\ntx393 + \
tx394 + tx395 -> tx396\\n\\ntx396 tzz449 -> tx397\\n\\ntx396 tzz444 -> \
tx398\\n\\ntx396 tzz448 -> tx399\\n\\ntx397 + tx398 + tx399 -> gbl\\n\\n-gbl \
-> fbl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 1, fbl );]\\n\\ntzz455 xh2 \
-> tx400\\n\\nbl tzz466 -> tx401\\n\\ndl tzz466 -> tx402\\n\\ntzz453 zh2 -> \
tx403\\n\\ntx371 + tx385 + tx401 -> tx404\\n\\ntx400 + tx402 + tx403 -> tx405\
\\n\\ntx392 tzz446 -> tx406\\n\\ntx404 tzz447 -> tx407\\n\\ntx405 tzz445 -> \
tx408\\n\\ntx406 + tx407 + tx408 -> tx409\\n\\ntx409 tzz449 -> \
tx410\\n\\ntx409 tzz444 -> tx411\\n\\ntx409 tzz448 -> tx412\\n\\ntx410 + \
tx411 + tx412 -> gcl\\n\\n-gcl -> \
fcl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 2, fcl );]\\n\\nbl tzz465 -> \
tx413\\n\\ntx413 + tzz473 -> tx414\\n\\ntx376 tzz446 -> tx415\\n\\ntx392 \
tzz445 -> tx416\\n\\ntx414 tzz447 -> tx417\\n\\ntx415 + tx416 + tx417 -> \
tx418\\n\\ntx418 tzz449 -> tx419\\n\\ntx418 tzz444 -> tx420\\n\\ntx418 tzz448 \
-> tx421\\n\\ntx419 + tx420 + tx421 -> gdl\\n\\n-gdl -> \
fdl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 3, fdl );]\\n\\n12. tzz443 -> \
tzz456\\n\\ntx283 tzz456 -> tx422\\n\\n-6. tzz442 -> tzz468\\n\\ntx283 tzz468 \
-> tx423\\n\\ntx283 tzz441 -> tx424\\n\\ntx422 + tx423 + tx424 -> \
gxl\\n\\n-gxl -> fxl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\n\\ntx284 tzz456 -> tx425\\n\\ntx284 tzz468 -> tx426\\n\\ntx284 tzz441 \
-> tx427\\n\\ntx425 + tx426 + tx427 -> gyl\\n\\n-gyl -> \
fyl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 5, fyl );]\\n\\ntx285 tzz456 -> \
tx428\\n\\ntx285 tzz468 -> tx429\\n\\ntx285 tzz441 -> tx430\\n\\ntx428 + \
tx429 + tx430 -> gzl\\n\\n-gzl -> \
fzl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzl );]\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148947741042*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing declares to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBONDRB_termDeclares.cc\"\>"}],
  SequenceForm["Writing declares to file: ", "_NONBONDRB_termDeclares.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.70714894779906*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing code to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBONDRB_termCode.cc\"\>"}],
  SequenceForm["Writing code to file: ", "_NONBONDRB_termCode.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148947801936*^9}],

Cell[BoxData["\"\<trivialRules>> triv = {nonbondRBEnergyFn -> Energy}\>\""], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146554926938*^9, 3.707146598563415*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, nonbondRBDeviation}\"\>"], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146554928162*^9, 3.70714659856561*^9}],

Cell[BoxData["\"\<Trivial rules are being removed: nonbondRBEnergyFn -> \
Energy\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146554929359*^9, 3.707146598566432*^9}],

Cell[BoxData["\"\<After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(I2)\
;]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\\\n\\\\nCCode[NONBONDRB_\
SET_PARAMETER(dA);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\\\n\\\\\
nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\\\n\\\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ(\
));]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\\\n\\\\nCCode[\
NONBONDRB_SET_POINT(yh2,pointB,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(\
zh2,pointB,getZ());]\\\\n\\\\nnonbondRBEnergyFn -> \
Energy\\\\n\\\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.707146554930573*^9, {3.707146598567664*^9, 3.707146611529502*^9}}],

Cell[BoxData["\<\"Collecting terms\"\>"], "Print",
 CellChangeTimes->{3.7071465551205063`*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707146555122032*^9}],

Cell[BoxData["\"\<trivialRules>> triv = {nonbondRBEnergyFn -> Energy}\>\""], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146555123384*^9, 3.7071465985685883`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, nonbondRBDeviation}\"\>"], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146555124707*^9, 3.7071465985694313`*^9}],

Cell[BoxData["\"\<Trivial rules are being removed: nonbondRBEnergyFn -> \
Energy\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146555125849*^9, 3.7071465985702553`*^9}],

Cell[BoxData["\"\<After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(I2)\
;]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\\\n\\\\nCCode[NONBONDRB_\
SET_PARAMETER(dA);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\\\n\\\\\
nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\\\n\\\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ(\
));]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\\\n\\\\nCCode[\
NONBONDRB_SET_POINT(yh2,pointB,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(\
zh2,pointB,getZ());]\\\\n\\\\nnonbondRBEnergyFn -> \
Energy\\\\n\\\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.707146555126994*^9, {3.707146598571507*^9, 3.707146611539405*^9}}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.7071465554550962`*^9}],

Cell[BoxData["\"\<trivialRules>> triv = {nonbondRBEnergyFn -> Energy}\>\""], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7071465554567337`*^9, 3.707146598572425*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, nonbondRBDeviation}\"\>"], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146555458202*^9, 3.707146598573275*^9}],

Cell[BoxData["\"\<Trivial rules are being removed: nonbondRBEnergyFn -> \
Energy\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146555459589*^9, 3.7071465985741034`*^9}],

Cell[BoxData["\"\<After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(I2)\
;]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\\\n\\\\nCCode[NONBONDRB_\
SET_PARAMETER(dA);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\\\n\\\\\
nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\\\n\\\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ(\
));]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\\\n\\\\nCCode[\
NONBONDRB_SET_POINT(yh2,pointB,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(\
zh2,pointB,getZ());]\\\\n\\\\nnonbondRBEnergyFn -> \
Energy\\\\n\\\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.7071465554608183`*^9, {3.707146598575267*^9, 3.7071466115484953`*^9}}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707146555704143*^9}],

Cell[BoxData["\"\<trivialRules>> triv = {nonbondRBEnergyFn -> Energy}\>\""], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146555705748*^9, 3.707146598576144*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, nonbondRBDeviation}\"\>"], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146555707198*^9, 3.7071465985769567`*^9}],

Cell[BoxData["\"\<Trivial rules are being removed: nonbondRBEnergyFn -> \
Energy\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146555708582*^9, 3.707146598577776*^9}],

Cell[BoxData["\"\<After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(I2)\
;]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\\\n\\\\nCCode[NONBONDRB_\
SET_PARAMETER(dA);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\\\n\\\\\
nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\\\n\\\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ(\
));]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\\\n\\\\nCCode[\
NONBONDRB_SET_POINT(yh2,pointB,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(\
zh2,pointB,getZ());]\\\\n\\\\nnonbondRBEnergyFn -> \
Energy\\\\n\\\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.707146555709831*^9, {3.707146598578931*^9, 3.707146611557538*^9}}],

Cell[BoxData["\"\<trivialRules>> triv = {nonbondRBEnergyFn -> Energy}\>\""], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7071465561028843`*^9, 3.707146598579801*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, nonbondRBDeviation}\"\>"], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146556104545*^9, 3.7071465985805893`*^9}],

Cell[BoxData["\"\<Trivial rules are being removed: nonbondRBEnergyFn -> \
Energy\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7071465561059513`*^9, 3.70714659858136*^9}],

Cell[BoxData["\"\<After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(I2)\
;]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\\\n\\\\nCCode[NONBONDRB_\
SET_PARAMETER(dA);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\\\n\\\\\
nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\\\n\\\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ(\
));]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\\\n\\\\nCCode[\
NONBONDRB_SET_POINT(yh2,pointB,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(\
zh2,pointB,getZ());]\\\\n\\\\nnonbondRBEnergyFn -> \
Energy\\\\n\\\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.707146556107338*^9, {3.707146598582491*^9, 3.707146611566619*^9}}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.70714655633771*^9}],

Cell[BoxData["\"\<trivialRules>> triv = {nonbondRBEnergyFn -> Energy}\>\""], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146556339469*^9, 3.7071465985833187`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, nonbondRBDeviation}\"\>"], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146556341074*^9, 3.707146598584079*^9}],

Cell[BoxData["\"\<Trivial rules are being removed: nonbondRBEnergyFn -> \
Energy\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146556342516*^9, 3.707146598584819*^9}],

Cell[BoxData["\"\<After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(I2)\
;]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\\\n\\\\nCCode[NONBONDRB_\
SET_PARAMETER(dA);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\\\n\\\\\
nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\\\n\\\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ(\
));]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\\\n\\\\nCCode[\
NONBONDRB_SET_POINT(yh2,pointB,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(\
zh2,pointB,getZ());]\\\\n\\\\nnonbondRBEnergyFn -> \
Energy\\\\n\\\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.707146556343858*^9, {3.707146598585919*^9, 3.707146611575688*^9}}],

Cell[BoxData["\"\<trivialRules>> triv = {nonbondRBEnergyFn -> Energy}\>\""], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146556968987*^9, 3.707146598586694*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, nonbondRBDeviation}\"\>"], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146556971044*^9, 3.707146598587427*^9}],

Cell[BoxData["\"\<Trivial rules are being removed: nonbondRBEnergyFn -> \
Energy\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146556972909*^9, 3.707146598588154*^9}],

Cell[BoxData["\"\<After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(I2)\
;]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\\\n\\\\nCCode[NONBONDRB_\
SET_PARAMETER(dA);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\\\n\\\\\
nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\\\n\\\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ(\
));]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\\\n\\\\nCCode[\
NONBONDRB_SET_POINT(yh2,pointB,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(\
zh2,pointB,getZ());]\\\\n\\\\nnonbondRBEnergyFn -> \
Energy\\\\n\\\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.707146556974464*^9, {3.707146598589217*^9, 3.7071466115847473`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing declares to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBOND_termDeclares.cc\"\>"}],
  SequenceForm["Writing declares to file: ", "_NONBOND_termDeclares.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707146557053534*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing code to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBOND_termCode.cc\"\>"}],
  SequenceForm["Writing code to file: ", "_NONBOND_termCode.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707146557055546*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Draw an evaluation tree for the optimized \"C\" code.  It doesn' t do \
anything useful but it looks impressive - I have got to print some of these \
on large format posters.

Inputs (independent variables and parameters) are on the left and drawn in \
Black, and outputs are on the right and also drawn in Black. Computationally \
expensive functions are highlighted in red, Plus functions are blue and Times \
functions are green.\
\>", "Subsection",
 CellChangeTimes->{{3.494844130294557*^9, 3.494844200819201*^9}, {
  3.494844239453156*^9, 3.494844307388302*^9}, {3.494844349909049*^9, 
  3.494844362349473*^9}, {3.494844417981534*^9, 3.49484444617253*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"packGraph", "[", "nonbondRBPack", "]"}]], "Input",
 CellChangeTimes->{{3.405634991753235*^9, 3.405634995403973*^9}, {
   3.4085648880849*^9, 3.408564889562644*^9}, 3.7026665440166197`*^9, 
   3.7026678792391*^9, {3.7071464544676456`*^9, 3.707146456728408*^9}, 
   3.7071465985900717`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 8.96551724137931}, {0.03, 
     17.333333333333336`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 26.896551724137932`}, {0.03, 52.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 44.82758620689655}, {0.03, 
     86.66666666666669}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 62.758620689655174`}, {0.03, 
     121.33333333333333`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 80.6896551724138}, {0.03, 156.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 98.62068965517241}, {0.03, 
     190.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 116.55172413793103`}, {0.03, 
     225.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 134.48275862068965`}, {0.03, 260.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 152.41379310344828`}, {0.03, 
     225.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 5.}, {0.03, 17.333333333333336`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 5.}, {0.13, 152.41379310344828`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 170.34482758620692`}, {0.03, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 15.}, {0.03, 52.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 15.}, {0.13, 170.34482758620692`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 25.}, {0.03, 86.66666666666669}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 25.}, {0.13, 152.41379310344828`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 188.27586206896552`}, {0.03, 
     86.66666666666669}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 35.}, {0.03, 225.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 35.}, {0.13, 188.27586206896552`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 45.}, {0.03, 17.333333333333336`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 45.}, {0.13, 188.27586206896552`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 55.}, {0.03, 121.33333333333333`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 55.}, {0.13, 170.34482758620692`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 206.20689655172413`}, {0.03, 
     121.33333333333333`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 65.}, {0.03, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 65.}, {0.13, 206.20689655172413`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 75.}, {0.03, 52.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 75.}, {0.13, 206.20689655172413`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 85.}, {0.03, 156.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 85.}, {0.13, 152.41379310344828`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 224.1379310344828}, {0.03, 156.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 95.}, {0.03, 225.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 95.}, {0.13, 224.1379310344828}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 105.}, {0.03, 17.333333333333336`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 105.}, {0.13, 224.1379310344828}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 115.}, {0.03, 86.66666666666669}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 115.}, {0.13, 224.1379310344828}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 125.}, {0.03, 190.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 125.}, {0.13, 170.34482758620692`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 242.0689655172414}, {0.03, 260.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 135.}, {0.03, 190.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 135.}, {0.13, 242.0689655172414}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.06999999999999999, 260.}, {0.03, 52.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 145.}, {0.03, 190.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 145.}, {0.13, 260.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 155.}, {0.03, 190.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 155.}, {0.13, 206.20689655172413`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 165.}, {0.13, 8.96551724137931}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 175.}, {0.13, 26.896551724137932`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 185.}, {0.13, 44.82758620689655}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 195.}, {0.13, 62.758620689655174`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 205.}, {0.13, 80.6896551724138}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 215.}, {0.13, 98.62068965517241}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 225.}, {0.13, 8.96551724137931}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 225.}, {0.13, 44.82758620689655}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 225.}, {0.13, 80.6896551724138}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.17, 225.}, {0.13, 116.55172413793103`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.17, 235.}, {0.13, 26.896551724137932`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.17, 235.}, {0.13, 62.758620689655174`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 235.}, {0.13, 98.62068965517241}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.17, 235.}, {0.13, 134.48275862068965`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 7.222222222222222}, {0.22999999999999998`, 45.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 7.222222222222222}, {0.22999999999999998`, 85.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 21.666666666666664`}, {0.22999999999999998`, 45.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 21.666666666666664`}, {0.22999999999999998`, 95.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 36.111111111111114`}, {0.22999999999999998`, 25.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 36.111111111111114`}, {0.22999999999999998`, 105.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 50.55555555555556}, {0.22999999999999998`, 35.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 50.55555555555556}, {0.22999999999999998`, 105.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 65.}, {0.22999999999999998`, 5.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 65.}, {0.22999999999999998`, 115.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 79.44444444444444}, {0.22999999999999998`, 75.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 79.44444444444444}, {0.22999999999999998`, 125.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 93.88888888888889}, {0.22999999999999998`, 75.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 93.88888888888889}, {0.22999999999999998`, 135.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 108.33333333333334`}, {0.22999999999999998`, 55.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 108.33333333333334`}, {0.22999999999999998`, 145.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 122.77777777777777`}, {0.22999999999999998`, 65.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 122.77777777777777`}, {0.22999999999999998`, 145.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 137.22222222222223`}, {0.22999999999999998`, 15.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 137.22222222222223`}, {0.22999999999999998`, 155.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 151.66666666666666`}, {0.13, 116.55172413793103`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 151.66666666666666`}, {0.22999999999999998`, 165.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 9.285714285714286}, {0.13, 
     80.6896551724138}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 9.285714285714286}, {0.22999999999999998`,
      185.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 9.285714285714286}, {0.33, 
     151.66666666666666`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 166.11111111111111`}, {0.13, 134.48275862068965`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 166.11111111111111`}, {0.22999999999999998`, 175.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 27.857142857142854`}, {0.13, 
     98.62068965517241}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 27.857142857142854`}, {
     0.22999999999999998`, 195.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 27.857142857142854`}, {0.33, 
     166.11111111111111`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 46.42857142857143}, {0.13, 
     44.82758620689655}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 46.42857142857143}, {0.22999999999999998`,
      205.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 46.42857142857143}, {0.33, 
     151.66666666666666`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 65.}, {0.13, 62.758620689655174`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 65.}, {0.22999999999999998`, 215.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 65.}, {0.33, 166.11111111111111`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 180.55555555555554`}, {0.22999999999999998`, 225.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 180.55555555555554`}, {0.13, 277.9310344827586}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 83.57142857142858}, {0.33, 
     21.666666666666664`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 83.57142857142858}, {0.13, 
     277.9310344827586}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 102.14285714285715`}, {0.33, 
     36.111111111111114`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 102.14285714285715`}, {0.13, 
     277.9310344827586}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 295.86206896551727`}, {0.03, 
     294.6666666666667}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 195.}, {0.22999999999999998`, 235.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 195.}, {0.13, 295.86206896551727`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 120.71428571428571`}, {0.33, 
     93.88888888888889}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 120.71428571428571`}, {0.13, 
     295.86206896551727`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 139.28571428571428`}, {0.33, 
     108.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 139.28571428571428`}, {0.13, 
     295.86206896551727`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 313.7931034482759}, {0.03, 
     329.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 157.85714285714286`}, {0.33, 
     7.222222222222222}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 157.85714285714286`}, {
     0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 176.42857142857142`}, {0.33, 65.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 176.42857142857142`}, {
     0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 20.}, {0.43, 46.42857142857143}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 20.}, {0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 331.72413793103453`}, {0.03, 364.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 195.}, {0.33, 79.44444444444444}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 195.}, {0.13, 331.72413793103453`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 213.57142857142858`}, {0.33, 
     137.22222222222223`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 213.57142857142858`}, {0.13, 
     331.72413793103453`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.47000000000000003`, 60.}, {0.43, 65.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 60.}, {0.13, 331.72413793103453`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 349.6551724137931}, {0.03, 
     398.6666666666667}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 232.14285714285717`}, {0.33, 
     50.55555555555556}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 232.14285714285717`}, {
     0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 250.71428571428572`}, {0.33, 65.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 250.71428571428572`}, {
     0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 100.}, {0.43, 9.285714285714286}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 100.}, {0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 367.58620689655174`}, {0.03, 
     433.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 269.28571428571433`}, {0.33, 
     122.77777777777777`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 269.28571428571433`}, {0.13, 
     367.58620689655174`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 287.8571428571429}, {0.33, 
     137.22222222222223`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 287.8571428571429}, {0.13, 
     367.58620689655174`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 140.}, {0.43, 27.857142857142854`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 140.}, {0.13, 367.58620689655174`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 385.51724137931035`}, {0.03, 
     468.00000000000006`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 180.}, {0.33, 180.55555555555554`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.47000000000000003`, 180.}, {0.33, 195.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 180.}, {0.13, 313.7931034482759}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 180.}, {0.43, 157.85714285714286`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.47000000000000003`, 180.}, {0.43, 195.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 180.}, {0.43, 232.14285714285717`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 180.}, {0.43, 269.28571428571433`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 180.}, {0.33, 209.44444444444443`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 52.}, {0.43, 83.57142857142858}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 52.}, {0.43, 120.71428571428571`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.5700000000000001, 52.}, {0.53, 20.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.5700000000000001, 52.}, {0.53, 60.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 52.}, {0.13, 349.6551724137931}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 52.}, {0.43, 250.71428571428572`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 52.}, {0.43, 287.8571428571429}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 52.}, {0.43, 306.42857142857144`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 156.}, {0.43, 102.14285714285715`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 156.}, {0.43, 139.28571428571428`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 156.}, {0.43, 176.42857142857142`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 156.}, {0.43, 213.57142857142858`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.5700000000000001, 156.}, {0.53, 100.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.5700000000000001, 156.}, {0.53, 140.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 156.}, {0.13, 385.51724137931035`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.5700000000000001, 156.}, {0.43, 325.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.5700000000000001, 260.}, {0.53, 180.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 20.}, {0.63, 52.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 60.}, {0.63, 156.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 14.444444444444445`}, {0.63, 260.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 14.444444444444445`}, {0.73, 20.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 14.444444444444445`}, {0.73, 60.}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[{{0.87, 20.}, {0.8300000000000001, 14.444444444444445`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.97, 52.}, {0.9300000000000002, 20.}}]}, 
   {GrayLevel[0], LineBox[{{0.97, 156.}, {0.9300000000000002, 20.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 28.88888888888889}, {1.03, 52.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 28.88888888888889}, {1.03, 156.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.17, 43.33333333333333}, {1.1300000000000001`, 
     28.88888888888889}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 86.66666666666666}, {1.03, 156.}}]}, 
   {GrayLevel[0], LineBox[{{1.07, 144.44444444444446`}, {1.03, 156.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.17, 130.}, {1.1300000000000001`, 86.66666666666666}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.17, 130.}, {1.1300000000000001`, 144.44444444444446`}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[{{0.87, 60.}, {0.8300000000000001, 14.444444444444445`}}]}, 
   {RGBColor[1, 0, 0], LineBox[{{0.97, 260.}, {0.9300000000000002, 60.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 43.33333333333333}, {1.1300000000000001`, 
     202.22222222222223`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 43.33333333333333}, {1.2300000000000002`, 
     43.33333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 130.}, {1.1300000000000001`, 260.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 130.}, {1.2300000000000002`, 130.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 317.77777777777777`}, {0.9300000000000002, 100.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 317.77777777777777`}, {1.03, 260.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.37, 20.}, {1.33, 43.33333333333333}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.37, 20.}, {1.33, 130.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.37, 20.}, {1.1300000000000001`, 317.77777777777777`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 403.44827586206895`}, {0.03, 
     225.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 265.}, {0.13, 403.44827586206895`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 265.}, {0.13, 277.9310344827586}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 275.}, {0.03, 86.66666666666669}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 275.}, {0.13, 277.9310344827586}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 285.}, {0.13, 224.1379310344828}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 285.}, {0.13, 277.9310344827586}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 223.88888888888889`}, {0.13, 403.44827586206895`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 223.88888888888889`}, {0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 238.33333333333331`}, {0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 343.5714285714286}, {0.03, 
     17.333333333333336`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 343.5714285714286}, {0.33, 
     238.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 362.14285714285717`}, {0.03, 156.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 362.14285714285717`}, {0.33, 
     238.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 252.77777777777777`}, {0.13, 403.44827586206895`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 252.77777777777777`}, {0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 267.22222222222223`}, {0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 380.71428571428567`}, {0.03, 
     17.333333333333336`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 380.71428571428567`}, {0.33, 
     267.22222222222223`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 281.6666666666667}, {0.13, 188.27586206896552`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 281.6666666666667}, {0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 220.}, {0.22999999999999998`, 275.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 220.}, {0.43, 343.5714285714286}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 220.}, {0.33, 252.77777777777777`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 260.}, {0.22999999999999998`, 285.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 260.}, {0.33, 223.88888888888889`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 260.}, {0.43, 380.71428571428567`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 300.}, {0.22999999999999998`, 265.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 300.}, {0.43, 362.14285714285717`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 300.}, {0.33, 281.6666666666667}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 100.}, {0.63, 156.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 43.33333333333333}, {0.53, 220.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 43.33333333333333}, {0.73, 100.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 140.}, {0.63, 52.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 72.22222222222223}, {0.53, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 72.22222222222223}, {0.73, 140.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.5700000000000001, 364.}, {0.53, 180.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 180.}, {0.53, 300.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 180.}, {0.63, 364.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 375.55555555555554`}, {1.03, 52.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.17, 216.66666666666663`}, {1.1300000000000001`, 
     28.88888888888889}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.17, 216.66666666666663`}, {1.1300000000000001`, 
     375.55555555555554`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.17, 303.3333333333333}, {1.1300000000000001`, 
     86.66666666666666}}]}, 
   {GrayLevel[0], 
    LineBox[{{0.87, 140.}, {0.8300000000000001, 14.444444444444445`}}]}, 
   {GrayLevel[0], LineBox[{{1.07, 433.33333333333337`}, {1.03, 260.}}]}, 
   {RGBColor[1, 0, 0], LineBox[{{0.97, 364.}, {0.9300000000000002, 140.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.17, 390.}, {1.1300000000000001`, 433.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.17, 390.}, {1.03, 364.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 180.}, {0.8300000000000001, 43.33333333333333}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 180.}, {0.8300000000000001, 72.22222222222223}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 180.}, {0.73, 180.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 216.66666666666663`}, {1.1300000000000001`, 
     202.22222222222223`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 216.66666666666663`}, {1.2300000000000002`, 
     216.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 60.}, {1.33, 216.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 6.5}, {0.9300000000000002, 180.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 6.5}, {1.4300000000000002`, 60.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 303.3333333333333}, {1.1300000000000001`, 260.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 303.3333333333333}, {1.2300000000000002`, 
     303.3333333333333}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 100.}, {1.33, 303.3333333333333}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 19.5}, {0.9300000000000002, 180.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 19.5}, {1.4300000000000002`, 100.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.27, 390.}, {0.9300000000000002, 100.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.27, 390.}, {1.2300000000000002`, 390.}}]}, 
   
   {RGBColor[0, 1, 0], LineBox[{{1.37, 140.}, {1.33, 390.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 32.5}, {0.9300000000000002, 180.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 32.5}, {1.4300000000000002`, 140.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 17.333333333333336`}, {1.5300000000000002`, 6.5}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 17.333333333333336`}, {1.5300000000000002`, 19.5}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 17.333333333333336`}, {1.5300000000000002`, 32.5}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 17.333333333333336`}, {1.6300000000000001`, 
     17.333333333333336`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 421.3793103448276}, {0.03, 
     17.333333333333336`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 295.}, {0.13, 421.3793103448276}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 295.}, {0.13, 277.9310344827586}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 305.}, {0.13, 188.27586206896552`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 305.}, {0.13, 277.9310344827586}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 296.1111111111111}, {0.13, 152.41379310344828`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 296.1111111111111}, {0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 310.55555555555554`}, {0.13, 188.27586206896552`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 310.55555555555554`}, {0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 325.}, {0.13, 152.41379310344828`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 325.}, {0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 339.44444444444446`}, {0.13, 224.1379310344828}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 339.44444444444446`}, {0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 399.28571428571433`}, {
     0.22999999999999998`, 285.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 399.28571428571433`}, {0.33, 
     296.1111111111111}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 340.}, {0.43, 380.71428571428567`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 340.}, {0.43, 399.28571428571433`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 380.}, {0.43, 343.5714285714286}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 380.}, {0.22999999999999998`, 305.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.47000000000000003`, 380.}, {0.33, 325.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 417.85714285714283`}, {
     0.22999999999999998`, 295.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 417.85714285714283`}, {0.33, 
     310.55555555555554`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 417.85714285714283`}, {0.33, 
     339.44444444444446`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 101.11111111111111`}, {0.53, 340.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 101.11111111111111`}, {0.73, 100.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 130.}, {0.53, 380.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 130.}, {0.73, 140.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 220.}, {0.43, 417.85714285714283`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 220.}, {0.63, 364.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 220.}, {0.8300000000000001, 101.11111111111111`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 220.}, {0.8300000000000001, 130.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 220.}, {0.73, 220.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 45.5}, {0.9300000000000002, 220.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 45.5}, {1.4300000000000002`, 60.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 58.50000000000001}, {0.9300000000000002, 220.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 58.50000000000001}, {1.4300000000000002`, 100.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 71.5}, {0.9300000000000002, 220.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 71.5}, {1.4300000000000002`, 140.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.57, 52.}, {1.5300000000000002`, 45.5}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 52.}, {1.5300000000000002`, 58.50000000000001}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.57, 52.}, {1.5300000000000002`, 71.5}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.67, 52.}, {1.6300000000000001`, 52.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 315.}, {0.13, 152.41379310344828`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 315.}, {0.13, 277.9310344827586}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 353.88888888888886`}, {0.13, 421.3793103448276}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 353.88888888888886`}, {0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 368.33333333333337`}, {0.13, 224.1379310344828}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 368.33333333333337`}, {0.22999999999999998`, 245.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 436.42857142857144`}, {0.03, 
     86.66666666666669}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 436.42857142857144`}, {0.33, 
     267.22222222222223`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 455.}, {0.33, 252.77777777777777`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 455.}, {0.22999999999999998`, 305.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 455.}, {0.33, 353.88888888888886`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 420.}, {0.22999999999999998`, 315.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 420.}, {0.33, 368.33333333333337`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 420.}, {0.43, 436.42857142857144`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 158.88888888888889`}, {0.43, 417.85714285714283`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 158.88888888888889`}, {0.73, 140.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 260.}, {0.43, 455.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 260.}, {0.63, 364.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 187.77777777777777`}, {0.53, 420.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 187.77777777777777`}, {0.73, 100.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 260.}, {0.8300000000000001, 158.88888888888889`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 260.}, {0.73, 260.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 260.}, {0.8300000000000001, 187.77777777777777`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 84.50000000000001}, {0.9300000000000002, 260.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 84.50000000000001}, {1.4300000000000002`, 60.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 97.5}, {0.9300000000000002, 260.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 97.5}, {1.4300000000000002`, 100.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 110.5}, {0.9300000000000002, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 110.5}, {1.4300000000000002`, 140.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 86.66666666666669}, {1.5300000000000002`, 
     84.50000000000001}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 86.66666666666669}, {1.5300000000000002`, 97.5}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 86.66666666666669}, {1.5300000000000002`, 110.5}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 86.66666666666669}, {1.6300000000000001`, 
     86.66666666666669}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 382.77777777777777`}, {0.13, 421.3793103448276}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 382.77777777777777`}, {0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 460.}, {0.33, 382.77777777777777`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 460.}, {0.43, 399.28571428571433`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 216.66666666666669`}, {0.53, 300.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 216.66666666666669`}, {0.73, 140.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 245.55555555555554`}, {0.43, 417.85714285714283`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 245.55555555555554`}, {0.73, 100.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 300.}, {0.53, 460.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 300.}, {0.63, 364.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 300.}, {0.8300000000000001, 216.66666666666669`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 300.}, {0.8300000000000001, 245.55555555555554`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 300.}, {0.73, 300.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 123.5}, {0.9300000000000002, 300.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 123.5}, {1.4300000000000002`, 60.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 136.5}, {0.9300000000000002, 300.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 136.5}, {1.4300000000000002`, 100.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 149.5}, {0.9300000000000002, 300.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 149.5}, {1.4300000000000002`, 140.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 121.33333333333333`}, {1.5300000000000002`, 123.5}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 121.33333333333333`}, {1.5300000000000002`, 136.5}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 121.33333333333333`}, {1.5300000000000002`, 149.5}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 121.33333333333333`}, {1.6300000000000001`, 
     121.33333333333333`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.37, 180.}, {1.33, 216.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 162.5}, {0.53, 180.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 162.5}, {1.4300000000000002`, 180.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 220.}, {1.33, 303.3333333333333}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 175.5}, {0.53, 180.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 175.5}, {1.4300000000000002`, 220.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 260.}, {1.33, 390.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 188.5}, {0.53, 180.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 188.5}, {1.4300000000000002`, 260.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.57, 156.}, {1.5300000000000002`, 162.5}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.57, 156.}, {1.5300000000000002`, 175.5}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.57, 156.}, {1.5300000000000002`, 188.5}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 156.}, {1.6300000000000001`, 156.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 201.50000000000003`}, {0.63, 52.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 201.50000000000003`}, {1.4300000000000002`, 180.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 214.5}, {0.63, 52.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 214.5}, {1.4300000000000002`, 220.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 227.5}, {0.63, 52.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 227.5}, {1.4300000000000002`, 260.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 190.66666666666666`}, {1.5300000000000002`, 
     201.50000000000003`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 190.66666666666666`}, {1.5300000000000002`, 214.5}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 190.66666666666666`}, {1.5300000000000002`, 227.5}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 190.66666666666666`}, {1.6300000000000001`, 
     190.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 240.5}, {0.63, 156.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 240.5}, {1.4300000000000002`, 180.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 253.5}, {0.63, 156.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 253.5}, {1.4300000000000002`, 220.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 266.5}, {0.63, 156.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 266.5}, {1.4300000000000002`, 260.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 225.33333333333334`}, {1.5300000000000002`, 240.5}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 225.33333333333334`}, {1.5300000000000002`, 253.5}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 225.33333333333334`}, {1.5300000000000002`, 266.5}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 225.33333333333334`}, {1.6300000000000001`, 
     225.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 325.}, {0.13, 170.34482758620692`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 325.}, {0.03, 294.6666666666667}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 335.}, {0.13, 206.20689655172413`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 335.}, {0.03, 294.6666666666667}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 439.31034482758616`}, {0.03, 
     294.6666666666667}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 345.}, {0.03, 190.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 345.}, {0.13, 439.31034482758616`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 355.}, {0.13, 170.34482758620692`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 355.}, {0.03, 364.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 365.}, {0.13, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 365.}, {0.03, 364.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 457.2413793103448}, {0.03, 
     190.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 457.2413793103448}, {0.03, 364.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 375.}, {0.13, 170.34482758620692`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 375.}, {0.03, 433.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 385.}, {0.13, 260.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 385.}, {0.03, 433.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 475.1724137931035}, {0.03, 
     433.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 395.}, {0.03, 121.33333333333333`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 395.}, {0.13, 475.1724137931035}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 397.22222222222223`}, {0.22999999999999998`, 335.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 397.22222222222223`}, {0.22999999999999998`, 365.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 397.22222222222223`}, {0.22999999999999998`, 375.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 411.66666666666663`}, {0.22999999999999998`, 345.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 411.66666666666663`}, {0.22999999999999998`, 355.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 411.66666666666663`}, {0.22999999999999998`, 385.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 426.1111111111111}, {0.22999999999999998`, 325.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 426.1111111111111}, {0.13, 457.2413793103448}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 426.1111111111111}, {0.22999999999999998`, 395.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 274.44444444444446`}, {0.33, 397.22222222222223`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 274.44444444444446`}, {0.73, 100.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 303.3333333333333}, {0.33, 411.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 303.3333333333333}, {0.73, 140.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 340.}, {0.33, 426.1111111111111}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 340.}, {0.63, 364.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 340.}, {0.8300000000000001, 274.44444444444446`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 340.}, {0.8300000000000001, 303.3333333333333}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 340.}, {0.73, 340.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 279.5}, {0.9300000000000002, 340.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 279.5}, {1.4300000000000002`, 60.}}]}, 
   
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 292.5}, {0.9300000000000002, 340.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 292.5}, {1.4300000000000002`, 100.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 305.5}, {0.9300000000000002, 340.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 305.5}, {1.4300000000000002`, 140.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.57, 260.}, {1.5300000000000002`, 279.5}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.57, 260.}, {1.5300000000000002`, 292.5}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.57, 260.}, {1.5300000000000002`, 305.5}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 260.}, {1.6300000000000001`, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 405.}, {0.03, 52.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 405.}, {0.13, 439.31034482758616`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 415.}, {0.03, 121.33333333333333`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 415.}, {0.13, 439.31034482758616`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 425.}, {0.13, 242.0689655172414}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 425.}, {0.03, 364.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 493.1034482758621}, {0.03, 364.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 435.}, {0.03, 121.33333333333333`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 435.}, {0.13, 493.1034482758621}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 445.}, {0.13, 242.0689655172414}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 445.}, {0.03, 433.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 455.}, {0.03, 190.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 455.}, {0.13, 475.1724137931035}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 440.55555555555554`}, {0.22999999999999998`, 345.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 440.55555555555554`}, {0.22999999999999998`, 425.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 473.5714285714286}, {0.22999999999999998`,
      385.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 473.5714285714286}, {0.33, 
     440.55555555555554`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 455.}, {0.22999999999999998`, 365.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 455.}, {0.22999999999999998`, 415.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 455.}, {0.22999999999999998`, 445.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 469.44444444444446`}, {0.22999999999999998`, 405.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 469.44444444444446`}, {0.22999999999999998`, 435.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 469.44444444444446`}, {0.22999999999999998`, 455.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 332.22222222222223`}, {0.43, 473.5714285714286}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 332.22222222222223`}, {0.73, 100.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 361.1111111111111}, {0.33, 455.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 361.1111111111111}, {0.73, 140.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 380.}, {0.33, 469.44444444444446`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 380.}, {0.63, 364.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 380.}, {0.8300000000000001, 332.22222222222223`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 380.}, {0.8300000000000001, 361.1111111111111}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 380.}, {0.73, 380.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 318.5}, {0.9300000000000002, 380.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 318.5}, {1.4300000000000002`, 60.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 331.5}, {0.9300000000000002, 380.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 331.5}, {1.4300000000000002`, 100.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 344.5}, {0.9300000000000002, 380.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 344.5}, {1.4300000000000002`, 140.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 294.6666666666667}, {1.5300000000000002`, 318.5}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 294.6666666666667}, {1.5300000000000002`, 331.5}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 294.6666666666667}, {1.5300000000000002`, 344.5}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 294.6666666666667}, {1.6300000000000001`, 
     294.6666666666667}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 465.}, {0.13, 242.0689655172414}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 465.}, {0.03, 294.6666666666667}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 475.}, {0.03, 52.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 475.}, {0.13, 493.1034482758621}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 485.}, {0.03, 190.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 485.}, {0.13, 493.1034482758621}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 495.}, {0.13, 206.20689655172413`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 495.}, {0.03, 433.33333333333337`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 483.88888888888886`}, {0.22999999999999998`, 375.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 483.88888888888886`}, {0.22999999999999998`, 415.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 483.88888888888886`}, {0.22999999999999998`, 475.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 498.33333333333337`}, {0.22999999999999998`, 465.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 498.33333333333337`}, {0.22999999999999998`, 485.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 498.33333333333337`}, {0.22999999999999998`, 495.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 390.}, {0.33, 469.44444444444446`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 390.}, {0.73, 140.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 420.}, {0.33, 483.88888888888886`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 420.}, {0.63, 364.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 418.88888888888886`}, {0.33, 498.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 418.88888888888886`}, {0.73, 100.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 420.}, {0.8300000000000001, 390.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 420.}, {0.73, 420.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 420.}, {0.8300000000000001, 418.88888888888886`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 357.5}, {0.9300000000000002, 420.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 357.5}, {1.4300000000000002`, 60.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 370.50000000000006`}, {0.9300000000000002, 420.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 370.50000000000006`}, {1.4300000000000002`, 100.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 383.5}, {0.9300000000000002, 420.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 383.5}, {1.4300000000000002`, 140.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 329.33333333333337`}, {1.5300000000000002`, 357.5}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 329.33333333333337`}, {1.5300000000000002`, 
     370.50000000000006`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 329.33333333333337`}, {1.5300000000000002`, 383.5}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 329.33333333333337`}, {1.6300000000000001`, 
     329.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 505.}, {0.03, 52.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 505.}, {0.13, 475.1724137931035}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 492.14285714285717`}, {
     0.22999999999999998`, 505.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 492.14285714285717`}, {0.33, 
     440.55555555555554`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 447.77777777777777`}, {0.33, 426.1111111111111}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 447.77777777777777`}, {0.73, 140.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 476.66666666666663`}, {0.33, 469.44444444444446`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 476.66666666666663`}, {0.73, 100.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 460.}, {0.43, 492.14285714285717`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 460.}, {0.63, 364.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 460.}, {0.8300000000000001, 447.77777777777777`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 460.}, {0.8300000000000001, 476.66666666666663`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 460.}, {0.73, 460.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 396.5}, {0.9300000000000002, 460.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 396.5}, {1.4300000000000002`, 60.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 409.5}, {0.9300000000000002, 460.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 409.5}, {1.4300000000000002`, 100.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 422.5}, {0.9300000000000002, 460.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 422.5}, {1.4300000000000002`, 140.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.57, 364.}, {1.5300000000000002`, 396.5}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.57, 364.}, {1.5300000000000002`, 409.5}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.57, 364.}, {1.5300000000000002`, 422.5}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 364.}, {1.6300000000000001`, 364.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.37, 300.}, {1.33, 216.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 435.50000000000006`}, {0.53, 180.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 435.50000000000006`}, {1.4300000000000002`, 300.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 340.}, {1.33, 303.3333333333333}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 448.5}, {0.53, 180.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 448.5}, {1.4300000000000002`, 340.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 380.}, {0.53, 180.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 380.}, {1.33, 390.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 398.6666666666667}, {1.5300000000000002`, 
     435.50000000000006`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 398.6666666666667}, {1.5300000000000002`, 448.5}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 398.6666666666667}, {1.4300000000000002`, 380.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 398.6666666666667}, {1.6300000000000001`, 
     398.6666666666667}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 461.5}, {0.63, 52.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 461.5}, {1.4300000000000002`, 300.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 474.5}, {0.63, 52.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 474.5}, {1.4300000000000002`, 340.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 420.}, {0.63, 52.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 420.}, {1.33, 390.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 433.33333333333337`}, {1.5300000000000002`, 461.5}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 433.33333333333337`}, {1.5300000000000002`, 474.5}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 433.33333333333337`}, {1.4300000000000002`, 420.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 433.33333333333337`}, {1.6300000000000001`, 
     433.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 487.5}, {0.63, 156.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.47, 487.5}, {1.4300000000000002`, 300.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 500.50000000000006`}, {0.63, 156.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 500.50000000000006`}, {1.4300000000000002`, 340.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 460.}, {0.63, 156.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 460.}, {1.33, 390.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 468.00000000000006`}, {1.5300000000000002`, 487.5}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 468.00000000000006`}, {1.5300000000000002`, 
     500.50000000000006`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.57, 468.00000000000006`}, {1.4300000000000002`, 460.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 468.00000000000006`}, {1.6300000000000001`, 
     468.00000000000006`}}]}, 
   {GrayLevel[0], InsetBox["\<\"bk\"\>", {0., 17.333333333333336`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx216:power2\"\>", {0.1, 8.96551724137931},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"bl\"\>", {0., 52.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx217:power2\"\>", {0.1, 26.896551724137932`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"ck\"\>", {0., 86.66666666666669},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx218:power2\"\>", {0.1, 44.82758620689655},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"cl\"\>", {0., 121.33333333333333`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx219:power2\"\>", {0.1, 62.758620689655174`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"dk\"\>", {0., 156.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx220:power2\"\>", {0.1, 80.6896551724138},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"dl\"\>", {0., 190.66666666666666`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx221:power2\"\>", {0.1, 98.62068965517241},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"ak\"\>", {0., 225.33333333333334`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx222:power2\"\>", {0.1, 116.55172413793103`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"al\"\>", {0., 260.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx223:power2\"\>", {0.1, 134.48275862068965`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz452:Times(-2.)\"\>", {0.1, 152.41379310344828`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx224:Times\"\>", {0.2, 5.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz451:Times(-2.)\"\>", {0.1, 170.34482758620692`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx225:Times\"\>", {0.2, 15.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx226:Times\"\>", {0.2, 25.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz454:Times(2.)\"\>", {0.1, 188.27586206896552`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx227:Times\"\>", {0.2, 35.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx228:Times\"\>", {0.2, 45.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx229:Times\"\>", {0.2, 55.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz453:Times(2.)\"\>", {0.1, 206.20689655172413`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx230:Times\"\>", {0.2, 65.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx231:Times\"\>", {0.2, 75.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx232:Times\"\>", {0.2, 85.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz450:Times(2.)\"\>", {0.1, 224.1379310344828},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx233:Times\"\>", {0.2, 95.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx234:Times\"\>", {0.2, 105.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx235:Times\"\>", {0.2, 115.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx236:Times\"\>", {0.2, 125.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz455:Times(2.)\"\>", {0.1, 242.0689655172414},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx237:Times\"\>", {0.2, 135.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz458:Times(2.)\"\>", {0.1, 260.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx238:Times\"\>", {0.2, 145.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx239:Times\"\>", {0.2, 155.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx240:Times(-1)\"\>", {0.2, 165.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx241:Times(-1)\"\>", {0.2, 175.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx242:Times(-1)\"\>", {0.2, 185.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx243:Times(-1)\"\>", {0.2, 195.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx244:Times(-1)\"\>", {0.2, 205.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx245:Times(-1)\"\>", {0.2, 215.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx246:Plus\"\>", {0.2, 225.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx247:Plus\"\>", {0.2, 235.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx248:Plus\"\>", {0.30000000000000004`, 7.222222222222222},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx249:Plus\"\>", {0.30000000000000004`, 21.666666666666664`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx250:Plus\"\>", {0.30000000000000004`, 36.111111111111114`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx251:Plus\"\>", {0.30000000000000004`, 50.55555555555556},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx252:Plus\"\>", {0.30000000000000004`, 65.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx253:Plus\"\>", {0.30000000000000004`, 79.44444444444444},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx254:Plus\"\>", {0.30000000000000004`, 93.88888888888889},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx255:Plus\"\>", {0.30000000000000004`, 108.33333333333334`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx256:Plus\"\>", {0.30000000000000004`, 122.77777777777777`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx257:Plus\"\>", {0.30000000000000004`, 137.22222222222223`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz476:Plus\"\>", {0.30000000000000004`, 151.66666666666666`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx258:Plus\"\>", {0.4, 9.285714285714286},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz475:Plus\"\>", {0.30000000000000004`, 166.11111111111111`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx259:Plus\"\>", {0.4, 27.857142857142854`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx260:Plus\"\>", {0.4, 46.42857142857143},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx261:Plus\"\>", {0.4, 65.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"xh1\"\>", {0.1, 277.9310344827586},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx262:Times\"\>", {0.30000000000000004`, 180.55555555555554`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx263:Times\"\>", {0.4, 83.57142857142858},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx264:Times\"\>", {0.4, 102.14285714285715`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"xh2\"\>", {0., 294.6666666666667},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz463:Times(-1)\"\>", {0.1, 295.86206896551727`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx265:Times\"\>", {0.30000000000000004`, 195.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx266:Times\"\>", {0.4, 120.71428571428571`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx267:Times\"\>", {0.4, 139.28571428571428`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"xl\"\>", {0., 329.33333333333337`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx268:Times(-1)\"\>", {0.1, 313.7931034482759},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"yh1\"\>", {0.2, 245.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx269:Times\"\>", {0.4, 157.85714285714286`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx270:Times\"\>", {0.4, 176.42857142857142`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx271:Times\"\>", {0.5, 20.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"yh2\"\>", {0., 364.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz462:Times(-1)\"\>", {0.1, 331.72413793103453`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx272:Times\"\>", {0.4, 195.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx273:Times\"\>", {0.4, 213.57142857142858`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx274:Times\"\>", {0.5, 60.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"yl\"\>", {0., 398.6666666666667},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx275:Times(-1)\"\>", {0.1, 349.6551724137931},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"zh1\"\>", {0.2, 255.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx276:Times\"\>", {0.4, 232.14285714285717`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx277:Times\"\>", {0.4, 250.71428571428572`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx278:Times\"\>", {0.5, 100.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"zh2\"\>", {0., 433.33333333333337`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz461:Times(-1)\"\>", {0.1, 367.58620689655174`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx279:Times\"\>", {0.4, 269.28571428571433`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx280:Times\"\>", {0.4, 287.8571428571429},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx281:Times\"\>", {0.5, 140.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"zl\"\>", {0., 468.00000000000006`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx282:Times(-1)\"\>", {0.1, 385.51724137931035`},
     Background->Automatic]}, 
   {GrayLevel[0], 
    InsetBox["\<\"xk\"\>", {0.30000000000000004`, 209.44444444444443`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx283:Plus\"\>", {0.5, 180.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"yk\"\>", {0.4, 306.42857142857144`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx284:Plus\"\>", {0.6000000000000001, 52.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"zk\"\>", {0.4, 325.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx285:Plus\"\>", {0.6000000000000001, 156.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx286:power2\"\>", {0.6000000000000001, 260.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx287:power2\"\>", {0.7000000000000001, 20.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx288:power2\"\>", {0.7000000000000001, 60.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx289:Plus\"\>", {0.8, 14.444444444444445`},
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], InsetBox["\<\"tx472:reciprocal\"\>", {0.9, 20.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx439:power2\"\>", {1., 52.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx440:Symbol\"\>", {1., 156.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx431:Times\"\>", {1.1, 28.88888888888889},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx290:power2\"\>", {1.2000000000000002`, 43.33333333333333},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx432:power2\"\>", {1.1, 86.66666666666666},
     Background->Automatic]}, 
   {GrayLevel[0], 
    InsetBox["\<\"tx433:Symbol\"\>", {1.1, 144.44444444444446`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx291:Times\"\>", {1.2000000000000002`, 130.},
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], InsetBox["\<\"tx434:mysqrt\"\>", {0.9, 60.},
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], InsetBox["\<\"tx292:reciprocal\"\>", {1., 260.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"dA\"\>", {1.1, 202.22222222222223`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx293:Times\"\>", {1.3, 43.33333333333333},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"dC\"\>", {1.1, 260.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx294:Times(-1)\"\>", {1.3, 130.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"dQ1Q2\"\>", {0.9, 100.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx295:Times\"\>", {1.1, 317.77777777777777`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"Energy:Plus\"\>", {1.4000000000000001`, 20.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz460:Times(2.)\"\>", {0.1, 403.44827586206895`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx296:Times\"\>", {0.2, 265.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx297:Times(-2.)\"\>", {0.2, 275.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx298:Times\"\>", {0.2, 285.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx299:Times\"\>", {0.30000000000000004`, 223.88888888888889`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz471:Times(-2.)\"\>", {0.30000000000000004`, 238.33333333333331`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx300:Times\"\>", {0.4, 343.5714285714286},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx301:Times\"\>", {0.4, 362.14285714285717`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx302:Times\"\>", {0.30000000000000004`, 252.77777777777777`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz470:Times(-2.)\"\>", {0.30000000000000004`, 267.22222222222223`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx303:Times\"\>", {0.4, 380.71428571428567`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx304:Times\"\>", {0.30000000000000004`, 281.6666666666667},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx305:Plus\"\>", {0.5, 220.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx306:Plus\"\>", {0.5, 260.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx307:Plus\"\>", {0.5, 300.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz445:Times(2.)\"\>", {0.7000000000000001, 100.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx308:Times\"\>", {0.8, 43.33333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz446:Times(2.)\"\>", {0.7000000000000001, 140.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx309:Times\"\>", {0.8, 72.22222222222223},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz447:Times(2.)\"\>", {0.6000000000000001, 364.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx310:Times\"\>", {0.7000000000000001, 180.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx435:power2\"\>", {1.1, 375.55555555555554`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx311:Times\"\>", {1.2000000000000002`, 216.66666666666663`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx312:power2\"\>", {1.2000000000000002`, 303.3333333333333},
     
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx436:Symbol\"\>", {0.9, 140.},
     Background->Automatic]}, 
   {GrayLevel[0], 
    InsetBox["\<\"tx437:Symbol\"\>", {1.1, 433.33333333333337`},
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], InsetBox["\<\"tx438:reciprocal\"\>", {1., 364.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx313:Times\"\>", {1.2000000000000002`, 390.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx314:Plus\"\>", {0.9, 180.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz443:Times\"\>", {1.3, 216.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz449:Times(-6.)\"\>", {1.4000000000000001`, 60.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx315:Times\"\>", {1.5, 6.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz442:Times\"\>", {1.3, 303.3333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz444:Times(3)\"\>", {1.4000000000000001`, 100.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx316:Times\"\>", {1.5, 19.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz441:Times\"\>", {1.3, 390.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz448:Times(-0.5)\"\>", {1.4000000000000001`, 140.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx317:Times\"\>", {1.5, 32.5},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gak:Plus\"\>", {1.6, 17.333333333333336`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fak:Times(-1)\"\>", {1.7000000000000002`, 17.333333333333336`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz459:Times(2.)\"\>", {0.1, 421.3793103448276},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx318:Times\"\>", {0.2, 295.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx319:Times\"\>", {0.2, 305.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx320:Times\"\>", {0.30000000000000004`, 296.1111111111111},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx321:Times\"\>", {0.30000000000000004`, 310.55555555555554`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx322:Times\"\>", {0.30000000000000004`, 325.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx323:Times\"\>", {0.30000000000000004`, 339.44444444444446`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz474:Plus\"\>", {0.4, 399.28571428571433`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx324:Plus\"\>", {0.5, 340.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx325:Plus\"\>", {0.5, 380.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx326:Plus\"\>", {0.4, 417.85714285714283`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx327:Times\"\>", {0.8, 101.11111111111111`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx328:Times\"\>", {0.8, 130.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx329:Times\"\>", {0.7000000000000001, 220.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx330:Plus\"\>", {0.9, 220.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx331:Times\"\>", {1.5, 45.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx332:Times\"\>", {1.5, 58.50000000000001},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx333:Times\"\>", {1.5, 71.5},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"gbk:Plus\"\>", {1.6, 52.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fbk:Times(-1)\"\>", {1.7000000000000002`, 52.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx334:Times\"\>", {0.2, 315.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx335:Times\"\>", {0.30000000000000004`, 353.88888888888886`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx336:Times\"\>", {0.30000000000000004`, 368.33333333333337`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx337:Times\"\>", {0.4, 436.42857142857144`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx338:Plus\"\>", {0.4, 455.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx339:Plus\"\>", {0.5, 420.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx340:Times\"\>", {0.8, 158.88888888888889`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx341:Times\"\>", {0.7000000000000001, 260.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx342:Times\"\>", {0.8, 187.77777777777777`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx343:Plus\"\>", {0.9, 260.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx344:Times\"\>", {1.5, 84.50000000000001},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx345:Times\"\>", {1.5, 97.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx346:Times\"\>", {1.5, 110.5},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"gck:Plus\"\>", {1.6, 86.66666666666669},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fck:Times(-1)\"\>", {1.7000000000000002`, 86.66666666666669},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx347:Times\"\>", {0.30000000000000004`, 382.77777777777777`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx348:Plus\"\>", {0.5, 460.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx349:Times\"\>", {0.8, 216.66666666666669`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx350:Times\"\>", {0.8, 245.55555555555554`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx351:Times\"\>", {0.7000000000000001, 300.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx352:Plus\"\>", {0.9, 300.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx353:Times\"\>", {1.5, 123.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx354:Times\"\>", {1.5, 136.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx355:Times\"\>", {1.5, 149.5},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gdk:Plus\"\>", {1.6, 121.33333333333333`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fdk:Times(-1)\"\>", {1.7000000000000002`, 121.33333333333333`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz469:Times(-12.)\"\>", {1.4000000000000001`, 180.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx356:Times\"\>", {1.5, 162.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz457:Times(6.)\"\>", {1.4000000000000001`, 220.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx357:Times\"\>", {1.5, 175.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz464:Times(-1)\"\>", {1.4000000000000001`, 260.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx358:Times\"\>", {1.5, 188.5},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"gxk:Plus\"\>", {1.6, 156.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fxk:Times(-1)\"\>", {1.7000000000000002`, 156.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx359:Times\"\>", {1.5, 201.50000000000003`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx360:Times\"\>", {1.5, 214.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx361:Times\"\>", {1.5, 227.5},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gyk:Plus\"\>", {1.6, 190.66666666666666`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fyk:Times(-1)\"\>", {1.7000000000000002`, 190.66666666666666`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx362:Times\"\>", {1.5, 240.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx363:Times\"\>", {1.5, 253.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx364:Times\"\>", {1.5, 266.5},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gzk:Plus\"\>", {1.6, 225.33333333333334`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fzk:Times(-1)\"\>", {1.7000000000000002`, 225.33333333333334`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx365:Times\"\>", {0.2, 325.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx366:Times\"\>", {0.2, 335.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz467:Times(-2.)\"\>", {0.1, 439.31034482758616`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx367:Times\"\>", {0.2, 345.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx368:Times\"\>", {0.2, 355.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx369:Times\"\>", {0.2, 365.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx370:Times(2.)\"\>", {0.1, 457.2413793103448},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx371:Times\"\>", {0.2, 375.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx372:Times\"\>", {0.2, 385.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz465:Times(-2.)\"\>", {0.1, 475.1724137931035},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx373:Times\"\>", {0.2, 395.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx374:Plus\"\>", {0.30000000000000004`, 397.22222222222223`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx375:Plus\"\>", {0.30000000000000004`, 411.66666666666663`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx376:Plus\"\>", {0.30000000000000004`, 426.1111111111111},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx377:Times\"\>", {0.8, 274.44444444444446`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx378:Times\"\>", {0.8, 303.3333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx379:Times\"\>", {0.7000000000000001, 340.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx380:Plus\"\>", {0.9, 340.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx381:Times\"\>", {1.5, 279.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx382:Times\"\>", {1.5, 292.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx383:Times\"\>", {1.5, 305.5},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"gal:Plus\"\>", {1.6, 260.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fal:Times(-1)\"\>", {1.7000000000000002`, 260.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx384:Times\"\>", {0.2, 405.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx385:Times\"\>", {0.2, 415.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx386:Times\"\>", {0.2, 425.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz466:Times(-2.)\"\>", {0.1, 493.1034482758621},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx387:Times\"\>", {0.2, 435.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx388:Times\"\>", {0.2, 445.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx389:Times\"\>", {0.2, 455.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz473:Plus\"\>", {0.30000000000000004`, 440.55555555555554`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx390:Plus\"\>", {0.4, 473.5714285714286},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx391:Plus\"\>", {0.30000000000000004`, 455.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx392:Plus\"\>", {0.30000000000000004`, 469.44444444444446`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx393:Times\"\>", {0.8, 332.22222222222223`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx394:Times\"\>", {0.8, 361.1111111111111},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx395:Times\"\>", {0.7000000000000001, 380.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx396:Plus\"\>", {0.9, 380.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx397:Times\"\>", {1.5, 318.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx398:Times\"\>", {1.5, 331.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx399:Times\"\>", {1.5, 344.5},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"gbl:Plus\"\>", {1.6, 294.6666666666667},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fbl:Times(-1)\"\>", {1.7000000000000002`, 294.6666666666667},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx400:Times\"\>", {0.2, 465.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx401:Times\"\>", {0.2, 475.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx402:Times\"\>", {0.2, 485.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx403:Times\"\>", {0.2, 495.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx404:Plus\"\>", {0.30000000000000004`, 483.88888888888886`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx405:Plus\"\>", {0.30000000000000004`, 498.33333333333337`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx406:Times\"\>", {0.8, 390.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx407:Times\"\>", {0.7000000000000001, 420.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx408:Times\"\>", {0.8, 418.88888888888886`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx409:Plus\"\>", {0.9, 420.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx410:Times\"\>", {1.5, 357.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx411:Times\"\>", {1.5, 370.50000000000006`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx412:Times\"\>", {1.5, 383.5},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gcl:Plus\"\>", {1.6, 329.33333333333337`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fcl:Times(-1)\"\>", {1.7000000000000002`, 329.33333333333337`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx413:Times\"\>", {0.2, 505.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx414:Plus\"\>", {0.4, 492.14285714285717`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx415:Times\"\>", {0.8, 447.77777777777777`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx416:Times\"\>", {0.8, 476.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx417:Times\"\>", {0.7000000000000001, 460.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx418:Plus\"\>", {0.9, 460.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx419:Times\"\>", {1.5, 396.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx420:Times\"\>", {1.5, 409.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx421:Times\"\>", {1.5, 422.5},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"gdl:Plus\"\>", {1.6, 364.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fdl:Times(-1)\"\>", {1.7000000000000002`, 364.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz456:Times(12.)\"\>", {1.4000000000000001`, 300.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx422:Times\"\>", {1.5, 435.50000000000006`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz468:Times(-6.)\"\>", {1.4000000000000001`, 340.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx423:Times\"\>", {1.5, 448.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx424:Times\"\>", {1.4000000000000001`, 380.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"gxl:Plus\"\>", {1.6, 398.6666666666667},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fxl:Times(-1)\"\>", {1.7000000000000002`, 398.6666666666667},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx425:Times\"\>", {1.5, 461.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx426:Times\"\>", {1.5, 474.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx427:Times\"\>", {1.4000000000000001`, 420.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gyl:Plus\"\>", {1.6, 433.33333333333337`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fyl:Times(-1)\"\>", {1.7000000000000002`, 433.33333333333337`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx428:Times\"\>", {1.5, 487.5},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx429:Times\"\>", {1.5, 500.50000000000006`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx430:Times\"\>", {1.4000000000000001`, 460.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gzl:Plus\"\>", {1.6, 468.00000000000006`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fzl:Times(-1)\"\>", {1.7000000000000002`, 468.00000000000006`},
     
     Background->Automatic]}},
  AspectRatio->0.41,
  ImageSize->{1059.62890625, Automatic}]], "Output",
 CellChangeTimes->{3.7071466359563007`*^9, 3.707146718613145*^9, 
  3.707147969138157*^9, 3.7071482064866877`*^9, 3.707148726704485*^9, 
  3.7071489488276577`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
JlCyYjNPqMRMNDZBSbhNKe9HHMtiyi4fS7De5rHme0EdaZFzhJQjOaRFpA2t
kp9c7ojmo9ANUhPLq8XWyEQIxmtQd6AM97V8HczhepboQpKdpqqNvh4iRR/8
Qmo/apRM2jcM86uNhJZJ8cj3Hn1Byp9d3kJ8aLvgefmnrvAS6aaeB2kzPA17
qx3OpQs+rmhJqhOza1WWJN/CA+VymhpNZE031hPoop96C1lDwoyCUmsKd15L
4OCE0zlYt+baGgGF5YESYiCvjRSNZOUKecNC0PX0lYbYlzpQX/erlsmda1nP
2pXJ5Pb/VjK55R/Xy0fLfGhDG3KxSxs895zI8OFhZouGnykLHfcLjI+OuWMT
4zHv3V9FC+qg+C4tgVMgQUAmhWshbxrMQ+oIyRVoQxk7tjJ0Mo9GCYwYcopM
cUBztN6fY+X4eEnFNqDnoFA/JsSkHxDUQkKBjot19H7100XHFUT7EPQxlfyj
iIeX28oJuiaZfHT3N4eXPdqUjrfe+UsZ8th4czZnzrld+m463wJb+mu+lC/j
lRxuZ8S+ZB9SmqDew32hxkPWjJWDq4YtxeCq9gQhViUSMa51tkz7e17ZrknO
b1mldk3C0xTfwNlvvpktV1KtSEshoU9ZBMurOMmJUoASykRM5AX20PhMvZw6
Hb3TJ5zgt7SzLFkiBg3xDiTT35A3ogXvZCPyIBGs/cXGzMVwLPTAl49Lh7c2
lr79l1l375Ah4aqTCLz77sh5KEpNTRRffCPhjQkf58m86HP6WOqR2hBZ8tv0
46+v95tiHMyHYoqKemNKZG+jytBdlx9x4p84pFrHSzZsdLSVFSaaibee3e80
TO/SZaVy9n1V+mnCJKdtzmuQC69v1hvRhhoWP1MPQztMOiLRwNQiKqX4YCqr
POhPg+B8xRWZ1i5Xf45++cqHH3WKCUgWbOGSw1t50w+dzJ/KWbpQB6vpG6hn
i85GsfUAFhmI76zfd9ffHabGc0+TSqj/H0z7WrHrR4ykM6Nt10+xhd6XtM61
3qgTPzlV9/7aADgH4nBnKavzkyMZ0m4XXSTJcPH/MWPGpClBKSyfXBpEFnnQ
gjKxPBsaBY/O2+KnTdTjlUGZqSkjG1mr2aJvel5OnYl4tTxcPcvXGZYI+SB3
FTJ9ojgL1qw3A6oAGLBQ/voHMXIZ5WmogMbla85eSx8Lz9tH6vr0T3Ii7fYE
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
OIN7e1Fe9HAPb0lnPNllvN7e84+WNcc9Kl8sXpbOjrbOMFE+C/fId+Bl86EI
vgyqKq/D3f+n/DNmMje0UHCGKSQfZL8ne/l85AWB87oGCRGrAuKVyXDyCKz3
8fY9x8BDiFNj2fh3LV21W8khqden3u7wxiatzIrmCnrxMir3pbu4orpf22N+
F7+rpF/ZG/U5dYc2kn7WZuU+q4sxtDljsCXBGnUCorM75I6CO6zH9YuQi70y
KIxbKPgILNI3cUKcnQXsKIJv0gPusGCLE4xfI9fEK7GWCRiQRF3nlvOk07i/
yauffii9erdKp1/+Ts66vFE67vSc7PTUJFst+FMW1QNvviH9zvqT9F3zKyns
+pQc/XjQ9O5gGmIhxPu+jb0qyAFyEtcwEB+30K20oN0sT5abIUIORbzVyei8
9fkM0xLon2vnvuuzVWd0zv6wXgoV5TJ8abm+1mQZ+XK1pe1dAA+XRuyHjyJL
pzY4LR7GcqJmV1UlcRhfkbF2Sck+80xWXPrLk/XSYVEv2aNlH2TqPLVJ9hZj
vckHJVaPQIOna/WOZnGBCrRWk/2DETR44h2y/dIdrXOcSQ0+XRENfu42CDbk
VLoby2JziUM49QFKpZoUMumBVLhYFjuzjwCZkIm3IvCjx4jsItWzlhYZEj9E
ZWW4ECgCqsdxR0TnF9cK+pJer7zkN+VYGq9o0lLsm6yat/1I8kbdrKoBMvMH
ShuoWbMLmHcMkg91o5G2l9lv7ABWLLBt8y+2lW53HiXHLDvWrCieCQ9FbgN4
xXNA7fxLTQjP94CcrH7x6fiOrvdbJpfKTWbXLpGLdKmsii323upJcKyeos7K
JDjWv3c5RZ1lFbLH3kFRx1fkLbfcoiDiMPspOSVubKhCpRzk+uuvL7W1Fi4W
fNA4ACG0EmROiWzduZGU6K+H4fDR2DvGY6BnQhVIOmEJFFvqGzxEsMytgP71
tXztTgkuH3cGf8XgXxKH6lF8QeDScBYYeMwhZ8YrfPbVYsNCilhTphT+5H2G
bjLnRJhOVjT71MFNsrmAQzA6KKU2SIOTZul3oV0NBEPylf6IpqyLFdTPcvQH
hjWSpg3Jk6N0djTFWc4cV0WebD9dkvvLVTJFY6591c12NymVofpmDxgQKDOA
s0rVtm849v9dta1NmFVs0I/rSQzD3QZn6Kb1hYBnwecTxkAkwp/vL/t7UE14
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
8hpwJTbjlW1tus3TKlUbs3zB0+VpFUKpRVFvnfbLVYLosotT0bdZjiMqAVYk
UrWANnfLpvrwv9FpvtZsRNKG/qbShbSLS+QqyyjJeOhX2F83b2kmUB/BSP+f
VfswWAdi7/J8RvKs6W5JRb0VBXAQyzziCN/uQ9Wq/MY47b6PbNDkk8HOgEsK
UwvYi2RDjdXNPF1yE8NbzZ06XoaUT5WzKoYochppHiJS5hirWxr/KFvktjCu
dtvm1eXBGajHG9XnmQ9in4ZjzJUGftlRRcduw3NydPW9NuY2gjN0Liqr3etO
qJgwWkLOeLC22catq2VqzLZszEXFUuyOnIQb1BczIn1dPjlR5KJIlenIc/h9
fK74Lx4KFuY+sk/qs0bhncMstDHh3eTEa2euMsAvdi+k6Nw6UcsUWxoZfm20
CmONOUGqGeAxALnwwvyUS+C2tFi5BLFObeiSJVm3dLQr5XxoLNYj5eQKI8OL
rmYVj8/a8DXkWQg1JntqY47St/qDSkXx6+qCYquM1GVwl77gaYoTOQ7TDfAr
faOWOz0s2tbOpSTgbOW3BHarL8c/+zsd+/vlYl0bfVSX9zaEs7YK6Zb8s930
c9b4prqCRslWKpJC5NbNof8YA1Z7yW+ffJP+vr8upY1lVzPY1teX/Le8ENdD
p5/AQ1xtDpvAgC6eSLTyFMTtUpIgrhkKjGALV716hn0cAdleFqUH6BDg3yt6
N7F+sVaxOvEy49wNzRHxDcxQJL+ZEP/Mb4U+RzUo1lo3/c1JsqJW6O71aWgB
yBJKTa3QJ8R6TPx7i3Xpna97dAu1lHkuOJhGG2reTAXmLcbDRC/NO+S65Vqh
77RUn+bYd3ULDpOShavDnCYj3rjZRmPd6kMl9/qmUvjMU5I7/SLZ6fynTMzi
mOTeeNW9OqHUvLw5uVqf/Z+RnHorHa8sO6aoNRaYuMEHRru4Os5S0Gm/VATm
lWXLR2DWXVYh3R8vl0PqHA10tEgsmduOmigJJxBKfTUl5JRCwtdPgJQ0a/08
pfAiwYncwuW44p4BIe+acvMvv3TVU2ZokUgqsWrsbsTQOk26xZa2kX7L+sv2
D1yGE9EByIU3zZN2Dd1b+H1C2hGWIXU82LRo0TnGslAbv8FUXaK4fKQuoj/Z
UJ1pPVfGWwmKJ0Lo8shlhmBLENA9OXDu18ekOd4piQOyuYPHvMFNU2XEcXUy
5KR6ueX+Jpm/zPWiJW8l0rPv9dulJvR+lVGeLTtcCmYdLrlv/yzP1Lbatcux
jJivcnrcK+NtXUzRf/dfMkN22FFkj7+1TIrs87OTIg+cP1k6qbnS5aY6WdgY
kiL7vT1eRj5QR7Z80H0b2wNlomGWRVgrdWQQEYX6zvuqrhhvZwLJ22yTfWyQ
2XKDbqSBKnthRPFzke5N8lsiO0kmx6mygZnLTh/z3/ZRnfRpnfTcqE7uWJpP
u8nQnBZxXH+DoWWWq/MXXWsLW5shO6jvxglD/Qza5k/NWuFl7LwTFbRSKLlY
vltBI9+CfJyY2NOaw/gWdS+tQbuVR+z76ac9787qXuZJQOyYj8OnzHHKZcvc
GDo02+cbbbSR7vVn0zYifI9XA1RC8STGfUcadE0eKDtVHCjHjs7J6IpqmTtd
F0subCRIFvBC7VO/tUnRVRoGmx/r5urDZMvJD4VNPXea+e8c7uG5ekBula1z
OVnt2U2kfVN7k9cTmg6SdXM7SlXTZ85mQ+QHBJiKLpFtvXs7m82YMWPk/vtD
2eF68RzdMgCa2VuFClZ8sFSmumcP7pPpYT8mWEeNH28veZCQYk1uL+KesSKD
joAuYrMRdKUG74AsUsqpwsMfTHh1vsx3ogBUOl4PlBSYDpMWtyiPc51c53Fb
gm/oZhLSuRJX+Ua+SeHBhhCjmTVL0o2pGCBQTfECaBBfzAvyQrjx6qYxKJOF
o6sppeVVymsxMHKGasKc+aW76/16Kqjqb73eQ7/YbMPvqlr4qNisdPkN39q5
xOYYN8Ng+SGe3S/Vet9Z4XXO/OtlsqUaDJeaJd46z+52Co75bKg+dTdLzgvp
eVMlcIxRCDtO343r36oIB/cU36EVwETFHrhudA5zTnizYublIsljWbajRsZH
QdNRP8kr87bPfpx92eunaJbCdJKArpbKRDsd8d1qFpBnqTCprGwwGpPsTOsE
YNHJbysGh13oExVOrNjaKNxQsijcjirK2+nYvG8NIVbUVj34OEJ6pNkAIVeg
1BY2cWAczWSQ49fCccr+JCtdDfK44da2R2oz8EPZ9J1D5Mumr6W4fZNsWbeV
dL32S2m/sIfk5uqD1zwnhdceJ5sd8ZZVF3rhARD2M11gwEGqWA5WaOsZUu11
YfCq1eaz/DF2H2+5V2v9h4YbM3TKMojPOuBnBUgAsMUTG3VTZQGSwy4S2f/B
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
/F28z1H8bfFyjY7OO0NVR2dri5B6PXrzoz4qYvB11tcu3+jomN+E6P+Vj0qr
jY4oeCnVe194S3C0j665UDasvVHGNR5roh4822FRN1nnn+fJ2KV7SZszL5Ad
3vid3YPg5NrrLDOUD2pnSryVgYs1pp6w3XgZn3M7jnQgVo3iqqTbCACQwNe+
y2Ip3OJ5Oe9xSxu37azT6MDl7LNDSiadFvrEn15xRaCS9QMWwsMOC+2lXn45
uby8e4IunrTkQXYhUS70CGOxqY3qahFxg2jCvalCsnv81ahRoR6QA68NhqRe
3fsCWXZD9IaB5+maXJh3w7YW2im0myGK9XNfRQAK9hFpWh7gxIMdTcakFkk+
p5mrp0hGJjnfqrerab7XXoFRw0eJPYPViNVABBN1hcuLckyVf2G+2psdhawn
pIo/E43I/9GiM96plM+3Wdt+rlsxNWzFM3v4zMNljSfXsHXAdmXbI+mf1n9U
LOc8ER8IgdvQD3otKRrx5UIIP5b1RsXZ0byHGZGBJCVABTxjiCwjrQ7N2LwD
QTuT/thV3tKBsH5ewSh4ADwUGHFH2u0/l8+z/hVNZoqqcZFbNf4EPY0cQgfz
GRukURpdQzHMTDLYp7S+n2z+yLnoSi9gJfWLcl+GlJtiG+pD+PwT3qd5ZBjX
cI4bEWPP5j+Q6gFURbJqVBwpmJsAXnYuBrK+QNCNXSxxm7sxmqxn2FHZsEws
mxRDisnGjEfu4gLgYBLVLC9Mz5Qxk0FkcpGVGm6jevgO2wd0jXLrc8XEu48o
RPDkeE/fqTQo/Usx7+5651x5c/5cc0K3YN6NwWNXifDAkE0CTO4bujek5cM4
ewgbDMMg6QbyaWAlsgLpz9k1PXhq4ptKSRhftC2wEsEX6SvCZVYRbwsTCW/k
6NPqpWzyheapHrPLEml/y3hp23GBjFm0u15tkaw+uEk2/b+nJVd+mjgJrrvg
Aw3c1QaFEESgWvewSBztjCmjOJ8pIx6paUuroT1nyXjhtQbpOSI0vAu/apRP
Fzc2d/cWyPXXB19jY8oKK7PmP/16B5XXXjfGvx9a6WZAx28efpbbKzYDym8Q
pJp0vQ2DTGzZDGjdi0Oo+fY/S6vNgKaoDbr/LtKsGdBELLDxb+gWKTOXDTZF
aUMv2ezVY2TAd2tJwSYvyZrfm5Q2tYT9zExSzcY60RFPrkWYPZkJtSeSyxCR
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
Y1v7DCOaLRRvXrcw9n46YMepkCCAjrHN7ZE/HFiQMLVZ6FjMT8gTHvkusM1P
ugCPmm+d2IbZH/Zo/r37y8TdnjetSuCnoOUc40fyp+CjzazdzoJ7zpdU3kdS
PrCRpNbiWgn1tfdUjIiOpjz02ETArEuvtFjfa7LPbHDOu7qoF2mwYBwJod6a
Pq1TxWt9BPx5qni99GGLHPJOvWy2skpKFFMuPLpLdllRL3Xv18jVawciuxwN
R1iRpkrsS6oRvPtuRBBONtkJ0JWC6vgIKQrBgXHOGiHkRpcWn0YRUBHkVSTx
dXJdlFGS1RXY73ZwFM3k60AP+DsHZGopouIl0RwLUeOCRKmQWEjdA2x9FgF8
CfKdkHZ4a9DjlO7Bj+uSF4bLd30jnhtVWe5oSKAzasZD9K/P9pVTeP+WX+Nb
VUC0r3wg73g8i3exw9zqzd4L2x/CT/mJbZ6ObOBHX2+QEb2dct11ny0CjPv7
UYt8+ZwBWZp2KV7pyLXeIperQsOpRKPggHkff9xF7bPZGPOSoIKHjgklD+Tk
kykIKqan+/ocPRNhTJ01SqfQ6x5kSHHOZhW231LBmz/MxZPBzLd+N/JBBG46
9kooxNnn65kge/sjyTfN2TV6rtpzPfpUiIUmgMjlCpXt59eukaLK1+WIgbpB
eUTI+nrvnA5YGMLBWd1Pytjen0sqm7KVhI8TwwUsgIpVSeRwclHU74EwNEQz
KH18hQWiGjhoO9YSAyIS06RCkZ235K1UaPhc67EjdwJRwOLnFhiAyD9yMFSw
hIoF6PTpKgfitm6dulAaDR4vkFNDQWX/u0DvSevCIxuSxDv8Sc26HF+0G7f6
bc9WD/ZZnwy4XbTJf9WZK+l4aRdH+aH336WWeVckw97cWCrXVlp8d2RurLXN
IvUnaL0jjnDVNJuaJBXBYvLeSCmOYPEU50m+6qpBsNj6kOoEh8SYnmbKmh4p
JQ3F8jXqi1XWyC8adjOPckNDvatDpuda7viOdUZ3r0pH9ArWSCrEUF7RYTtu
wDXj2XxglmyldlqqbiNznJ7StlBSNYtkVGOpbJH5olyTPVd2Se1iLc6zXQ1R
7bPwnNY0yD9f1tqn/1jXoo5odyY+l7pUJmTGWLN3fbPAssXMo5IrwgVzD4qB
AsRgTKKMYDj4lWtrDkTLklVzPcBMPoZKxVtMyB8LTDFgcEkQT0elARUxBNkT
GPw4hNALcB8w/jEQnRgoNkmM/OJ7XBJ1uLdlm1xu1PNsInEkFAdEmgbqyjJZ
VuA3xn33uVqFK1e62cB3BtKHVspG4eMqhIMTGaTDO3IlqBO4qPTJJvmFE1hU
ZAWFvmwMjzEl9A+inMRwsDDdBUKNNHQ+Ra9CoRbCeAp4HdgpM/shZLwCkQM/
ARMEWwKwD8WBW38gH+zkdzHvhITFyGOZY/whLanZTUEf6nDW1rpzOI9Iqu/B
S6uirV91SGVVXJ2yt1lCE2Q7LFsAD21DxPbJdLtT/bmgYkujJM8MFCmfjIAn
ocFlsFuWp4XU0oG2PirBw7Q95VtZ1nur2kEqOurWK9AIzpv/3FB90gY3VO/z
pTNCgfQGuU8G5wPFDdXdvftdNqd1dHGHV4rx46zn2w3MVcn0SIOa6o1NDZbc
39gV9iwKp81aWjS1Wa/fVKgCTVSKZQJkZFupCeXfcqo5OlgnmKrYR+wN1gnf
QX6wgoGo/MzWZCmyollTrV5Qs96wCqmdk7VxuczMPw6+A3phP4Y9DCsasuEB
qqSO9flhOJE5MBm5F8tePxfV2gt1d9hoMOvZuzwjfCb2Pt8HGeWtKpS88g/k
xfSAOWcXfK9FDj4mK1+ofs/ukyr+SPLO/6Eun/dlhytvkHE9txqawhENmOO9
cDgVqy64VH41qLDbGcZn3Vyx1SqJC7sNGO+2I5pHczAGVn6y+d8Qdd2C5QqR
jdJXMAgIS8IgOOYY19wIcUNeySGHKGKoimtYrN81qNi2KrXLOJBswRKm9R00
xxtvjL9PrB+AdaPcGPWOJVSHGEPPM8KMjIq4wLUliTffu4EQuoFYFmo1MtkM
IikPLCw0AbIKe4Wc5C11YE9RuWUSwtOTd9BBHa/f+ZX8KkS0oXJfpk8y29jw
83T1fWSRfFdcr8vCWQ16gT7T9ZWeZs5eCzB0iqzLeKE83rjb6mXBuzFD+tN2
dGBIH3Fvh5Tn9CHTD5of/Wqd+a8r/potW6ATfGO8fCvT6wqUxbCU2aIyHDNL
OrwKSy++JxtUxWCAPEABXLoDUQiQ4rnQHSEUUJ3kVZfRZznBt9zi/AjlJU4C
Vuh2OeIAhxdrVQjXVTiWaDbjbZjZBisNjuac4CQqVqcyup23zvpyfQjUanGC
UT+nprG0+jYSjXrJy7rfMa/N0UTgaiWGrRnnxiedt6/dC+Ws4zjUqayvVZ3w
S/mNqRuH6CssHzmUgcA6xNMD0GSrs4KGmYXqmg0FOh3/Zjvi7XHN0i+zxcmi
/rf8O+gSUoVIgqeAQMC13IK1/KA8mArVr5u8pxTJEGqfcxukHsig2dp3VgTi
0GxdlwtdkNev2UoDl8t1U+D7w3vsDsdD+qtdvsI8CLW+Ylej2v2VUdwgRBHS
XrBN+6+aks3Vuxx77dDkpB/LU1LctbNMyk6317tw7UWS37mTbLtyR1B3MOEo
skxlp2OPTeDZ558PndRjNy+pcKp3nPvUadtsj2t6SaaEO9MvjbWNunNOlNMb
5/nPuXPswh7/3a4GHeOo5q7uxQrq2a6Ve9O/kl37vmI6BhryNi3TXLyycroc
lqGczKYyVv+9b+931NC+Tk00te/SHZbJ0Tbg8Gyq0mfr6oao73BOnlS1azhk
bI36DnPz1rrO6dKphlaq/jEZlhmmC/tqy/iY6/cwFBXwJsNHcAnXynC/gAny
4Q0CrrEwXcvAnHGLIC+g89BHsKkgwYbWt3iJsMChF5RJWZgGOADELmFxB2GO
ykP94vEk7lVq7XcWGjrG96DQzUPcUlOFZEBhtiC0UeF4VgM5B07EDcbHz3qk
6Sp2oFwoivlP/RNow6QVompBpaHYHjFOVjWvwTVh0ypKDS2UeEz4Q27cxFQf
I8EIhNHDS80Isff076BykmX8uESThSszjhBSZvI+CAWiFfwM64HdyoDg54YC
DGZQMzT2TGQj+lAQEv+pzH9QjBHJyPwZfvmvk6fg049MNNNWhW10+uki220n
Ulwcd3SkdAbB1bU+r6ejw5XOwANBgOVR19rRypLUu/owFmXrd7cwuU1GlI/k
G6uhtskVJA1gFtdDt6OlRqCa3APkNHkJPHUA1oTq1gXW3LuiyXINpasvwMbR
ZiDXmAyrU6nSpfC50hxArRaWavJBaAe+B+wc1N1lgzu+byT/rx3fmwZV5a/2
Vfk/teN74ElkE2UKg4DxjdsDlg71VAMvwpq61Xc6LvtIi9gQH0GBsIcQRaAX
dA/wGVr3bO8JZZ+hx3TfDDNCQqEBIPzBKAcqIYCuu6U7MBVgQsEpD9mor8qr
UUMf7Dh2dzj4DAOD4AC8h1rzwQWI5mThK2iOsnBCLSm8Pxiy9PyKKrPOsRfi
6+REFnoG8tYnPSmX3NprsmzXznNlxBa9xsotXqPKe6tnZNguj8qouctl7l6v
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
xOzVMEQGf/jf5pHPfWe4pA57UQ597T05+aE5kvP6pVIwQxXOsLekbC34ptiu
s4+u7nJ9KtyeDBQaqc+bsvx9cIhlWiUp3ZQI36PE11F3DPC/uRJhH+8ay4Kz
RGdPy6ShWLAxHUqE926qlKefDp04+j05SfKrq8yyx4R/46kAQ7qe9q4c9Obb
MnZiZlr2uOMVkXa1jrqyDe6Omdco538osycrhdaE+cf1PhC6PJmUDWIZFesS
d5j2koH+z+ULm5R9zOzlxnFTK9ZvdlL28PLF0rHhj3LsqI1ZHeyaFJUoX85Y
JBdMa5KJE9eaacAL1kFsIY4QOXhcEIeIbtAQRkkcBmbON0Qnohz2QwGq3eTu
FZAArpRHHsk0nAdbIwhw0Kgk80JeWAMPCgUIL74YE9ZLrTCX2h0mTQID6XtH
RxM6mdOelagUblBy5z0tyTUrbo/y2MoEkKA4JzJokf0ONMJtyiqxOyg8pWm2
4hy34ci14m1+6xTfw9bjOdXKSjALjs8YNI4aON/EuyewAg4U6yTamfT+P/9Z
4mLCe3hjfP50SXx8QDmqk/PAa4MqyLVe9CGChopAuiIiUX36XsryJFRZozpQ
oRfawNKBSZ449jq2NhkUJWamtDc1R9QaFYZIBYPhcVOTrU9cHk5m3F+gQm+/
xOmw6z4yCdT38cfiTIcFDZrqsb6PpJZ2lD2rTzMsy1OiHDFrt4yXt1kSZW4I
x/co3UWMSiYFlKwAntg9C6weFYZ1P8087fWmkHXHEqcM7miUBO+FpR9mqg3Q
gneEv6MWiTER7SMxA58aqc44fQgr+Ix4MDledRQNJ4zDZ6qFBaYYBkdBE/km
hAUnkYeChwD/mkd0EOqewMYpwM1wkee4cLIepMw1N3eB/Ze/AwTgdrwbgBGE
mSfCtTYjt8RACRAUDwdUg57GCwL2A0TxLFACnh/2DM8FeS+k9+BdAgagl/Ga
gCbwQUKdHtEhNRzQhaKdK3Mja5fZnoLoAWs8I+fiY8S5RnYiHj4KwB6AjH3T
/Q/H3sUuz9s4S9gWdD/ohMchzYbbcnscUzhi7JJNgZ+JI9OZlyVA9KBxHFYK
S0ojVXLiJIUAsaxSVv8BEzkx1ArNTn0GC/E+UsGyE/mVatykQUtCkCKZskHw
Eu/zUNgI/Awy5hDVBPErw12cBWfPeUFDugdBB7WzrJM8G8JWYlfgyAkato+z
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
6W2RPr1DFyReO+m1T780/LxgQSJdZKRef/ShIWeUjnIEx6orRKZGq+wovUaZ
Co6LTwhr+U39o5Kar2KoTs2qVFpSDSkLfWIYNXk4MrZuzw2eTEvAUXYNcfYw
56/ABtoUJrjRuzwimB0TIlWQBJ0s3a9LEvgGnro/E9jaMujtJgrCCnLGvICE
RxhPjjSfJvdG7Lv/EjSB24QYHzob08fxXnRWmlmEE/oQvfcO1iZ+opoae+nP
e6kSScm+qrdH6fW4Crju+OX/LTmrfi5nps83CfZbYWbt8YbtdrZ6lUz9Sok+
w3mqNK8mr0KVreM6rHGG+vyXig5wHfGXCkVAA/RTt+nPqI9f6E93qbItU4E9
Wu8+Q98drNe4FjW29LfS5tcPSZubLpRWK7opltaTWR7yWVMLh0pqWZkUXn2J
tDniCUmtU/z+xDgldcXgp8yQ4oP/ISUHvyglB86TkgNelpL9X5WS/V6Toov/
KDlvby8le78pJXtWScke/5LS3d+R0t3eldJd3pPSnd+X0hEfSunwj6R0x4+l
dPt/S+l2NVJa/pmUDv1c2g75Qtpu+6W0HbRI2g5cLG0HfCVt+y+R0sFfSPEh
z0vROX+WgttOk7wXR0urxd11PSWS++YIyb9vghRdeJ0Uj31WSrf+Stq132ht
NPk+62ytNnXhzWdJ3jMHSc5nW+nzFEjq4wGS89QhUnjjb6X16Xfac7Tdqk5F
r34z1d+aguTnh3acrbp/Ja1HvyptTrxfiv4wRQqmPy6ttvpAWi3qKan1SqNT
vpDuN3yi1L1CzkpPlVnpJ+TldJWhxJq5aek7406jTWhx5ymNcnzVXKO7PWuv
k2fnf2U9zibHnvpAoroFkrRhnlZu84YCSmi7yVRGRg9Znm8cIVQw549KMmfJ
7vq1y15bF55h3bqkmyhcXFhIJUeSFw/Vo4dFMj3pwcoY3efJeTGzs4tZG1ge
vLJT1vk+VgPwET1IiAduhKOwLsDfvNCNGMeAYr5TYbCxLkypyTMURoQGZn5F
XvGAHx5tAKskQeh8C5DBY8gC+I5qEIferIJL4ZpAI8divaL4Z8wsFu2p5JhR
NVJTGOENYTccnZ3/tb/krys2Axrrik4lai+E8oJi2x4sHBgWUwXjFHsbsM5X
EFA8KtkbAV1vZbFgFsOicOOil9fLkkR34+Y6RpiM8TNZqyDnBjXALlNog5eg
zBzkPVT8HGbfxQNzprLykXKRirK+BkERnG8olEKXvydf2taLZQZnivuaF4Tl
ZkOU+N7uWbr8pxaEzW6RKD4/Sc/AkEGA46BnK8uslK+NCfEwkXKwhYNxCCBg
r1DR1l8OMDM1ZOl+oHe/Xq/VmDzJSXqKNPjCFf7jprfUW1vXuqjgQkii0ZMg
fvwQl1x54920YWYGQFxk7yWYmdOn5Nv3l5wOUlh5Yrw6eNJQWT+LPiVUnNe3
8DO2B+oFCuI9b6UGhZEGiP3M71ATIgT7mhfqSE3/JF0FV0LMs8/qZ5o2G0dV
SNLT24c+8oIyvW09rnVUMAFCmL7bgBUyoOqX9iyohgNO+qcUr+wW1foRknPS
SrljxUMWnPuzfr6jUuS0eA51uteTzBKr91pgzEy0cp1qrswI+PJkBHyme+dT
FrsjbcbzP39MZ63RyiJ9ZtWRwBFOoY/sv3+oPktbOesom4xXlu4kpRffKEdu
2NuiNo6ln16zToqfHSc7LN7LauumqiGCt4KTqrcQ0/ikVm+B4XJ3VVeZvV+u
u3yCmn9PKzDIBJx+bZ4RxB9iktcyPT0oYy/F3F4clJ3bxpa0V2PyLZUbm8tt
G//K29L+nimy47RZcukVG+TUjwL+3PbdJ6XX1X+WjvrA7a65Qo6/9kPreEV+
y543PCpDKm6XHW6cIaf+6yLJrTxJ2t1ygZx86ztyyrR3ZNDt19uQsdvmzJZx
n1UZ9rvuPTVzN6g1+NBsKaqot/YL982ZI8NXz5S7Xp5hpvB0hfqPPB8y529/
zPpZWSeOJ1+olMnz6+Rvf0vL6RtTcmz1UhnwzIky5Nuj5bHnNsiz/zBGkn/8
w5qeWyeJl18W66j66qthCgv5OuBVNVKte1eVbgXjBahXoBCRblzvvRdaQXz4
Yeh0fv/9IldeKXLyyQHLK9bOoVV9qpuZVEXKKalWQXECpwf1Dj+7fU2buIEK
w/c5NDP7j2atKNz6qvDZy+8K+fEmkBrCDMHHPxLvzUN940mKjvP17RMvsWyj
SAknSRW6+9kwnbaLWrN365Omq8NlaUCQM2OJ/ZyaVZE01MEJlV2WhEK9+bV/
SfdD3pQXGyvNv4YfCAsRvw/+OGQR2Ua47B6xXnYPmVsPFx/uPjz/GOBEBYGQ
XgyH7wh3Ivkb+JVQ6kQEgKuoYzSZB9txS3kyPP4CVDIOOuAxcgkvPdcFQiP3
0GBoHe8HGuRML4PjPKd3gkL2oaPd84wg6GL1PR2T9mAhbzI4kT3amWMAOr+Z
+cB3WmPc63cwFLhmX2u52MvutY1el86poZQLQ2UL83chpDAFPM/1INlfV0fZ
78GJCXC4mhJdVbYfK7+ySQwjlPP30Pfwe51kO7SHXnm8avfeMmzDiXL62rPk
N40XSP8NA6VVU5KF1Su9pey8fjcZt+5wuWH17dJtY3c5qfEMyWvKkwmNJ8ld
qx6Se1Y9IvevekweWPmEPLTyb/LIyr/LwyufluKNJXLPykdlTsMr8mzD6/JC
w5vyUsO/5OUV78prK96Xf66YL2+t+ETeXvGpvLt8gby/fKHMX75YPlm+RD5d
/o0sWL5MvlzWILXLVsvXyxR+LNtQYL1xS+Tz5fXyt4Z5cu3qW+T4tafKLuk9
pN3GMum0sYvsuX60nLz2TKlYfYc811ApC5etzLGvtZUly9bJ7//6gZRf9le5
dM1VcuS6Y2V4emf9anv7Oj8fuuJYKbjsSpm+7FE57JIP5NLfrwtf7ybLFirX
qnX8+TKxS72xYpHszOyIygcMWaEjvclU2dwF0nrywwZYbdDe1JVSUDle0dM1
cjjdCicukJ9N+Vb21u+PUmu5pjGZ3A26nhK0VNI1I3tKJ2w6JbjQkimd1VWr
jDXLY2DPLPb585OO4xj177wTFV14Dw7E4BTxdlW55uSF7m6UG6M7q6M55aEq
UEI767B0lHnXcBvBvVAgyICYFpKAF+kCOP19gDVc+rF8nCASUkTglkkyKSl3
QxpgzPoLfw8mAFwJ/iaosESWOKYGbLDpAA9sYhLGsnq54mQnfDDYUFyOReFU
FnnfHhIvcWysWNdoaWmIDu95Afvgq/9SvvT+a/iYkEQ8C1wLp8LB3BhphJRT
JOM3Z34BsQqECaoVt/tn8llOxDeu0T3J42Ld3ZQNO82Ah1nmJ37dCpOOkpDU
nxvNbyoSx9iYgZtj57oqM2xIhnpEcWqF6vep9kmrKcukybYciNs/S7H/9GK+
5knrYRAv33lHwXSBtcgvNYDiEBKh1ttSgYdGB3axiTCE0fkqznaUE4OBVWx0
SG/p4xRqhdcPTQnKtSlBYQ6izxsszUrE9s//8Kgg5w8agdNMQPFCKswkTW0T
/4R7EfJlWGPY3R5mfYbDKTQQDKtwKN5X1wU/ioXfsUZhGYQ5vhIgGiHP9gau
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
I4Uea/mJB3NSOV9o7xNSTYLfOTCPjZYucLL17Dc/slv3h/o1GdnrnpzKlWZZ
L1dvvr5R1zZI39Zm+f0zofvDAd8M9/PuD4WzpffbL7SzQonfe68r6WJDZyA4
aqC9rdWCBdarNSE1ypLw26hcS6NV2cnO2FPOXXF4LWid42/kPjQwzelyekJq
aBkUrXJpUr5AKEyki+SitCb19VaXXbD1fe08IlHRee5pmtgC7tKEgdlhFBny
SQkzOBAHm0kBa5AdBl8DH4ABgDdoEERFIJGgID4gfD3AFSASwO9JeTIlMwJl
eAv0us8NBWIRi4MP9HuJdeAN8CWKjwP3/wVywagoctB1pNzBXSwsYThMUNQv
jwlLKXu41CIr9tvflriDYQfos+tty/BCNDQUgDOy8smHlYIkQzadAiDxnLoy
84h5eJuFQ2KS2oeIw3IGRdwtd4dbDkoNQTGoNzFzaZrBWFyiOKJ4cjCYe5YA
7HyGsa2XdTWADH4ojLRNjl7kLGuuAJrpWvaGnOOwjwDuW/JWktnIGmAfIMMB
OOcBcVFBSGEF7L4dCFyiJCA4IA3oVyFToOPurfK5067LDpI+b20gpWvyrfLp
sxNb5Yey9QFGmigOwBW/RjFB0rwzm4+gw0Jgp8k7JICp7LF+fChWG+zmR+yh
5MzFr1nJPDMMTrmUOJXhANyKeHAh4clR2bBp7AbkzTvzHUQv5MtErHF2rTBw
g9p94GRoG9PH6JEXhryxh4ZbWcJABX93Wwp/xhpmjtDPx6sJsyI++JfNGvKj
qwdm6zlraKT8X8wa6j4EoMyE2+23h4YQADaSAfnsuONC8gx88sAD4ikR5mmL
STKuenorbrMEwbq8MVQ4fdj7EIV+obVWrl3vA2VI+qrxt06Yq3smaL7heUNs
bIljwkVzq3e8LXjEnOVfVqXwtrcrz8Ph2Lw3tmuKKT8D4+2xUL2xnecogWIY
SIwMZDK6S2gIssImcZYi9xzMwA2YDORQqKLwWlPI2iP98BvoijgHVr8KGKd+
hIT3O3NnAQICKj9RTowOk3JTNS4EMIpwesPhHAhh+I8nwEDyRra+NXRvrDz4
UeNXtRU9U/TN3NsyKrut2WXIb/QA8oV/Y3ryGGbwZKtkT13i99tXSkc2GR7I
dkwtYlGeGIJpVZKrklnZI1NQjh4DSEkgEcs9VvmuovNQ3Ex9416gW5E9HGgZ
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
6Sr4iYeo2fmIvJh1i/SsiV9nrWvirVamfa5cMlvk0nvmyX5Nz8vxzy+Q2bNb
ZY8VGRn33mky4KuRMu6D7aV0yRgpaz5Keq3Mlz6dA/Vas2dz/a1eOkk2eHc3
2bPhyvTaabe9KCM/3tT+Gmr/L5RTb39BtnnxVOn7zWAZ/+7uctj9c+Ti6m/y
4tvnXb9Y9n70Glnno82luGOU7PTcOfKT371aFM9IdfH06RL/Cv+HleEn/gqn
UYv76g45/L57ZJPXj5CiT+ukz+TXZdfHrpLjL/+nUeyZFwfKbQ7xRWntWmK1
cHkNC2VA3X/Iw61vmMP1tZZlskvZChnQeKkc03W2vNEVOKS9IctzYGDXe7XK
GTXN4r56Q+nlwfnbWB35rDNcWplExs+7zqiyQL9W1vhLg40usaRrQcTsynlX
KMPupoiw+qdZ47qmgs9miFlJvSqVVlW31YrvJ+sFL6sO95M+Uxw+4+ds0ZuY
Vx25F4WkVDYzjtLGXGnVG19QDyFlmKRt1+tYEEwOjHYQPJ+t1nOU6701t/c4
n56/Rs8zs1Zerp0mn9fsF65RWR6vcYT8rn0j+X3d+kLfldaq/vKtvt714J/l
E71GZ+UIU4mx0YfVMmAVYcChTAiCkj3JgaJAXRKP4PNAcDonesy6s6VOLzkz
RPp038rKqs2RWY1TsKohJ2zUIY3zDMIkOJ/bYdFte7KvEe9qpqRe6ORg4Jwm
/qKWpMN56lEuuMDOHeH8ONX2u6qRvm3E26FWptKYvEO1IcnUJQGySuiT8bwJ
gzDnnUAacO0r9xTZOUJg+901fK5TfOSBZMVEympfQ8Z7pzD662xV3vfIFap4
d5N99b0NVNflqSqebGGLcjWeq+XPcqkC/FtTxvtQ+0y+5YC/qnazz0bFPY63
hQqNYXH+KGllSGBmL+yowM6n1KG2UfkBpax9q9sen0sctDatbj0W+fTTwb6n
eHhQXJcnnoiXjLY2rZnKIkN+EW3yCmW4mfp6RVWON+q7bfNUdTO3KpwPxlmT
54rv188LDjzXAMoBxeY2KlaynCw7K5adrUhvZ32U4/W3n+lGjVT7a7Zcog87
WfHU7JgkaxSQWVsS+F5NwcRECaHqGv09t+ih0Wp+DfmnaqBcxeWMVhOSO9xZ
7yZUS0OtVFVXmV+4pqldOpr0q1WNKbam//A8dyYdF/pPE8DGmn5GVW9VWq7s
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
NN29h1lv4M9ajhA/7xR/PsI44RG6fjvp/4dYFSPXGtzuuCpRxPicTfKjQ/VX
2WS2WKC+Fw3o3QAgVLrriiu33LILavtbt9pi43NN8cN4y1y8suNxKfSzfyPG
K9dJX2od5BfXNUUq11FWVMhSnIwdCtALS/Jof0Wtrn9zZ/yymFICL4Spo27D
gLEXl1rS5OZynWIwqrYOtfyVg5TxrDG++aJuhaPsxVYq0Y8zzIcCvK/1udtc
eepZym7n6OtfYjivJbSzy0Urfk+/N8oSPb38aiqu+ZW8UhKPrJJ0g/LOgsJK
Wl1dqjsdrfRgMwlto593Kpfc0hrvPSfPmET+idwQi1NMUi32u4o7zsoB6FZl
UKcZ1vHajnso54GTwzmG6WufqpIF3yi8fmj0UhyjmHE349KUvqDr7UTTQk9Y
d4J84a/XSf9u7naS3PmUjz/QS2d6n9aUH0sZJ3Rsr3V4g/zQpBcWjUZ9P9Qq
WvJQYejJJzuUf87Vkeyt8uFi/fZIpd9rN+jW+zvlmTQAmvn722Xuy9OkYGUu
wbKHSWz7LRPe3FzG7/OoTH1nS1t+OBgyDLs+umi3LjZzfqNezfwcrz8fJIWE
VjEgemNMt/s7o1luZqxAjyutrlmH2Ug2t+aKl6d5oAz69juuk832eEFGvhhy
cJvkBS+x1tcd8JCqvnvpsm8SKrkld8BF6ytk3vfaU47MC1Ds+6HUZqlOMNo8
sov4WDweiGbELedUnQ6JMcOtDxlFG0HmIC/yepD8/fsHJldcHAo0k2RDjxSM
anfeKUIn8U9+MhnTejLtJAGn7q6krWaaY09oKJw/x3f9Oq/m1p27n1vcmjpX
ptQ14oHmWIxEhYlFFfp5q5pLM8dhB1uv59Ptf6QsNqV8PAq0oMI/4Tsc8d5q
2SUnkaXYNpReUqZdnYmLWtORkNygMX8tLHtw3R/KTSlfK7O+HaNbP/bvHSQB
MmcbH6zB9sPUBlYhOp/AHoVZKRVzY5Ed3YEFpyBifJJAeyw3QCzgsXI7B4QE
+aHxsQN0VHPiwE84IXRelsQvB9gC1V8XXNd/+UtyT3PanUW9HEjhXVI0U88G
y1ls5PGoPJWiQRXNRJtekbFkjK5YLt1vzRzj4t3xGdUwu4cYwtD1cbhIEiO4
DVbFfAHX/TO+iqfYy79QQsxRIRYtVFrCjZhrbA+AKGLg3J89Qan+hRdeiAMJ
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
fldbCyJsgEQI/VP51Is6QRHRSYYE2D9elcC0z8RwYAK7xMByGnMHUGH1gbV8
B4c8RjUWaz4ERv7z1FA1AR/cfvrdifHU06zFzUggZySSTdW6ONCIu4dZAD31
4rthktombaWLFwr2D/+67miRyL9+lqLEv//D9mhBIxbK975cHF3/wQOzX0ul
TN4w9NMPCUEjrB0qQxm8GdUC/VmxQKQ63nO9SlDFE2F8U52+r6qpVuFbedT5
TQ2SnDbzFHpV1PouDZJWVWjF5eG9cn2vSj/YWh2gGp6rKtxTTQESOmBRlD+Q
Gh4lsD2VRKbbwJDdVT9sxm+62bzXW/890Pp1766/KbLN+uun+Hkq/8vK7L3w
gYXOivS9kVK1GfG1VmbfFCfk5pfZixUSegilVWmYnJLSnjYBpI8x/ML4Zjxl
IteqVIEouR72b55DS6Xq3BkKZWfLwqhtA2izGougsiYoXLnGGpcFQbjY2Dq0
q6pV5t5LxfA4i5MGWrlPLYZjzUS52lpLMCPks24THgNm69DnUfJaBIU13CJ1
CJqrxE6uj+c73q3KbrBJq990yXe8WL5jI1GusfWrN+kyVm/pBDndVvM9a+fc
O/kmv1S1io2HGQRvetopuAubEL4lKDNJ8TpKboe2XfCkG1ue/dUlJuXy1W2Y
UvHL/OJ+L4Fq0c2jcnYjq5udqkBpx8hVKYHaoCJK71nr85CfQd1x8ncs+re0
GiIS2FsoWTVLPdL4xhsKW4Z8KT1fnC5nnv+J/LatwlIKkZlkfeH1CJ8dI6cv
vUz6/eVYefvdtjTriM8i3381/w0btT3w8Lvl8uvrZXDTbJm1anVd4ufIpdVt
MmJEo5zzVYeBwZEsh3TbIZ4HO/W1Jtnu85z0rWw2J/aVzz5lIpHsNG9fo7av
dyLbXyX1X6KZS6yk356PqX74yhJcmqPpFWOv9rgIc1QG4JgDsKoYytFZ/tQx
1zz0ST31VPt0wsX4qYYOlTTI8t133V/V1/AyKYScGrmPJiNowErqxgbFNNg0
DioBnOSDQsiLiDmchvQIXaAcOfD1oLA/k886VD3kuak8B4xyIB8dXhjvmKgN
ehDPBZBXIWrq2YgXA4YFypLJhx5Fn+IpQ4vpesf2+IMt5gZGQMwM0/fhjIfl
MuW3w22Mwhwr3HnAsu3DkQYKJcic38Q1q8XPBg/FJq6BVEZ3MFAkfmlNCc8+
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
oExSUAbsr6VQv2qrti7JHRyHcfny5RYxJQnGHWwraH4yFb3nVioW84yrTBnr
GLw6xCwWrA5YHqgIDCmUMQ44HLeect4o85PMrdrUpIznKbEIbEYerIQhplop
gWVgJSgROAI0D3xA0ERTLPMDWYsXjTg0GCdvzkjgEpU2AAaemA0Ago/wBCds
foKi4eN5FsAUXAXJTt62GeAU61e6OsZ1jyYiP5v4XWAczkAU341yoyM2UsHQ
w+yTB+XB4CmaahcBBHJxdh43TWYUaAzVDcfFmTDpiIICvYHiqDPAA3UY2fBN
3WAn2TLdXray1qmz1LTyDOBGywHnMHo4ISQ6jH5o7u0zyXYsjuLdoxck1+j2
0gb7DXgUb08/7zJIy7UtctWKn8iW7+4ng1arnj9klZTs84T0eW0rmVZ3mXzq
vvPku9etkomPnCDvvZ9WVea8F1lW3Wg9y2DjyEC+z6oA30hV5XQlWwR6aAjd
qHeSl82pqjx1s6sqA/YmqnKl+UBP5ep9rTiIViZr5Lbbwt8vvhjIHWrNAi5e
eklyRYhumC0PGF90FGlEE1Rbfz4DcCtihiSDvJ2+c56URX5qoCHXN3TpsLe+
oVCxKkbS/Fz2yf276DZbIuZRc4MMlR/pmXpzEecd3W5p/A7ZrDP0MZZasEez
OL+0Q+c+MvCvc2TOjbVyatfpFqPH6sc5jkvvQFWtpcbk9tOHHm9hZeMVoHLB
CxWc5mzlH2KVtufpjrjKuNacCqQa1Vq9FMwp6VEwh5oszuaV2dNvuFjONxV6
Hm37+S65YrOK5fR0ln+xJRTLGflBrZy1PAwF9BXN1EGUsH943Mh7QymEgjAB
YTbErO/mfzxsdf/H6YNzL4sZad/fwMkHNxQJGx+HndESLbX+wZF+QLPOkK1o
17LZIpa4VUbopDxmQQXFRSwvI6HgqnYZdXa7PPpScRHLY99qoS5PUinp5ZcD
Z8l/dK7bao9W+9y23WfI/fK4fGNdTvq1LZabu8vlSDWJrr0uREIe9NVW+cra
I3Rd36zIYxtdCsPMBP+zGny76PW3nR/y3Jv+0moP5+61WLKimONMq40HB/h8
03ebbgrZs2IFMTLV5g+c+d65Mu/P3zaJBGCAxSdXjcokA+NwrtfJqywvYwgp
q3hdxhUmmJdKvG3XUrucF85MaBd6uv9+yYeo0hyesoFNp5t2eLL1nQA7+WxX
+GxL/C6I4Mylq2XWotVS3nS9tQgCYrYQC6WQlpA3ZNTiqkAZVS5K4CNaENtP
FU4CH6lZi9L5k/wpFiLexmJgsBM5kE7Yj2hXCBYPGYa4Q9HtoEME7z5W3z9T
h2lXM8nHWyTiNFWGixWGovHBgT6ToQ2Mm+mtEbR06pYuj/tqfpJdHmc8Qdr/
2ZT37AMqyZRXWSCoePQyRM/IwDJZ6BAkDjwTHueAHUulNUaMVdeFGqzMUpXi
wOoyixjzwLJ8a4B4plIV4pVFu8NjETviz/LqEPvSEtam9WhqiEKtNnhU7Wis
DhxgAh07Q8cM+jm1LUtth5b6cGv0lNJTOnJcqzbuoEGD1Cz+MHHDZDNqnTHt
SkOpo10xyMIKoLXwYrE34F2AU6CZp3TzkmEbFlFJEgPjBfPelrcTCAjMI6IZ
CAhbQAhkiOkabgwxJAbfR0UCI0EF+OYJy0BlAuU8e56ZybRJAVDBvpEPGATi
SLMOIBTIvWBSuf3Y/sLQIdYi36m3Cm2hTjjIks+3SVv/OAbcEdIAgIl5AS+N
0Y9Ww2mFdcbCY52E0golBqAZAbRfWGh1ZoXBfhIU6okYPDUONUZlgm6fGaYj
t9Mbuy1WaK02lzYLuT1uDLoLLM8UdUlD35vNTd3a6+eKoqu95FxPSNhi1Hd9
1Bab7nSa9Wd3mrOoTr6teGILlSzQMwBs66DXPUAufeFO2e7Nz8qC09dI3z2f
kNLPPyoDCpfJrINXyB7felT2fOhUoaDLgI9H6JRTJIlAt29vrKBzaly2mTxf
LmkY0frVEqf8W/Wcv/bn3us5e4MmMq6oKHPDDXFbF4K/9Ze/DDWOVPmfY5eN
4G+axdJhVGG0wG5W6u7IYuJ6K6cx32DHT+UGOVVNDrBuf11P1ypMAev+Sb8B
/0aCTas9QzCUb9TPnaPfmahr6BC1P5aryRsxcXj48iwkjkfPykBf0a09S/fR
kT3c3p0GQ7xOB5B4oZooB+tm7JBQGchA89p6GX7a7dJ3XaiuSEwRB4FwmELE
d7IL+9osTzBjC85mguKRPvrqQbrBB6mWwkYbrJ8/VM9Bxs4xKmDYHl7bbCNF
kpJtUKX3FAomLjd/cnEIwCy5VLcYRdeo3NeV0OAbrpKUDQGgtuSU73fJddcV
5MCXKKW8TK5W9bbPHTVF+okuv5QVoAwwaI+SmiDDu+/u1Mk7XIXGr2TyWbfL
wOdpDzJGUdB/h6ka1DOYV3oJ+s3Ug2qxsHDP6Ix2n2+Nn/yyWW3fcnk0YbLG
rlc09LtqVcwwY+z69YqGHrpmmYxcFoqGnn97KBpKYCJFQ0eMtNoD3gLh2WdD
uQfIQ/psDHryYDlsZX246mjzhTfGBK1u+Yt8d93NssfLp0qfj0sk17mXfPv1
M/Ts34gPEmLu3uhukTOfa7U6zsc36db4OGkjI2aNBp1Zl0wYu2hJDKjyTKyB
JvDBceC5CZ9Mlb6vzpJz1lSbczR8Zgsp6H6uju0QIM2R4OQ7s1v/Kq/K0sWR
LWqXJBBqUXX4+Uz72/raxzK5c0sZ1tIs/RX4XdZ5Q87jMhJXXVyj39Xfxzdc
KvNrP4T5SdogZrL3PESV1Gwvkuu8PbQexWX4K6jdUUYmEPFH4TyECxwYKhPu
CzVNCQJYUapF4bvdU7a2kNRyowAW4flK4750hpfE3d5uAqlJgvHr+ftN4iHl
LdbMnQKyhbTv8qZnZnKcGW4JLU84Nhu8wUDdfGRlxFv97AuLqkIHojCiwwz9
LouGUMP8wJ9lHaedTSbzbMZA7NTS985VdT1BVWW4qcjHHRUvu/POO8tTTz1l
f+0QHw3PNtFOjD4AhVGG+iEuhdQsYnXcI86iA1HDPQEJcEWultWOhcBUTCQ2
Mi0SQAXegs9LCCBCQQ/k8OFKBAuBMAjiRSTihoTygqbDLQmuIkztcXm8KJyW
tUxhRo+t5zFY2ztbPFUouNfXlsAkC6/hXNBvnsHoXUsAWUSho33YS7g2WZx9
rERNf0vi5d4w6YAGaDzQDc4kwpn4m6F4R97xZhVcgtRFRodTcUsku7HucTJX
S1O87WHmtgw8Buoau2Kxbb+CSYuU+sp8LpPfu6kY6UIUBdMNlLGf0E7cG1QF
GgxmEpDHMJNyxrDmTJsNMxKQAuzj1u0pB99znXzmB/fIVu9uK7lCufSp+ZeU
bveG7Lz0IjnskU65884WOXBdrXzU7ds9bUfhwjT4j7zleVIMOqlxtx662eI/
rgXdEkn7tndFttsu1M9zqoWG5wcfHAKwUWZvvCG5HvAG8O7hHWRXvicP9Eju
q088BuRcwfU+I3+wEPlbYxFoaI8SReRfVq0/3W7z2vjtAPCadQexIUZZG9T/
Qnc7u5kZkZ6DmrxXofuoUlV/sZ86dKNdLCnee0flfegqsoMtMQzXOflmeau9
21D9EH2X0GluJdTaGujRe3rbQxXGjLT1juP2dDnFHnG83nJffTgeHRj0RQM3
dBMbans56XGzGYWcMv77JKyADYO1QabCLLnN2Z+N1XPq6a6HeB311Q4ZdnaH
jDqqS7q7O+SG7sB31b2fT/QD0WxEqtFlaNYskSM+t0769O2W/hfeLCESb458
51/nW+7a6V1JRK6z7sXBt+sF6abAJuzj0Awticd15xWPQJmX06725dV7zVLk
244yt9eapV/9uEJKm5pkm23yssuqKrl8jdUslRNPFPnFLyRJP6DpQ58+Yq/P
qLxX9rr/4iTxnDSDhT9cbmsBkmWWCgUEBQPxlcfytpPKnq6SQ95ebHF5i6MO
JEJ1n+5AfAy5Ni8/+IEl/8ej2YyubA2UamPlm2MqX5OXrEN+4uXE24kyRedj
1x5y7osgzwAZRhv6wdRl0/Ax7FBba03BD0Y49/z60HHum42vyYBcQDkzau+2
TX2qGmI/nS+BsBpqPEP2aF4SPo6/88sVIhOrn5DjVt5l/tVFTUl7GmrsosfU
ak7ADFYxfkxK9I6PCwwrm3lDjOAyQlcNtL0yxAALOefewJQHh+DSc7vd78Nb
Hnml+lhWoFEntyrmwqbeq5YItAPfmxhMgzZnFhIcg3eVaCZSutB+zguoFszt
F89XVxnGOheCtgxz8FqtIstKfX1Ze7rDlykSLdf3lrWkJSo6mgPjV6F4plrf
K9eBbmpPw/aIe3Pwcsopp8ivqDoq3qN1kMX74nuCaUTLM7pQHQTjUgyPCkBe
tMzpkYFWaK7UtLm+FlbdCBM2kDEQQbAqaGzADLUVWWZePAAkylepM4HgIy54
YLwEDjcv1gVwAATpa85DgX1YFxR/DHzVFrZqmQPWBoQ5t4BC5i6ZASAZbsEg
o4eYe5swYdYPZiWcEdiez+HgJhfMcRIyeHRCmYZZRYaDn5hRMBAgGrBMjP2w
uAFbbY00Rclda5o3Q2X6hGY+Fid5b9lYVHGopLdI3tZhB4rhWYWIqrf1u8g8
qIwuEwhLw6b2CDUej7V/glnQk43DRTXweVgZKgUwS8xA6JC7qxSXmy6384wl
BbB1ocy/9W459h/VsmdtowzpqpXBQ4J1u3BhpxytIvSaR0N4bxrWHoLKggcq
KTftkvt/s9o0q36xkbg1clqh0RiYCy9McQuBPvjkSGcjAIbuAFYkKBcx/RY2
coDqmda8M6QCdMWnCO7OCqtkhqQF5eHK3UkX5m4qeBydzYrJfSy7d+Vf8fL7
SBbF0V7+UDlIVcQ02w8i0gtoWb+wksIOFeP95ADFSqlLtrAejPuz/ZwjP1Wj
oNkSH+oT6Le9Yi0ACtYgQB70ChDfR/azmb5dzz5VVwkrjGyNRh32AOr76eaf
ZAF5fWKa81AFPEfLaZnJ663QVL9soamkP1PWbc2zPKur45LYQYiiIU/L/gDS
FLysPxwb81D/dG2TTH8teKivagp1po7/Ql6+3ehtqYZa5wrqPdyn4nT2wsck
12et9CldI1vvu0KGtX5b6p4PN0dRBl1JfaPE6z3ENYxANhS2OHHTosQSAZ5t
ZbGX3vZoXayPPtUktdEWKSSip58ZxOhyShp7ueZHHw2OZfIwJ322IH/6k1jd
0M99zg3jybYByNGcfdhrMvyBo03oYybOXr2b9O+YaNV+sGvC9ZKO8JbrCa7b
8eS8lH3GGocmZbD8c9T6poUwtCeNRZ23yHaR91ZVsHuIWrQCYhVtgLT3ZqNs
TNJSdDqKegkgl1CcEaQkY/ds4QU5u/Nyg1aofYqhPFpoksquc736VDJ2GZdb
UlsUm44gRUxpdrKE4kqOTBCVMVoqcZHhAgPRKbyKNMtQmxYSXliw3Ao6H03D
VPE7m4xoEkSsKkkvlJMZ6QyIT1/rn7yWhjqmebPp6E6M76CYEI/YUISg4BTB
2CCIWvVxSfLVxMNT1A4rXjg+1QDZQDmr8fErnfm0glTfXl5Lxl1faGsL69hd
TF2ZqmGfj6/9UC3LqqqQjbRrnF8oD0oiEBWNvmJQ97UCOd+zEoWp06R4RML9
TBKJ+VKZEbTPrdLzVhqJ3t/4MSSZ15eljADAh1GjPgAEFO4tb0vpnebRm/AA
CkWS2lyS6dAXx6xTOsOO2NLIm9CkcqSRKXBGq0OHP/swMHyOytn31NTkFZYV
zB2lJonDIo+JHCdCZAFByGqWF+B5K139oZbkFGNM2FkAI1Y4MpSlyRLVVe5V
ckFzLA82IrH3+LPtSfqC2GylFeSfutzZsbi5OMc81XBXyI8gqrzUSXbgA24a
b5ge05/yI3BDIF8gHyQj3g6ABwAPm5dJALc7x8QjMuHcLv5FEg6xQOCn0rDN
ocY1gePYZQQ7IyQYIiKt4L+YnL0Nm9WlqVBjDI0SLcalYPqzZapXvC/y2GMF
ubqhWce0QnZeGKKBR7bWyO4KrqsuaLMAlG+83kkkcc6Ngs2pV+0CZPWagpUW
PPPMTBnAQsgKA5tTt5drrlwpRZjkGBug2ZZVNlbX58L10Fm9Vc0MEHNn2cUY
qDN1vR0XUVewlkca9zhdP9EuG0dnl8tDdk1G7FHVEFl4tqGG45N03c1SEZj1
Ca4Pz5pV5p6on5sU/OzSnJBURNSBKMBdJKfuZPVvcvaTtEiQ2GGqMZDY7ES6
UZMOGmpP4abfwqINiDu4xmKYBusy/Ci561h7KkonzE1P2O7dZfqoteQgUfaI
JPYw+kfj7G23wbHYlH903K9D8anDOmvkjHcqZevbg5eDNBYQ+JAjHpLxt1bZ
Jq04ebX5ifrr6r/55pAvQCKc19F47z2/9/VCPcNtsmvSiNCCLAkxUcPcvk2O
nk01DvlXjXldF33UkRRadZmLdBptrWdeTPAIpTGJ6vEGjZTfxOPV1ZXmp0Gd
TNv6Y+l78q2S+2CIDF033OTpvd33ydhx69AXSXgAFRro/kUNCnCNYpKkqMRD
DwW+iQYeLS1JhSF88TT84ZSIdyKcKYCgQDe5dap6XR1YosRqQ2IhUIk0wMMT
q4maw1otzL7Qenp6UEZzxKsQ2axVst9UWyVF8IANWGEUs54cX8PjAhlIirMT
HdjJsNz8NTYKNjQRGgkMDuLBkOUnM0oIKVoJncDs3C6372df2zUpLjNd9lQ1
kFNJS37QEfbauWpaHBiyuKLTsjluiHqj/BYbCeLO0+akPNj8ZAvXy/9Wh7ne
Ksx4h7kYP5i7OA7PvffeKwdQMU8k1obaURVmc2xZ8VkVYjNsq++hcj7EA56t
COsn0iMNNi7sbN+8gngzjO/JZSomr1KldoMO7pbRZAtlLMeoMNnanKDT1MA7
V0f0Tvmb6pYfSHES0GyrGzzUxPDjqnZ7SQLqmQYbk4AGxGdrtRHb0QRJKNZV
qlBghp75JAsGzRmDPEjFGfldAwxnHqCG0TxdlF+Wi034E8bymo7t1SpEmzJP
/QWhosX5amgeHY08buqzJvIwQD+tz03M5e7y/fUKf90h/21Lb7wqxDvkQiku
/DVUn3J/vccwl7Sfu0TVxhX6SqbwVyx2NthCv4iEY9Ng7IKHAakEwHpXFN1M
fXlQ3Uk9a4hiAfAVkhkoppNpfRb30xBzJgHbscmB6iA1fHEQhuAr8Bbv0ejU
4xYhjJDXbBD2cdgk9bKxKtXtbzfKZ9ZFhvCDOtlx51BOlyh8RMtXX9HhWVMl
p3+8wXLVXmUf5U8KEoX91LhykoIS9IccEq5GvKjK0dy37L0kFYxoWh6GB2AM
r9IBimgnimM694xXlVxu7+1u5FGnRTrPVOQE8rrOQETeknU8sbI6fC5hvJ7W
NXCVAtBxtsL3VDW4yuFNUVVlhNtNclM0AXczcw/Q6IqTxb9A7jUAg5JHPvM9
7gPwCtCgltFivSeKT/AaqWin61qn+UU/65Q2yKguUCSBqzhTsa1+rQh28yom
9XQR7qNnCjR5qO2+UZdg1BVjLVmPBCo8AAvP7JJBI9fIvFUVJrRBud+5sdXC
fjks6Wx4KJfEd4gGwswl0/1Lal5efHGv7SxGxwVCx0IKUEeDzEccbIw6SH3E
A6zAKGWO3ngjLB46Vdx4YxKMARyvXHuG9MmPlr4P7y+5T/rLJT972803KITr
QpX2pOz+ffeF9l5bbWVnYrUmPBoJcrRfAYzAjFB0yBuxE2aHixTHH0AUMIeV
oeZVwq4SG0IQB9DAq7gRDYhCZT2jg5mTRPeWmu5FHfuBocFwR2vf82YhQlkd
5EG5+sWoY5YVXiXqF9sCmg8/w5gopdwuQnSwSgebzB1koAozDCK1URp90DAz
cPfh5d/XXpuYJIvjhthXldQBKsJRWSP0c/urojpKT1VckORlU4ghmjZvGHJp
VOjVUQY1xY1aHLU04d/u7ZaNWkI27VfbpRNJWneIWmoRSSK49GoXxcdsb2+X
ceMCNxA08XTxrnNuFDyuRkJlzM2dqxpnrhohz0dqx5MjATcQjterYfF5xWRY
cAep4J0au2ttawTzgTrN56vEOl/Xd0gcwsh9yvRPNn8jTY7M5m88rOccoffA
TF2tUo9QtO8KFRn7xX9947/we6gl0y9nr1sJXSNuczvJkfoUd8oz66VzrtpI
imeoNxD+QgVdqs8yRHcAUg7V9LBCt/mmLUfbOmO9ZQtB/Uzf+7ximDH6DLPV
SKUGO4Wg+quZM8Uo5dOtDhUUY61NWVr+C3DuNjiEFrsJFwvrnPhYfB6QfUhV
/GUEVmS7jeJ2wXfCrmVbcX/Z/iMEeqd7aoiRc8ggKAmuQV1mELTvfA6oYwKV
HLSzNzHzuI5+PgRZB/9clnBCuNBsD/6R9rxwjAghtCy2MnkUV10l8j8Pdcpr
K2VoPDv0JB5ZYs1UVrmFnaX8YaNijbQihVpiLD4MzWzLab0XERKHc6TFflCy
e7K4X3CXaPM36f4+xF45Wac6gOjGyH4HXqHdy/KlfSzONSJhGz0lVSzm6Bf+
It6O2m0UBB1GLkXvgk6dabcHZcpMHKe3O8pqMm6TkEEYya5PMSJD6Zoy/W25
7S9KuatRZxE5fMejtvHr8RMPGLYTDA0Feo/Q+9xJeiuOM9qK4+Dd2jE+6GA1
vheG5utxEjfsysqn7bcHxQXr8//+R59I6dCCzLnpaslVrJaBE/Ky8MctscBa
aMyDOu2Ki4XiMdjGAwcGVYTFiQXq3b86OyXnrCW50Tjfb701ZaohnJzm9TYJ
CxeGyoeAM5YS57727jfMdgd6s+jxb36l5k0rDj3iuX1lcHlTYofTjuHQQ+Oq
LLGa0vQcRPujMdesSevT8hV6SXCrWKRvf5I3NA/xiA4C3WAOKnpOCFTwomvq
cI1SI0uhSSC2IEphqVFMUWV6SEgPi9U1JuAYbylGrGtMXIGsKTU2E42JXkfZ
wn+PimsaDOcFwb3qLRiPnU6MAaydq8tQUSLQvNniUrEOlrnHmK43LWn7KksY
hbAKJcUnWEvSJXKGUULF1SluNhKpI667WpOGobOcu5ZaInFTEq/x77Q56y0s
Zs/qDqlY1CHvrOVTaZszRZc57+8yatQo6egIDq/d43V7Vjj35DxeAROzD0ls
Jev08yqKBun+BoUwF7taDdgFRiZAzCIHQmiatT/IObsL1NvacHMoyv6ivBHH
e5eNRrzj7MManKhrYaEuk3q1KJ+QP6tEaJCfK/qhnGsI59nNXC7IEFAV9DwS
nzmHcP6R/n2GLjVsvrUKb6gifIW8Y1qJqqwn6FVy+mQH6NyfYWc8PzObV8Va
Hb3nuMX7D4+6kz0+ZiQgbbIqM8qd7KE3jwhjQ/zZ8tqKS/v8Xe42k3a2/vcn
+bpulRMtXOtAvbT3dPiXrFGh/EO7kRm6ia7Vx2fPEyoBg8zQAUtY6ihQRDXX
w45EwUFQ41elYCRTRaBkbOKZmxU3P/4JRDWcDiKYjQ4wQbEyfRzwQ9fINYkC
pQUAQw03u4vs4rQRPkxKWmBdIE9oighgQ9XRzfbrXxcrmUq389WrxUE4wD02
wC3iozEjbgzdWaynwfcoYsDbsVTcQPPMcI/QCEB879RHaR1v7M68MBYIowd1
pNWeT7b9V3VzIi7UnCxyREUUkDCA0HJsCfiAW3WbFxI53c/GONrsUVNPN/Kf
+0C1MV/Y/AhEDAIAzrDYBYIx57zQfJwDMYPqDC2KxZbyOFtNqLbR8kX9+SkV
xkOMX6YuPgGw/PYdVcjfg2qKz7FtjyzUTt2sgb2jIlyNrj2RzSfVTtJXzvq3
SLUxeo+jZORvzpUxa86Uy1fVSN+mZtNhqjsTp3d5uUhDMDlsxgnTh2XF3iSF
mQVEO8NjjrHOFd74gvLMQKkVK9K8GswwnGQUkvH4dk6Jzqv81vty2T9+Kf0f
21f6/nOszH7w6/LIR0+57wSMB6t9wMM10u+rN1imJwYzebOYr/hZgnE4zEoZ
ovq4ux//WEybc9DK5OJVdTKm+bPSZ/Uw2XPV0SZA6R3kjCzfBRXQDNKrjQNp
gb8IV3YwLJOqSs+d7WFcej8dVBWiD1PWVSXYBPrqcrk8idLnbMA1/hoeBwVq
GiqavevtOlhz7GfdPz6eOOMpuSAZLQmOR9Jiq+5hr00zcYLmJfQc7T3UuofP
M8prji63bWzRna2PaOdarypAcfJlsOdq9P8ebhQIS/9EUj3AC7htTguwjYVm
XFdokp3fCKEZf19X1AIsUaD77ruvLFtmNx0V6CiV90+rjP2eGiV/NEV4glGQ
BOAOtxFlKI5TGHRYVFYLVFJ1xoeMyiOpwLN+Wk0SV520Ylts3rahNlMQT7CO
2cDqHfTdn+l57tArsaPPUWX2Gcup3jKWOOpjxdO5xyPMVphhfvlf63/PxTZ7
YdFtEQ1aJGCb2RJBSlRGIy+88nN9ZS+5UsdgF9V5w41n+LaaYGEmNpQWNKSo
uF6QQFaPxX7Hl7OHKu0pQqr9ghwFyqfm2BsDdPkfq/f4d/OFLVBA92e9g+mq
XY9S1DzYAp2nRYDWV+XbCHtmKPQREuJ+D9K7PU5OMyjKfLE3vQsUe1c1uNXE
zA02DpHKtWBC3kIZUoAN5Y4gh/U6Xo53XQiN7M25dZtOipvt7bet8YoJCRg2
HEiIN4JUgPMUN6cxKtUZaNpDgIyaCc6TkXmr6D2My8tB3P3rX67/vLcOYQz5
UCY5+m5KrSYqhNKyuM24N4rVY3BfK9d6IAySBfXkNeux9CaGuBNjSFCXLLYH
5IGklzrsPvACWKOywI1EBoW4BJKRw2tlJmWInOTUaDsvLY8IwXIhXBJyhMEl
HJIwSC4HgkFjgloglXGeod1BHOSCbak6O6CTW/SvcRbQvL+ufCiFc4O7WjaU
ifeJPhYEIPcEsP1Y3sp8zjitMPxT/58ore9bhskZ5qqcLLPUmqlRuahg7U/L
5PiLUkoLvhZ35Ash2sla6ixYkLryKcCKcYmKYRWxWvidQmFYaIQmJSEnaS+2
JNylK2UwEtVz5ZWBQ8V1Gb47OknrYm3DGb8Kg5Q2ZTOcDBY/5pMTpe/q4bLT
K0fLpDPukocf+8R4WkLsVRN7+DwrdN/LlsrY337dVi5pGdQUQ4fffbe4ewTd
fehX/i5Dv3ONzHhzHxnWPdySv6gl+Pt7P7SzwhurUk7uHh3+i19IHB8xoYn7
k82MIYnyZAECuVRvRUzQ31w0GUPTtect+o/l/YYaJFPia8gvkFjqyelnHk52
Ejp8aLw4Hh9CQzgtch6hwM4H3eEdQjW6iYzpS9iIZFQoXp6LIqUZ2v5uaVEy
hKfwHucCzcMDIaeeVll3p9EfFbq4LtOdg0SbqauZaIj+G0i+biwyROsMna2M
ztmK2KunJcYl9Ui+Xl+l/r8EF3xZL/Op2zrk6G82ywXdNabeahWcukr92te+
JteEntu5Ofb/EF3vnY2ZWYYAERFq9A3Qh8bqPNi6ih6mj0889Tlyj49sJn0j
Ge2MtknqzhWneSRRwPYXgq9VLhWcuCerZoGuQtqM0gVGIaQRhtJyhm1D4PV+
Kn1w2B6gevQxeV23y8l62yOs/OU8nb1lSRhwpZrGYWGOs+tWSRo9Ax1RZ+Zv
0LOhO5a/EtziT6h0O0xR+DiVptRCR0U9rcOwXorK8PWU7Kt6Uzk1W8B0qIVb
1IxkSeHhxWqeZ6E6A4KfeGTUo0OtsetUi74J7tWZ+jEy4LfX64N05uh09FKz
Yo+40wksIIIKowYDmZ+Idhyqf9Z/hFwSLJbWgupvXI0XzlJ1kFZdTWqOxzVt
fTKDyhtlQaKvviry+9+LXKJL7NhTumTsgQWTtJgTJ59ckEt+2Wkt5PAmIaro
uM5xwglCjkvSqjKvT9ARhi53bHwtNILOZ+QPIZGNZvxIInkj6ka8dkl9Raj3
s7S94IoZFcW+8QNuFFGCEasa1RUzSYxOXEOQQ3yjGXl2mDMUMJJHpUPSgZTh
RYKgPXFbUdwi3NQulrpKHoNXefaSx5MNU4WSxwStnR3KfFo+PLF2kPV9o2sC
GxtGGncYyQocNGzm3LjVSN8glnBrlVxbyTfse/jIB9j3P6fIo9KknNu1vSWT
Eee4k9ov0G1WrKb4c2EpzN1sxuwh3SxH6VDuad1/B+qDHq/L9kuyuKVDVqwN
DTP/+tcOGZtPGDNdJyFgCDqVpolQ9XAXoQxnWDO0KtlhB5Hf/Ca89qW99LZ0
nQ0s1Z+zw2sb7REW1rHMDyVYwqzvQLM4q3vNsVh/r1isn9IVV01iDu3EdECw
lqnMurHWYMc1PiBTywtyecNaqar8UE7Kn2MmG5Yh2OeFt/IGJkiG92r9wFC2
xI9jgxnem7z36zL19X2lujpEExx3XPB1VFb6Vhlh0BFHOBsWTHXUe6fJflfe
I2Mmfmzb0JlozHDOzTWghfT1JIoYhpxGwDh1B8YN5qodC5eVx+/sBCJKWeEt
meJSbiCjz9VA9hBHMq/4KN25XMWD22EI3pf3i7hkkAMod1DcgHjM8D/gKQN+
euNZFi81YsdaIuiXrXiyI5TzrEj69+wvVz4E0TEsGOme61Qwe7bJvGB4c0Es
PCYOAOII6NLt9V1imrFJbDJ82Pgc3JP3bC5OPV4elRlHe3TncsUlxl6mfp1S
2USMgQeGgN9YDfz3ySe6FcOT1dXVycKF1vw6UnG7GP3AtkVcAd4RIZ52hQHA
EyD9kHp41EGdXWrwLUpamwT1i9XlhYU3lNzgERrOX/O5+xV6vW7lwnK6739q
50ADQYVOU7uGfLEQPTJdjpZjFKcfqCZ6eVLLB4Og4F2hSmzYcDvCzYALSUL3
NdumF66NGSRh0cyQbL7Fz1W58fgovB2sf+UsuVBVLnvlLJWEe8lIXYb7J/lR
SMuQHzVTP7+XLrvj1SLCrvmmZRVM0Hv4jQ7ZX3W4YAS99BD3xXCrZPd4CDLu
IXXw3HBq6hUEf8Zcew/fOMoAsxeRgBCHICIVQyzehUiyS5Kif226dkoMaJba
uguFxTde1drbP2b58v+z0tZDpeLDRnmqpUmxyXw58tHFMm1VvbF5ZJtQUxnJ
BYt3//0meYKzN3SxpkxVWYWYkKuqtoqmh/nbvSQfZMo6hW5MFj6X0ntpvZMo
A6Kd3t8uVsg364UMaXo2nyeWdCS0bYnZLMyMNxVHlTtdyqJEWhFrzsGaxeiI
RWTNhYhkgVrWveYdPnGGsm4QRqBGIkKdZwdkw/p7KV62rAqo8PaORsmg9LEF
IRDwq2xvxQFDd0mcEOxa1hCkIiVJ2e0kDpC+gAmPr2WmLm9S8Ln7g2VvaxMy
Q1HpFrozyXC8WJ+kR8KWnQOZOlKX+5GKI73Ya8/PrccKTtsoK/gPuVy/erTq
k89bJ/HJ+ts9ilUu0q0AK4ibaNelTbJrZAVXYrYX6uTZl40VtLCrefMCO0M4
FUwN5M6yZfHyIy0ED9ywUxDYVi7t5seD1d9XscIlP5WNNbryp1haFVqE2lvt
IRaB4p4UdKtvCoZ6J3A1LtPldbqcY6kYoAqe6KebNt7savbSWp2as2WUnnO/
putIDnIeAUsdHmK77VL67vXX04eHt+g/ZI0M+WSkFfB2Y5+Ys0mTUz4CnqFQ
lPY00BweNaolduoqNz2Ng4l0mkJSmHyIIXrcPowkO5RUTg5+4jLi8a6/3tBZ
EidoKVZxyklxoEUg1+/s8s8MMXhB2oXDC4yXaKbbWgToksCShRk9mASHGbzM
BqZgj8MMTsVrZIk5D4/YBZeH/cj/h9ly5lYwiUBQAyyLYLhBDRQlngEwNT4n
xDl9fN1IwUxmt7ow8oAzr74TokkGGTpiWGEcYNlgKQiGATGBz4EwLhA9kIZ7
58BPpdd0kjqbT9xpsrvWY7YT6w09XGkEw7KUUBgsmxmE4fEzCjQMchL8oGvK
KYPHHntMdt898O9bxTHE34dNhO3D8xOosLVVEBpgUI9xgxVEFPE5krbD825p
cbyYopZ1Z0c2b+FLqm9fNPrrSn3E3XSJ7qqgAdtkioosXNohs3aiXvGL5mPk
GgQg3a0wMafLKE3OT+NufyFkwp5koANprOrZoxyRdhA+rDzclWodR83yKaN0
PZcJKtdzmVitIZdpri4cGsSOslMjsadZ//ESi9QmKqJSRd7BKn3PkNuzuUzx
0XuvKFAm58dUlrPMbAR1IvEBKywjflZaZYpGW84sY6J3eDSQLf1L97ZnmJhY
9uygOsuerrbPYW6C00AVY3VJ1+vAvy8rVO4v0EnYw/QMbABZ9H+WJzZWiTnn
5LnHXgRcmVRhTjMcexZhnr7ZRZgvXpuT3Z5qNSHUswjzeB2wPc8MxWgeflhk
xx1DdTX8iSAQOoEiOM8/P2TQPP988AW6p3rRfJXhoUi9FVWoa0y7eWcEW5qp
2ZWSv8OTfZ/CseWh9rBVkeyMGWb1KuEbYmB9i0Jmb7kVjo233Cpu27s5Hbh7
5hp0WQy7KtBg6pXK+ugxbMTqEO0VYdToKIPMwi+fb4rLbq1BH0qt4yUt+UQ0
sg7BTyQoeyQKzgjWED/ZW7rmEkx1s0XtlIsfuO6JTAMIITqJSUTMxPzAsVGy
Ql6x1FEibEkOdj/bL9RvvivO65a27PE3sdyRwH1Negy28EO2KrAOaYyBiREI
aOLAx4dGeFFHe4RVrRmnt7B/ZFVmybdsHsfrth9h8C+TXWahxkhCstRW6jkr
ZGnfZBTTj4X9kVDAuQ0BKDjgg/T2CE4cLoNMSRHMsIMaK71xwBd118jMrgrZ
ZUmH6v5mmfPPGjm+3ThgwwLodBqAnHVWYFvYKl/9aqIxKFSJu4PQbHA77Ehj
p7k+5FvfUpgR6rf01prK7hbQE4FQfXngYoBp1mddf29N0MAo63KQq0mSgS1s
bhvVL0fsuOHWVBc1v2wAanrV62YBeCgIiWJwjk1NaSsOnhb0AvlBfv/gmzv0
u91SE7syjJmqr6kSOLwqVITjtfoloT2HN1hr1r3w2fJOmdY1yxD0NwtL5KCy
1fJ3WReGYEoRf/QIjzQz5HAeuXs4ZZ1uuudaAoc0exu1jCgUrJehvKANi8qe
ow8QGTFOMeM1CkP1HEsW8agvFIEl+mqq+nDnJ1rIXRYKIDzCrwcr42yL58ji
KHS4hE5hw9wmtyVwCccsX+1MMkCGW/ArjhtaQYy1Su3jbU+yEtEpfAcdBSTD
gwtZpJvAL41Y4Cut0pogJoxZVJhi3hgNNcgMGMgf0ASUBfuU5D04KCKoKA3s
TbtQoV4oEPqDEOSH5CGPoAhZ7tnyAzxtm8U0iGRS0dOM7ZxjIFYNOPqwwyxS
05PROjs7ZfDgwdLd3R0HcLgJNbyqkCqQK2BH7hwzjIFCkGEYwj4gqQga17sN
AzPG9DKWPewATlYYLu/lhQ7HwTXbosAPNl0PXGUeYPCpFQiGiCkjSV1LN53J
DuJ7DBA2asqyTbIlQsQnE8At4yD2rCzYCM/KApDFrCwTnti2npaFAPa0LCxT
T8uCao5pWQ4JuFUoIdYxyBkzWU3rwVEKvK6DQtERzvqS/uPAJJ5iXTBOsq/C
v/EUjA4rjNUMlwIdc4VckdvLzjXdnoxRA+XA6wHkEfnsFc73VZWiQ6xL2mD7
t7OVlBuvfw/RDTbNQjnmx7LgGygwHI9OK4hSF6vzViVBb73V4Tt4s6sM96w6
l60yPGhZi1UY5iDSD0jj1cGIeyfrBykITU0MPEw5QV94YfC0kFLmAV/L64No
KqfPsv7X2B4EfT2tmxujJNRbUyVv77forbfGvjYmqatT0ebSOx+rz/cUbVX6
X2VtKHjuoq2+2aVrs+oQCnQP03W9r5wq91uhhCfkl/o7bpGcruHf2SsPW0n5
m4y9jI2zMoGDPRtnbZGBlZvRXtvK+UjMqmjo0dtjue2SFnHqfGBM8cmSHCGH
tSGxoRPgVGhbon/pElka505VckW5OUoS4EQgF01NU3HV3zYeGwr/zoFyoGMm
NhDJCX54kVdsAxzp5GBw7GLBQYO8nAdwCqsMmQkWwnRRmRnW7GzzTgKVsFmQ
GFhCoQjXDEUaB5kYRjRTHgNUhkvAu0oBxstU6NXrDPLtkTLZ2DH2J/sVaQK8
mqH7yznl99T8IuN0osKqc9UYLM7Ry/eSy5fyIL3x5xQf+7KulEl6FYJyyZHQ
QU3y2LBrieVArpOarrI9nm+0xXzgXuGgMzKYCBLTOY9nngmAaMSIoMLrMuo+
0yPKDfEeLaLCy1OD36k8+qH0f9Wx9D9n8xrAtAdoi7ijpS7svEU1oTUcpNOC
k/VORm+8Q9Q5Lc/JmNafyxNdbybxmXPnhozDfN6x167yP/8TbrHfnDUytfJh
Y2sgqSiFhaV/4pGhhRpVAB/Md8vjna9IxSN3y6TlV8n01l/LHmVr5ftNr6St
7TaDMGNTtXVYcQs565SwcU8/M6BRDnzIY3WL7afXbrkjxZU76D18WWfmd0vf
UhnwfZlYU5CBNb92QJQwRTjZYLRYvSolfCf1IJAclqCp+LRaHQkiAsWwts+V
cyMiGpOEWBGSgsZFa7Om55rlP9x2GrwsaAgLB5+yJ6vAtUGMOMpy9hnODTpY
MiQSnhvKEUlAkIZS8KqQ1Iw2hiDieuxwkACWP6GDo+MWx5Rh7+JcRuUiEdT0
8dbewJrjjw+xQRlYM12Xdmtr8KUHA2u4ATbOwBODB+A6sMvQwGhcdhjkNcAM
dzbcSN5TmkfZIOGAww7CxMs2wUKocAocJdMsrf4oi8CAwPYmWHQBC6F8k2wA
GWA+D+0BVAFxcWue0kZ2dzaljQHg8wNjCVagKmwU4tFT2hBmntKmUDc4C0JV
cG7bXUigHG4L2r40yovuTCgbwC6gsE7j4bkUViyEHvEFXJ5H5nO8z9/4NnWd
hTTKrZNeZrdYVN1o47kGWFTlQAnFBWbb01yjp9tRxWmZELST1qHbKnan+Lm5
CAKLktars+1YBF1aLK6l1p48tHkNFtYmqwmP+4+rCW9bUZArn2pJuAZiy264
QcLATjQhTVWTW24JhfkQuGRzdakoqVTxsnSZpIE1eo5q2tpUhiKlHEWdHKOo
4SgsD6K0K9lswxIhTlFwFzOLsGxVp7csDW1zGmusSLgdun70W6qTcxT2GqVQ
cq5paP7N0YWCS8Vf2U3X9XCdK7rNp/WpAvBrktQ8TUHhpptOV+q8eWZKSErK
tp5oNIdfGNYuc11XkTRdLdUqG9leDfHNeMpE5ixLZtQCKbK4ZWmlwt/FS1WX
xYrTOlQVZUEVj42fYYlj9wBVsXmw6lj+ClLSXtMmmLp0TKabwQAKgVvnQJRh
hLSZC8lKkPWWCp/NccPbDwLhq5hY2EUIBpWS7gL6o9ytkiZ0af6ODgJJlpNj
SG2boiwMmXm6Y5AfB4dmOAZWMAh0N/ppfqITOEkxKZsSXEQMA5sTWwRqh6nG
/iZPEl3Q34ihEy0rskFimmRJTJMM7HboR9QShz9l5w/VKdrLcktxk5daTNvD
KqEiOz8kPj9eHuIzScmAz3D0/8AD5gbzuoSodqgQKgP9NdT0tdAa+M9hQySJ
WXny8fUaFSWAOtOpKOeBuQ2VaReitgb7vNRXBHaIYwlAPxoY1t0o0kAd0aB4
ZZU+imKSm2/deJeifSrbdA/taQ4pV+233hqyUUhl0mEItzTFHqvfuLUyYOrb
hu84YoFhk8uoi1OW/FMvgYPlSPmcMVIf9mSk7NgM5sqJq84YXPT188MoE4+B
Dv2R3t3pqllHDReZtrfIIx88L9P1rksfOk22yf9CdrYSyh9iTiWBssBojH0W
s2o2Z3d60DhOzwAI0G+k2kyNr+Gohf8g0TJ8boglEgLaARSYB2wRwDi8JzuV
3zH3qb7r7m8SPnEHAJ+IhCNTbUy8BvzqHjG8MAl21n/cC43Wp8QV3W19PP5i
lAYABIVIaDu8Kl4f3B+q/MbHS7KTUdlNVgyhChYkOtD6W+QXVVHQEl1dSSmC
I444Qu4kQkyceR9u6hdKAB3KaHA1nhgqgDtA8gK5QBn4lXDo6F2EfTV6ve5N
4EoGMNu9CQTIgILwst2biLuBsNLtPTGOPe4k4BPReoBBykYQj++Zg3gDgVAK
MHIe9wm9AlvkmYMYMNnMQYomeBQhJh+fYdXADyr0CpceYN4qqiQTW8KCglF6
Vp4tjesWOcvVvT4gB8QPzAwPDHHDnSIVWQk+PU4iUekrhFPtkIBEVgYzC7ri
3KwIxp3xB+oAjXmPJ+Tz3DWrDzj7RyNPdrQwoEcUxXkdu7G66PdU2Hy1orsG
y2fBz5GWmkhTcf33XNKHJHWWJvHFSX/p/+0yw8e8WyU7tIQC8TaWDwcpRUTd
kCiN8UKBZMDfZi6qKGlvDaW6HaO11kvSQMaeiBZyNSl16fKmvZC60p2Xj5+1
gzYmIBhOVBnLtSNrgsnz/9F2HvB5llX/f+hI9967pS1tKYShZa8gouAIG4GI
4ggbItMgCIQZQSV/xDfgCIgRXiNKQIyCEYm8GEZQIhKRAEEII2KAFPqAT8v5
n++5rnPfd9J0IPjw0bbPuMd1n+uc31m/My7TXcSrI5J1VCXdGo44TB2Gwo5M
iGUggpmRAYTvdVrzryU7XqLPiBHSKcS90p0bZp2kw/qlGku8OsaHR/eLuAQQ
P9JqOXK5UrurrvoqaewqRPRiTz6Alz0sILuncaUVq6h+yODUDBXKk9SNIGXc
KIGzG6ajpbpB9pHDDJjn1UGBtZ9vEY2pUWHmWzVWk98jKa9anQ3C8cUN/PAN
ieh1xiqskswI1jvVRmH82XgUfn9Wv+/pvo+q+zrGKsKKVD9dqdvRKSZ21eUk
gV6sSCUQxZ2k6uN36lqN1OPQdPpNxyOTdHeuiGmnsEKAKsr5Z+s+RVNT1cbe
xUoAbyYYY+nE2O+8XE91X2IBQpg9EMcO6fdelmB2hGlEYuS4UxwPLYfyzFID
ZEPxI6OMZ+vAADv7HpSXqYfkrZCcFyaC5A6jR7yFB1tM2JOGr7vusqpZa/iC
OWSvlZbYiahi9KAjg9obQ7iTV3e2KGioze+MxTsJmWG28MeBDvK21xKRadMt
1pHEYVCZqFa1LwmwoVAXLEeZZ1lZgjAo5ln1iXdk1FG3GJa77Lp/yy879Vi5
f8mk/FQpbr9G9fTVcoVqkbJ6GSyklAw53pzQE/XO7V1xp3nptH7vQF2xPUpD
89OH1WpX/eUROb61U4aee5MMfXo3WaG3WbRdh9yl/lqxLkVBhaGtS5Lbwzog
SaD8DLoZEJJxdEOylwSDGtcE3WBBAUEU44UIQ6BcJgKA4UVGcatBOlhFoDmu
OwuNLXldXvdcNDCBfAUmiNgF1cjT4mmI2PA+ZTmudjHAYAARpxAZZUaYCBAG
msgO4ozzgLmsM76EpyMYGm5JO0yi1+UyU2llXAFEF1ovHvSaNfL1eMqvfvWr
cgmRevGa7PEGZMl541mRJsLlAe+xW/FZ6CbG0hJ0JdcNXlA/xvMrGHWKnQh5
+JQmFulDxiYx1QIN2SlNOHT4OpkpTYkEY4hxqwjRBPA112q2ib+SlSJWQmyE
oicKojgPsAanz4de8TA5N13KxFmAMN4WSpg60xZq3c2IDgAEgKIOpod0SXAR
UpkciZRIWIaoUZFdNpeALBHC5/CKmkbEFaFcyOkBcE5BTTYHTv/jmfNMAVmI
Gb1xBK62iPxRLDQcSMviw+G39G/i0nJKPueBOPTk+bMS5MjYDEAw1QMezAZt
4UUjrXR0IG6cnsP8SNEqJdrbK1pTkYv7eZKhKQLqZxmBUcpf7GXpvZH4xNkK
W6zXKZ3SVprhn98c7mIniaFmhsK/515KUQH1NfCySvRnmRkMXxPVmaFtW8+p
arMqZLwsnNwdDwxCoQS4I6r4LJLZkD7CJ62sC0knR0AW9xmAgDhnVh+5pwDT
WbkZXQZrtg06UDVFQQMmDCFeCQiKy5MCyPc+crg326AmAdGU0DrsaaZ8pgoq
vOjJKc1gsOjwjbJraa5SPKH4kkkyPc1VUsKw6RT4xLDNfNMI9HhdrH8it9ta
Qd102wsdNv2qxbYNz+8qVbFzdRuhbJzvbH/V2nsYPtk/Cl2I/D1hd9tk7/Ta
N5uTy+7ysVxbiifkiFFiEtnk83U7TlHZf0L9w4HJuhd1Yc5SULSFUbbhMe2R
DLSt1SVt0oumN26YhF7LkxTU7aC/xGN5UpXejnrck/RyaONYpAgmNDH0hsvh
pFNkUiT22lt1UZGd4Dg9UeAyYtbqDva3C6UmwynbbQ+Hfwem3DRHtTiS7D1i
OvQLspdhtt1lP4vlP69q/INmz93m3RqZ/rtqmfZQWzKi4fjjdStUp8CIPBbt
PnTBA46o74X6hfwXgOkf/3CkMny9uUSFLgOQOb7hU8VdP5QFROR+CTuX6A6p
4qrKkGKub01HEn31YpGPftRS1olZofIDAaNIwZEDl8bECZJRX/+6uPI7Qa9s
O1ybjz0no759u+Q+0S3jqp6ULfW9o+tfsSASI6eqy8PpUC4DglU5jx5tKqDV
2RDcNVdOBJEL4XHZsT/17Hdk9J6rZUj7F2TukW/Jnld0yX13KiTVz8apN3Lw
/um1tPSI56NIZo+zgtFJYCJPHA7gG3GeAWKqMaWZYCJi95huIi/BzxxrJhg/
HLPK0TG7DnawLhg8rAvmWdfb55iBe8jxEPQBjTH/yLlesLjUiEom6INVxqVX
WBaDQ6MMVwHniZvATwAowcIT0cF+At0WxvMRRML9h0aF3aC6MrdNXAF6SSH2
I8j31luxpWuy2pd6OeKIIxIdyIqQu8FUAx4OMpqsFQZksPjcLYEPTkFpErET
1TNu/bkDEu6gODAHJhggQfqIOxtjLcaTzIoTtB04LYq7yc4DQc38Sn4VV2iG
qTTQA6kr+sdQb+AuokYUA5GKWmVJgvnmT4618TmLLbbMrXAtQDlCaA02HqbF
6mLgZnOeVCAh1zTaCDiKDAqskTWOjYhvUaxFepM2YKJ8ARuFFBfwm4wZkIxb
BKAS7RseHyjLA+gh9tMevXKklpgNK3yOnJMU/PL5JOvSHm04nFvQpV1gH4+z
Q4HquBvPIxJLo5aISDptsGRTCd0Rwkub+MeYTNHiCrzjQSNPyClP5IwwStv+
rreYgCMwHSuM7Ipsmso5AAJKZKssiZIGvFO2xsHKyZ0M3zuQSF5tt511PSTg
CPeTKhyYH0bH926/Pfh7Ks/xe4vQrlJBtLlCta7qn1o1m/WVQd80xqqb7kJ/
gLQp3dTYnQIkqnjKVC/2dQVtTeAdUJXRTQnPSHuSlLKGb3eFMkgkMSjZ2UVp
3Xb/2UU+x8e7x8MVUubUnDAwOmIlMeVL121NbG2Z88XJNENDAU1MRE2LQrhI
FR58cyRTQek7h6oRN/GBb6hGDe89hhJyKq9OLbdI9WWZynmJmuvwChDv+4YR
s4SC4ZTD4kPzd49XVUiGmphqk5ywHtfcC8aTtq9M1HMebpxt1xtDFySJeHH3
6r7qszWok0A+P9q2+866z76iaoNYCbxwj6vehuFojNHJjkONRUGdrXruU/rZ
WIvzo7CZn75v7KYYL6HfwjNdKUOLB9DCK2yTfxi17a/Ut/6clQNN0R2/jXxD
XcKHpD2cbs77Jh32Wqss6fDtTweGli+cGI7IcIcdd/S9ONLIu/74R5Fddgmd
UVTowOJCq+EXv5jMy87OIJoaRRpilbfXhl6Ab387+SpKEI+PHuHwUMfLN78Z
AkZQNoKVan+82hI02z15uAxr7JDcfeWy7Lpr5LQrXjTcBCWt4iofI50JEL23
ONLEkKTO9Rp51MKe2+zzI7q/KeeXFOSeVwI3KNkuslxU/8EjSmAIfaHIzbEF
UX20Oj5kBltk4y2vy+uOLdgumCJVrgm2wKElrEmhfvBDxtn38E5xZDkMEIWA
B+YJpxZrGwYmTDGzROmV57f4DuYN8/oX+cvseBr3q0XSMDehHqAOYcHxUclQ
cUboED2POcLMkN0gzcOpsRdLopLBKaZiFHvCZ/vJfrlt4xnAFnBBwcTz5ptS
GR844RzWjOBIxUsVMuG2CWaIuRPWkaI4LCk1LNwJ1i4v+XBzk/oNaaJ9YLAh
TUQBQD2kfrBiADDSOtTcEbQID2OGqUiCGsRqsHzkcbhj53zBcvJ3ZNbHOgJ7
WA3CBawQl8l1NFqFXKsFQhg44oERMl1YziIb9D7aAiO62o4bWAniaE4lDCaY
E38KPAVxAfAwwhjjx+Qx5/vjIyAptpo7YWHLI8Wjqi/fxsABpIGzAHxApcAB
kGqHdEyLj8ULq0lRckSUIEqWa+b+vXfaE3qkRVUhOtERQsORAR5gXpJ6QDvE
n4AMLxzfg+XgxOIARgEb+nlirMWGnvXFo0q0VklMOn5vhPVM0DLnL1ww2jJ/
8Qv/zjAm1IRpUhNNvXhQJRO8SHRd0AVRkfWk9rw22POZyaZpMXBSEWxTGpQP
XLTFSZ3HKBk41sebAGskHevjtWkdKS9AMtanMAA3Fay2x6pK4jkS89xWp7Y2
lzXP82xyd6l8U56S+8ydvl7d64GsdnVW6vuTUOostv3NqHxVt8tnjMqQkEne
YgI5tUjVmZyfV8AE2GKsdgm4elxNzEqz+POSGZuBh7DVluorVmN1mNpnavaX
q9p4Lslb3WY5yfGq9U6JPYcH6fWEsqgyVTbny5WqCUfIRWrD2dbHxRmYW+n+
mKTXjMzRn+ps/S0qi0OMbH0HywYTCh0VOQIv0rsBJFMRF14pT0uzRfB6IkYg
n3qErRI76EOWwlpFRVd4WnPfF7Px1ipOJ9yQLTVKmY3H1PQaMSxEIuhT+GU7
O5PhyLxN6JoyFQrOiQHSjo1B5e+vvx7GBiAlFKuTU9BdkeBAnB4q2VJkM9Ea
kWcse01ufPcm2Xf1p43fc6dXD5DTHlN8dtirsqBvG1l48KPWGM2LFiIyQldd
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
ukSDNgAF2ZhviAvLgwuN5UE5+7xNNKY3PCITKGnkA+2IDQZDYO9xjdGgyAUY
xAdt4PTg7Hk/B9Yu9nOsiJd0rWqtE2jjzMAIChQdmH0kXizRICAOBpLoIBHt
8LjH2y6gLISYitPoEeufbtNjxpqBJT6PeDtnkYqsM12TTSWekq7UaHPz2I4E
MXCFQUfYX97j3/w9meg5xbw5qln5CFjogzNIeHM3u+oVOzBj4QBkLBARIn7D
hqG28gl5Ipnour6YW7TSmbm4YRxLSpAJqXCFeHVe/cmLDszJobLO7LKilRSt
pr35WSdvY+w+3sNPfgIn5qmnXKUXSV1d4DbhM1J/hC/XrJF+4GCcRbuI5IfN
V7BYDE8zTEQqWJFAaIB+JL6TPhK2CMEOjoFZv0wF6whdW8w7+YpnFRt0+eSP
ZdkqHLvZn8iNJqOEa76ncj46DkNDXpFxPgNfhwYaMQ8bvLpYhWiIrvqZNl9g
iKKEA/Qhkl+fpX9SHXCODScLoe7+06xDJhYuxQoVv2a7HkUJsTtmuLMKyfpT
r9dHC++1M7Gku0pG5Uvl0N+FzsSF/6ySz70Upl7zIrk+e3ZiaCgV+drXwqn+
9rdQcLTzzkmOFYvttNZusl7Rmzz4sBDA7ekRd6syjYmJq5UxYynH7T9D1vLe
e1Nmd0owUCa/fvrvVob2x3db7dlitEY+u1w+ed5bBgKIYP3yl4pBF6tFrk5m
b0ucz+iZFjhsiY/TvXLRGXbR0vDL8BnE2DVtae3Tex0p8sXeBhv97SNF/DgU
NJ1ySnbDbGsQbL89wnfH6nY8Zcf+k2XHtV0oZypuAmfV6Hka4mOvG+S9br3O
6gqRY6tXyw/UJqNepna2GlfeFwtnyvX1b9gxK2p1HdLScKnWY5UoeHlY5f9z
Ve/od/IyobJbFhS/Jjf9/UVZnuuTrZsekNMq1hlWyzKrkqtF5xNvjMWP0+Ou
9PlGaL3sfCOyjpn5RoHTbaahBwBLujuKrdy7NFrUUDzyUd2T2yXFVm36mRNb
tWe619J+tbxxcTWlbb2bM1qkyd6hVOGhjImuiduoMzpWVXrKPw0w0b02WqRa
NyQmutXpyWf1GxdD690M9QY/qj9bootxs/6IZoYOYw3H7arT/f6kHbox7nB2
dZP6vYOlqvqnpea+r7TUp/XTE+7UVasryPkv1srV7c1ywx/URjwb0lIPdgTa
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
ztAr20mvnl4Repz+V9efu1jafYRcec8j8q1Ha+SjzX1y9NHtMjlfI7NmhwZV
fPd9z22S+W/WSaVKF4PvWlp65aJ1pXLfOtclm0MOOvM/Jgdtk0AOysTWa//c
LvPmpyzIpPRoMvsdtPCSoqCh5vN4+6BvsahfTHJA6sMtujTENjpJXiRJfxO+
PsFu7ErZXSiZv1jq454uM9IZV6Q9Kirpjq+SmNHMvRcdFNpilshlqlBm2CyE
xXK53KR/rpB7VTMTFNtOrK/AKGfJTYwyetfhDKQwJAMUY6PtbonIpbKN/gLN
3p5Aj41RvHQapHZQ3h4g+gcxN52g5kcv6pHpZ/TIFXV52WqrHjn37RBKGv//
eo0M1CHKFVfYoDovlyGuevbZ6UmJM+45ReRnj4l8VR/2OFWZ5efIexq6QCH3
BRXhN/e3m/wlrWIbHLowbZN1mouaviVj1NeYoYpym9bzDKBi725493tSXNUg
x970WwtN4JtA+5OOch9pzG4zDnzEAgq8ILV55tl3bVe/Jq+F9tRhRuhG/hI+
BkUagUpvYjI11198beutw7QKqHKI9+CJUeo2yULcw6zpAC9QRcklvac13CBr
oesW5CXz3jF160wFHtnypBRVtMvy6tdk55qHFLv8K7mRtjioiUIr+nvK1II8
92LoE6pulZCiGW6Glnpq9hzwQTV5jG6Nyyby7BKy8/IsmpWZl0dHCmMaFsSN
Rt0kfh9QhqwEWQc2BXSbFDNkYQ2YBLgDJ+rIqBs4W+rDeI9ZvUpyWeSTMi/K
awywzllQHxrUivuxalQahUNbbOFoTaZPYCwp1qJCFoWOcqerGa+EGhK4xcbH
507iDoISUjv6IB3bBkoZk/YBNDOhmdcbd7MJ9aVxlSWGTlpjWbI1ZTWEh9Ye
WAqlVt+roVFLBaA5AbmjpKctxPpKVVgry0M0tLW7P7+D44S2NvUQiwN/qeME
PHLsGf9aETdndlYvdcUASeqMiaMAw0jb8sSRWaiIKE9ORr1OMyFBGPgqyhzy
FWKEzuGa7bbGdOJS+Dh7DgWcIFZClpjTQlszJV4u7dRRGGOF4BhL+XM5M9S/
XBSDKT3mHXrdZ4te0WpInGMVzDw5Wa+P4AtQ43d6rv4474u6KAfpn+fKjSqs
OTXtX9VlACBj5ne36qIlJvzeCYaZ5x4RdC984voxYCBVaKnDptrZYAFxVKDA
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
3+dAlDgmgSpV+V5YT0wAu4tQcHjah1TrhLDVOLtiFBqGACzG0TY2UVDNZiLL
/C5GPmJ35yirE0WGUXTINQaKuwFSE39KK1GGmomGp4V/TY2/B3YDxYl/8jl7
gXgUxhOT8Vf5azSGw+yuwX3gPd2St7o+yCeBx4SH7uKLL5bzzjvP31e8a7GT
oclPEgbtnIe18uqF9WW0Ibq5ra5SGroKOedHw1P7odxsa+7Bmr6ebhjEI2Ae
nwxK5JmRlmQlMdnsbswrSSh2L1ltnE6ia7oKYZH+8/awzIy+aHuLrGwVlDHM
GCcmmvJIutTm2B1gMjFOWBUsDbAM8IJMcEh0DXDMDR4+Ztbg4aMOjfR7bvBw
tbBimSnDOed/Q14wiAAj9fScpAXPmjvkUIgglabq+0+LUgtUIdiJjUS6MKV8
latlzyHoJC55EY5UyY1B3knmIZHbx5vCSLlRg9QFNquhQ4NRo+mZ3AeUP5DX
QWRHMgDuu3D1I6W6LJJtqvCQv61tCUwrkGsqYHIkxsf9R6SFekGP5k/29yQo
aDV5EfMUyWB07Iry0sx0s4TxwmlosNX4XHsyp4vKbYJxahXniqXZyjLapfnx
e6W0JBSZFNprpCS2a7bXVUhVU8xmNTdKR59bxCKTSOIDw63TaoQlFfSKPGjJ
PiH7R0UGAJCRhR70BB27o80LDYOO050dn89sA+UIJ/sGhxINwL4B3AHy8OWJ
SCPoOJaEh4gv8G+EGwyENUV8iAPgaLC/kFCkr9/A+cFb6CMzti5qFzm7DbfQ
j1/v4fz5r3kpLssbHIITjBlLGD6kiqJyDKFKiMdN6IQCLfkLe/nXvyYzI6gV
KI3DBNv6sjMjJie9QLyaawLTSHN7MKUXXRQO9egfNjkzwv16SoWI2z3/fGr2
SGoxpu/hZ16VIfOfN/WEUw0cdWpU6nKJjNfWSuLLAbBJKaH0CSeOfHeUTO1d
KsPvPlC2+l25fLGvwvqOwPpA15WF7WSLf8yXsevG2zbmHKGbb1sDNSgalMlJ
cfokBgkxoE4XpI4vx/R2epaC9zLGVAE+ApLKb5DSDQ3zc0yMv4E5ZnJd0Jmj
LK9Dlg2fhHvh2lB6iCBAjHji7Ph7/FV8D0kwdfDYCMfiJaCmuG6imWBI/FEK
ZZxBlW2DTtZtkbslilm+s8Fcq7Lq2+Rqdf8DrXWVvVfX1jMkPqpbrvqCzNx6
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
lIOaETnQBOYGfQ86BiDhhiOiHJPwNkCfY4JCyA/ClcE1BNMTwiSEh/gNRYQg
Is5FTJNoO6bQucmITTpxnlfEsGtBQ/4ZzgHXzkhBqhYIP62VtdtHieBtJhVi
BfWnwaxNVs8wTbbiDpJUKS6tCtlkfbVUV4Yp6h2Z79Fs2FgrZSUhSNJViGK7
1FI7VS3uXfZKe3tXGhtvb1B4kTO409gRa5QrFdDaZPdOqapqMrNVrd+x9FC+
VYpzZdb5/1rLRbKs8idyR99Vsji3p1rfL8pOLfP1WKNlbPMIyVUstwdwQet+
+t5nzU5/s+RTmItoCt5bZxRZPrAGggOsxcDTGbUoKhmwCe85NqGW0bEJQuPY
BL3l2AQYCkgAm4CLEBIyf8BJ8iiqFwP0CBoZFM3P0WFkXRRuOGpBlFDWiC2A
FLHyyCuRpchtlZRFki4i1YR46BnHRAlCHHBLKX90pjtuACkHoFETo++PjZsV
OHyEUcS0WmFYsexgz/Bkm5cxUY7X+39S12Jr/dcxqmTT2SFe2pxQrGW85fS9
DXOsTd5sjrXL9apuXjs4x9rs+9oDSNnKyr3g16QDh6p1XszHqwrHNUIE0DST
v2DQ4TCkeyhEyKKPD3gmn0eiUyLd0FcLZClY6Xd1uITM+NnYu5tZ0YEIZkaG
luW9Uo7/WpyWBb7dPmsVKEt8917ppjPV/t8hVry2LGPBgKiKV5lIoc1rPlLW
zcZqQywWxlGIWFzTFuPKe1lBBuLKfvy2JcGGK1DZ2Z7tzgqjd1FcXqbX3iih
R38bPe2n5GMZY96nRm1r3X0XmHtYpZ+NV4NDW8au8hmLaX5MDc8ElW5qeIl/
gvV31V2Tk73Nj/iu6o0bVGHvI5AnXv2BjefMOOKq/ndVTTTRHABVAumsiJ54
QI9QTs2M7CxV5VeitvtE/fFUtU4T5DDJGX3ML+TP9iva8TfRIu7VIB3Gkerc
cAPotmdtsDn8jn+KXPdQaA4fp7K88uliWf5Uuzz8cK+qg7Q5/JJXW2VCZ2gO
f9HEu9baCh9+t8twzQMPpLNmSOhCSEdFlI+NxK1gagPRnTlzAwsKr+OOE/nm
NzOlTYWUCS5h1ci8t2HGuGFJ5eZOO1mzZVHmq/GV/DzDQhzDB6Nt9BYzZjlM
1gU59tiCfP6dnEzvaqVKOU1RNZkQpPxKI7LvxdfAIUszxSHnlQrLcUDwNVcp
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
X73QYpMMD0Cku8YvytJdO+3bBFMhePI0/sDIRLvBQwDjJ1gGECAc5MUBB+Cl
gLl/RV5JErILKlzy1KqUnV/p/14QqsU6Ui5oaagyQFAUYlXl3vA49kOKxWt1
NZ5mMqswZAnbfWZjnNMOBFRFg+ugC5rel1+1viIb5Dplq67TZUR1p+TK/iJf
16VSUfEf+U7tJ1KussLLtqaaQOb1sOojVAMzHUgGDi2ZQ8Alf5e71enqHUzB
wp3ji9aMrwr9N1ugKlEkxU3JY5/gGGCx9/VgSkKKsXy9v2LmvSwpZu4RTIk2
EWZ6ICIM9WsTjFuFJOqEsT7c51znjnaPFLwd6Br+TeJXnfDSOikYIrSerJwT
4hMFzyDGUHbNrDSUTTNrY4dethx87mO795rSf+V5bTLgsfL8QPmDReqdwrdC
7tIzrkUaizyxWukLJrGWLo3dZbpcajhU7MI71NubHYTnslaed5k0qtWpr0jw
KZhGVEhgEj0tT/sKWltivPTHujrnvneC3PCJvvanq8qEv6v7f2uHXP63Gtnn
oS459dQWWfNjXYF7imy+uYdzRp2iu6+rTqat5ef22EOH+6YFavDm5NA7uuWa
awpyzV9a5Ze/d+FCZPtfH/TUUZOXm37j6aUF2fWOFjm7MmXvxB5G7nWrmXNE
ONel3w3iN9O6r9GEbbqrAiMbXQXVy3BG54RaH3AMmxpQk9tfQy1CRXxoLXVf
75eHI01atyQtZ8Ldhho2mp5426oy+rv8fVI4jQQEXhXyozHBCSkLwpZlFYiy
1OrdTm3ZM026vGn9AGqMC2u8Lpu5aiJN1PPFnJcvlAilv1QyvL4COS+tO5H0
W9QWe4E3NnrqEAsDpvELL3TNha/Gz2i0+fODthpnXMQH3/JLGb7N07LB0g1N
tB7w4PdlzM9Ok9Xzn5eVPhwjO320p3xbUqrtSEqat51Sb9jCSIsJ5QJ4cKaG
WY2MIaAe8MuY2cfl8WhjFXRXV3q6Menb1TA/+F4dUoQYKrS7lzMnpCeJG9UG
u7baY45FGRrEo5rl8oa8JXP135suuFE2qnlfhjeVJdTdQCU/kA8S9zCDJdwu
XIqIKqNE6hKRDXaDgrCot6nLJXPM6Lwlb5UKSnigeLyxp+UkrRwqBBxBjI+U
Ck4ktF+D69m1Trg9sUoY5vjJsZeOHwVvSSj7tNN09eiyqK5wWR2hXw2xHj3s
tUyK2H9ucQvCjmZLKyf10LU9dUa5P1T0YziSkc7UZMfhKa7Dhsnhl3K8+ier
WgfqA3Uin85kODrCpiukgf/eOXYMpErdyavpcBym+/lZedbl0Y7m7IIrpHYw
2lExN3OCCvCZFhOcbdm6SWpXnS83ykDUFz/Qb1yX75aml+vVWnMbc7tXmiw8
+o1z29RKzslWlxaMgYdK0/G1vu9Xm+IsRzt/vUU2fW+O7FzfKaf/dr5sSlio
q1z31mw58a1aKV/s3Bd/WdI398UhL1XJ1BcarW/AKmFjtQcsT7nOdmWF2YK5
zcNMxKYgBYmdGbwPas8IUQZZ4jUDpkyTMFOTJB3JgyZKYmIFNUpyevuy6jqZ
X1Ohfz8oC6p0pnXxtHQWohseW2VJxjUnnstGUze1qJqPySOqCbwYSHM0n2LK
rTMpnBpqZSokGSg9UcM4AimJI05RY5JLUPjnsWFvC/yOXGcBuWKOzFtLxIF/
Uyo2vELqwvDX1j0jL02L8iEkW1wXNjKMLvmSffd1QlaSkRDWAs8gmaX/3iSM
J9k2gmQU5OAmYBRBcDr5J9+yoBo1sF9tuVom7PU3ObF8iS3PN9/UIROTPcTa
yG2A8iI7yyBTu0NpUiDFTvr88DP1M3zuPrkvVsvnmzxNRh6grE5ikg3miggS
7WxyvFl9rQexMsIP7p2L6t/WhVSQ8VVtMmJOt6xV+ZjMW/SIHKpX/L+mQujw
PNZICHGxqAMFWoZyIpoKagIuLuqxSHgzJrqaJicCxHFP1YkIbjXQ4Jwkg2Dy
Ie2uWl6kzgfTLiuKZ8zGJz0tGzbiMGsbBcgHW/Cww4zxPOyuEYl5HsVyNpW4
chjfOh24mno36etbk4rTfHNQm+z9cod6NnUUZxjtmuPC6GVLlSNZ5Yb6memy
hym+H+tunKMKL7joicrtJ+/6L5WdOV0tq+mOAy+vA+/G2jTb4ZFXm8SkmObE
KfjEYDoEeKnrJQoeqN1kMBwPHm+pMhq5Qgz0zOhF7/D6myJ/W1QnF/+jy1Ip
tTd5SBvaYuLQ1NpiMtGFjeTXkCEBpbmux6fpk3XMMV5sP3p2AbCdEdRR+wE1
xOuvW71jxE11LLQUqi8vfaz5VUlIUOdRz0wMCyRT61EUQ4/nfFOxuVOwa2tS
tgTU0RPkLwadWmlL1df3nBKRlIoeIMdZvUCOgwG99oRHJKDbEWGzl8bmem/S
lrjZc7GSvalal1Glu1ytCxtlUYt6TNXNUTmgCPDvdCPl4rhR68CyobQycmCB
/iLagpgjlA1QKlaPxHYwkgkDEE3Bhh0f/mDzRqbX51RJjdBVDPnoVtZdMmfC
dIpMM2OyBxVnQAIWx1IvVFt6gPjqiqomK3uiSaa0eXh1ke2ZtJrMch0rgynU
dx4xwiuLd9jR1/m990a7rk8ywNXCoPXF+uc4jQ5TEZj+BK8ofcJNYNqAKFz4
xK9k0pSCvPdepuLlKZeBs2d79onfeR/LUXa9+SZ5yk2aA3FAPqHAqaAlJT8y
XAe8HFOLKQwEgt/FZWLlVT7+SQsuzr3V2T/xNoXvaYPSIdmhSdhasUEwEPEx
qROlWIZ3RusSvCPQh/3SbNWP3ZFFItsha+1wjvQS/NESjW6dEwpxGRZm69FH
Q/O2kGALpVEJaDiTYLP/T0xeuCtJ81IjzSN+Xg2DO+WeVOUEG5DdQ1qL3QMd
K2S1k8JtyLAxRHThie0ziFNiATDtKF+d+mihD8ybgPtbHhVsXbJD4q8G5k4Y
EcYKZUr93D//KfLXvzrf8Y9+5GXaVMdDyAT5MIsM7kvcZbiRR4/23o3UHwLr
+tKXvK8vlhUt2WHGIehLebQq6LAhXMMyRWbc6OdeCjmfqjpH4Ff/LlMw0TcS
P2ZgqQPhci2dpWsr+Hp9g8TaCjvU+Rxn5ePj5GHZT85UgwmrTc0mHZtz7ac2
uUv+pKLhCv39/fozNVkWpJBsDjlJ3pdI7A8C1JlEKhoEdvXiZgutFnVrkZiL
HhEhp5l5jrxBhVwPfWCVUzoU1U0B2dqsX61qivoA7GS9F3QkG503xKI/Uo5M
el1g9gFGxiG4R+6JRdeUpVN4IJLKIioKqFFhIzIo18v1udhuOg1rkqW5OzT6
KTdYEw2uz7T0ThGhppQOYd43yLDmiqn+2nbxHJl+a17+09Vsjb5ABtdIPkiN
1Wx5E38E9TZxtK+JESNDBEKWiYLPDrX7c96pbqR9j8XRB/2ev+YqA9ahXD17
qeyy4K+ySvmrMqRzqCFrUS2I22L67yG200On1mRa4csgGIYVh5+k1lZYHc42
BzcNxia8OMg9VAGJbVBfKYOmM2+Sm8G9xLn6SD5K+FoxXAci/fYyp7EWf4Bj
DQJcLJUDQsEn3yHDFtuJcL135J2jwqsR6CQsxU+xbSNGJ+4fr0ZTP45dw++I
Lm1i9Yy7QUUbm6oCXMBVITDK28A6G6mQkCAoWL4G/THeMnSouFcoM55QFV4p
0oOhmXMhSJKJE6ekBzGCgFg+4wxJ9joLAe5dkPTU7j3wgK/JH/xArL0ln6Up
Mm9L6TikVgsDlABsIr5QU1tamQjUvjL8ns9lYfgl0N6RXyoL4eiJ1kfpLmyV
BN4W3TPdhuMIbOu7TVKpMFZtpanhD4isoXrWf1pN7YIR9pPOSWbEPLuc9qZZ
PZN5HhjxV26EOh0SAweZ/glBAkXjs9vCcKpSV2YF6FogAbYg/DJcMtlJCxM7
VXIr2f9zsTOMdLdLa56MoGp43eSt3Yl0zs0MX8deY0PdLDcnnVIxbrANWUrP
y/OjwoJA7GK2fSqOOiI6Rc6TvcjqIzlIPTbtf33Qppq+2UjFNHsXrGlliNOx
52L3w+IIY2uJaOIzpSKMRZjAfsp4olNx+ulOcKOOX3A0xpsDyQoeodeqVwv3
7G+qoT1B5IRvysCkcuOzpHJ2kGuravB/t+lHW7tKksr51O08YMXCiIYrZCV9
3SG6wEc1HWM2Lw1rGDwMOgLdGImsSuZqn8UHyfB7D5P93vuS6RuajFBKddqS
M2Tj+8+SkdecLzN/cZF8e8ll5kphnwPZ+rFlxn5qgu5OY+C+20QJrhPCDWMU
4/Epwyo+ZwkimL1Q7bBvQbbPNSidQOBT2UUxG8XhBOkRzq7Ph5kAJgKEcCZF
Ac2oW8ujTORlybRxGXuSaW8f5AbskpxjASJxGZPIKA0UEeOYxH3oHnZMWASw
m0YOzE3CI9E5g+4bILZpbEeM1qZr9/ABXE98lVgRCMNPFNM0GUA8I6ZZ3JQV
xBArSo+xIDuOb8SzwGKN3XKf3Ld+eCYqBbFsWZgeMnW8wqmninmARDoM6Nft
GeJ6lW3gB2KaxWyRjJyLBCF9Q3nHFPEq9URbW5imLpi39dFqG5epRezyfgNF
hR1pDNU2ivvMGfu1p/CcmkmJLitq7HdS3JGgJdqv4d4d3mlT/19cQtVUDGIr
MmcToalDUzGnQmpr9Rs6BOXzW3sIzaE2mUw2XlartK4R1kLBTO4aO82aYC24
6zNavcvj1Vw5yR4mdqJmz2LYcBCaVf/TVfYUm9Rj5etq7ZTbx7E7sJDXNmzX
aC/Xk2IGwy5D6dQUoXR6nBsSnmaQ5RiR+AO/jabDBEB1JY4N6xs+Q0Jxm04W
ufTnPtAffeR+0DKSnDVUmufVD8nZ1waEn7/c7Cwym1R8qELqddtuBKgZP4KY
qGEQceQEcSkQHyfd/yvZpOp200+QdwFuYQopxdv7oe/KkIv+T9a7Y558a+m5
poXhvcDuw+L6sk7nYV2nmiWGbcgm3779Ytle9RruCWY/4gixPanrGBnRPdIA
Y9RZx79jG0cstknBAEFE4AUBPSYAC6x1h8IRsosuEUQH2Vw8pS92f1OO6D7K
VABrgu9AZoK4hPuR7DDiEZ+fXOgPrZbkJiM4wUCFWQfjkyo3ImfoZTLEhEAQ
6dSQE64BVcH4oeOxv2PYqAfbsxPYjDUpDt8/moWNgpoHlYv0BJzB4zHcRNoX
y+ITw4wT/ifZxE8bhQ313nve94j4wLx53lzElste4QPdhqGoth2HCU/WKUpm
HpupYljRBjQinhBWbuz4wa5Dy/DaFIWcZyVT86Lxm8ZjIseOw2P/+mzB4nEe
a7AsnN91QwtpUHOLpb/33tauKUogM0ZZ8E262CsWmnlm/lkbwrbM7YAsJGgg
OGoROV5AEkuovUWBRAhQW5PdPoSnxxtcodxEaKWKh+esXqsq1KLmrJYrK8y9
vr9c2mNReEaWi79/2htg2UFXxb0BXDBbY4IYishgwsIBwGJORpUkPb67CUX7
6AWEy7Asn5IJ6O4irVSIblDStyE2HWO1z5LN1Jf8OFNe0ZVEA309TDBvk6WH
or9BpYdbx8UMzwV5VffLKN1vzydROzUokusijdjtBEOHhyX6BznLQrIcs4x1
5wGLmbBk9fOxNNyLC97PjE7BEAydtjcKg603YJnucWi3HHdRd5TuJDtY5Afq
Mxx8nH8sw10Ww4eDpC6LSh+IWnMwVFYwc1nix8KxQPiwvj5O67kJUnJlnfWp
OXHOkgireK0EzT/31FV43JwlcnjD7y1oigSbUtch61c/KV8s65arWwM/XgBu
kvq4rXKpXnOpXN3QpfLnDct6Nre+K3vq9U+sf1WaOhYZ5f+WZR/I4WUF2b+m
Va6u+Vg2q3nCaP6nNp9gpgW2M/FupBtBDHAxnCdODS85Sw5hTLwe+5dgCGTf
ZJChcaRTCiU2+An4d1A4IoWHBCYklhL2MkGanHm/Q00CkkJGmuLoYWzgbxBm
4DrE4lA2wIWwXQDdwHWOvc12JyOIv4FdTz0G0hSRznbH36DlCVqBmD3+BoFq
/A3AtPgbEA+jTHAk8TfQEPgbENHjb5BnwN+gsy60krrSfRuMtTg3H49+JoqG
6UJPgeflsRhSSkLULDs1rBRUYmCNzG0QBABb4dprnaEI+peOjqB09gsfYHNR
J4liIcYOQ1xUOthopCUYbl63O2kYldZXk5W7TYduZR3+Keo2MAE7GKJhdtiN
fTZ5d7jBHIteVoQC4M+yyfvOi0o2eR8VJAjgQ3KswBLA/0NsogZgxF0urPFy
DAKEBAqfe1L3meowtaxt36llXWTIDQR1jfoONg0jOSeuWe26k8GaX+HGJahl
d1qGBuBeZ5CLaQVqwPk1Ssww4n7WB5WXLZRr0ploCYI1bSteyGiVTq/8TlgC
MwCyRMJ32PzaFaPSWi15FJ1T9etmqYPhSmuXhGHpGrlZHOxfZ6NPWmVB0Zny
xOVy1Vmme8nbqKkbo4bnNqouNjLVG69ZZfCk+sQ1+uwoo6eqQbqJyoGZRZTR
N6j0gHwcicI2fV1ej7OylaG87MthCW5ny7oQMuRPBYKBIbp3IDaYq5btsVbV
m9MLnWr4ZJGB6xnSygSWdXt48Tr5rOsZNltaI+s/Ui07P98ctWzl6b4XRo8t
yeAWgTYDEbgt6kr9alRl2Xz//QpmcEuSmABa4b398MOUvixu5Sb9b7SKiIO/
UrqXwfOd/5bNy16QIwLT7wz917b6DIcuXCBtHe/6c/l6NpM5/jv2MjB6GScE
CfcekxCsQqQTfc3Yx+DGhjZVYrvI/1V9aiXOE8KYEt/HJ8wSOUcfKhI5u345
xj4LLQJpZBC2oDgJQeFfkn7GP6KPHP4lRFFYdKBroVQDoYVeIoSEf0nOAP+S
MBheDzoEzn5gdviXOE34l+gRLFFAYPiX+FskCdBn+JfAlfDFUO/4mGx6LMvI
6hyLk1DtqPphRsvlxFyR8HKqbdKZthkp6Ig9Bsy/1D8AfAjrUZEGyoywBroP
/xKMJv4lJJfXGuXlDeZfkkbHvyTrh39JsSL+JboXR4tUPv4lEED8S0IgZDSo
qyGvDT8lIcO9E3maMqJGScG1eb703FBxEe8R2+6IQC2md3ZHYUSR6UtN7do7
dMvep3XTdNd1vfcBGmbPxlxg3fOOKUplmM075g+mEoYEce/YwMDxIzWJ3FhN
Juos7ysUfmNeMT/P6toZqPDbsbUu4mM8LFP43Xfd9+Rlqvve5E9tBqxql951
300Zl+FnP3Of4NxzndeYsOV//pOE2DNGei4WVZfCHwe+3lRjZsAqE5LZbDRU
QYVF/DrjxDvccnaR4i6OZc1KYlk1QRsBQYg1E62GY8uHKYyroRhSWLDqC0u4
xHqJ6GGat+/YknDJ6UW0Tk3m+wZwlFE4NdojLQxD/hvLx3vxQqUVL7SpBJyo
3/mmSpN3dRdPVZ/vK+LNRv3oMFOvPfxkXE/9kHxPGTTZU0+Sb5pPgJg6Uld/
pQ3bIn2ekSo5RsMl6J7UTAsbEb0UszCqw4MVcX4nea/t1UTeV+bJGer0Uvg5
UQUx1sdWsuUgKjjitvetlK6RFVbBgQ3x5du65fHHCyqf0gqO1g+8guN71yUh
UCiwx+o2WF2V3jPPhNjmhEETu72wIPA96tFQ4a2FIkJ/AHa3VcNU0xiJuhGR
DPIgEy0iff7z3TANllrIE08LXC2i63Odv5VVci+pgP6ZPNv+jtTq7eqCFf58
Y/q4sV6wqSsVtV3Boe8opOq2v/YML3a+KSeHuviWTikiwSazmCXBRoVlSbC9
KOJEC6qgRgnFonrwZPk8YXA8XDYEXiShXFRIm/GmtVq6HvUC0QTqhvuhfsgE
1ZsHM9/UE8Ed1BUeNuoLDxt1hoeNesPDRt3hYaP+8LBRN3jYqEc8bNQlz8Ve
gD6RTCrZL55xijl2q9gzo3rdaHW6zUhrjbrGw0Z942EzFnjYqHc8bNQ9Hjbq
Hw8bcwAPG/OAMcNcwMPGfMCmx5zA5cS8YGwwN/CwMT/wsDFH8LAZVzxszBVc
ZtQYHjbmTIflp/PmYWPuUCzkoq+Y5zMWE3cFxO95Or67OqKhyPguZWi73CjX
73sTTC+d+eyM7xm/6ZAtflIjMxenDS/tgofYi7keB+wM/JEUKLZH1PEsJiac
37FwUijj6tKz/+7hapOpKpVTdDEdpnYUoIIvql2X8gvFDp/tJgRjHfUCieDo
KLGMaqjvivdJg654P2upOlR/6JBFS3pXvOs4uv4dIa+84rg61DmVCzBZAt54
660Mo3verfnqppSKqy8Ue125kQlNi1813ENXkKTxXIo1KYU/Wdf+H7rADu/B
Ze6ubMJTOj7gamsCuNnXTbZIZA9ZVw3lS5P1F8YsLTuujiznGbhHT56LdWR5
KM3fMLQ9YmCsRaiOlq11488yj6LNYuSV9gcfdrIqyhMzfTDLnGDNh31Kcptz
VQLNsF3De65npiWmf04l0cBFMnEwk0Xskec1lqs+Blv2uB/kZb1z87La4d1y
wgl5Of0j34jXvdVpqZHbb0/hRaD0wXxddVU0x8YMmrmttszKPnKs0ca8FB2D
YXCLihVafTJML7+cMZ4NhrTUIA9XtnrzpOFVv9NltJ4ppFsL98kttR+nXSyC
4oQIpj3gkH5eZX56YpeBU0Jp8mwtQRZG5bocnS1GhD3EYkPOZxm8iQJnGby9
qmWs5QZI8yHSiCgTzUUfoZv4DroPlwZ3VnWBf+0Y865QC6gHX9sdpjZQH0hR
1AlqBfWCmkHdoHZ4LNQQ6gi1hHpCTaGuUFssVtQY6ozHR72h5lB3qL25VvZ7
qKlD1CLqETWJukRtoj5Ro6hTXmNV2wjjbQiix4saRh2jllHPsecHahv1jRpH
naPWUe9IfdQ9ah/1jxmAOcDQYB5gJpyt630dPYf5cIU+814q948UOMuq1C++
UJ9mRg8zNxqxWZPWyZMrMx5EZfAGV1T7TYJ3213ZLWuvXZB5i2qlaWmvSmU7
5gQJSCYY4A1jq3MYg56sBrQ8Q0ajWRRlpFuMNfbd4dGOUrcmp9b++XK7BRPy
Zst1hQesyXiqiIKGULnopTBEObutyikXBFFBh8IgJxnmohVfY58CSlLjnFzS
1Ve7gLjiCu/j+dOfOhz9X/9KGCKyJQdRnSW9O/Wnw+z/QZ1Nz0Bp2s0McPun
PHRYSs+U2b8XGmjORECwrC7UhU9ZZN728RzJFq6Qjq1KvpvwN2Vcxp6Kbaqs
CJ7vF2wWv6Qe3zD97H4WUuqQF/QeDvxl/tlg+Yz7mjfjKBsWn5a4r7X6/am6
sXcVet2PsF5ZhGAGU8xTrN2yDT17FPNMW+5inixX0uV/1sEo1MqYsZ2y7c/b
rV6Nuu7f/15i4BTzCrrQPfaQpMPMQNRsiZmSqRwpVU3iCm1zYyE8+JClJuGv
LtwjM1XBDJnTLtObb5UtVbHMqHxZrq/81Gr2E64ZvU7oo+Hsy7kUe0te5qGF
Jb3EFd5HI8Z08OoAqmR5tQG+ZHm1nS5hrOVdwSSiZgio4vXyHYA1AGjI3aJm
yDG+Kq8aCCu3mcUZiTcSdyT+SKyP27aaA9Fitj/xShxJ4pcoUeKZOJLEN1Ge
xDtxJFmYOJIXm69wosVH0RBfVS2TU4V6jL7G0br4c6oRik2z6PJkfYk2YzmJ
a7LFV+iKKF+Gz/LsX+Sl/ZPS5ct2ucPtRkNtOOmxRExYxyJWDKPUsS/Y3zqi
kbs/ZVBemJD+oFe3Vx26pmDO91+lXyuewmxLGM+qLQiXDyPiCOBClFjxTRMe
igwIhaifZ7DKzdKvMq51L9L3VGPpIv0AQklkP6j9rbf2cqSXXvL7wKsPC+Y/
/ykV9rEAI50h0mMIPEZRHe7bGnjA4hlPReEI1lj0sczm73Fd3c68XG1P3RLy
u7HvXQTRZIbEB2QPyYj18IEVyyv9U7WPVld7gKw6thaJeLIieMbOM5fpSJby
TSfzG7mGjtIV5a8yTZ/1WCE/caq1wxxMUU4vpyVMflKU48MxfYXU5ESqIb6B
P3ndknI5+fm8Fa+ADqC2gVI0Fe+wUuciKw4NIQDukhzzQsJRhiEG04CQ2H/x
HFl53Zdlxu9ONiatGxr+LZc3vh0coIlFfRg6kK9V9gKWDOvy0TTZ+tQ//O+8
z3Zk/RpkG4aITAWwhJsDPCJLqozRnSFV9lKWsTbvhN0InQEwxwbHzsb2Psgi
x5UmHZ8xjtXCxeFrg6FAzGj1WB5SrMBbA0Q1H0AJUe2v8ArdrFLvWaFrl/PM
k0PDgb5HFuo2actFQQmMHlg6lvTD8rBPy2oSa+njPiaViEOCc4XGQi0Nrpbe
5U1KbTGqVyG98x3VebdryUIYRhZBGDhoAExOh/yOWrjR6KA8glMqDHNOAxKs
2GI2HTd6vUC1IaBP2Gufqrs4ysJi9yacCP5MZfas3THQNTgmHUdpjxdn9L1U
te5PzKubaPm1C81E8KPNcv4O/EiYfqMr/obcqdpre2v9sI7MNBXPQUXFTt5O
dxBlKTwe+Y46S/F3pjtvgIqUVcNYUWxAi03CbuPGOZYaTPXrr6dAaHql8TsY
8H0LjrGZwzDBpsFNJZGLnUNxA9mZ2+57z/qpffJJlEnjpalWelHIN9Y4hXx1
WUpVR8IfCjqarsxvHSytfLTagGGhDHgyUtZYbVhiOM6Rx9ZXz1hDcFG8BhIM
p58qCa/FmmBOOKlwAgVUn3RJ12X2tXGyrLx1cxIUTpQmUW/EgPYc8VbrLSF3
3EOXrLjuflldEus77YJH2o2GWWwlVlTx+tT8xUi0gQv1D8xHWGRN+l7uQEyy
eAfFOMRBSIH429XJQGXdYpHH2UZP2pxSkw6mpHuVsJdhOQfrDCW0dRT3ZfuX
v7jUePRRyZ3lUsPLKkeHvZQievfTea+SfczmWRgeTeVDrDcvK4p5+C4aiNBl
Upi4Lht87zK/g7WBzFlcKTJL5a0IpIhP1dQhqnCyrKKjTJPi/xiYkXnhAFWv
0iZZUwNVYHCXhSYwMiJi0BUYk8P2hYKGkMMzz4jcdpv3mMKzpCT4ggvExjuS
gX+42H+nUxK9xKw3GTPh/TFExIOBIphHgCuWy2L3Y9ui3qBFjQHzAw/0CIlI
agn1xezd8xz3jS1kR4f/87l/6+DjduFOIRMwNPA9uD/QmrzkNw7zwLyBxkEA
ksoDEAt4FaQFcawyo8Kqtsv9S/51RXyaXpRnY3tIfo4iKW+HR0IMhxBl5ABS
3w4HnnqNMkIPDClPS3FC3OmId/xKIpREIHVHJ4x9TALNDYhK3iF39Ffh223h
WT9XKsMSzRSKLMrLvWrhnnsShCTODztY9X/ubDsX+lgNs9Xg3PedRlNQkDRb
nG1LPDJ5upREw3XfajYVTA+FK4Rheak41hGqjuRHthLuBQccLRYc06jocdIJ
8ar/n+nNkWDiE8qBZSDc98usIldeKbLJJknHZ9tf7DP2G/uOPfaF9d3323e/
OPKl+kKOKOoLSXasmlyGU84nIY/sZ/ooxU8SgIPpCfndBUvka+VdcnLnpRbR
xk6iloipo/bpXXk3zhCspbzOokXQtPrjvGFW0p1mVbDn+TreNIjuwNAYCnXG
WviEXDsVpcCluA17lZkl+gsBEAmAMIs/DqOSlZ095GRiLHbpBi03Hb0w1cmD
lp9Fmw4MOXh5QIeIeABbcdNhuRChxALBkH/BIpf+CIDzWPO8+cVy8Ubh9N13
O6f0175mIKi4AyA3IUJw112SOye7cYZYWRQhUH5yuPk6ppvQ31RbgUTk4UDk
scA5x9CSe8DDYAh9i6SpeFiLABX8R61hR/aNMIiFf64/HCzaL+fo8ukBZlsn
/0NK72S/0l4C4pyPPorSa7pRdH1JJdKuB7r9O1x/8Y1vS7+d5F5ukCQW2Qmq
paLvjnMlyrJzkVxABqjL/nLDXboXvinT9Xq7NF1jskunMWbKcaLKylzUxNJm
NBOYUjYHFhxZKDYG4QBMeZbiBmEzYQWSRePz4C3Zu6wQdAX4T7JjAFj4nuqN
X4bbJrI4I++zUs/+f1pY7jj1uA6sNFZVinkYZffHgMcK5XnZNliehFX5G9aW
DcIeABZ1+OGOFvjznxPMAiXVmCvqR+a+VbwHMPsR+rBy+FXG2MYi1xcPoqnE
lVD7iB10OCOByPFNuYb07ME3SV1oegd9Qa6xAped1Y0bHMSsFIxtxeXeDsZM
uK5bnniiT5bgqNwps4XDHkuqUJDIoRDD5zjoTzyRlNfaUVei1dMd3wpLVtL8
8vWlW0Ilart3ve3YAettH2l+x649y+mOYioMdhBsCVWVCSUVYZLI4IXpAiYt
MngBiQ4MXuuFO/NxovAkGVkb5H7ZNayDLfUP8hBZCcoavyc5It8KVUTYieih
hbLQV7aXfb6jWxX5yG4C3Uzcit2wqWwarWUJFXQMRs+2vvQcIH9z4YUFeXtx
V1zwb73le+D736fYzBb8F8KvqH8lGc5P68WP6x9EwKvyapiCGZZUBpaNggD2
jSbCDIx0Gyz43QKmjUT5RP0swVPqsCZak8b1B436yIBKhodVtryoj7Nuzcsa
Z+dlpxO75de/zstPMmmFyEEKuSLcjLAt6GL3N980Ae/bBkwrDP3o3dJFanIp
RwwvBLijs8Tn7NcruMYw2pNw3myxhXeYjIIzSy4EooK4TCQXAlj2mryWi0uc
ZUsmhUIACg5Y1ixvljnLnWXP8mcbsB2SY+swlvySD3OjJ+VJX7vFRWZ36/Ts
L39Tc+8om4xNdVUBg/Dr9VlkVrBoQSwwqkw8ms+myGy0TH62UZ76R+8mnhxq
V9kwX3yxrviibQWGioFOt9U65qefHjpjcxBaxZhD1FABiEdFohCcCoWMhKaY
nD30b8CZhP4uVh0JS/REFSZoAj53vaW8OfpNObvgHJ7NastnFJy+c6kHp7ee
7xnn713TKY3d7QmiHhoGTCo1rYI838yo2qOfUKLUyI4enSrc/AmpiFjZ21ni
cxwruNYotiOgqVCtd/UOnlsxUwzyFV8jMsWQoiUuMTPsNFK8mEqYTPgyeJMI
f0wq/BnkLnIWkwvTJzksDBz8ccBQWOYoLPq4+IP0rvOos5J61vs65rtvJBvI
n/TmA9V5PGxRuBi7nG1glEHVeUxZpjqP9R5ps9rWV5aWrPOwZUP26owz5Pzi
7caoImr4ybGZG+vmekSNs/HmohAposaXkUV2YeZxcI7gPKhtNF4syt3ENNaW
8oMkhPs1A23xdgfLXLldTcCB04GLSqYce3P09QY1Lm8M96vdVbJNW7mMui1v
fI+AByOe4913PXBwxRVphAu+yEZfJUmJf5bW32rIg++Sdz8mfjXzscHWDETk
LYSYZCrfeSdtbgsvBjh4BB8J+iyVB3YKhnmMESK2eqJQiBvG+F0aMSuYb48r
ga+Pa4Pvz77EBsONAOxH3IDVkhx7hD1GcQDQDZYPlj60UNEy6Z3trTMtcpi+
wHW6Tnc2p7VqAJw101hpQYFuiyBnE2el4GRTBg2yBjv8o/c6MljfYnI3Cspp
/oFpr1ZP2FibhTcfLD9FlOzwhY5VwwIkeioW0jYsbrDOyrp+0pOPghTW9rKx
Tsr5NiXk88ndYqIT8oE2Bf8LiYdOZAPHFBkb+yKVghgrG8kJyUbHpAdBQ1QT
o2bg9Nk/+s7QDRhMjT0UCBPQgQ6TnAr0Rx5JU2fgenFCf/azGFQe2Yuy3WJx
9R6La+lOtlzmY0l4bjCQYmeCWiVhm/iCTvvncuRvn5Nzqpboubdl9fz2pnsI
UJ9d876c0fy0W2RdgRZJ1WhTe7zveqZKo7UbmSY4YkqutiFFcXWGynjYzOni
Yq5emfdlJqvHtSDCra9Oy5EwkqAAIhRBdIxYH5NLdJZnJDxNUJ0QRvRF7Ng/
zAFIYBQr8QLYTWDmTjurF8NC60Pm7jS1qfD4BwcLlbBGZgWfojG88GBgoaut
EFjoi0tb5PC5OrhzDAIaG+B6LnP2ctXrxxBGs32+TrfcBLlA/lB0rsa0UoRC
fVb1+hi5oG5nFdXr/16vNUKfiXARAgH/HbA03g1C41q5nChhiCROU1ExVd3p
ahtMRC80XLtZ29/pJlz4Pt4QQiJ0FimRRLvCyKZiEo1lsllxom4ZA8GRsqLf
JrvDgewYIzXEkPgd5N0WL05iuzR7p888ROzj45LrTBGYpZroeghwhonyn1d/
Ivs21cnerx8nK41fLOPOfVo20D16fOsv5OnO9iRSWa8WRXld0gHXyggj3SnN
f0p+rnSJvD/6pH4r5P/Y8IFO481yuIqoMVW3mbwHkkKemVQbmH3AS1HW23FY
2P5AJgmksDaI5RQSBVYKFEi7tzq1CPZT6bKFDBYU6AHvWSYsyiyWHFdNBhS4
xmcGCtz45UZr/AZD4wXZnb/8xb/vx4y6fqJcraZpckBatWzfc/HUGfZB/8W/
KXp6WYt/a3WEGwL+vDrY1hupdQ9VHVEpvCw0AeiOQhzxnaRn9PRc+b5u/yny
oNlZnqU4QLcuPZNm6ISvo5o7Z8b+j2PH8BJZiird/CeHzd8VIgkX6V0uCfig
wRcMHq1nzlz+VMWQIB6I0DY0OLsxcoBwaj6fmA2Y2+RM//zn2Hhgurz9tv7c
/JFc8uunZJ9r7pe1KuplyGELZMSaBRk68UMZNnKJrL1uQaq2Tlk9WutctVcH
8pxchrg7W3Lbx+f6Kd0d22/p7v2dz8iGVrqbl5s6/2CaPTmOtguMNKoL/AWM
RuwCPxJMW+z1zqbFjHCsxcBwNndeW8NWgZquMzG9Bg9rGyJnVxWsB8z770tu
XnavDlBEOHnAIsJGkxzRhXSf4N4S54BF9V1FuPpyVRF2JnDteguCHKF7ap5K
Z4IcoYrQSaNnmjqsDhskE++1A+wEAv5P1oCzyVyj2XqZ81UN7K2XX0mnkUrn
LfXyg0mipFn/vPnJPo3/+06Lo+T550VOPtnbAcHeBWCGAxgjnjAMH47YXtMS
+mSqdLvSfVG++11vQbHHfotlzY3/I0NHq+Zf5T+y0hZPyaQ5jbLNmX+Rk65+
Xm6560O5/WyRix8MLxKAtnTljeNQE3pAtLr1nrR8zW67Ep/z2VqxBYK59G6W
ldTFSTkDEWfwjo/II+5pTzT8GLkQn5066R8/1mTR4flCj3LzspcFPxaTpdSq
0ByNCIWRG6y4Iin3OeuKiqQeL3HO1eL/pkjKu9xT5jYreB+MdD7wFQ+z54pH
CCMn5W2E4FY1DMdPQ7CrPZT+XmP93o9TTz2n+nUQSaDMe+ZDbDn6zctX/7ub
3nnkKXlZ91t52a28W447Li8Hd7nEOufJTit/oqo8hsDQjnTnAkex554iv/2t
txOYtqa1GPAy4eFZ/JrvkG6jk3Jze1X7kewofKx04rn5Zt0o54l85VinfF9n
HRUQw7yfzJY7dsv2R70ss867X6b88BIZdd8XZZdnT5FL3r8yFhb5Oh5nG62C
BKc6fQ80OxAH05mG3bF2iqA6GNrmWifdjvu8u8c+7/E5O1Z07VR6N6c7T0Gj
xOLA47ZIS6KaCGXXGYtDcVeIiCPLBqFiNjSWbZfqFEGM/nOfcwyR0/iu0NKY
QnBUs6Uxpc7ZwGZLY6ZlN3OytVZkaUyzmyvDw2LtoxImPs3dcopqq1X0+1vr
Ez2eVELsoM4WFWqDr2/kSWqTcqn2sFWLsk2bLXe2qebjJrn2Q882XfOYyrEl
tXJ8eafsfGu7JVGBjVHsAgiYvQYylYgcDUEArz/+uCvZW28V2UaN4tXHu588
dXX9O4D1M4g5f+x1+wPMJdE1dCI53zirpUBzd/3NW/7dc4/IheX+vR3Vet9i
Q0n4YMeNEll/K5GdVAjtrWbukbvr9xe0ybdfukWO/OTLuhPWkDV0j/SoiIng
Ofq4hvxZkGsjLD/G5WuiStfHbp5vTnxinWc+k8T1B6jZSY+vhR2OeU0pPWgB
YBEgCuLOBSJBMF0kRR6YcJ3m+QqvzVmmcg5H31sMrsgNjeeGJd8ebC0H3280
my+f6KCZ0kf9RjhiBcBGulxGqdG6laQVAAfJ6RZiX5ZqMg+YVQa75n9cAeD3
2NFybyiwhx4SueUWt0ZpCH3wwV4hgvWKEkOZTdO1N2VNb3w5SRXVZT+SZUbG
scaIG+HTPvlzkaOudC68y3RZnKBW8EEHiWzAPUY6Am+zzRyZdJouvU11s99y
hyrar4uccbde4yNJMlmXNDSppqmSkXrvyU0nFNV+TA2bZP6cFMIEsQxdUlWj
RjWU+XXCNTNABUp6nBq+IOLd6SPYB3AApb7YvrvKrkmVvhELd4eJjnu4W+of
KFhHkOee8zWhtlvQal7IgAFbXMjAulpo/mBayNDjXOLRDr6KYUhSxSDJ/hhW
qnIhsVNZv/vpy/5UX5REA6hTDoBDkHuIDKa4Ka97IubR6qPyHGzPHe8MuTah
U6ucPVPX78U/cTJ/CIMP6AfCtttJItfpz1+5zlI3Mu80n+Td1Dxcbz1XNqvp
2Ixew5sFnq2e2HX62QX6/PXnisXmlwXGdl3zy6FtxEd8JnZ+LKSlEBnD6hT7
uTfMZj8di9PkMOMa2UpOsuC4H33CbAh5zDdDPS0C/yy5nPd/tySXc4iR7Jps
thTTv3KJc6OScymmf1qJc64IJxseikVIyShJXjLCsSnlQKUzsc+xW2ctuWWs
nfFFWAwve+KnvpjKLvE4//ln6sRv4f3mJurCGqbPPUl//7mtvIPwheeIbLiW
yK8fEHnhBZH339AFNCvl113R8LJ0pd2YDG1fCJPvW3puLVlT/ih/GRBhEnVd
9AFjHHUFMol+99OcrPNQm/WF64tJNCw3rygpLkLF+2KpRIIB/TkiY3t0NUjK
hqyJh8vuwXY68Le2pI+v5S2Mxhwzlc58UJ+dcYIvkkkq/ifoXl+Zf+tMzNQ9
vdMh7rBee5bIN24QuVptyUfe7QMo1R3sUMzbMkmCqSsYKNVzzfSNmIjTtYMM
DjHBamm0Isy6ENLp6AcxMXhaumoTXn0iJkIcyOsG95RSxIN/kJPt3JYqecGq
27BLf8SDMY9QZc7csuYRVkTJw/lLm+XVV3Wd/8k71rKMKLzad1/PN44a5TgG
jD2wDN/4hi/Hb6vCvOmhbNxk7EDQITvqyrw+qLsgsVvIALCh9LjVvtB3/n5B
ODPY/H2LefY1RtTptE6uhf/XtE7zskurdxFBpb0OZPJ3qgIfKzvqVhmYwCvr
8PeKf+diN4TlDYBf+ni33HRTQcpeqpX96xfK1ieKrHW7B8CnreUqDI5YbCxU
2/33u/H6wQcxOTJ6IPiLP3WLRFa9sjopOgYDgem5hvpOAs9Oam4HkwR+K4Rw
/MlT0+F/ygxTJJlW6bF8JERj/dZ/lPP031NkALafJBrQOxK7fJh8IrHbn5eX
o67Jy/nXdaspnZfzPnbJdMuSTmuV3BO+kJSOpsoyKeLs1bbcjluSp08SgEFG
jZfBZP0abV10hTExyMh/k/TLUsQXbfEVRDwS19EA0bb/AfGIHbaKKNceIEfj
jb4w9Kts9XUk621wSZqrfCi/GW7331MvDJHsko9Fsf0EXlZob+1+uRfCgoxP
WSr+3R3hlSXj31dm11upgvLxMnBBeWcpb3uQznaP43p/HhdVxfwEPWpsw5ki
J2sZfawex3V+7+8kQ5d00Ctpn/f4trdl7XnWjo3+/1/9f/ur3Er/D2oLTaw=
\
\>"]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]]
},
WindowSize->{1112, 827},
WindowMargins->{{12, Automatic}, {Automatic, 55}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 210, 5, 51, "Subtitle",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[792, 29, 222, 4, 50, "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[1029, 36, 437, 6, 28, "Output"],
Cell[1469, 44, 591, 10, 50, "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[2063, 56, 455, 6, 28, "Output"],
Cell[2521, 64, 92, 1, 28, "Input"],
Cell[2616, 67, 215, 3, 51, "Subtitle",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[2834, 72, 152, 2, 50, "Code"],
Cell[CellGroupData[{
Cell[3011, 78, 185, 2, 92, "Title"],
Cell[3199, 82, 218, 5, 28, "Input"],
Cell[3420, 89, 1578, 47, 81, "Input"],
Cell[CellGroupData[{
Cell[5023, 140, 297, 7, 28, "Input"],
Cell[5323, 149, 1855, 51, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7215, 205, 300, 7, 28, "Input"],
Cell[7518, 214, 1853, 51, 57, "Output"]
}, Open  ]],
Cell[9386, 268, 501, 13, 46, "Input"],
Cell[9890, 283, 403, 11, 46, "Input"],
Cell[CellGroupData[{
Cell[10318, 298, 990, 21, 28, "Input"],
Cell[11311, 321, 4750, 132, 149, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16098, 458, 227, 5, 28, "Input"],
Cell[16328, 465, 4984, 132, 140, "Output"]
}, Open  ]],
Cell[21327, 600, 1911, 49, 284, "Input"],
Cell[23241, 651, 786, 19, 63, "Input"],
Cell[24030, 672, 1489, 37, 114, "Input"],
Cell[25522, 711, 1547, 40, 131, "Input"],
Cell[CellGroupData[{
Cell[27094, 755, 166, 3, 28, "Input"],
Cell[27263, 760, 2870, 74, 398, "Output"]
}, Open  ]],
Cell[30148, 837, 976, 24, 97, "Input"],
Cell[CellGroupData[{
Cell[31149, 865, 113, 1, 51, "Subtitle"],
Cell[CellGroupData[{
Cell[31287, 870, 130, 2, 28, "Input"],
Cell[31420, 874, 5228, 136, 157, "Output"]
}, Open  ]],
Cell[36663, 1013, 205, 5, 28, "Input"],
Cell[36871, 1020, 387, 8, 28, "Input"],
Cell[CellGroupData[{
Cell[37283, 1032, 133, 2, 28, "Input"],
Cell[37419, 1036, 586, 11, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38042, 1052, 123, 1, 44, "Subsection"],
Cell[38168, 1055, 480, 10, 63, "Input"],
Cell[38651, 1067, 305, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[38981, 1077, 151, 2, 28, "Input"],
Cell[39135, 1081, 4989, 140, 130, "Output"]
}, Open  ]],
Cell[44139, 1224, 544, 11, 28, "Input"],
Cell[44686, 1237, 295, 6, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45018, 1248, 250, 4, 69, "Subsection"],
Cell[45271, 1254, 1754, 31, 148, "Input"],
Cell[CellGroupData[{
Cell[47050, 1289, 302, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[47377, 1299, 608, 12, 22, "Print"],
Cell[47988, 1313, 586, 11, 22, "Print"],
Cell[48577, 1326, 584, 11, 22, "Print"],
Cell[49164, 1339, 578, 11, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[49769, 1354, 529, 8, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50335, 1367, 139, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[50499, 1372, 620, 10, 28, "Input"],
Cell[CellGroupData[{
Cell[51144, 1386, 213, 3, 21, "Print"],
Cell[51360, 1391, 218, 3, 21, "Print"],
Cell[51581, 1396, 311, 4, 22, "Print"],
Cell[51895, 1402, 218, 3, 21, "Print"],
Cell[52116, 1407, 213, 3, 21, "Print"],
Cell[52332, 1412, 218, 3, 21, "Print"],
Cell[52553, 1417, 311, 4, 22, "Print"],
Cell[52867, 1423, 219, 3, 21, "Print"],
Cell[53089, 1428, 213, 3, 21, "Print"],
Cell[53305, 1433, 216, 3, 21, "Print"],
Cell[53524, 1438, 313, 4, 22, "Print"],
Cell[53840, 1444, 219, 3, 21, "Print"],
Cell[54062, 1449, 261, 4, 22, "Print"],
Cell[54326, 1455, 313, 4, 22, "Print"],
Cell[54642, 1461, 278, 4, 86, "Print"],
Cell[54923, 1467, 7469, 101, 7432, "Print"],
Cell[62395, 1570, 212, 3, 21, "Print"],
Cell[62610, 1575, 261, 4, 22, "Print"],
Cell[62874, 1581, 313, 4, 22, "Print"],
Cell[63190, 1587, 278, 4, 86, "Print"],
Cell[63471, 1593, 7471, 101, 7432, "Print"],
Cell[70945, 1696, 261, 4, 22, "Print"],
Cell[71209, 1702, 311, 4, 22, "Print"],
Cell[71523, 1708, 277, 4, 86, "Print"],
Cell[71803, 1714, 7533, 103, 7552, "Print"],
Cell[79339, 1819, 406, 8, 22, "Print"],
Cell[79748, 1829, 388, 8, 22, "Print"],
Cell[80139, 1839, 540, 13, 64, "Print"],
Cell[80682, 1854, 482, 12, 29, "Print"],
Cell[81167, 1868, 481, 12, 29, "Print"],
Cell[81651, 1882, 235, 3, 21, "Print"],
Cell[81889, 1887, 242, 3, 21, "Print"],
Cell[82134, 1892, 1523, 19, 192, "Print"],
Cell[83660, 1913, 243, 3, 21, "Print"],
Cell[83906, 1918, 234, 3, 22, "Print"],
Cell[84143, 1923, 237, 3, 21, "Print"],
Cell[84383, 1928, 240, 3, 21, "Print"],
Cell[84626, 1933, 1523, 19, 192, "Print"],
Cell[86152, 1954, 243, 3, 21, "Print"],
Cell[86398, 1959, 237, 3, 21, "Print"],
Cell[86638, 1964, 242, 3, 21, "Print"],
Cell[86883, 1969, 1523, 19, 192, "Print"],
Cell[88409, 1990, 243, 3, 21, "Print"],
Cell[88655, 1995, 237, 3, 21, "Print"],
Cell[88895, 2000, 240, 3, 21, "Print"],
Cell[89138, 2005, 1523, 19, 192, "Print"],
Cell[90664, 2026, 243, 3, 21, "Print"],
Cell[90910, 2031, 242, 3, 21, "Print"],
Cell[91155, 2036, 1523, 19, 192, "Print"],
Cell[92681, 2057, 243, 3, 21, "Print"],
Cell[92927, 2062, 236, 3, 21, "Print"],
Cell[93166, 2067, 240, 3, 21, "Print"],
Cell[93409, 2072, 1523, 19, 192, "Print"],
Cell[94935, 2093, 245, 3, 21, "Print"],
Cell[95183, 2098, 242, 3, 21, "Print"],
Cell[95428, 2103, 1523, 19, 192, "Print"],
Cell[96954, 2124, 245, 3, 21, "Print"],
Cell[97202, 2129, 430, 8, 22, "Print"],
Cell[97635, 2139, 412, 8, 22, "Print"],
Cell[98050, 2149, 398, 11, 64, "Print"],
Cell[98451, 2162, 340, 10, 29, "Print"],
Cell[98794, 2174, 341, 10, 29, "Print"],
Cell[99138, 2186, 97, 1, 21, "Print"],
Cell[99238, 2189, 100, 1, 21, "Print"],
Cell[99341, 2192, 1385, 17, 192, "Print"],
Cell[100729, 2211, 103, 1, 21, "Print"],
Cell[100835, 2214, 92, 1, 22, "Print"]
}, Open  ]],
Cell[100942, 2218, 1541, 26, 99, "Message"],
Cell[CellGroupData[{
Cell[102508, 2248, 97, 1, 21, "Print"],
Cell[102608, 2251, 100, 1, 21, "Print"],
Cell[102711, 2254, 1383, 17, 192, "Print"],
Cell[104097, 2273, 105, 1, 21, "Print"],
Cell[104205, 2276, 97, 1, 21, "Print"],
Cell[104305, 2279, 102, 1, 21, "Print"],
Cell[104410, 2282, 1383, 17, 192, "Print"],
Cell[105796, 2301, 103, 1, 21, "Print"],
Cell[105902, 2304, 97, 1, 21, "Print"],
Cell[106002, 2307, 100, 1, 21, "Print"],
Cell[106105, 2310, 1383, 17, 192, "Print"],
Cell[107491, 2329, 103, 1, 21, "Print"],
Cell[107597, 2332, 99, 1, 21, "Print"],
Cell[107699, 2335, 1385, 17, 192, "Print"],
Cell[109087, 2354, 105, 1, 21, "Print"],
Cell[109195, 2357, 97, 1, 21, "Print"],
Cell[109295, 2360, 100, 1, 21, "Print"],
Cell[109398, 2363, 1383, 17, 192, "Print"],
Cell[110784, 2382, 103, 1, 21, "Print"],
Cell[110890, 2385, 100, 1, 21, "Print"],
Cell[110993, 2388, 1385, 17, 192, "Print"],
Cell[112381, 2407, 105, 1, 21, "Print"],
Cell[112489, 2410, 288, 6, 22, "Print"],
Cell[112780, 2418, 272, 6, 22, "Print"],
Cell[113055, 2426, 292, 5, 22, "Print"],
Cell[113350, 2433, 127, 1, 21, "Print"],
Cell[113480, 2436, 113, 1, 22, "Print"]
}, Open  ]],
Cell[113608, 2440, 1777, 27, 76, "Message"],
Cell[CellGroupData[{
Cell[115410, 2471, 119, 1, 21, "Print"],
Cell[115532, 2474, 122, 1, 21, "Print"],
Cell[115657, 2477, 292, 5, 22, "Print"],
Cell[115952, 2484, 127, 1, 21, "Print"],
Cell[116082, 2487, 119, 1, 21, "Print"],
Cell[116204, 2490, 121, 1, 21, "Print"],
Cell[116328, 2493, 294, 5, 22, "Print"],
Cell[116625, 2500, 127, 1, 21, "Print"],
Cell[116755, 2503, 119, 1, 21, "Print"],
Cell[116877, 2506, 122, 1, 21, "Print"],
Cell[117002, 2509, 294, 5, 22, "Print"],
Cell[117299, 2516, 125, 1, 21, "Print"],
Cell[117427, 2519, 169, 2, 22, "Print"],
Cell[117599, 2523, 292, 5, 22, "Print"],
Cell[117894, 2530, 184, 2, 86, "Print"],
Cell[118081, 2534, 8154, 115, 828, "Print"],
Cell[126238, 2651, 119, 1, 21, "Print"],
Cell[126360, 2654, 167, 2, 22, "Print"],
Cell[126530, 2658, 294, 5, 22, "Print"],
Cell[126827, 2665, 184, 2, 86, "Print"],
Cell[127014, 2669, 8160, 115, 828, "Print"],
Cell[135177, 2786, 167, 2, 22, "Print"],
Cell[135347, 2790, 292, 5, 22, "Print"],
Cell[135642, 2797, 184, 2, 86, "Print"],
Cell[135829, 2801, 8236, 116, 829, "Print"],
Cell[144068, 2919, 312, 6, 22, "Print"],
Cell[144383, 2927, 296, 6, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144740, 2940, 671, 12, 169, "Subsection"],
Cell[CellGroupData[{
Cell[145436, 2956, 233, 4, 28, "Input"],
Cell[145672, 2962, 66980, 1428, 417, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[212725, 4398, 185, 2, 92, "Title"],
Cell[212913, 4402, 573, 14, 46, "Input"],
Cell[213489, 4418, 1578, 47, 81, "Input"],
Cell[CellGroupData[{
Cell[215092, 4469, 297, 7, 28, "Input"],
Cell[215392, 4478, 1954, 53, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217383, 4536, 300, 7, 28, "Input"],
Cell[217686, 4545, 1952, 53, 57, "Output"]
}, Open  ]],
Cell[219653, 4601, 501, 13, 46, "Input"],
Cell[220157, 4616, 403, 11, 46, "Input"],
Cell[CellGroupData[{
Cell[220585, 4631, 481, 9, 28, "Input"],
Cell[221069, 4642, 399, 8, 28, "Output"]
}, Open  ]],
Cell[221483, 4653, 678, 16, 28, "Input"],
Cell[CellGroupData[{
Cell[222186, 4673, 661, 13, 50, "Input"],
Cell[222850, 4688, 9327, 257, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232214, 4950, 674, 11, 49, "Input"],
Cell[232891, 4963, 4803, 131, 166, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237731, 5099, 300, 5, 28, "Input"],
Cell[238034, 5106, 14152, 395, 370, "Output"]
}, Open  ]],
Cell[252201, 5504, 1962, 49, 284, "Input"],
Cell[254166, 5555, 1454, 32, 131, "Input"],
Cell[255623, 5589, 1629, 38, 114, "Input"],
Cell[257255, 5629, 1733, 42, 114, "Input"],
Cell[CellGroupData[{
Cell[259013, 5675, 215, 3, 28, "Input"],
Cell[259231, 5680, 3157, 90, 448, "Output"]
}, Open  ]],
Cell[262403, 5773, 1120, 26, 97, "Input"],
Cell[CellGroupData[{
Cell[263548, 5803, 113, 1, 51, "Subtitle"],
Cell[263664, 5806, 252, 5, 28, "Input"],
Cell[263919, 5813, 529, 10, 28, "Input"],
Cell[CellGroupData[{
Cell[264473, 5827, 180, 2, 28, "Input"],
Cell[264656, 5831, 679, 12, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265372, 5848, 123, 1, 44, "Subsection"],
Cell[265498, 5851, 585, 11, 63, "Input"],
Cell[266086, 5864, 408, 7, 28, "Input"],
Cell[CellGroupData[{
Cell[266519, 5875, 202, 3, 28, "Input"],
Cell[266724, 5880, 4835, 136, 130, "Output"]
}, Open  ]],
Cell[271574, 6019, 595, 11, 28, "Input"],
Cell[272172, 6032, 401, 8, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272610, 6045, 250, 4, 69, "Subsection"],
Cell[272863, 6051, 2180, 38, 148, "Input"],
Cell[CellGroupData[{
Cell[275068, 6093, 353, 7, 28, "Input"],
Cell[CellGroupData[{
Cell[275446, 6104, 490, 10, 22, "Print"],
Cell[275939, 6116, 470, 9, 22, "Print"],
Cell[276412, 6127, 468, 9, 22, "Print"],
Cell[276883, 6138, 462, 9, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[277406, 6154, 139, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[277570, 6159, 724, 11, 28, "Input"],
Cell[CellGroupData[{
Cell[278319, 6174, 97, 1, 21, "Print"],
Cell[278419, 6177, 100, 1, 21, "Print"],
Cell[278522, 6180, 200, 3, 22, "Print"],
Cell[278725, 6185, 103, 1, 21, "Print"],
Cell[278831, 6188, 97, 1, 21, "Print"],
Cell[278931, 6191, 100, 1, 21, "Print"],
Cell[279034, 6194, 200, 3, 22, "Print"],
Cell[279237, 6199, 103, 1, 21, "Print"],
Cell[279343, 6202, 97, 1, 21, "Print"],
Cell[279443, 6205, 148, 2, 21, "Print"],
Cell[279594, 6209, 200, 3, 22, "Print"],
Cell[279797, 6214, 165, 2, 83, "Print"],
Cell[279965, 6218, 9652, 130, 9032, "Print"],
Cell[289620, 6350, 148, 2, 21, "Print"],
Cell[289771, 6354, 200, 3, 22, "Print"],
Cell[289974, 6359, 165, 2, 83, "Print"],
Cell[290142, 6363, 10099, 140, 9952, "Print"],
Cell[300244, 6505, 97, 1, 21, "Print"],
Cell[300344, 6508, 164, 2, 21, "Print"],
Cell[300511, 6512, 200, 3, 22, "Print"],
Cell[300714, 6517, 185, 2, 113, "Print"],
Cell[300902, 6521, 10105, 139, 9982, "Print"],
Cell[311010, 6662, 166, 2, 21, "Print"],
Cell[311179, 6666, 202, 3, 22, "Print"],
Cell[311384, 6671, 187, 2, 113, "Print"],
Cell[311574, 6675, 10163, 138, 10102, "Print"],
Cell[321740, 6815, 294, 6, 22, "Print"],
Cell[322037, 6823, 280, 6, 22, "Print"],
Cell[322320, 6831, 420, 11, 64, "Print"],
Cell[322743, 6844, 364, 10, 29, "Print"],
Cell[323110, 6856, 363, 10, 29, "Print"],
Cell[323476, 6868, 119, 1, 21, "Print"],
Cell[323598, 6871, 124, 1, 21, "Print"],
Cell[323725, 6874, 222, 3, 22, "Print"],
Cell[323950, 6879, 127, 1, 21, "Print"],
Cell[324080, 6882, 116, 1, 22, "Print"]
}, Open  ]],
Cell[324211, 6886, 1322, 22, 76, "Message"],
Cell[CellGroupData[{
Cell[325558, 6912, 119, 1, 21, "Print"],
Cell[325680, 6915, 122, 1, 21, "Print"],
Cell[325805, 6918, 222, 3, 22, "Print"],
Cell[326030, 6923, 125, 1, 21, "Print"],
Cell[326158, 6926, 119, 1, 21, "Print"],
Cell[326280, 6929, 122, 1, 21, "Print"],
Cell[326405, 6932, 224, 3, 22, "Print"],
Cell[326632, 6937, 125, 1, 21, "Print"],
Cell[326760, 6940, 121, 1, 21, "Print"],
Cell[326884, 6943, 172, 2, 21, "Print"],
Cell[327059, 6947, 224, 3, 22, "Print"],
Cell[327286, 6952, 187, 2, 83, "Print"],
Cell[327476, 6956, 9674, 130, 9032, "Print"],
Cell[337153, 7088, 172, 2, 21, "Print"],
Cell[337328, 7092, 224, 3, 22, "Print"],
Cell[337555, 7097, 189, 2, 83, "Print"],
Cell[337747, 7101, 10119, 140, 9952, "Print"],
Cell[347869, 7243, 121, 1, 21, "Print"],
Cell[347993, 7246, 185, 2, 21, "Print"],
Cell[348181, 7250, 222, 3, 22, "Print"],
Cell[348406, 7255, 209, 2, 113, "Print"],
Cell[348618, 7259, 10125, 139, 9982, "Print"],
Cell[358746, 7400, 186, 2, 21, "Print"],
Cell[358935, 7404, 222, 3, 22, "Print"],
Cell[359160, 7409, 207, 2, 113, "Print"],
Cell[359370, 7413, 10183, 138, 10102, "Print"],
Cell[369556, 7553, 315, 6, 22, "Print"],
Cell[369874, 7561, 300, 6, 22, "Print"],
Cell[370177, 7569, 201, 4, 22, "Print"],
Cell[370381, 7575, 199, 4, 22, "Print"],
Cell[370583, 7581, 210, 4, 22, "Print"],
Cell[370796, 7587, 852, 13, 406, "Print"],
Cell[371651, 7602, 94, 1, 22, "Print"],
Cell[371748, 7605, 97, 1, 21, "Print"],
Cell[371848, 7608, 203, 4, 22, "Print"],
Cell[372054, 7614, 202, 4, 22, "Print"],
Cell[372259, 7620, 212, 4, 22, "Print"],
Cell[372474, 7626, 852, 13, 406, "Print"],
Cell[373329, 7641, 99, 1, 21, "Print"],
Cell[373431, 7644, 203, 4, 22, "Print"],
Cell[373637, 7650, 200, 4, 22, "Print"],
Cell[373840, 7656, 212, 4, 22, "Print"],
Cell[374055, 7662, 856, 13, 406, "Print"],
Cell[374914, 7677, 97, 1, 21, "Print"],
Cell[375014, 7680, 201, 4, 22, "Print"],
Cell[375218, 7686, 202, 4, 22, "Print"],
Cell[375423, 7692, 210, 4, 22, "Print"],
Cell[375636, 7698, 852, 13, 406, "Print"],
Cell[376491, 7713, 203, 4, 22, "Print"],
Cell[376697, 7719, 202, 4, 22, "Print"],
Cell[376902, 7725, 211, 4, 22, "Print"],
Cell[377116, 7731, 852, 13, 406, "Print"],
Cell[377971, 7746, 96, 1, 21, "Print"],
Cell[378070, 7749, 203, 4, 22, "Print"],
Cell[378276, 7755, 200, 4, 22, "Print"],
Cell[378479, 7761, 210, 4, 22, "Print"],
Cell[378692, 7767, 852, 13, 406, "Print"],
Cell[379547, 7782, 201, 4, 22, "Print"],
Cell[379751, 7788, 200, 4, 22, "Print"],
Cell[379954, 7794, 210, 4, 22, "Print"],
Cell[380167, 7800, 854, 13, 406, "Print"],
Cell[381024, 7815, 290, 6, 22, "Print"],
Cell[381317, 7823, 274, 6, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[381652, 7836, 671, 12, 169, "Subsection"],
Cell[CellGroupData[{
Cell[382348, 7852, 312, 5, 28, "Input"],
Cell[382663, 7859, 576028, 9878, 447, 87014, 1860, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
