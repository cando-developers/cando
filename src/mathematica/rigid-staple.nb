(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   1141724,      21465]
NotebookOptionsPosition[   1124949,      21004]
NotebookOutlinePosition[   1125364,      21022]
CellTagsIndexPosition[   1125321,      21019]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Generate optimized energy, gradient, and Hessian expressions for molecular \
mechanics.\
\>", "Subtitle",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.402914001047615*^9}],

Cell[BoxData[
 RowBox[{"Directory", "[", "]"}]], "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.402675593015943*^9, 3.40267560234683*^9}, 
   3.402675719919037*^9, 3.402914001047728*^9}],

Cell[BoxData["\<\"/Users/meister/Development/cando/extensions/cando/src/\
mathematica\"\>"], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.61955693636098*^9, 3.619556937398514*^9}, {
   3.702653597250333*^9, 3.702653598698069*^9}, 3.7026542065219917`*^9, {
   3.702664702977771*^9, 3.702664703748498*^9}, 3.702664834741228*^9, 
   3.702664879624086*^9, 3.7028914135672626`*^9, 3.707146188028883*^9, {
   3.7071486731316433`*^9, 3.707148673567717*^9}, 3.7073158859977837`*^9, {
   3.7073192234420033`*^9, 3.707319225376884*^9}, 3.707321581584053*^9, 
   3.707328183017934*^9}],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  "\"\</Users/meister/Development/Cando/extensions/cando/src/mathematica\>\"",
   "]"}]], "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.402675724744155*^9, 3.402675744579932*^9}, {
   3.4026757812426653`*^9, 3.402675795163514*^9}, 3.4029140010477962`*^9, {
   3.404776927640129*^9, 3.4047769282020483`*^9}, {3.485009516098822*^9, 
   3.4850095173434477`*^9}, {3.619556879758088*^9, 3.6195568829874687`*^9}, {
   3.7026648712565193`*^9, 3.702664872815674*^9}, {3.702891394513167*^9, 
   3.702891405664948*^9}}],

Cell[BoxData["\<\"/Users/meister/Development/cando/extensions/cando/src/\
mathematica\"\>"], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.619556936691887*^9, 3.619556937459659*^9}, {
   3.702653597583889*^9, 3.702653598769026*^9}, 3.702654206704248*^9, {
   3.70266470316539*^9, 3.702664703807929*^9}, {3.70266487362453*^9, 
   3.702664879745595*^9}, {3.702891407410686*^9, 3.702891413698247*^9}, 
   3.707146188234374*^9, {3.70714867334893*^9, 3.707148673640728*^9}, 
   3.7073158862151737`*^9, {3.707319223442164*^9, 3.7073192255407877`*^9}, 
   3.707321581672038*^9, 3.7073281831749687`*^9}],

Cell[BoxData[""], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.408659022451297*^9, 3.408659024556794*^9}, 
   3.707319223442264*^9}],

Cell["Setup to generate code that is embeded within CANDO", "Subtitle",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.402914001047846*^9, {3.494842902549116*^9, 3.494842937561069*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<optimizeExpressions`\>\"", "]"}]], "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.4055916304006453`*^9, 3.405591641125656*^9}, 
   3.7073192234423523`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"normquatrot", "[", 
   RowBox[{
   "x_", ",", "y_", ",", "z_", ",", "w_", ",", "tx_", ",", "ty_", ",", 
    "tz_"}], "]"}], ":=", " ", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"1.0", "-", 
       RowBox[{"2.0", "y", "*", "y"}], " ", "-", " ", 
       RowBox[{"2", "*", "z", "*", "z"}]}], 
      RowBox[{
       RowBox[{"2", "*", "x", "*", "y"}], "+", 
       RowBox[{"2", "*", "w", "*", "z"}]}], 
      RowBox[{
       RowBox[{"2", "*", "x", "*", "z"}], "-", 
       RowBox[{"2", "*", "w", "*", "y"}]}], "tx"},
     {
      RowBox[{
       RowBox[{"2", "*", "x", "*", "y"}], "-", 
       RowBox[{"2", "*", "w", "*", "z"}]}], 
      RowBox[{"1", "-", 
       RowBox[{"2", "*", "x", "*", "x"}], "-", 
       RowBox[{"2", "*", "z", "*", "z"}]}], 
      RowBox[{
       RowBox[{"2", "*", "y", "*", "z"}], "+", 
       RowBox[{"2", "*", "w", "*", "x"}]}], "ty"},
     {
      RowBox[{
       RowBox[{"2", "*", "x", "*", "z"}], "+", 
       RowBox[{"2", "*", "w", "*", "y"}]}], 
      RowBox[{
       RowBox[{"2", "*", "y", "*", "z"}], "-", 
       RowBox[{"2", "*", "w", "*", "x"}]}], 
      RowBox[{"1", "-", 
       RowBox[{"2", "*", "x", "*", "x"}], "-", 
       RowBox[{"2", "*", "y", "*", "y"}]}], "tz"},
     {"0", "0", "0", "1"}
    }], ")"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.7026559306461163`*^9, 3.702655936949669*^9}, {
   3.702655974247155*^9, 3.702656251609112*^9}, {3.702664933574308*^9, 
   3.7026649473608*^9}, {3.707316345588458*^9, 3.707316346204455*^9}, {
   3.707316614337761*^9, 3.707316619407611*^9}, {3.707317223581086*^9, 
   3.707317356492518*^9}, {3.707317408070015*^9, 3.707317417275097*^9}, {
   3.7073188250284033`*^9, 3.7073188254494753`*^9}, 3.707319223442404*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quattrans2", "[", 
   RowBox[{
   "w_", ",", "x_", ",", "y_", ",", "z_", ",", "tx_", ",", "ty_", ",", 
    "tz_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{
       RowBox[{"w", "*", "w"}], "+", 
       RowBox[{"x", "*", "x"}], "-", 
       RowBox[{"y", "*", "y"}], "-", 
       RowBox[{"z", "*", "z"}]}], 
      RowBox[{"2", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "w"}], "*", "z"}], "+", 
         RowBox[{"x", "*", "y"}]}], ")"}]}], 
      RowBox[{"2", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "*", "y"}], "+", 
         RowBox[{"x", "*", "z"}]}], ")"}]}], "tx"},
     {
      RowBox[{"2", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "*", "z"}], "+", 
         RowBox[{"x", "*", "y"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"w", "*", "w"}], "-", 
       RowBox[{"x", "*", "x"}], "+", 
       RowBox[{"y", "*", "y"}], "-", 
       RowBox[{"z", "*", "z"}]}], 
      RowBox[{"2", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "w"}], "*", "x"}], "+", 
         RowBox[{"y", "*", "z"}]}], ")"}]}], "ty"},
     {
      RowBox[{"2", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "w"}], "*", "y"}], "+", 
         RowBox[{"x", "*", "z"}]}], ")"}]}], 
      RowBox[{"2", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "*", "x"}], "+", 
         RowBox[{"y", "*", "z"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"w", "*", "w"}], "-", 
       RowBox[{"x", "*", "x"}], "-", 
       RowBox[{"y", "*", "y"}], "+", 
       RowBox[{"z", "*", "z"}]}], "tz"},
     {"0", "0", "0", 
      RowBox[{
       RowBox[{"w", "*", "w"}], "+", 
       RowBox[{"x", "*", "x"}], "+", 
       RowBox[{"y", "*", "y"}], "+", 
       RowBox[{"z", "*", "z"}]}]}
    }], ")"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.707318828728956*^9, 3.707319025342395*^9}, {
   3.70731906992509*^9, 3.707319093297967*^9}, 3.707319223442458*^9, 
   3.707321515867491*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quattrans3", "[", 
   RowBox[{
   "w_", ",", "x_", ",", "y_", ",", "z_", ",", "tx_", ",", "ty_", ",", 
    "tz_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{
       RowBox[{"w", "*", "w"}], "+", 
       RowBox[{"x", "*", "x"}], "-", 
       RowBox[{"y", "*", "y"}], "-", 
       RowBox[{"z", "*", "z"}]}], 
      RowBox[{"2", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "w"}], "*", "z"}], "+", 
         RowBox[{"x", "*", "y"}]}], ")"}]}], 
      RowBox[{"2", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "*", "y"}], "+", 
         RowBox[{"x", "*", "z"}]}], ")"}]}], "tx"},
     {
      RowBox[{"2", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "*", "z"}], "+", 
         RowBox[{"x", "*", "y"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"w", "*", "w"}], "-", 
       RowBox[{"x", "*", "x"}], "+", 
       RowBox[{"y", "*", "y"}], "-", 
       RowBox[{"z", "*", "z"}]}], 
      RowBox[{"2", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "w"}], "*", "x"}], "+", 
         RowBox[{"y", "*", "z"}]}], ")"}]}], "ty"},
     {
      RowBox[{"2", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "w"}], "*", "y"}], "+", 
         RowBox[{"x", "*", "z"}]}], ")"}]}], 
      RowBox[{"2", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "*", "x"}], "+", 
         RowBox[{"y", "*", "z"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"w", "*", "w"}], "-", 
       RowBox[{"x", "*", "x"}], "-", 
       RowBox[{"y", "*", "y"}], "+", 
       RowBox[{"z", "*", "z"}]}], "tz"},
     {"0", "0", "0", "1"}
    }], ")"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.707318828728956*^9, 3.707319025342395*^9}, {
   3.70731906992509*^9, 3.707319093297967*^9}, 3.707319223442458*^9, {
   3.70732151782454*^9, 3.70732152331733*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quattrans", "[", 
   RowBox[{
   "w_", ",", "x_", ",", "y_", ",", "z_", ",", "tx_", ",", "ty_", ",", 
    "tz_"}], "]"}], " ", ":=", " ", 
  RowBox[{"quattrans3", "[", 
   RowBox[{
   "w", ",", "x", ",", "y", ",", "z", ",", "tx", ",", "ty", ",", "tz"}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.707321531298375*^9, 3.707321549348443*^9}, 
   3.707321579664556*^9}],

Cell["Define a quaternion", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.707327039280065*^9, 3.707327047887063*^9}, 
   3.707396304664688*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quat", "[", 
   RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.7073258334304667`*^9, 3.7073258428262863`*^9}, 
   3.707325873304644*^9, 3.707396304664773*^9}],

Cell["Separate out the real/imaginary parts", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.7073270526829348`*^9, 3.707327066098773*^9}, 
   3.707396304664831*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quatreal", "[", "qv_", "]"}], " ", ":=", " ", 
  RowBox[{"qv", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.707325929177794*^9, 3.70732593659586*^9}, 
   3.707396304664885*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quatimaginary", "[", "qv_", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"qv", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"qv", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", 
    RowBox[{"qv", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.707325875864923*^9, 3.707325895953713*^9}, 
   3.707396304664975*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quatmag", "[", "qv_", "]"}], " ", ":=", " ", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"qv", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "*", 
     RowBox[{"qv", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"qv", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "*", 
     RowBox[{"qv", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"qv", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "*", 
     RowBox[{"qv", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"qv", "[", 
      RowBox[{"[", "4", "]"}], "]"}], "*", 
     RowBox[{"qv", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.707387272602722*^9, 3.707387316257218*^9}, 
   3.70739630466506*^9}],

Cell["Rotate a vector using a normalized quaterion", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.707327069787489*^9, 3.707327115208138*^9}, 
   3.707396304665126*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quatvecmul", "[", 
   RowBox[{"qv_", ",", "vec_"}], "]"}], " ", ":=", " ", 
  RowBox[{"vec", "+", 
   FractionBox[
    RowBox[{"2.0", "*", 
     RowBox[{"Cross", "[", 
      RowBox[{
       RowBox[{"quatimaginary", "[", "qv", "]"}], ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cross", "[", 
          RowBox[{
           RowBox[{"quatimaginary", "[", "qv", "]"}], ",", "vec"}], "]"}], 
         "+", 
         RowBox[{
          RowBox[{"quatreal", "[", "qv", "]"}], "*", "vec"}]}], ")"}]}], 
      "]"}]}], 
    RowBox[{
     RowBox[{"quatmag", "[", "qv", "]"}], "*", 
     RowBox[{"quatmag", "[", "qv", "]"}]}]]}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.707325484769562*^9, 3.707325512631147*^9}, {
   3.70732557162777*^9, 3.707325660018751*^9}, {3.707325861010511*^9, 
   3.7073258621721783`*^9}, {3.707325901957428*^9, 3.7073259448049593`*^9}, {
   3.707387867855172*^9, 3.707387917518799*^9}, 3.707396304665197*^9}],

Cell["Test it", "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.7073271226334677`*^9, 3.7073271290316553`*^9}, 
   3.707396304665284*^9}],

Cell[BoxData[
 RowBox[{"quatvecmul", "[", 
  RowBox[{
   RowBox[{"quat", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.707325664813533*^9, 3.707325673082571*^9}, {
   3.707325959947427*^9, 3.7073259628980494`*^9}, {3.707326056782082*^9, 
   3.707326059118705*^9}, 3.707396304665353*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"vx", "+", 
    FractionBox[
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["c", "2"]}], " ", "vx"}], "-", 
        RowBox[{
         SuperscriptBox["d", "2"], " ", "vx"}], "+", 
        RowBox[{"b", " ", "c", " ", "vy"}], "-", 
        RowBox[{"a", " ", "d", " ", "vy"}], "+", 
        RowBox[{"a", " ", "c", " ", "vz"}], "+", 
        RowBox[{"b", " ", "d", " ", "vz"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      SuperscriptBox["b", "2"], "+", 
      SuperscriptBox["c", "2"], "+", 
      SuperscriptBox["d", "2"]}]]}], ",", 
   RowBox[{"vy", "+", 
    FractionBox[
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"b", " ", "c", " ", "vx"}], "+", 
        RowBox[{"a", " ", "d", " ", "vx"}], "-", 
        RowBox[{
         SuperscriptBox["b", "2"], " ", "vy"}], "-", 
        RowBox[{
         SuperscriptBox["d", "2"], " ", "vy"}], "-", 
        RowBox[{"a", " ", "b", " ", "vz"}], "+", 
        RowBox[{"c", " ", "d", " ", "vz"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      SuperscriptBox["b", "2"], "+", 
      SuperscriptBox["c", "2"], "+", 
      SuperscriptBox["d", "2"]}]]}], ",", 
   RowBox[{"vz", "+", 
    FractionBox[
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "a"}], " ", "c", " ", "vx"}], "+", 
        RowBox[{"b", " ", "d", " ", "vx"}], "+", 
        RowBox[{"a", " ", "b", " ", "vy"}], "+", 
        RowBox[{"c", " ", "d", " ", "vy"}], "-", 
        RowBox[{
         SuperscriptBox["b", "2"], " ", "vz"}], "-", 
        RowBox[{
         SuperscriptBox["c", "2"], " ", "vz"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      SuperscriptBox["b", "2"], "+", 
      SuperscriptBox["c", "2"], "+", 
      SuperscriptBox["d", "2"]}]]}]}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.707325673921789*^9, 3.70732569156009*^9}, 
   3.707325965025496*^9, 3.707326059916394*^9, 3.7073281875315866`*^9, 
   3.707330052582502*^9, 3.7073302546418943`*^9, 3.707330785393223*^9, 
   3.7073409140498333`*^9, 3.707342546071598*^9, {3.707387922937346*^9, 
   3.707387936288293*^9}, 3.707396304665423*^9}],

Cell["Translate the rotated vector", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.707327140804366*^9, 3.707327164063925*^9}, 
   3.7073963318662233`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quatmultrans", "[", 
   RowBox[{"qv_", ",", "trans_", ",", "vec_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"quatvecmul", "[", 
    RowBox[{"qv", ",", "vec"}], "]"}], "+", "trans"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.707325794146092*^9, 3.7073258226252413`*^9}, {
   3.7073259701522207`*^9, 3.7073259892474546`*^9}, 3.707396331866314*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Staple rigid-body energy term using quat.v multiplication (method 2)\n",
 StyleBox["https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation#\
Quaternion_rotation_operations", "Subsection"]
}], "Title",
 CellChangeTimes->{{3.702666046819551*^9, 3.702666055636635*^9}, 
   3.702667845434409*^9, {3.70714599637531*^9, 3.7071459981568117`*^9}, {
   3.7073257315122843`*^9, 3.707325766432733*^9}, {3.7073962406897078`*^9, 
   3.707396248245058*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "x", ",", "y", ",", "z"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7026651212890797`*^9, 3.702665129345278*^9}, {
  3.707325687026393*^9, 3.707325689454796*^9}}],

Cell[CellGroupData[{

Cell["\<\
pk is a point in the k rigid body frame and pl is a point in the l rigid body \
frame\
\>", "Subsection",
 CellChangeTimes->{{3.707327169845408*^9, 3.7073272022779293`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pk", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{"pxk", ",", " ", "pyk", ",", " ", "pzk"}], " ", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pl", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{"pxl", ",", "pyl", ",", "pzl"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.702665060868902*^9, 3.702665086478999*^9}, {
  3.7026651779582376`*^9, 3.702665179746352*^9}, {3.702894426628853*^9, 
  3.702894442471896*^9}, {3.707326736723104*^9, 3.707326768555338*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
plabk is pk transformed into the laboratory frame by a quaterion rotation and \
translation - likewise plabl\
\>", "Subsection",
 CellChangeTimes->{{3.707327213355171*^9, 3.7073272479256897`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plabk", " ", "=", " ", 
  RowBox[{"quatmultrans", "[", 
   RowBox[{
    RowBox[{"quat", "[", 
     RowBox[{"ak", ",", "bk", ",", "ck", ",", "dk"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"xk", ",", "yk", ",", "zk"}], "}"}], ",", "pk"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.70732669110369*^9, 3.70732673212495*^9}, {
  3.707326780845725*^9, 3.707326802825379*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pxk", "+", 
    FractionBox[
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["ck", "2"]}], " ", "pxk"}], "-", 
        RowBox[{
         SuperscriptBox["dk", "2"], " ", "pxk"}], "+", 
        RowBox[{"bk", " ", "ck", " ", "pyk"}], "-", 
        RowBox[{"ak", " ", "dk", " ", "pyk"}], "+", 
        RowBox[{"ak", " ", "ck", " ", "pzk"}], "+", 
        RowBox[{"bk", " ", "dk", " ", "pzk"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["ak", "2"], "+", 
      SuperscriptBox["bk", "2"], "+", 
      SuperscriptBox["ck", "2"], "+", 
      SuperscriptBox["dk", "2"]}]], "+", "xk"}], ",", 
   RowBox[{"pyk", "+", 
    FractionBox[
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bk", " ", "ck", " ", "pxk"}], "+", 
        RowBox[{"ak", " ", "dk", " ", "pxk"}], "-", 
        RowBox[{
         SuperscriptBox["bk", "2"], " ", "pyk"}], "-", 
        RowBox[{
         SuperscriptBox["dk", "2"], " ", "pyk"}], "-", 
        RowBox[{"ak", " ", "bk", " ", "pzk"}], "+", 
        RowBox[{"ck", " ", "dk", " ", "pzk"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["ak", "2"], "+", 
      SuperscriptBox["bk", "2"], "+", 
      SuperscriptBox["ck", "2"], "+", 
      SuperscriptBox["dk", "2"]}]], "+", "yk"}], ",", 
   RowBox[{"pzk", "+", 
    FractionBox[
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "ak"}], " ", "ck", " ", "pxk"}], "+", 
        RowBox[{"bk", " ", "dk", " ", "pxk"}], "+", 
        RowBox[{"ak", " ", "bk", " ", "pyk"}], "+", 
        RowBox[{"ck", " ", "dk", " ", "pyk"}], "-", 
        RowBox[{
         SuperscriptBox["bk", "2"], " ", "pzk"}], "-", 
        RowBox[{
         SuperscriptBox["ck", "2"], " ", "pzk"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["ak", "2"], "+", 
      SuperscriptBox["bk", "2"], "+", 
      SuperscriptBox["ck", "2"], "+", 
      SuperscriptBox["dk", "2"]}]], "+", "zk"}]}], "}"}]], "Output",
 CellChangeTimes->{3.707326808622157*^9, 3.7073281878004704`*^9, 
  3.707330052847004*^9, 3.707330254898486*^9, 3.707330785626254*^9, 
  3.70734091428337*^9, 3.707342546314838*^9, 3.707387936453989*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plabl", " ", "=", " ", 
  RowBox[{"quatmultrans", "[", 
   RowBox[{
    RowBox[{"quat", "[", 
     RowBox[{"al", ",", "bl", ",", "cl", ",", "dl"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"xl", ",", "yl", ",", "zl"}], "}"}], ",", "pl"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.707326815559874*^9, 3.707326843095194*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pxl", "+", 
    FractionBox[
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["cl", "2"]}], " ", "pxl"}], "-", 
        RowBox[{
         SuperscriptBox["dl", "2"], " ", "pxl"}], "+", 
        RowBox[{"bl", " ", "cl", " ", "pyl"}], "-", 
        RowBox[{"al", " ", "dl", " ", "pyl"}], "+", 
        RowBox[{"al", " ", "cl", " ", "pzl"}], "+", 
        RowBox[{"bl", " ", "dl", " ", "pzl"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["al", "2"], "+", 
      SuperscriptBox["bl", "2"], "+", 
      SuperscriptBox["cl", "2"], "+", 
      SuperscriptBox["dl", "2"]}]], "+", "xl"}], ",", 
   RowBox[{"pyl", "+", 
    FractionBox[
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bl", " ", "cl", " ", "pxl"}], "+", 
        RowBox[{"al", " ", "dl", " ", "pxl"}], "-", 
        RowBox[{
         SuperscriptBox["bl", "2"], " ", "pyl"}], "-", 
        RowBox[{
         SuperscriptBox["dl", "2"], " ", "pyl"}], "-", 
        RowBox[{"al", " ", "bl", " ", "pzl"}], "+", 
        RowBox[{"cl", " ", "dl", " ", "pzl"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["al", "2"], "+", 
      SuperscriptBox["bl", "2"], "+", 
      SuperscriptBox["cl", "2"], "+", 
      SuperscriptBox["dl", "2"]}]], "+", "yl"}], ",", 
   RowBox[{"pzl", "+", 
    FractionBox[
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "al"}], " ", "cl", " ", "pxl"}], "+", 
        RowBox[{"bl", " ", "dl", " ", "pxl"}], "+", 
        RowBox[{"al", " ", "bl", " ", "pyl"}], "+", 
        RowBox[{"cl", " ", "dl", " ", "pyl"}], "-", 
        RowBox[{
         SuperscriptBox["bl", "2"], " ", "pzl"}], "-", 
        RowBox[{
         SuperscriptBox["cl", "2"], " ", "pzl"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["al", "2"], "+", 
      SuperscriptBox["bl", "2"], "+", 
      SuperscriptBox["cl", "2"], "+", 
      SuperscriptBox["dl", "2"]}]], "+", "zl"}]}], "}"}]], "Output",
 CellChangeTimes->{3.707326844923424*^9, 3.7073281879058323`*^9, 
  3.707330052948473*^9, 3.707330254995385*^9, 3.7073307857275553`*^9, 
  3.707340914384429*^9, 3.707342546415552*^9, 3.707387936529771*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Calculate the deviation of the distance between the laboratory frame points \
and the ideal distance r0\
\>", "Subsection",
 CellChangeTimes->{{3.7073272525319223`*^9, 3.707327273806452*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stapleDeviation", " ", "=", " ", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"plabk", "-", "plabl"}], ")"}], ".", 
     RowBox[{"(", 
      RowBox[{"plabk", "-", "plabl"}], ")"}]}], "]"}], " ", "-", " ", 
   "r0"}]}]], "Input",
 CellChangeTimes->{{3.702656391772649*^9, 3.702656402865533*^9}, {
   3.702656445922453*^9, 3.702656481969098*^9}, {3.702656575339932*^9, 
   3.702656580193851*^9}, {3.7026566262200747`*^9, 3.7026566412428913`*^9}, {
   3.702656688525708*^9, 3.7026566889291763`*^9}, {3.702656722909153*^9, 
   3.702656755199275*^9}, {3.70266498573925*^9, 3.7026650398317747`*^9}, {
   3.702665095542657*^9, 3.702665109997888*^9}, {3.702665220867923*^9, 
   3.702665226216156*^9}, {3.70266561581205*^9, 3.702665616016284*^9}, 
   3.702667879269751*^9, {3.707147213299781*^9, 3.7071472325537977`*^9}, {
   3.707326643575992*^9, 3.7073266825179873`*^9}, {3.70732686194716*^9, 
   3.707326876600816*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "r0"}], "+", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"pxk", "-", "pxl", "+", 
        FractionBox[
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["ck", "2"]}], " ", "pxk"}], "-", 
            RowBox[{
             SuperscriptBox["dk", "2"], " ", "pxk"}], "+", 
            RowBox[{"bk", " ", "ck", " ", "pyk"}], "-", 
            RowBox[{"ak", " ", "dk", " ", "pyk"}], "+", 
            RowBox[{"ak", " ", "ck", " ", "pzk"}], "+", 
            RowBox[{"bk", " ", "dk", " ", "pzk"}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["ak", "2"], "+", 
          SuperscriptBox["bk", "2"], "+", 
          SuperscriptBox["ck", "2"], "+", 
          SuperscriptBox["dk", "2"]}]], "-", 
        FractionBox[
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["cl", "2"]}], " ", "pxl"}], "-", 
            RowBox[{
             SuperscriptBox["dl", "2"], " ", "pxl"}], "+", 
            RowBox[{"bl", " ", "cl", " ", "pyl"}], "-", 
            RowBox[{"al", " ", "dl", " ", "pyl"}], "+", 
            RowBox[{"al", " ", "cl", " ", "pzl"}], "+", 
            RowBox[{"bl", " ", "dl", " ", "pzl"}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["al", "2"], "+", 
          SuperscriptBox["bl", "2"], "+", 
          SuperscriptBox["cl", "2"], "+", 
          SuperscriptBox["dl", "2"]}]], "+", "xk", "-", "xl"}], ")"}], "2"], 
     "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"pyk", "-", "pyl", "+", 
        FractionBox[
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"bk", " ", "ck", " ", "pxk"}], "+", 
            RowBox[{"ak", " ", "dk", " ", "pxk"}], "-", 
            RowBox[{
             SuperscriptBox["bk", "2"], " ", "pyk"}], "-", 
            RowBox[{
             SuperscriptBox["dk", "2"], " ", "pyk"}], "-", 
            RowBox[{"ak", " ", "bk", " ", "pzk"}], "+", 
            RowBox[{"ck", " ", "dk", " ", "pzk"}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["ak", "2"], "+", 
          SuperscriptBox["bk", "2"], "+", 
          SuperscriptBox["ck", "2"], "+", 
          SuperscriptBox["dk", "2"]}]], "-", 
        FractionBox[
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"bl", " ", "cl", " ", "pxl"}], "+", 
            RowBox[{"al", " ", "dl", " ", "pxl"}], "-", 
            RowBox[{
             SuperscriptBox["bl", "2"], " ", "pyl"}], "-", 
            RowBox[{
             SuperscriptBox["dl", "2"], " ", "pyl"}], "-", 
            RowBox[{"al", " ", "bl", " ", "pzl"}], "+", 
            RowBox[{"cl", " ", "dl", " ", "pzl"}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["al", "2"], "+", 
          SuperscriptBox["bl", "2"], "+", 
          SuperscriptBox["cl", "2"], "+", 
          SuperscriptBox["dl", "2"]}]], "+", "yk", "-", "yl"}], ")"}], "2"], 
     "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"pzk", "+", 
        FractionBox[
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "ak"}], " ", "ck", " ", "pxk"}], "+", 
            RowBox[{"bk", " ", "dk", " ", "pxk"}], "+", 
            RowBox[{"ak", " ", "bk", " ", "pyk"}], "+", 
            RowBox[{"ck", " ", "dk", " ", "pyk"}], "-", 
            RowBox[{
             SuperscriptBox["bk", "2"], " ", "pzk"}], "-", 
            RowBox[{
             SuperscriptBox["ck", "2"], " ", "pzk"}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["ak", "2"], "+", 
          SuperscriptBox["bk", "2"], "+", 
          SuperscriptBox["ck", "2"], "+", 
          SuperscriptBox["dk", "2"]}]], "-", "pzl", "-", 
        FractionBox[
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "al"}], " ", "cl", " ", "pxl"}], "+", 
            RowBox[{"bl", " ", "dl", " ", "pxl"}], "+", 
            RowBox[{"al", " ", "bl", " ", "pyl"}], "+", 
            RowBox[{"cl", " ", "dl", " ", "pyl"}], "-", 
            RowBox[{
             SuperscriptBox["bl", "2"], " ", "pzl"}], "-", 
            RowBox[{
             SuperscriptBox["cl", "2"], " ", "pzl"}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["al", "2"], "+", 
          SuperscriptBox["bl", "2"], "+", 
          SuperscriptBox["cl", "2"], "+", 
          SuperscriptBox["dl", "2"]}]], "+", "zk", "-", "zl"}], ")"}], "2"]}],
     ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.702666638428665*^9, 3.702667221416298*^9, 3.7026679109089527`*^9, 
   3.7028896831298027`*^9, 3.702889961892424*^9, 3.702891183065309*^9, 
   3.702891414230192*^9, {3.702894455042652*^9, 3.702894481075836*^9}, 
   3.7071472330454693`*^9, 3.707147520291965*^9, 3.707148768532933*^9, 
   3.707319234026957*^9, 3.70731935216481*^9, 3.707321553072797*^9, 
   3.707321584222384*^9, 3.707326880602765*^9, 3.707328188027643*^9, 
   3.707330053045741*^9, 3.707330255111945*^9, 3.707330785841092*^9, 
   3.707340914490781*^9, 3.707342546639689*^9, 3.707387936697349*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Define a parabolic potential for the deviation using the force constant ks\
\>", "Subsection",
 CellChangeTimes->{{3.7073272805055857`*^9, 3.7073273039962463`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stapleEnergyFn", " ", "=", " ", 
  RowBox[{"ks", " ", 
   RowBox[{
    RowBox[{"(", "stapleDeviation", ")"}], "^", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.7071472732910233`*^9, 3.707147291106224*^9}}],

Cell[BoxData[
 RowBox[{"ks", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "r0"}], "+", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"pxk", "-", "pxl", "+", 
           FractionBox[
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["ck", "2"]}], " ", "pxk"}], "-", 
               RowBox[{
                SuperscriptBox["dk", "2"], " ", "pxk"}], "+", 
               RowBox[{"bk", " ", "ck", " ", "pyk"}], "-", 
               RowBox[{"ak", " ", "dk", " ", "pyk"}], "+", 
               RowBox[{"ak", " ", "ck", " ", "pzk"}], "+", 
               RowBox[{"bk", " ", "dk", " ", "pzk"}]}], ")"}]}], 
            RowBox[{
             SuperscriptBox["ak", "2"], "+", 
             SuperscriptBox["bk", "2"], "+", 
             SuperscriptBox["ck", "2"], "+", 
             SuperscriptBox["dk", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["cl", "2"]}], " ", "pxl"}], "-", 
               RowBox[{
                SuperscriptBox["dl", "2"], " ", "pxl"}], "+", 
               RowBox[{"bl", " ", "cl", " ", "pyl"}], "-", 
               RowBox[{"al", " ", "dl", " ", "pyl"}], "+", 
               RowBox[{"al", " ", "cl", " ", "pzl"}], "+", 
               RowBox[{"bl", " ", "dl", " ", "pzl"}]}], ")"}]}], 
            RowBox[{
             SuperscriptBox["al", "2"], "+", 
             SuperscriptBox["bl", "2"], "+", 
             SuperscriptBox["cl", "2"], "+", 
             SuperscriptBox["dl", "2"]}]], "+", "xk", "-", "xl"}], ")"}], 
         "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"pyk", "-", "pyl", "+", 
           FractionBox[
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"bk", " ", "ck", " ", "pxk"}], "+", 
               RowBox[{"ak", " ", "dk", " ", "pxk"}], "-", 
               RowBox[{
                SuperscriptBox["bk", "2"], " ", "pyk"}], "-", 
               RowBox[{
                SuperscriptBox["dk", "2"], " ", "pyk"}], "-", 
               RowBox[{"ak", " ", "bk", " ", "pzk"}], "+", 
               RowBox[{"ck", " ", "dk", " ", "pzk"}]}], ")"}]}], 
            RowBox[{
             SuperscriptBox["ak", "2"], "+", 
             SuperscriptBox["bk", "2"], "+", 
             SuperscriptBox["ck", "2"], "+", 
             SuperscriptBox["dk", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"bl", " ", "cl", " ", "pxl"}], "+", 
               RowBox[{"al", " ", "dl", " ", "pxl"}], "-", 
               RowBox[{
                SuperscriptBox["bl", "2"], " ", "pyl"}], "-", 
               RowBox[{
                SuperscriptBox["dl", "2"], " ", "pyl"}], "-", 
               RowBox[{"al", " ", "bl", " ", "pzl"}], "+", 
               RowBox[{"cl", " ", "dl", " ", "pzl"}]}], ")"}]}], 
            RowBox[{
             SuperscriptBox["al", "2"], "+", 
             SuperscriptBox["bl", "2"], "+", 
             SuperscriptBox["cl", "2"], "+", 
             SuperscriptBox["dl", "2"]}]], "+", "yk", "-", "yl"}], ")"}], 
         "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"pzk", "+", 
           FractionBox[
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "ak"}], " ", "ck", " ", "pxk"}], "+", 
               RowBox[{"bk", " ", "dk", " ", "pxk"}], "+", 
               RowBox[{"ak", " ", "bk", " ", "pyk"}], "+", 
               RowBox[{"ck", " ", "dk", " ", "pyk"}], "-", 
               RowBox[{
                SuperscriptBox["bk", "2"], " ", "pzk"}], "-", 
               RowBox[{
                SuperscriptBox["ck", "2"], " ", "pzk"}]}], ")"}]}], 
            RowBox[{
             SuperscriptBox["ak", "2"], "+", 
             SuperscriptBox["bk", "2"], "+", 
             SuperscriptBox["ck", "2"], "+", 
             SuperscriptBox["dk", "2"]}]], "-", "pzl", "-", 
           FractionBox[
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "al"}], " ", "cl", " ", "pxl"}], "+", 
               RowBox[{"bl", " ", "dl", " ", "pxl"}], "+", 
               RowBox[{"al", " ", "bl", " ", "pyl"}], "+", 
               RowBox[{"cl", " ", "dl", " ", "pyl"}], "-", 
               RowBox[{
                SuperscriptBox["bl", "2"], " ", "pzl"}], "-", 
               RowBox[{
                SuperscriptBox["cl", "2"], " ", "pzl"}]}], ")"}]}], 
            RowBox[{
             SuperscriptBox["al", "2"], "+", 
             SuperscriptBox["bl", "2"], "+", 
             SuperscriptBox["cl", "2"], "+", 
             SuperscriptBox["dl", "2"]}]], "+", "zk", "-", "zl"}], ")"}], 
         "2"]}], ")"}]}]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{3.707147353760356*^9, 3.707147520369309*^9, 
  3.707148768607133*^9, 3.707319234081216*^9, 3.707319352232204*^9, 
  3.707321553139043*^9, 3.707321584289681*^9, 3.70732688820798*^9, 
  3.707328188139761*^9, 3.707329471341351*^9, 3.707330053146866*^9, 
  3.7073302552125673`*^9, 3.7073307859565897`*^9, 3.707340914589547*^9, 
  3.7073425467404757`*^9, 3.707387936779202*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"stapleVarNames", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ak", ",", "a", ",", "I1", ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"bk", ",", "b", ",", "I1", ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"ck", ",", "c", ",", "I1", ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"dk", ",", "d", ",", "I1", ",", "3"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xk", ",", "x", ",", "I1", ",", "4"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"yk", ",", "y", ",", "I1", ",", "5"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"zk", ",", "z", ",", "I1", ",", "6"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"al", ",", "a", ",", "I2", ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"bl", ",", "b", ",", "I2", ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"cl", ",", "c", ",", "I2", ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"dl", ",", "d", ",", "I2", ",", "3"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xl", ",", "x", ",", "I2", ",", "4"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"yl", ",", "y", ",", "I2", ",", "5"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"zl", ",", "z", ",", "I2", ",", "6"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.702665250051643*^9, 3.7026653039744596`*^9}, {
   3.702665895595372*^9, 3.7026660256467524`*^9}, 3.70266610473518*^9, 
   3.7026678793568573`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stapleSetupRules", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", 
    RowBox[{"CCode", "[", "\"\<STAPLE_SET_PARAMETER(ks,ks);\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", 
    RowBox[{"CCode", "[", "\"\<STAPLE_SET_PARAMETER(r0,r0);\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", 
    RowBox[{
    "CCode", "[", "\"\<STAPLE_SET_PARAMETER(I1,rigidBodyK);\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", 
    RowBox[{
    "CCode", "[", "\"\<STAPLE_SET_PARAMETER(I2,rigidBodyL);\>\"", "]"}]}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.702665307282709*^9, 3.7026653539621363`*^9}, {
  3.702666545008964*^9, 3.702666558545693*^9}, {3.702667865268785*^9, 
  3.702667879587242*^9}, {3.702889157006177*^9, 3.702889164364553*^9}, {
  3.706924887140312*^9, 3.7069248986928453`*^9}, {3.707330777243126*^9, 
  3.707330779507679*^9}, {3.707342521424604*^9, 3.7073425407717876`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "stapleVarNames", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"str", " ", "=", " ", 
      RowBox[{"\"\<STAPLE_SET_POSITION(\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"stapleVarNames", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"stapleVarNames", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"stapleVarNames", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], "]"}], "<>", "\"\<);\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "str", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"stapleSetupRules", ",", 
       RowBox[{"CCode", "[", "str", "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7026653697729197`*^9, 3.702665399017919*^9}, {
  3.702667865332658*^9, 3.70266787995826*^9}, {3.702889668272381*^9, 
  3.7028896775365877`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<STAPLE_SET_POINT(pxk,pointK,getX());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<STAPLE_SET_POINT(pyk,pointK,getY());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<STAPLE_SET_POINT(pzk,pointK,getZ());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<STAPLE_SET_POINT(pxl,pointL,getX());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<STAPLE_SET_POINT(pyl,pointL,getY());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<STAPLE_SET_POINT(pzl,pointL,getZ());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.702889717438642*^9, 3.702889744132216*^9}, {
  3.702889799017868*^9, 3.702889838930481*^9}, {3.7028898927791853`*^9, 
  3.702889938491302*^9}, {3.702894463739758*^9, 3.702894468534267*^9}, {
  3.7069249208588142`*^9, 3.706924965222961*^9}, {3.707327569341755*^9, 
  3.707327603424741*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stapleSetupRules", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.702665439946115*^9, 3.702665444877211*^9}, 
   3.702667880041853*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_PARAMETER(ks,ks);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_PARAMETER(r0,r0);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"STAPLE_SET_PARAMETER(I1,rigidBodyK);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"STAPLE_SET_PARAMETER(I2,rigidBodyL);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(ak,I1,0);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(bk,I1,1);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(ck,I1,2);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(dk,I1,3);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(xk,I1,4);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(yk,I1,5);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(zk,I1,6);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(al,I2,0);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(bl,I2,1);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(cl,I2,2);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(dl,I2,3);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(xl,I2,4);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(yl,I2,5);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"STAPLE_SET_POSITION(zl,I2,6);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"STAPLE_SET_POINT(pxk,pointK,getX());\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"STAPLE_SET_POINT(pyk,pointK,getY());\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"STAPLE_SET_POINT(pzk,pointK,getZ());\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"STAPLE_SET_POINT(pxl,pointL,getX());\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"STAPLE_SET_POINT(pyl,pointL,getY());\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"STAPLE_SET_POINT(pzl,pointL,getZ());\"\>", "]"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.702667911181444*^9, 3.702889683448352*^9, 3.702889962257967*^9, 
   3.702891183373643*^9, 3.702891414545534*^9, {3.702894455342057*^9, 
   3.702894481407825*^9}, 3.707147394958623*^9, 3.707147520607356*^9, 
   3.707148768847888*^9, 3.707319234277985*^9, 3.7073193524251328`*^9, 
   3.707321553334177*^9, 3.7073215844839907`*^9, 3.7073281889594717`*^9, 
   3.707329471753852*^9, 3.707330053548213*^9, 3.70733025549349*^9, 
   3.7073307862997704`*^9, 3.707340914986191*^9, 3.70734254710538*^9, 
   3.707387937020323*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stapleEnergyRules", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stapleOutputs", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleEnergyRules", ",", 
    RowBox[{"Assign", "[", 
     RowBox[{"Energy", ",", "stapleEnergyFn"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleEnergyRules", ",", 
    RowBox[{"EnergyAccumulate", "[", 
     RowBox[{"\"\<STAPLE\>\"", ",", "Energy"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"stapleOutputs", ",", "Energy"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7026655052521257`*^9, 3.7026655279230843`*^9}, 
   3.702665559899187*^9, 3.7026669034970493`*^9, {3.7026678801394444`*^9, 
   3.702667880549102*^9}, {3.702894354420628*^9, 3.702894355431469*^9}}],

Cell[CellGroupData[{

Cell[BoxData["stapleEnergyRules"], "Input",
 CellChangeTimes->{{3.707329478903056*^9, 3.7073294824514437`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ks", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "r0"}], "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"pxk", "-", "pxl", "+", 
              FractionBox[
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    SuperscriptBox["ck", "2"]}], " ", "pxk"}], "-", 
                  RowBox[{
                   SuperscriptBox["dk", "2"], " ", "pxk"}], "+", 
                  RowBox[{"bk", " ", "ck", " ", "pyk"}], "-", 
                  RowBox[{"ak", " ", "dk", " ", "pyk"}], "+", 
                  RowBox[{"ak", " ", "ck", " ", "pzk"}], "+", 
                  RowBox[{"bk", " ", "dk", " ", "pzk"}]}], ")"}]}], 
               RowBox[{
                SuperscriptBox["ak", "2"], "+", 
                SuperscriptBox["bk", "2"], "+", 
                SuperscriptBox["ck", "2"], "+", 
                SuperscriptBox["dk", "2"]}]], "-", 
              FractionBox[
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    SuperscriptBox["cl", "2"]}], " ", "pxl"}], "-", 
                  RowBox[{
                   SuperscriptBox["dl", "2"], " ", "pxl"}], "+", 
                  RowBox[{"bl", " ", "cl", " ", "pyl"}], "-", 
                  RowBox[{"al", " ", "dl", " ", "pyl"}], "+", 
                  RowBox[{"al", " ", "cl", " ", "pzl"}], "+", 
                  RowBox[{"bl", " ", "dl", " ", "pzl"}]}], ")"}]}], 
               RowBox[{
                SuperscriptBox["al", "2"], "+", 
                SuperscriptBox["bl", "2"], "+", 
                SuperscriptBox["cl", "2"], "+", 
                SuperscriptBox["dl", "2"]}]], "+", "xk", "-", "xl"}], ")"}], 
            "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"pyk", "-", "pyl", "+", 
              FractionBox[
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"bk", " ", "ck", " ", "pxk"}], "+", 
                  RowBox[{"ak", " ", "dk", " ", "pxk"}], "-", 
                  RowBox[{
                   SuperscriptBox["bk", "2"], " ", "pyk"}], "-", 
                  RowBox[{
                   SuperscriptBox["dk", "2"], " ", "pyk"}], "-", 
                  RowBox[{"ak", " ", "bk", " ", "pzk"}], "+", 
                  RowBox[{"ck", " ", "dk", " ", "pzk"}]}], ")"}]}], 
               RowBox[{
                SuperscriptBox["ak", "2"], "+", 
                SuperscriptBox["bk", "2"], "+", 
                SuperscriptBox["ck", "2"], "+", 
                SuperscriptBox["dk", "2"]}]], "-", 
              FractionBox[
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"bl", " ", "cl", " ", "pxl"}], "+", 
                  RowBox[{"al", " ", "dl", " ", "pxl"}], "-", 
                  RowBox[{
                   SuperscriptBox["bl", "2"], " ", "pyl"}], "-", 
                  RowBox[{
                   SuperscriptBox["dl", "2"], " ", "pyl"}], "-", 
                  RowBox[{"al", " ", "bl", " ", "pzl"}], "+", 
                  RowBox[{"cl", " ", "dl", " ", "pzl"}]}], ")"}]}], 
               RowBox[{
                SuperscriptBox["al", "2"], "+", 
                SuperscriptBox["bl", "2"], "+", 
                SuperscriptBox["cl", "2"], "+", 
                SuperscriptBox["dl", "2"]}]], "+", "yk", "-", "yl"}], ")"}], 
            "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"pzk", "+", 
              FractionBox[
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "ak"}], " ", "ck", " ", "pxk"}], "+", 
                  RowBox[{"bk", " ", "dk", " ", "pxk"}], "+", 
                  RowBox[{"ak", " ", "bk", " ", "pyk"}], "+", 
                  RowBox[{"ck", " ", "dk", " ", "pyk"}], "-", 
                  RowBox[{
                   SuperscriptBox["bk", "2"], " ", "pzk"}], "-", 
                  RowBox[{
                   SuperscriptBox["ck", "2"], " ", "pzk"}]}], ")"}]}], 
               RowBox[{
                SuperscriptBox["ak", "2"], "+", 
                SuperscriptBox["bk", "2"], "+", 
                SuperscriptBox["ck", "2"], "+", 
                SuperscriptBox["dk", "2"]}]], "-", "pzl", "-", 
              FractionBox[
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "al"}], " ", "cl", " ", "pxl"}], "+", 
                  RowBox[{"bl", " ", "dl", " ", "pxl"}], "+", 
                  RowBox[{"al", " ", "bl", " ", "pyl"}], "+", 
                  RowBox[{"cl", " ", "dl", " ", "pyl"}], "-", 
                  RowBox[{
                   SuperscriptBox["bl", "2"], " ", "pzl"}], "-", 
                  RowBox[{
                   SuperscriptBox["cl", "2"], " ", "pzl"}]}], ")"}]}], 
               RowBox[{
                SuperscriptBox["al", "2"], "+", 
                SuperscriptBox["bl", "2"], "+", 
                SuperscriptBox["cl", "2"], "+", 
                SuperscriptBox["dl", "2"]}]], "+", "zk", "-", "zl"}], ")"}], 
            "2"]}], ")"}]}]}], ")"}], "2"]}], "\[Rule]", "Energy"}], ",", 
   RowBox[{"CCode", "[", "\<\"STAPLE_ENERGY_ACCUMULATE(Energy);\"\>", "]"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.7073294830677357`*^9, 3.7073300537105837`*^9, 
  3.707330255656562*^9, 3.70733078645054*^9, 3.707340915124569*^9, 
  3.707342547248365*^9, 3.707387937204125*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Append the Gradient rules", "Subtitle",
 CellChangeTimes->{{3.702665585411888*^9, 3.7026655955445013`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"stapleForceRules", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7026663167169523`*^9, 3.702666324249215*^9}, 
   3.702667880730946*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AppendGradientAndForce", "[", 
   RowBox[{
   "\"\<STAPLE\>\"", ",", "stapleEnergyRules", ",", "stapleOutputs", ",", 
    "stapleEnergyFn", ",", "stapleVarNames"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.702665662227541*^9, 3.702665675042551*^9}, {
  3.702665719248609*^9, 3.702665779138154*^9}, {3.702667866125484*^9, 
  3.702667880997301*^9}}],

Cell[CellGroupData[{

Cell[BoxData["stapleOutputs"], "Input",
 CellChangeTimes->{{3.702665807907201*^9, 3.7026658098882017`*^9}, 
   3.702667881086121*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Energy", ",", "fak", ",", "fbk", ",", "fck", ",", "fdk", ",", "fxk", ",", 
   "fyk", ",", "fzk", ",", "fal", ",", "fbl", ",", "fcl", ",", "fdl", ",", 
   "fxl", ",", "fyl", ",", "fzl"}], "}"}]], "Output",
 CellChangeTimes->{
  3.702666639803829*^9, 3.702667223135886*^9, 3.70266791275457*^9, 
   3.702889684791482*^9, 3.7028899663778057`*^9, 3.7028911847000313`*^9, 
   3.7028914164493027`*^9, 3.7028943752038813`*^9, {3.7028944569410877`*^9, 
   3.7028944826912527`*^9}, 3.707147466845923*^9, 3.7071475240002813`*^9, 
   3.70714877231773*^9, 3.7073192359965982`*^9, 3.7073193537250013`*^9, 
   3.707321554767601*^9, 3.707321585784123*^9, 3.707328195488121*^9, 
   3.707329556615788*^9, 3.707330055525983*^9, 3.7073302574896507`*^9, 
   3.707330788321457*^9, 3.707340916906212*^9, 3.70734254900486*^9, 
   3.707387938652789*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Collect terms and convert to C code", "Subsection",
 CellChangeTimes->{{3.401714376596349*^9, 3.401714390085981*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"stapleAllRules", " ", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "stapleSetupRules", ",", "\[IndentingNewLine]", "stapleEnergyRules"}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.410177622861577*^9, 3.410177650326877*^9}, {
   3.410957497343137*^9, 3.410957525179797*^9}, 3.410958727655569*^9, {
   3.702666212925044*^9, 3.70266621369392*^9}, 3.702666368288919*^9, {
   3.702667881180406*^9, 3.702667881299728*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"stapleRules", " ", "=", " ", 
   RowBox[{"Flatten", "[", "stapleAllRules", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4109587363528433`*^9, 3.410958744314476*^9}, {
  3.702666213960264*^9, 3.7026662163072977`*^9}, {3.7026678814059973`*^9, 
  3.702667881458247*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stapleRules", "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.411210896309596*^9, 3.411210898002816*^9}, 
   3.702666216845126*^9, 3.702667881574181*^9, {3.707329839330907*^9, 
   3.7073298483731422`*^9}}],

Cell[BoxData[
 RowBox[{"CCode", "[", "\<\"STAPLE_SET_PARAMETER(I2,rigidBodyL);\"\>", 
  "]"}]], "Output",
 CellChangeTimes->{
  3.70266791289823*^9, 3.7028896849821453`*^9, 3.7028899672865753`*^9, 
   3.702891184871729*^9, 3.702891416585243*^9, 3.702894375334017*^9, {
   3.7028944571236*^9, 3.702894482815072*^9}, 3.7071474766614103`*^9, 
   3.707147524804441*^9, 3.70714877253653*^9, 3.707319236171826*^9, 
   3.707319353859886*^9, 3.7073215548937693`*^9, 3.7073215859362373`*^9, 
   3.707328195869495*^9, 3.7073295568835382`*^9, {3.707329841337697*^9, 
   3.7073298488823347`*^9}, 3.707330055763028*^9, 3.707330257790016*^9, 
   3.7073307885318613`*^9, 3.707340917418907*^9, 3.7073425492216997`*^9, 
   3.707387938819627*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"stapleInput", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{
    "ak", ",", "bk", ",", "ck", ",", "dk", ",", "xk", ",", "yk", ",", "zk", 
     ",", " ", "al", ",", "bl", ",", "cl", ",", "dl", ",", "xl", ",", "yl", 
     ",", "zl"}], " ", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4055952302564087`*^9, 3.405595267347364*^9}, {
   3.408556502824588*^9, 3.4085565040993557`*^9}, {3.702666505031909*^9, 
   3.702666531507627*^9}, 3.702667881776746*^9, {3.707146819345879*^9, 
   3.707146827499598*^9}}],

Cell["AppendTo[stapleOutputs, stapleDeviation];", "Text",
 CellChangeTimes->{{3.411152051138565*^9, 3.411152052756624*^9}, {
   3.702666532511979*^9, 3.7026665335664177`*^9}, {3.702667881858635*^9, 
   3.702667881917015*^9}, 3.707330251034462*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Assemble the rules, the name of the energy term, the independant variable \
names, etc. into what passes for a structure in Mathematica (I call it a Pack)\
\>", "Subsection",
 CellChangeTimes->{{3.494843911918105*^9, 3.494844017248684*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"staplePack0", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Name", "\[Rule]", "\"\<STAPLE\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AdditionalCDeclares", "\[Rule]", "\"\<\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"DerivativeVariables", "\[Rule]", "stapleInput"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Rules", "\[Rule]", "stapleRules"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"Input", "\[Rule]", "stapleInput"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"Output", "\[Rule]", "stapleOutputs"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.402876557641659*^9, 3.402876568596249*^9}, 
   3.402876852017213*^9, {3.40559527044873*^9, 3.405595281200487*^9}, {
   3.405607646467461*^9, 3.405607646567194*^9}, {3.4056349375263166`*^9, 
   3.405634963865233*^9}, {3.405635515351774*^9, 3.4056355177092333`*^9}, {
   3.407679881947057*^9, 3.4076798872149277`*^9}, {3.407763146777285*^9, 
   3.407763148181219*^9}, {3.40855652062083*^9, 3.408556522452385*^9}, {
   3.408564819262188*^9, 3.408564828757545*^9}, {3.409333145287333*^9, 
   3.40933315235924*^9}, {3.4101776186718473`*^9, 3.410177620470078*^9}, {
   3.411066451212819*^9, 3.411066462017312*^9}, {3.4110669305802307`*^9, 
   3.4110669315625343`*^9}, {3.411072159484359*^9, 3.411072166176531*^9}, {
   3.411072206442031*^9, 3.41107221385695*^9}, {3.411075684409318*^9, 
   3.4110757253172703`*^9}, {3.4110759780540733`*^9, 3.411075995800424*^9}, 
   3.4110793661329203`*^9, {3.702666534898035*^9, 3.702666566906396*^9}, 
   3.702666629707164*^9, {3.702667866896305*^9, 3.702667882200088*^9}, {
   3.707146875689992*^9, 3.707146877680748*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"writeOutputVariablesForDebugging", "[", "staplePack0", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.408752301954282*^9, 3.408752370230307*^9}, {
   3.408821026441674*^9, 3.408821031596847*^9}, 3.4110670621890917`*^9, 
   3.7026665401661*^9, 3.702667882303001*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing finite difference debug code to: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_debugFiniteDifference.cc\"\>"}],
  SequenceForm[
  "Writing finite difference debug code to: ", 
   "_STAPLE_debugFiniteDifference.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.702666640161098*^9, 3.7026672234993134`*^9, 3.702667913192429*^9, 
   3.702889685257442*^9, 3.702889968945541*^9, 3.702891185131735*^9, 
   3.702891416845908*^9, 3.702894376085799*^9, {3.7028944573757677`*^9, 
   3.7028944830412207`*^9}, 3.707147525565599*^9, 3.707148772734853*^9, 
   3.7073192363932543`*^9, 3.707319354024961*^9, 3.707321555084714*^9, 
   3.707321586150591*^9, 3.707328196204433*^9, 3.707330056016108*^9, 
   3.707330257997242*^9, 3.707330788751563*^9, 3.707340917632285*^9, 
   3.707342549405589*^9, 3.707387938970068*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing debug variable declares to: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_debugEvalDeclares.cc\"\>"}],
  SequenceForm[
  "Writing debug variable declares to: ", "_STAPLE_debugEvalDeclares.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.702666640161098*^9, 3.7026672234993134`*^9, 3.702667913192429*^9, 
   3.702889685257442*^9, 3.702889968945541*^9, 3.702891185131735*^9, 
   3.702891416845908*^9, 3.702894376085799*^9, {3.7028944573757677`*^9, 
   3.7028944830412207`*^9}, 3.707147525565599*^9, 3.707148772734853*^9, 
   3.7073192363932543`*^9, 3.707319354024961*^9, 3.707321555084714*^9, 
   3.707321586150591*^9, 3.707328196204433*^9, 3.707330056016108*^9, 
   3.707330257997242*^9, 3.707330788751563*^9, 3.707340917632285*^9, 
   3.707342549405589*^9, 3.707387938972039*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing xml output debug code to: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_debugEvalSerialize.cc\"\>"}],
  SequenceForm[
  "Writing xml output debug code to: ", "_STAPLE_debugEvalSerialize.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.702666640161098*^9, 3.7026672234993134`*^9, 3.702667913192429*^9, 
   3.702889685257442*^9, 3.702889968945541*^9, 3.702891185131735*^9, 
   3.702891416845908*^9, 3.702894376085799*^9, {3.7028944573757677`*^9, 
   3.7028944830412207`*^9}, 3.707147525565599*^9, 3.707148772734853*^9, 
   3.7073192363932543`*^9, 3.707319354024961*^9, 3.707321555084714*^9, 
   3.707321586150591*^9, 3.707328196204433*^9, 3.707330056016108*^9, 
   3.707330257997242*^9, 3.707330788751563*^9, 3.707340917632285*^9, 
   3.707342549405589*^9, 3.707387938974495*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing set variables debug code to: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_debugEvalSet.cc\"\>"}],
  SequenceForm[
  "Writing set variables debug code to: ", "_STAPLE_debugEvalSet.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.702666640161098*^9, 3.7026672234993134`*^9, 3.702667913192429*^9, 
   3.702889685257442*^9, 3.702889968945541*^9, 3.702891185131735*^9, 
   3.702891416845908*^9, 3.702894376085799*^9, {3.7028944573757677`*^9, 
   3.7028944830412207`*^9}, 3.707147525565599*^9, 3.707148772734853*^9, 
   3.7073192363932543`*^9, 3.707319354024961*^9, 3.707321555084714*^9, 
   3.707321586150591*^9, 3.707328196204433*^9, 3.707330056016108*^9, 
   3.707330257997242*^9, 3.707330788751563*^9, 3.707340917632285*^9, 
   3.707342549405589*^9, 3.707387938976918*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
staplePack = Block[{PrintTemporary = Print}, packOptimize[staplePack0]];\
\>", "Text",
 CellChangeTimes->{{3.405593154617752*^9, 3.405593181273087*^9}, {
   3.405594926006316*^9, 3.4055949283713083`*^9}, {3.40560847035536*^9, 
   3.405608470488098*^9}, {3.407559202182371*^9, 3.407559202626436*^9}, {
   3.408564854380271*^9, 3.408564873627013*^9}, 3.41106665985861*^9, {
   3.411072816696417*^9, 3.4110728451363277`*^9}, {3.702666540999856*^9, 
   3.702666541884931*^9}, {3.7026678823791237`*^9, 3.70266788249536*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Put the pedal to the metal and generate \"C\" code.", "Subsection",
 CellChangeTimes->{{3.494844094666773*^9, 3.494844119787055*^9}}],

Cell[CellGroupData[{

Cell[BoxData["stapleOutputs"], "Input",
 CellChangeTimes->{{3.707330179572913*^9, 3.707330183594152*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Energy", ",", "fak", ",", "fbk", ",", "fck", ",", "fdk", ",", "fxk", ",", 
   "fyk", ",", "fzk", ",", "fal", ",", "fbl", ",", "fcl", ",", "fdl", ",", 
   "fxl", ",", "fyl", ",", "fzl"}], "}"}]], "Output",
 CellChangeTimes->{3.7073301840092897`*^9, 3.707330258095296*^9, 
  3.7073307888499804`*^9, 3.7073409177412643`*^9, 3.707342549516395*^9, 
  3.707387939046412*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Output", "/.", "staplePack"}]], "Input",
 CellChangeTimes->{{3.70733006954773*^9, 3.70733016132583*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Energy", ",", "fak", ",", "fbk", ",", "fck", ",", "fdk", ",", "fxk", ",", 
   "fyk", ",", "fzk", ",", "fal", ",", "fbl", ",", "fcl", ",", "fdl", ",", 
   "fxl", ",", "fyl", ",", "fzl"}], "}"}]], "Output",
 CellChangeTimes->{{3.7073300806560163`*^9, 3.707330161898069*^9}, 
   3.707330258213908*^9, 3.707330788932487*^9, 3.707340917839044*^9, 
   3.7073425496391687`*^9, 3.707387939130273*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"staplePack", " ", "=", " ", 
   RowBox[{"packOptimize", "[", "staplePack0", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.405593154617752*^9, 3.405593181273087*^9}, {
   3.405594926006316*^9, 3.4055949283713083`*^9}, {3.40560847035536*^9, 
   3.405608470488098*^9}, {3.407559202182371*^9, 3.407559202626436*^9}, {
   3.408564854380271*^9, 3.408564873627013*^9}, 3.41106665985861*^9, {
   3.411072816696417*^9, 3.4110728451363277`*^9}, {3.411073752072069*^9, 
   3.4110737531085377`*^9}, {3.702666542649117*^9, 3.702666543244851*^9}, {
   3.702667882654457*^9, 3.702667882764448*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.707342592354093*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.707342592356941*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.707342592359626*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.707342592362383*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.707342592453823*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.7073425924561443`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.70734259245851*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.7073425924611053`*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.7073425925544558`*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.7073425925572243`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.707342592559874*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.707342592562603*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz409 -> tx246, tzz408 -> tx247, \
tzz419 -> tx248, tzz413 -> tx285, tzz416 -> tx306, tzz412 -> tx309, tzz411 -> \
tx343, tzz414 -> tx345, tzz415 -> tx358, tzz406 -> tx384}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.707342595455863*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.707342595458974*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz409 -> \
tx246\\n\\ntzz408 -> tx247\\n\\ntzz419 -> tx248\\n\\ntzz413 -> \
tx285\\n\\ntzz416 -> tx306\\n\\ntzz412 -> tx309\\n\\ntzz411 -> \
tx343\\n\\ntzz414 -> tx345\\n\\ntzz415 -> tx358\\n\\ntzz406 -> tx384\"\>"], \
"Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.707342595462782*^9}],

Cell[BoxData[
 StyleBox["\<\"Set TimesSimplify and PlusSimplify to turn these \
simplifications off and on\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 1],
  FrontFaceColor->RGBColor[0, 0, 1],
  BackFaceColor->RGBColor[0, 0, 1],
  GraphicsColor->RGBColor[0, 0, 1],
  FontSize->24,
  FontSlant->Italic,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387939214962*^9}],

Cell[BoxData[
 StyleBox["\<\"PlusOptimize = True\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 1],
  FrontFaceColor->RGBColor[0, 0, 1],
  BackFaceColor->RGBColor[0, 0, 1],
  GraphicsColor->RGBColor[0, 0, 1],
  FontSize->20,
  FontSlant->Italic,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.7073879392168283`*^9}],

Cell[BoxData[
 StyleBox["\<\"TimesOptimize = True\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 1],
  FrontFaceColor->RGBColor[0, 0, 1],
  BackFaceColor->RGBColor[0, 0, 1],
  GraphicsColor->RGBColor[0, 0, 1],
  FontSize->20,
  FontSlant->Italic,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387939219092*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387961123208*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387961125983*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387961128805*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387961132206*^9}],

Cell[BoxData["\<\"Collecting terms\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.70738796120452*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \
\[NoBreak]\\!\\(Null\\\\ \\(\\({\\(\\(Name \[Rule] \\\"STAPLE\\\"\\)\\), \
\\(\\(AdditionalCDeclares \[Rule] \\\"\\\"\\)\\), \\(\\(DerivativeVariables \
\[Rule] \\(\\({ak, bk, ck, dk, xk, yk, zk, al, bl, cl, dl, xl, yl, \
zl}\\)\\)\\)\\), \\(\\(Rules \[Rule] \
\\(\\({\\(\\(CCode[\\\"STAPLE_SET_PARAMETER(ks,ks);\\\"]\\)\\), \
\\(\\(CCode[\\\"STAPLE_SET_PARAMETER(r0,r0);\\\"]\\)\\), \
\\(\\(CCode[\\\"STAPLE_SET_PARAMETER(I1,rigidBodyK);\\\"]\\)\\), \\(\\(\
\[LeftSkeleton] 45 \[RightSkeleton]\\)\\), \\(\\(\\(\\(-gal\\)\\) \[Rule] fal\
\\)\\), \\(\\(CCode[\\\"STAPLE_FORCE_ACCUMULATE(I2, 0, fal );\\\"]\\)\\), \\(\
\\(\[LeftSkeleton] 18 \[RightSkeleton]\\)\\)}\\)\\)\\)\\), \\(\\(Input \
\[Rule] \\(\\({ak, bk, ck, dk, xk, yk, zk, al, bl, cl, dl, xl, yl, \
zl}\\)\\)\\)\\), \\(\\(Output \[Rule] \\(\\({Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl}\\)\\)\\)\\)}\\)\\)\\)\[NoBreak] \
is Protected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.707330279338255*^9, 3.707330810819479*^9, 
  3.70734093945944*^9, 3.7073425705753603`*^9, 3.70738796120697*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387980040777*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.7073879800445747`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.70738798004877*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387980052237*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387980157393*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.70738798016026*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387980163505*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.7073879801663103`*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.7073879802438183`*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.7073879802462606`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387980248576*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387980250979*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz575 -> tx332, tzz574 -> tx333, \
tzz585 -> tx334, tzz579 -> tx365, tzz582 -> tx402, tzz578 -> tx405, tzz577 -> \
tx466, tzz580 -> tx468, tzz581 -> tx491, tzz573 -> tx535}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387982668537*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387982671792*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz575 -> \
tx332\\n\\ntzz574 -> tx333\\n\\ntzz585 -> tx334\\n\\ntzz579 -> \
tx365\\n\\ntzz582 -> tx402\\n\\ntzz578 -> tx405\\n\\ntzz577 -> \
tx466\\n\\ntzz580 -> tx468\\n\\ntzz581 -> tx491\\n\\ntzz573 -> tx535\"\>"], \
"Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387982674912*^9}],

Cell[BoxData["\<\"After removal: \
CCode[STAPLE_SET_PARAMETER(ks,ks);]\\n\\nCCode[STAPLE_SET_PARAMETER(r0,r0);]\\\
n\\nCCode[STAPLE_SET_PARAMETER(I1,rigidBodyK);]\\n\\nCCode[STAPLE_SET_\
PARAMETER(I2,rigidBodyL);]\\n\\nCCode[STAPLE_SET_POSITION(ak,I1,0);]\\n\\\
nCCode[STAPLE_SET_POSITION(bk,I1,1);]\\n\\nCCode[STAPLE_SET_POSITION(ck,I1,2);\
]\\n\\nCCode[STAPLE_SET_POSITION(dk,I1,3);]\\n\\nCCode[STAPLE_SET_POSITION(xk,\
I1,4);]\\n\\nCCode[STAPLE_SET_POSITION(yk,I1,5);]\\n\\nCCode[STAPLE_SET_\
POSITION(zk,I1,6);]\\n\\nCCode[STAPLE_SET_POSITION(al,I2,0);]\\n\\nCCode[\
STAPLE_SET_POSITION(bl,I2,1);]\\n\\nCCode[STAPLE_SET_POSITION(cl,I2,2);]\\n\\\
nCCode[STAPLE_SET_POSITION(dl,I2,3);]\\n\\nCCode[STAPLE_SET_POSITION(xl,I2,4);\
]\\n\\nCCode[STAPLE_SET_POSITION(yl,I2,5);]\\n\\nCCode[STAPLE_SET_POSITION(zl,\
I2,6);]\\n\\nCCode[STAPLE_SET_POINT(pxk,pointK,getX());]\\n\\nCCode[STAPLE_\
SET_POINT(pyk,pointK,getY());]\\n\\nCCode[STAPLE_SET_POINT(pzk,pointK,getZ());\
]\\n\\nCCode[STAPLE_SET_POINT(pxl,pointL,getX());]\\n\\nCCode[STAPLE_SET_\
POINT(pyl,pointL,getY());]\\n\\nCCode[STAPLE_SET_POINT(pzl,pointL,getZ());]\\\
n\\npower2[ak] -> tx278\\n\\npower2[al] -> tx279\\n\\npower2[bk] -> \
tx280\\n\\npower2[bl] -> tx281\\n\\npower2[ck] -> tx282\\n\\npower2[cl] -> \
tx283\\n\\npower2[dk] -> tx284\\n\\npower2[dl] -> tx285\\n\\n-pxk -> \
tzz565\\n\\nak ck -> tzz583\\n\\ntzz565 tzz583 -> tx286\\n\\nbk ck pxk -> \
tx287\\n\\ndk pxk -> tzz579\\n\\nak tzz579 -> tx288\\n\\nbk tzz579 -> \
tx289\\n\\n-pxl -> tzz575\\n\\nal cl tzz575 -> tx290\\n\\nbl cl pxl -> \
tx291\\n\\ndl pxl -> tzz577\\n\\nal tzz577 -> tx292\\n\\nbl tzz577 -> \
tx293\\n\\nak bk -> tzz584\\n\\npyk tzz584 -> tx294\\n\\nck pyk -> \
tzz582\\n\\nbk tzz582 -> tx295\\n\\n-pyk -> tzz572\\n\\nak dk tzz572 -> tx296\
\\n\\ndk tzz582 -> tx297\\n\\nal bl pyl -> tx298\\n\\ncl pyl -> \
tzz581\\n\\nbl tzz581 -> tx299\\n\\n-pyl -> tzz574\\n\\nal dl tzz574 -> tx300\
\\n\\ndl tzz581 -> tx301\\n\\n-pzk -> tzz564\\n\\ntzz564 tzz584 -> \
tx302\\n\\npzk tzz583 -> tx303\\n\\ndk pzk -> tzz578\\n\\nbk tzz578 -> \
tx304\\n\\nck tzz578 -> tx305\\n\\nbl pzl -> tzz573\\n\\n-(al tzz573) -> \
tx306\\n\\ncl pzl -> tzz580\\n\\nal tzz580 -> tx307\\n\\ndl tzz573 -> \
tx308\\n\\ndl tzz580 -> tx309\\n\\ntx280 tzz572 -> tx310\\n\\ntx280 tzz564 -> \
tx311\\n\\ntx281 tzz574 -> tx312\\n\\n-pzl -> tzz585\\n\\ntx281 tzz585 -> \
tx313\\n\\ntx282 tzz565 -> tx314\\n\\ntx282 tzz564 -> tx315\\n\\ntx283 tzz575 \
-> tx316\\n\\ntx283 tzz585 -> tx317\\n\\ntx284 tzz565 -> tx318\\n\\ntx284 \
tzz572 -> tx319\\n\\ntx278 + tx280 + tx282 + tx284 -> tx320\\n\\ntx285 tzz575 \
-> tx321\\n\\ntx285 tzz574 -> tx322\\n\\ntx279 + tx281 + tx283 + tx285 -> \
tx323\\n\\ntx286 + tx289 + tx294 + tx297 + tx311 + tx315 -> tx324\\n\\ntx290 \
+ tx293 + tx298 + tx301 + tx313 + tx317 -> tx325\\n\\ntx295 + tx296 + tx303 + \
tx304 + tx314 + tx318 -> tx326\\n\\ntx287 + tx288 + tx302 + tx305 + tx310 + \
tx319 -> tx327\\n\\nreciprocal[tx320] -> tx328\\n\\ntx299 + tx300 + tx307 + \
tx308 + tx316 + tx321 -> tx329\\n\\ntx291 + tx292 + tx306 + tx309 + tx312 + \
tx322 -> tx330\\n\\nreciprocal[tx323] -> tx331\\n\\ntzz575 -> \
tx332\\n\\ntzz574 -> tx333\\n\\ntzz585 -> tx334\\n\\n2. tx328 -> \
tzz556\\n\\ntx324 tzz556 -> tx335\\n\\ntx326 tzz556 -> tx336\\n\\ntx327 \
tzz556 -> tx337\\n\\n-2. tx331 -> tzz555\\n\\ntx325 tzz555 -> \
tx338\\n\\ntx329 tzz555 -> tx339\\n\\ntx330 tzz555 -> tx340\\n\\n-xl -> tx341\
\\n\\n-yl -> tx342\\n\\n-zl -> tx343\\n\\npxk + tx332 + tx336 + tx339 + tx341 \
+ xk -> tx344\\n\\npyk + tx333 + tx337 + tx340 + tx342 + yk -> tx345\\n\\npzk \
+ tx334 + tx335 + tx338 + tx343 + zk -> tx346\\n\\npower2[tx344] -> \
tx347\\n\\npower2[tx345] -> tx348\\n\\npower2[tx346] -> tx349\\n\\ntx347 + \
tx348 + tx349 -> tx350\\n\\n-r0 -> tx351\\n\\nmysqrt[tx350] -> \
tx352\\n\\ntx351 + tx352 -> tx353\\n\\npower2[tx353] -> tx354\\n\\nks tx354 \
-> Energy\\n\\nCCode[STAPLE_ENERGY_ACCUMULATE(Energy);]\\n\\ntx283 tx332 -> \
tx355\\n\\ntx285 tx332 -> tx356\\n\\ntx281 tx333 -> tx357\\n\\ntx285 tx333 -> \
tx358\\n\\ntx281 tx334 -> tx359\\n\\ntx283 tx334 -> tx360\\n\\ntx299 + tx300 \
+ tx307 + tx308 + tx355 + tx356 -> tx361\\n\\ntx291 + tx292 + tx306 + tx309 + \
tx357 + tx358 -> tx362\\n\\ntx290 + tx293 + tx298 + tx301 + tx359 + tx360 -> \
tx363\\n\\nck tzz565 -> tx364\\n\\ntzz579 -> tx365\\n\\nbk pyk -> \
tx366\\n\\ndk tzz572 -> tx367\\n\\nbk tzz564 -> tx368\\n\\nck pzk -> tx369\\n\
\\ntx361 tzz555 -> tx370\\n\\ntx362 tzz555 -> tx371\\n\\ntx363 tzz555 -> \
tx372\\n\\npower2[tx328] -> tx373\\n\\ntx364 + tx366 -> tx374\\n\\ntx365 + \
tx368 -> tx375\\n\\ntx367 + tx369 -> tx376\\n\\npxk + tx332 + tx336 + tx341 + \
tx370 + xk -> tx377\\n\\npyk + tx333 + tx337 + tx342 + tx371 + yk -> tx378\\n\
\\npzk + tx334 + tx335 + tx343 + tx372 + zk -> tx379\\n\\n-4. tx373 -> tzz560\
\\n\\ntx324 tzz560 -> tzz571\\n\\nak tzz571 -> tx380\\n\\ntx326 tzz560 -> \
tzz570\\n\\nak tzz570 -> tx381\\n\\ntx327 tzz560 -> tzz569\\n\\nak tzz569 -> \
tx382\\n\\ntx374 tzz556 -> tx383\\n\\ntx375 tzz556 -> tx384\\n\\ntx376 tzz556 \
-> tx385\\n\\npower2[tx377] -> tx386\\n\\npower2[tx378] -> \
tx387\\n\\npower2[tx379] -> tx388\\n\\ntx380 + tx383 -> tx389\\n\\ntx382 + \
tx384 -> tx390\\n\\ntx381 + tx385 -> tx391\\n\\ntx386 + tx387 + tx388 -> \
tx392\\n\\n2. tx379 -> tzz561\\n\\ntx389 tzz561 -> tx393\\n\\n2. tx378 -> \
tzz562\\n\\ntx390 tzz562 -> tx394\\n\\n2. tx377 -> tzz563\\n\\ntx391 tzz563 \
-> tx395\\n\\nmysqrt[tx392] -> tx396\\n\\nreciprocal[tx396] -> \
tx397\\n\\ntx393 + tx394 + tx395 -> tx398\\n\\ntx351 + tx396 -> \
tx399\\n\\ntx397 tx399 -> tzz557\\n\\nks tzz557 -> tzz558\\n\\ntx398 tzz558 \
-> gak\\n\\n-gak -> fak\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 0, fak \
);]\\n\\nck pxk -> tx400\\n\\nak pyk -> tx401\\n\\ntzz582 -> tx402\\n\\nak \
tzz564 -> tx403\\n\\n-2. bk pzk -> tx404\\n\\ntzz578 -> tx405\\n\\n-2. tx366 \
-> tx406\\n\\ntx365 + tx401 + tx404 -> tx407\\n\\ntx402 + tx405 -> \
tx408\\n\\ntx400 + tx403 + tx406 -> tx409\\n\\nbk tzz571 -> tx410\\n\\nbk \
tzz570 -> tx411\\n\\nbk tzz569 -> tx412\\n\\ntx407 tzz556 -> tx413\\n\\ntx408 \
tzz556 -> tx414\\n\\ntx409 tzz556 -> tx415\\n\\ntx410 + tx413 -> \
tx416\\n\\ntx411 + tx414 -> tx417\\n\\ntx412 + tx415 -> tx418\\n\\ntx416 \
tzz561 -> tx419\\n\\ntx417 tzz563 -> tx420\\n\\ntx418 tzz562 -> \
tx421\\n\\ntx419 + tx420 + tx421 -> tx422\\n\\ntx422 tzz558 -> gbk\\n\\n-gbk \
-> fbk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 1, fbk );]\\n\\nak tzz565 -> \
tx423\\n\\nbk pxk -> tx424\\n\\ndk pyk -> tx425\\n\\nak pzk -> tx426\\n\\n-2. \
tx369 -> tx427\\n\\n-2. tx400 -> tx428\\n\\ntx405 + tx424 -> tx429\\n\\ntx423 \
+ tx425 + tx427 -> tx430\\n\\ntx366 + tx426 + tx428 -> tx431\\n\\nck tzz571 \
-> tx432\\n\\nck tzz570 -> tx433\\n\\nck tzz569 -> tx434\\n\\ntx429 tzz556 -> \
tx435\\n\\ntx430 tzz556 -> tx436\\n\\ntx431 tzz556 -> tx437\\n\\ntx434 + \
tx435 -> tx438\\n\\ntx432 + tx436 -> tx439\\n\\ntx433 + tx437 -> \
tx440\\n\\ntx438 tzz562 -> tx441\\n\\ntx439 tzz561 -> tx442\\n\\ntx440 tzz563 \
-> tx443\\n\\ntx441 + tx442 + tx443 -> tx444\\n\\ntx444 tzz558 -> \
gck\\n\\n-gck -> fck\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 2, fck \
);]\\n\\nak pxk -> tx445\\n\\nbk pzk -> tx446\\n\\n-2. tx365 -> \
tx447\\n\\n-tx401 -> tx448\\n\\n-2. tx425 -> tx449\\n\\ntx402 + tx424 -> \
tx450\\n\\ntx446 + tx447 + tx448 -> tx451\\n\\ntx369 + tx445 + tx449 -> tx452\
\\n\\ndk tzz571 -> tx453\\n\\ndk tzz570 -> tx454\\n\\ndk tzz569 -> \
tx455\\n\\ntx450 tzz556 -> tx456\\n\\ntx451 tzz556 -> tx457\\n\\ntx452 tzz556 \
-> tx458\\n\\ntx453 + tx456 -> tx459\\n\\ntx454 + tx457 -> tx460\\n\\ntx455 + \
tx458 -> tx461\\n\\ntx459 tzz561 -> tx462\\n\\ntx460 tzz563 -> \
tx463\\n\\ntx461 tzz562 -> tx464\\n\\ntx462 + tx463 + tx464 -> \
tx465\\n\\ntx465 tzz558 -> gdk\\n\\n-gdk -> \
fdk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 3, fdk );]\\n\\ntzz558 tzz563 -> \
gxk\\n\\n-gxk -> fxk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 4, fxk \
);]\\n\\ntzz558 tzz562 -> gyk\\n\\n-gyk -> \
fyk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 5, fyk );]\\n\\ntzz558 tzz561 -> \
gzk\\n\\n-gzk -> fzk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 6, fzk \
);]\\n\\ntzz577 -> tx466\\n\\nbl pyl -> tx467\\n\\ntzz580 -> tx468\\n\\ncl \
tx332 -> tx469\\n\\ndl tx333 -> tx470\\n\\nbl tx334 -> \
tx471\\n\\npower2[tx331] -> tx472\\n\\ntx467 + tx469 -> tx473\\n\\ntx468 + \
tx470 -> tx474\\n\\ntx466 + tx471 -> tx475\\n\\n4. tx472 -> tzz559\\n\\ntx361 \
tzz559 -> tzz568\\n\\nal tzz568 -> tx476\\n\\ntx362 tzz559 -> tzz567\\n\\nal \
tzz567 -> tx477\\n\\ntx363 tzz559 -> tzz566\\n\\nal tzz566 -> \
tx478\\n\\ntx473 tzz555 -> tx479\\n\\ntx474 tzz555 -> tx480\\n\\ntx475 tzz555 \
-> tx481\\n\\ntx478 + tx479 -> tx482\\n\\ntx476 + tx480 -> tx483\\n\\ntx477 + \
tx481 -> tx484\\n\\ntx482 tzz561 -> tx485\\n\\ntx483 tzz563 -> \
tx486\\n\\ntx484 tzz562 -> tx487\\n\\ntx485 + tx486 + tx487 -> \
tx488\\n\\ntx488 tzz558 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\ncl pxl -> tx489\\n\
\\nal pyl -> tx490\\n\\ntzz581 -> tx491\\n\\n-2. tzz573 -> tx492\\n\\ndl pzl \
-> tx493\\n\\nal tx334 -> tx494\\n\\n-2. tx467 -> tx495\\n\\ntx466 + tx490 + \
tx492 -> tx496\\n\\ntx491 + tx493 -> tx497\\n\\ntx489 + tx494 + tx495 -> \
tx498\\n\\nbl tzz568 -> tx499\\n\\nbl tzz567 -> tx500\\n\\nbl tzz566 -> tx501\
\\n\\ntx496 tzz555 -> tx502\\n\\ntx497 tzz555 -> tx503\\n\\ntx498 tzz555 -> \
tx504\\n\\ntx501 + tx502 -> tx505\\n\\ntx499 + tx503 -> tx506\\n\\ntx500 + \
tx504 -> tx507\\n\\ntx505 tzz561 -> tx508\\n\\ntx506 tzz563 -> \
tx509\\n\\ntx507 tzz562 -> tx510\\n\\ntx508 + tx509 + tx510 -> \
tx511\\n\\ntx511 tzz558 -> gbl\\n\\n-gbl -> \
fbl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 1, fbl );]\\n\\nbl pxl -> tx512\\n\
\\ndl pyl -> tx513\\n\\nal pzl -> tx514\\n\\nal tx332 -> tx515\\n\\n-2. tx468 \
-> tx516\\n\\n-2. tx489 -> tx517\\n\\ntx493 + tx512 -> tx518\\n\\ntx513 + \
tx515 + tx516 -> tx519\\n\\ntx467 + tx514 + tx517 -> tx520\\n\\ncl tzz568 -> \
tx521\\n\\ncl tzz567 -> tx522\\n\\ncl tzz566 -> tx523\\n\\ntx518 tzz555 -> \
tx524\\n\\ntx519 tzz555 -> tx525\\n\\ntx520 tzz555 -> tx526\\n\\ntx522 + \
tx524 -> tx527\\n\\ntx523 + tx525 -> tx528\\n\\ntx521 + tx526 -> \
tx529\\n\\ntx527 tzz562 -> tx530\\n\\ntx528 tzz561 -> tx531\\n\\ntx529 tzz563 \
-> tx532\\n\\ntx530 + tx531 + tx532 -> tx533\\n\\ntx533 tzz558 -> \
gcl\\n\\n-gcl -> fcl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 2, fcl \
);]\\n\\nal pxl -> tx534\\n\\ntzz573 -> tx535\\n\\nal tx333 -> tx536\\n\\n-2. \
tx466 -> tx537\\n\\n-2. tx513 -> tx538\\n\\ntx491 + tx512 -> tx539\\n\\ntx535 \
+ tx536 + tx537 -> tx540\\n\\ntx468 + tx534 + tx538 -> tx541\\n\\ndl tzz568 \
-> tx542\\n\\ndl tzz567 -> tx543\\n\\ndl tzz566 -> tx544\\n\\ntx539 tzz555 -> \
tx545\\n\\ntx540 tzz555 -> tx546\\n\\ntx541 tzz555 -> tx547\\n\\ntx544 + \
tx545 -> tx548\\n\\ntx542 + tx546 -> tx549\\n\\ntx543 + tx547 -> \
tx550\\n\\ntx548 tzz561 -> tx551\\n\\ntx549 tzz563 -> tx552\\n\\ntx550 tzz562 \
-> tx553\\n\\ntx551 + tx552 + tx553 -> tx554\\n\\ntx554 tzz558 -> \
gdl\\n\\n-gdl -> fdl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 3, fdl \
);]\\n\\n-2. tzz558 -> tzz576\\n\\ntx377 tzz576 -> gxl\\n\\n-gxl -> \
fxl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 4, fxl );]\\n\\ntx378 tzz576 -> \
gyl\\n\\n-gyl -> fyl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 5, fyl \
);]\\n\\ntx379 tzz576 -> gzl\\n\\n-gzl -> \
fzl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 6, fzl );]\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387982678156*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387982786374*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz575 -> tx332, tzz574 -> tx333, \
tzz585 -> tx334, tzz579 -> tx365, tzz582 -> tx402, tzz578 -> tx405, tzz577 -> \
tx466, tzz580 -> tx468, tzz581 -> tx491, tzz573 -> tx535}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.7073879827889147`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387982791498*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz575 -> \
tx332\\n\\ntzz574 -> tx333\\n\\ntzz585 -> tx334\\n\\ntzz579 -> \
tx365\\n\\ntzz582 -> tx402\\n\\ntzz578 -> tx405\\n\\ntzz577 -> \
tx466\\n\\ntzz580 -> tx468\\n\\ntzz581 -> tx491\\n\\ntzz573 -> tx535\"\>"], \
"Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387982794017*^9}],

Cell[BoxData["\<\"After removal: \
CCode[STAPLE_SET_PARAMETER(ks,ks);]\\n\\nCCode[STAPLE_SET_PARAMETER(r0,r0);]\\\
n\\nCCode[STAPLE_SET_PARAMETER(I1,rigidBodyK);]\\n\\nCCode[STAPLE_SET_\
PARAMETER(I2,rigidBodyL);]\\n\\nCCode[STAPLE_SET_POSITION(ak,I1,0);]\\n\\\
nCCode[STAPLE_SET_POSITION(bk,I1,1);]\\n\\nCCode[STAPLE_SET_POSITION(ck,I1,2);\
]\\n\\nCCode[STAPLE_SET_POSITION(dk,I1,3);]\\n\\nCCode[STAPLE_SET_POSITION(xk,\
I1,4);]\\n\\nCCode[STAPLE_SET_POSITION(yk,I1,5);]\\n\\nCCode[STAPLE_SET_\
POSITION(zk,I1,6);]\\n\\nCCode[STAPLE_SET_POSITION(al,I2,0);]\\n\\nCCode[\
STAPLE_SET_POSITION(bl,I2,1);]\\n\\nCCode[STAPLE_SET_POSITION(cl,I2,2);]\\n\\\
nCCode[STAPLE_SET_POSITION(dl,I2,3);]\\n\\nCCode[STAPLE_SET_POSITION(xl,I2,4);\
]\\n\\nCCode[STAPLE_SET_POSITION(yl,I2,5);]\\n\\nCCode[STAPLE_SET_POSITION(zl,\
I2,6);]\\n\\nCCode[STAPLE_SET_POINT(pxk,pointK,getX());]\\n\\nCCode[STAPLE_\
SET_POINT(pyk,pointK,getY());]\\n\\nCCode[STAPLE_SET_POINT(pzk,pointK,getZ());\
]\\n\\nCCode[STAPLE_SET_POINT(pxl,pointL,getX());]\\n\\nCCode[STAPLE_SET_\
POINT(pyl,pointL,getY());]\\n\\nCCode[STAPLE_SET_POINT(pzl,pointL,getZ());]\\\
n\\npower2[ak] -> tx278\\n\\npower2[al] -> tx279\\n\\npower2[bk] -> \
tx280\\n\\npower2[bl] -> tx281\\n\\npower2[ck] -> tx282\\n\\npower2[cl] -> \
tx283\\n\\npower2[dk] -> tx284\\n\\npower2[dl] -> tx285\\n\\n-pxk -> \
tzz565\\n\\nak ck -> tzz583\\n\\ntzz565 tzz583 -> tx286\\n\\nbk ck pxk -> \
tx287\\n\\ndk pxk -> tzz579\\n\\nak tzz579 -> tx288\\n\\nbk tzz579 -> \
tx289\\n\\n-pxl -> tzz575\\n\\nal cl tzz575 -> tx290\\n\\nbl cl pxl -> \
tx291\\n\\ndl pxl -> tzz577\\n\\nal tzz577 -> tx292\\n\\nbl tzz577 -> \
tx293\\n\\nak bk -> tzz584\\n\\npyk tzz584 -> tx294\\n\\nck pyk -> \
tzz582\\n\\nbk tzz582 -> tx295\\n\\n-pyk -> tzz572\\n\\nak dk tzz572 -> tx296\
\\n\\ndk tzz582 -> tx297\\n\\nal bl pyl -> tx298\\n\\ncl pyl -> \
tzz581\\n\\nbl tzz581 -> tx299\\n\\n-pyl -> tzz574\\n\\nal dl tzz574 -> tx300\
\\n\\ndl tzz581 -> tx301\\n\\n-pzk -> tzz564\\n\\ntzz564 tzz584 -> \
tx302\\n\\npzk tzz583 -> tx303\\n\\ndk pzk -> tzz578\\n\\nbk tzz578 -> \
tx304\\n\\nck tzz578 -> tx305\\n\\nbl pzl -> tzz573\\n\\n-(al tzz573) -> \
tx306\\n\\ncl pzl -> tzz580\\n\\nal tzz580 -> tx307\\n\\ndl tzz573 -> \
tx308\\n\\ndl tzz580 -> tx309\\n\\ntx280 tzz572 -> tx310\\n\\ntx280 tzz564 -> \
tx311\\n\\ntx281 tzz574 -> tx312\\n\\n-pzl -> tzz585\\n\\ntx281 tzz585 -> \
tx313\\n\\ntx282 tzz565 -> tx314\\n\\ntx282 tzz564 -> tx315\\n\\ntx283 tzz575 \
-> tx316\\n\\ntx283 tzz585 -> tx317\\n\\ntx284 tzz565 -> tx318\\n\\ntx284 \
tzz572 -> tx319\\n\\ntx278 + tx280 + tx282 + tx284 -> tx320\\n\\ntx285 tzz575 \
-> tx321\\n\\ntx285 tzz574 -> tx322\\n\\ntx279 + tx281 + tx283 + tx285 -> \
tx323\\n\\ntx286 + tx289 + tx294 + tx297 + tx311 + tx315 -> tx324\\n\\ntx290 \
+ tx293 + tx298 + tx301 + tx313 + tx317 -> tx325\\n\\ntx295 + tx296 + tx303 + \
tx304 + tx314 + tx318 -> tx326\\n\\ntx287 + tx288 + tx302 + tx305 + tx310 + \
tx319 -> tx327\\n\\nreciprocal[tx320] -> tx328\\n\\ntx299 + tx300 + tx307 + \
tx308 + tx316 + tx321 -> tx329\\n\\ntx291 + tx292 + tx306 + tx309 + tx312 + \
tx322 -> tx330\\n\\nreciprocal[tx323] -> tx331\\n\\ntzz575 -> \
tx332\\n\\ntzz574 -> tx333\\n\\ntzz585 -> tx334\\n\\n2. tx328 -> \
tzz556\\n\\ntx324 tzz556 -> tx335\\n\\ntx326 tzz556 -> tx336\\n\\ntx327 \
tzz556 -> tx337\\n\\n-2. tx331 -> tzz555\\n\\ntx325 tzz555 -> \
tx338\\n\\ntx329 tzz555 -> tx339\\n\\ntx330 tzz555 -> tx340\\n\\n-xl -> tx341\
\\n\\n-yl -> tx342\\n\\n-zl -> tx343\\n\\npxk + tx332 + tx336 + tx339 + tx341 \
+ xk -> tx344\\n\\npyk + tx333 + tx337 + tx340 + tx342 + yk -> tx345\\n\\npzk \
+ tx334 + tx335 + tx338 + tx343 + zk -> tx346\\n\\npower2[tx344] -> \
tx347\\n\\npower2[tx345] -> tx348\\n\\npower2[tx346] -> tx349\\n\\ntx347 + \
tx348 + tx349 -> tx350\\n\\n-r0 -> tx351\\n\\nmysqrt[tx350] -> \
tx352\\n\\ntx351 + tx352 -> tx353\\n\\npower2[tx353] -> tx354\\n\\nks tx354 \
-> Energy\\n\\nCCode[STAPLE_ENERGY_ACCUMULATE(Energy);]\\n\\ntx283 tx332 -> \
tx355\\n\\ntx285 tx332 -> tx356\\n\\ntx281 tx333 -> tx357\\n\\ntx285 tx333 -> \
tx358\\n\\ntx281 tx334 -> tx359\\n\\ntx283 tx334 -> tx360\\n\\ntx299 + tx300 \
+ tx307 + tx308 + tx355 + tx356 -> tx361\\n\\ntx291 + tx292 + tx306 + tx309 + \
tx357 + tx358 -> tx362\\n\\ntx290 + tx293 + tx298 + tx301 + tx359 + tx360 -> \
tx363\\n\\nck tzz565 -> tx364\\n\\ntzz579 -> tx365\\n\\nbk pyk -> \
tx366\\n\\ndk tzz572 -> tx367\\n\\nbk tzz564 -> tx368\\n\\nck pzk -> tx369\\n\
\\ntx361 tzz555 -> tx370\\n\\ntx362 tzz555 -> tx371\\n\\ntx363 tzz555 -> \
tx372\\n\\npower2[tx328] -> tx373\\n\\ntx364 + tx366 -> tx374\\n\\ntx365 + \
tx368 -> tx375\\n\\ntx367 + tx369 -> tx376\\n\\npxk + tx332 + tx336 + tx341 + \
tx370 + xk -> tx377\\n\\npyk + tx333 + tx337 + tx342 + tx371 + yk -> tx378\\n\
\\npzk + tx334 + tx335 + tx343 + tx372 + zk -> tx379\\n\\n-4. tx373 -> tzz560\
\\n\\ntx324 tzz560 -> tzz571\\n\\nak tzz571 -> tx380\\n\\ntx326 tzz560 -> \
tzz570\\n\\nak tzz570 -> tx381\\n\\ntx327 tzz560 -> tzz569\\n\\nak tzz569 -> \
tx382\\n\\ntx374 tzz556 -> tx383\\n\\ntx375 tzz556 -> tx384\\n\\ntx376 tzz556 \
-> tx385\\n\\npower2[tx377] -> tx386\\n\\npower2[tx378] -> \
tx387\\n\\npower2[tx379] -> tx388\\n\\ntx380 + tx383 -> tx389\\n\\ntx382 + \
tx384 -> tx390\\n\\ntx381 + tx385 -> tx391\\n\\ntx386 + tx387 + tx388 -> \
tx392\\n\\n2. tx379 -> tzz561\\n\\ntx389 tzz561 -> tx393\\n\\n2. tx378 -> \
tzz562\\n\\ntx390 tzz562 -> tx394\\n\\n2. tx377 -> tzz563\\n\\ntx391 tzz563 \
-> tx395\\n\\nmysqrt[tx392] -> tx396\\n\\nreciprocal[tx396] -> \
tx397\\n\\ntx393 + tx394 + tx395 -> tx398\\n\\ntx351 + tx396 -> \
tx399\\n\\ntx397 tx399 -> tzz557\\n\\nks tzz557 -> tzz558\\n\\ntx398 tzz558 \
-> gak\\n\\n-gak -> fak\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 0, fak \
);]\\n\\nck pxk -> tx400\\n\\nak pyk -> tx401\\n\\ntzz582 -> tx402\\n\\nak \
tzz564 -> tx403\\n\\n-2. bk pzk -> tx404\\n\\ntzz578 -> tx405\\n\\n-2. tx366 \
-> tx406\\n\\ntx365 + tx401 + tx404 -> tx407\\n\\ntx402 + tx405 -> \
tx408\\n\\ntx400 + tx403 + tx406 -> tx409\\n\\nbk tzz571 -> tx410\\n\\nbk \
tzz570 -> tx411\\n\\nbk tzz569 -> tx412\\n\\ntx407 tzz556 -> tx413\\n\\ntx408 \
tzz556 -> tx414\\n\\ntx409 tzz556 -> tx415\\n\\ntx410 + tx413 -> \
tx416\\n\\ntx411 + tx414 -> tx417\\n\\ntx412 + tx415 -> tx418\\n\\ntx416 \
tzz561 -> tx419\\n\\ntx417 tzz563 -> tx420\\n\\ntx418 tzz562 -> \
tx421\\n\\ntx419 + tx420 + tx421 -> tx422\\n\\ntx422 tzz558 -> gbk\\n\\n-gbk \
-> fbk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 1, fbk );]\\n\\nak tzz565 -> \
tx423\\n\\nbk pxk -> tx424\\n\\ndk pyk -> tx425\\n\\nak pzk -> tx426\\n\\n-2. \
tx369 -> tx427\\n\\n-2. tx400 -> tx428\\n\\ntx405 + tx424 -> tx429\\n\\ntx423 \
+ tx425 + tx427 -> tx430\\n\\ntx366 + tx426 + tx428 -> tx431\\n\\nck tzz571 \
-> tx432\\n\\nck tzz570 -> tx433\\n\\nck tzz569 -> tx434\\n\\ntx429 tzz556 -> \
tx435\\n\\ntx430 tzz556 -> tx436\\n\\ntx431 tzz556 -> tx437\\n\\ntx434 + \
tx435 -> tx438\\n\\ntx432 + tx436 -> tx439\\n\\ntx433 + tx437 -> \
tx440\\n\\ntx438 tzz562 -> tx441\\n\\ntx439 tzz561 -> tx442\\n\\ntx440 tzz563 \
-> tx443\\n\\ntx441 + tx442 + tx443 -> tx444\\n\\ntx444 tzz558 -> \
gck\\n\\n-gck -> fck\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 2, fck \
);]\\n\\nak pxk -> tx445\\n\\nbk pzk -> tx446\\n\\n-2. tx365 -> \
tx447\\n\\n-tx401 -> tx448\\n\\n-2. tx425 -> tx449\\n\\ntx402 + tx424 -> \
tx450\\n\\ntx446 + tx447 + tx448 -> tx451\\n\\ntx369 + tx445 + tx449 -> tx452\
\\n\\ndk tzz571 -> tx453\\n\\ndk tzz570 -> tx454\\n\\ndk tzz569 -> \
tx455\\n\\ntx450 tzz556 -> tx456\\n\\ntx451 tzz556 -> tx457\\n\\ntx452 tzz556 \
-> tx458\\n\\ntx453 + tx456 -> tx459\\n\\ntx454 + tx457 -> tx460\\n\\ntx455 + \
tx458 -> tx461\\n\\ntx459 tzz561 -> tx462\\n\\ntx460 tzz563 -> \
tx463\\n\\ntx461 tzz562 -> tx464\\n\\ntx462 + tx463 + tx464 -> \
tx465\\n\\ntx465 tzz558 -> gdk\\n\\n-gdk -> \
fdk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 3, fdk );]\\n\\ntzz558 tzz563 -> \
gxk\\n\\n-gxk -> fxk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 4, fxk \
);]\\n\\ntzz558 tzz562 -> gyk\\n\\n-gyk -> \
fyk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 5, fyk );]\\n\\ntzz558 tzz561 -> \
gzk\\n\\n-gzk -> fzk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 6, fzk \
);]\\n\\ntzz577 -> tx466\\n\\nbl pyl -> tx467\\n\\ntzz580 -> tx468\\n\\ncl \
tx332 -> tx469\\n\\ndl tx333 -> tx470\\n\\nbl tx334 -> \
tx471\\n\\npower2[tx331] -> tx472\\n\\ntx467 + tx469 -> tx473\\n\\ntx468 + \
tx470 -> tx474\\n\\ntx466 + tx471 -> tx475\\n\\n4. tx472 -> tzz559\\n\\ntx361 \
tzz559 -> tzz568\\n\\nal tzz568 -> tx476\\n\\ntx362 tzz559 -> tzz567\\n\\nal \
tzz567 -> tx477\\n\\ntx363 tzz559 -> tzz566\\n\\nal tzz566 -> \
tx478\\n\\ntx473 tzz555 -> tx479\\n\\ntx474 tzz555 -> tx480\\n\\ntx475 tzz555 \
-> tx481\\n\\ntx478 + tx479 -> tx482\\n\\ntx476 + tx480 -> tx483\\n\\ntx477 + \
tx481 -> tx484\\n\\ntx482 tzz561 -> tx485\\n\\ntx483 tzz563 -> \
tx486\\n\\ntx484 tzz562 -> tx487\\n\\ntx485 + tx486 + tx487 -> \
tx488\\n\\ntx488 tzz558 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\ncl pxl -> tx489\\n\
\\nal pyl -> tx490\\n\\ntzz581 -> tx491\\n\\n-2. tzz573 -> tx492\\n\\ndl pzl \
-> tx493\\n\\nal tx334 -> tx494\\n\\n-2. tx467 -> tx495\\n\\ntx466 + tx490 + \
tx492 -> tx496\\n\\ntx491 + tx493 -> tx497\\n\\ntx489 + tx494 + tx495 -> \
tx498\\n\\nbl tzz568 -> tx499\\n\\nbl tzz567 -> tx500\\n\\nbl tzz566 -> tx501\
\\n\\ntx496 tzz555 -> tx502\\n\\ntx497 tzz555 -> tx503\\n\\ntx498 tzz555 -> \
tx504\\n\\ntx501 + tx502 -> tx505\\n\\ntx499 + tx503 -> tx506\\n\\ntx500 + \
tx504 -> tx507\\n\\ntx505 tzz561 -> tx508\\n\\ntx506 tzz563 -> \
tx509\\n\\ntx507 tzz562 -> tx510\\n\\ntx508 + tx509 + tx510 -> \
tx511\\n\\ntx511 tzz558 -> gbl\\n\\n-gbl -> \
fbl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 1, fbl );]\\n\\nbl pxl -> tx512\\n\
\\ndl pyl -> tx513\\n\\nal pzl -> tx514\\n\\nal tx332 -> tx515\\n\\n-2. tx468 \
-> tx516\\n\\n-2. tx489 -> tx517\\n\\ntx493 + tx512 -> tx518\\n\\ntx513 + \
tx515 + tx516 -> tx519\\n\\ntx467 + tx514 + tx517 -> tx520\\n\\ncl tzz568 -> \
tx521\\n\\ncl tzz567 -> tx522\\n\\ncl tzz566 -> tx523\\n\\ntx518 tzz555 -> \
tx524\\n\\ntx519 tzz555 -> tx525\\n\\ntx520 tzz555 -> tx526\\n\\ntx522 + \
tx524 -> tx527\\n\\ntx523 + tx525 -> tx528\\n\\ntx521 + tx526 -> \
tx529\\n\\ntx527 tzz562 -> tx530\\n\\ntx528 tzz561 -> tx531\\n\\ntx529 tzz563 \
-> tx532\\n\\ntx530 + tx531 + tx532 -> tx533\\n\\ntx533 tzz558 -> \
gcl\\n\\n-gcl -> fcl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 2, fcl \
);]\\n\\nal pxl -> tx534\\n\\ntzz573 -> tx535\\n\\nal tx333 -> tx536\\n\\n-2. \
tx466 -> tx537\\n\\n-2. tx513 -> tx538\\n\\ntx491 + tx512 -> tx539\\n\\ntx535 \
+ tx536 + tx537 -> tx540\\n\\ntx468 + tx534 + tx538 -> tx541\\n\\ndl tzz568 \
-> tx542\\n\\ndl tzz567 -> tx543\\n\\ndl tzz566 -> tx544\\n\\ntx539 tzz555 -> \
tx545\\n\\ntx540 tzz555 -> tx546\\n\\ntx541 tzz555 -> tx547\\n\\ntx544 + \
tx545 -> tx548\\n\\ntx542 + tx546 -> tx549\\n\\ntx543 + tx547 -> \
tx550\\n\\ntx548 tzz561 -> tx551\\n\\ntx549 tzz563 -> tx552\\n\\ntx550 tzz562 \
-> tx553\\n\\ntx551 + tx552 + tx553 -> tx554\\n\\ntx554 tzz558 -> \
gdl\\n\\n-gdl -> fdl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 3, fdl \
);]\\n\\n-2. tzz558 -> tzz576\\n\\ntx377 tzz576 -> gxl\\n\\n-gxl -> \
fxl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 4, fxl );]\\n\\ntx378 tzz576 -> \
gyl\\n\\n-gyl -> fyl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 5, fyl \
);]\\n\\ntx379 tzz576 -> gzl\\n\\n-gzl -> \
fzl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 6, fzl );]\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387982796583*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz575 -> tx332, tzz574 -> tx333, \
tzz585 -> tx334, tzz579 -> tx365, tzz582 -> tx402, tzz578 -> tx405, tzz577 -> \
tx466, tzz580 -> tx468, tzz581 -> tx491, tzz573 -> tx535}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387984223818*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.7073879842277107`*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz575 -> \
tx332\\n\\ntzz574 -> tx333\\n\\ntzz585 -> tx334\\n\\ntzz579 -> \
tx365\\n\\ntzz582 -> tx402\\n\\ntzz578 -> tx405\\n\\ntzz577 -> \
tx466\\n\\ntzz580 -> tx468\\n\\ntzz581 -> tx491\\n\\ntzz573 -> tx535\"\>"], \
"Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387984231409*^9}],

Cell[BoxData["\<\"After removal: \
CCode[STAPLE_SET_PARAMETER(ks,ks);]\\n\\nCCode[STAPLE_SET_PARAMETER(r0,r0);]\\\
n\\nCCode[STAPLE_SET_PARAMETER(I1,rigidBodyK);]\\n\\nCCode[STAPLE_SET_\
PARAMETER(I2,rigidBodyL);]\\n\\nCCode[STAPLE_SET_POSITION(ak,I1,0);]\\n\\\
nCCode[STAPLE_SET_POSITION(bk,I1,1);]\\n\\nCCode[STAPLE_SET_POSITION(ck,I1,2);\
]\\n\\nCCode[STAPLE_SET_POSITION(dk,I1,3);]\\n\\nCCode[STAPLE_SET_POSITION(xk,\
I1,4);]\\n\\nCCode[STAPLE_SET_POSITION(yk,I1,5);]\\n\\nCCode[STAPLE_SET_\
POSITION(zk,I1,6);]\\n\\nCCode[STAPLE_SET_POSITION(al,I2,0);]\\n\\nCCode[\
STAPLE_SET_POSITION(bl,I2,1);]\\n\\nCCode[STAPLE_SET_POSITION(cl,I2,2);]\\n\\\
nCCode[STAPLE_SET_POSITION(dl,I2,3);]\\n\\nCCode[STAPLE_SET_POSITION(xl,I2,4);\
]\\n\\nCCode[STAPLE_SET_POSITION(yl,I2,5);]\\n\\nCCode[STAPLE_SET_POSITION(zl,\
I2,6);]\\n\\nCCode[STAPLE_SET_POINT(pxk,pointK,getX());]\\n\\nCCode[STAPLE_\
SET_POINT(pyk,pointK,getY());]\\n\\nCCode[STAPLE_SET_POINT(pzk,pointK,getZ());\
]\\n\\nCCode[STAPLE_SET_POINT(pxl,pointL,getX());]\\n\\nCCode[STAPLE_SET_\
POINT(pyl,pointL,getY());]\\n\\nCCode[STAPLE_SET_POINT(pzl,pointL,getZ());]\\\
n\\npower2[ak] -> tx278\\n\\npower2[al] -> tx279\\n\\npower2[bk] -> \
tx280\\n\\npower2[bl] -> tx281\\n\\npower2[ck] -> tx282\\n\\npower2[cl] -> \
tx283\\n\\npower2[dk] -> tx284\\n\\npower2[dl] -> tx285\\n\\n-pxk -> \
tzz565\\n\\nak ck -> tzz583\\n\\ntzz565 tzz583 -> tx286\\n\\nbk ck pxk -> \
tx287\\n\\ndk pxk -> tzz579\\n\\nak tzz579 -> tx288\\n\\nbk tzz579 -> \
tx289\\n\\n-pxl -> tzz575\\n\\nal cl tzz575 -> tx290\\n\\nbl cl pxl -> \
tx291\\n\\ndl pxl -> tzz577\\n\\nal tzz577 -> tx292\\n\\nbl tzz577 -> \
tx293\\n\\nak bk -> tzz584\\n\\npyk tzz584 -> tx294\\n\\nck pyk -> \
tzz582\\n\\nbk tzz582 -> tx295\\n\\n-pyk -> tzz572\\n\\nak dk tzz572 -> tx296\
\\n\\ndk tzz582 -> tx297\\n\\nal bl pyl -> tx298\\n\\ncl pyl -> \
tzz581\\n\\nbl tzz581 -> tx299\\n\\n-pyl -> tzz574\\n\\nal dl tzz574 -> tx300\
\\n\\ndl tzz581 -> tx301\\n\\n-pzk -> tzz564\\n\\ntzz564 tzz584 -> \
tx302\\n\\npzk tzz583 -> tx303\\n\\ndk pzk -> tzz578\\n\\nbk tzz578 -> \
tx304\\n\\nck tzz578 -> tx305\\n\\nbl pzl -> tzz573\\n\\n-(al tzz573) -> \
tx306\\n\\ncl pzl -> tzz580\\n\\nal tzz580 -> tx307\\n\\ndl tzz573 -> \
tx308\\n\\ndl tzz580 -> tx309\\n\\ntx280 tzz572 -> tx310\\n\\ntx280 tzz564 -> \
tx311\\n\\ntx281 tzz574 -> tx312\\n\\n-pzl -> tzz585\\n\\ntx281 tzz585 -> \
tx313\\n\\ntx282 tzz565 -> tx314\\n\\ntx282 tzz564 -> tx315\\n\\ntx283 tzz575 \
-> tx316\\n\\ntx283 tzz585 -> tx317\\n\\ntx284 tzz565 -> tx318\\n\\ntx284 \
tzz572 -> tx319\\n\\ntx278 + tx280 + tx282 + tx284 -> tx320\\n\\ntx285 tzz575 \
-> tx321\\n\\ntx285 tzz574 -> tx322\\n\\ntx279 + tx281 + tx283 + tx285 -> \
tx323\\n\\ntx286 + tx289 + tx294 + tx297 + tx311 + tx315 -> tx324\\n\\ntx298 \
+ tx301 -> tzz599\\n\\ntx293 + tzz599 -> tzz600\\n\\ntx290 + tzz600 -> tzz603\
\\n\\ntx313 + tx317 + tzz603 -> tx325\\n\\ntx295 + tx296 + tx303 + tx304 + \
tx314 + tx318 -> tx326\\n\\ntx287 + tx288 + tx302 + tx305 + tx310 + tx319 -> \
tx327\\n\\nreciprocal[tx320] -> tx328\\n\\ntx307 + tx308 -> tzz595\\n\\ntx300 \
+ tzz595 -> tzz597\\n\\ntx299 + tzz597 -> tzz598\\n\\ntx316 + tx321 + tzz598 \
-> tx329\\n\\ntx306 + tx309 -> tzz596\\n\\ntx292 + tzz596 -> \
tzz601\\n\\ntx291 + tzz601 -> tzz602\\n\\ntx312 + tx322 + tzz602 -> \
tx330\\n\\nreciprocal[tx323] -> tx331\\n\\ntzz575 -> tx332\\n\\ntzz574 -> \
tx333\\n\\ntzz585 -> tx334\\n\\n2. tx328 -> tzz556\\n\\ntx324 tzz556 -> tx335\
\\n\\ntx326 tzz556 -> tx336\\n\\ntx327 tzz556 -> tx337\\n\\n-2. tx331 -> \
tzz555\\n\\ntx325 tzz555 -> tx338\\n\\ntx329 tzz555 -> tx339\\n\\ntx330 \
tzz555 -> tx340\\n\\n-xl -> tx341\\n\\n-yl -> tx342\\n\\n-zl -> \
tx343\\n\\ntx341 + xk -> tzz588\\n\\ntx336 + tzz588 -> tzz590\\n\\ntx332 + \
tzz590 -> tzz594\\n\\npxk + tzz594 -> tzz606\\n\\ntx339 + tzz606 -> \
tx344\\n\\ntx342 + yk -> tzz587\\n\\ntx337 + tzz587 -> tzz589\\n\\ntx333 + \
tzz589 -> tzz593\\n\\npyk + tzz593 -> tzz605\\n\\ntx340 + tzz605 -> \
tx345\\n\\ntx343 + zk -> tzz586\\n\\ntx335 + tzz586 -> tzz591\\n\\ntx334 + \
tzz591 -> tzz592\\n\\npzk + tzz592 -> tzz604\\n\\ntx338 + tzz604 -> \
tx346\\n\\npower2[tx344] -> tx347\\n\\npower2[tx345] -> \
tx348\\n\\npower2[tx346] -> tx349\\n\\ntx347 + tx348 + tx349 -> \
tx350\\n\\n-r0 -> tx351\\n\\nmysqrt[tx350] -> tx352\\n\\ntx351 + tx352 -> \
tx353\\n\\npower2[tx353] -> tx354\\n\\nks tx354 -> \
Energy\\n\\nCCode[STAPLE_ENERGY_ACCUMULATE(Energy);]\\n\\ntx283 tx332 -> \
tx355\\n\\ntx285 tx332 -> tx356\\n\\ntx281 tx333 -> tx357\\n\\ntx285 tx333 -> \
tx358\\n\\ntx281 tx334 -> tx359\\n\\ntx283 tx334 -> tx360\\n\\ntx355 + tx356 \
+ tzz598 -> tx361\\n\\ntx357 + tx358 + tzz602 -> tx362\\n\\ntx359 + tx360 + \
tzz603 -> tx363\\n\\nck tzz565 -> tx364\\n\\ntzz579 -> tx365\\n\\nbk pyk -> \
tx366\\n\\ndk tzz572 -> tx367\\n\\nbk tzz564 -> tx368\\n\\nck pzk -> tx369\\n\
\\ntx361 tzz555 -> tx370\\n\\ntx362 tzz555 -> tx371\\n\\ntx363 tzz555 -> \
tx372\\n\\npower2[tx328] -> tx373\\n\\ntx364 + tx366 -> tx374\\n\\ntx365 + \
tx368 -> tx375\\n\\ntx367 + tx369 -> tx376\\n\\ntx370 + tzz606 -> \
tx377\\n\\ntx371 + tzz605 -> tx378\\n\\ntx372 + tzz604 -> tx379\\n\\n-4. \
tx373 -> tzz560\\n\\ntx324 tzz560 -> tzz571\\n\\nak tzz571 -> \
tx380\\n\\ntx326 tzz560 -> tzz570\\n\\nak tzz570 -> tx381\\n\\ntx327 tzz560 \
-> tzz569\\n\\nak tzz569 -> tx382\\n\\ntx374 tzz556 -> tx383\\n\\ntx375 \
tzz556 -> tx384\\n\\ntx376 tzz556 -> tx385\\n\\npower2[tx377] -> \
tx386\\n\\npower2[tx378] -> tx387\\n\\npower2[tx379] -> tx388\\n\\ntx380 + \
tx383 -> tx389\\n\\ntx382 + tx384 -> tx390\\n\\ntx381 + tx385 -> \
tx391\\n\\ntx386 + tx387 + tx388 -> tx392\\n\\n2. tx379 -> tzz561\\n\\ntx389 \
tzz561 -> tx393\\n\\n2. tx378 -> tzz562\\n\\ntx390 tzz562 -> tx394\\n\\n2. \
tx377 -> tzz563\\n\\ntx391 tzz563 -> tx395\\n\\nmysqrt[tx392] -> \
tx396\\n\\nreciprocal[tx396] -> tx397\\n\\ntx393 + tx394 + tx395 -> \
tx398\\n\\ntx351 + tx396 -> tx399\\n\\ntx397 tx399 -> tzz557\\n\\nks tzz557 \
-> tzz558\\n\\ntx398 tzz558 -> gak\\n\\n-gak -> \
fak\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 0, fak );]\\n\\nck pxk -> tx400\\n\
\\nak pyk -> tx401\\n\\ntzz582 -> tx402\\n\\nak tzz564 -> tx403\\n\\n-2. bk \
pzk -> tx404\\n\\ntzz578 -> tx405\\n\\n-2. tx366 -> tx406\\n\\ntx365 + tx401 \
+ tx404 -> tx407\\n\\ntx402 + tx405 -> tx408\\n\\ntx400 + tx403 + tx406 -> \
tx409\\n\\nbk tzz571 -> tx410\\n\\nbk tzz570 -> tx411\\n\\nbk tzz569 -> tx412\
\\n\\ntx407 tzz556 -> tx413\\n\\ntx408 tzz556 -> tx414\\n\\ntx409 tzz556 -> \
tx415\\n\\ntx410 + tx413 -> tx416\\n\\ntx411 + tx414 -> tx417\\n\\ntx412 + \
tx415 -> tx418\\n\\ntx416 tzz561 -> tx419\\n\\ntx417 tzz563 -> \
tx420\\n\\ntx418 tzz562 -> tx421\\n\\ntx419 + tx420 + tx421 -> \
tx422\\n\\ntx422 tzz558 -> gbk\\n\\n-gbk -> \
fbk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 1, fbk );]\\n\\nak tzz565 -> tx423\
\\n\\nbk pxk -> tx424\\n\\ndk pyk -> tx425\\n\\nak pzk -> tx426\\n\\n-2. \
tx369 -> tx427\\n\\n-2. tx400 -> tx428\\n\\ntx405 + tx424 -> tx429\\n\\ntx423 \
+ tx425 + tx427 -> tx430\\n\\ntx366 + tx426 + tx428 -> tx431\\n\\nck tzz571 \
-> tx432\\n\\nck tzz570 -> tx433\\n\\nck tzz569 -> tx434\\n\\ntx429 tzz556 -> \
tx435\\n\\ntx430 tzz556 -> tx436\\n\\ntx431 tzz556 -> tx437\\n\\ntx434 + \
tx435 -> tx438\\n\\ntx432 + tx436 -> tx439\\n\\ntx433 + tx437 -> \
tx440\\n\\ntx438 tzz562 -> tx441\\n\\ntx439 tzz561 -> tx442\\n\\ntx440 tzz563 \
-> tx443\\n\\ntx441 + tx442 + tx443 -> tx444\\n\\ntx444 tzz558 -> \
gck\\n\\n-gck -> fck\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 2, fck \
);]\\n\\nak pxk -> tx445\\n\\nbk pzk -> tx446\\n\\n-2. tx365 -> \
tx447\\n\\n-tx401 -> tx448\\n\\n-2. tx425 -> tx449\\n\\ntx402 + tx424 -> \
tx450\\n\\ntx446 + tx447 + tx448 -> tx451\\n\\ntx369 + tx445 + tx449 -> tx452\
\\n\\ndk tzz571 -> tx453\\n\\ndk tzz570 -> tx454\\n\\ndk tzz569 -> \
tx455\\n\\ntx450 tzz556 -> tx456\\n\\ntx451 tzz556 -> tx457\\n\\ntx452 tzz556 \
-> tx458\\n\\ntx453 + tx456 -> tx459\\n\\ntx454 + tx457 -> tx460\\n\\ntx455 + \
tx458 -> tx461\\n\\ntx459 tzz561 -> tx462\\n\\ntx460 tzz563 -> \
tx463\\n\\ntx461 tzz562 -> tx464\\n\\ntx462 + tx463 + tx464 -> \
tx465\\n\\ntx465 tzz558 -> gdk\\n\\n-gdk -> \
fdk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 3, fdk );]\\n\\ntzz558 tzz563 -> \
gxk\\n\\n-gxk -> fxk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 4, fxk \
);]\\n\\ntzz558 tzz562 -> gyk\\n\\n-gyk -> \
fyk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 5, fyk );]\\n\\ntzz558 tzz561 -> \
gzk\\n\\n-gzk -> fzk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 6, fzk \
);]\\n\\ntzz577 -> tx466\\n\\nbl pyl -> tx467\\n\\ntzz580 -> tx468\\n\\ncl \
tx332 -> tx469\\n\\ndl tx333 -> tx470\\n\\nbl tx334 -> \
tx471\\n\\npower2[tx331] -> tx472\\n\\ntx467 + tx469 -> tx473\\n\\ntx468 + \
tx470 -> tx474\\n\\ntx466 + tx471 -> tx475\\n\\n4. tx472 -> tzz559\\n\\ntx361 \
tzz559 -> tzz568\\n\\nal tzz568 -> tx476\\n\\ntx362 tzz559 -> tzz567\\n\\nal \
tzz567 -> tx477\\n\\ntx363 tzz559 -> tzz566\\n\\nal tzz566 -> \
tx478\\n\\ntx473 tzz555 -> tx479\\n\\ntx474 tzz555 -> tx480\\n\\ntx475 tzz555 \
-> tx481\\n\\ntx478 + tx479 -> tx482\\n\\ntx476 + tx480 -> tx483\\n\\ntx477 + \
tx481 -> tx484\\n\\ntx482 tzz561 -> tx485\\n\\ntx483 tzz563 -> \
tx486\\n\\ntx484 tzz562 -> tx487\\n\\ntx485 + tx486 + tx487 -> \
tx488\\n\\ntx488 tzz558 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\ncl pxl -> tx489\\n\
\\nal pyl -> tx490\\n\\ntzz581 -> tx491\\n\\n-2. tzz573 -> tx492\\n\\ndl pzl \
-> tx493\\n\\nal tx334 -> tx494\\n\\n-2. tx467 -> tx495\\n\\ntx466 + tx490 + \
tx492 -> tx496\\n\\ntx491 + tx493 -> tx497\\n\\ntx489 + tx494 + tx495 -> \
tx498\\n\\nbl tzz568 -> tx499\\n\\nbl tzz567 -> tx500\\n\\nbl tzz566 -> tx501\
\\n\\ntx496 tzz555 -> tx502\\n\\ntx497 tzz555 -> tx503\\n\\ntx498 tzz555 -> \
tx504\\n\\ntx501 + tx502 -> tx505\\n\\ntx499 + tx503 -> tx506\\n\\ntx500 + \
tx504 -> tx507\\n\\ntx505 tzz561 -> tx508\\n\\ntx506 tzz563 -> \
tx509\\n\\ntx507 tzz562 -> tx510\\n\\ntx508 + tx509 + tx510 -> \
tx511\\n\\ntx511 tzz558 -> gbl\\n\\n-gbl -> \
fbl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 1, fbl );]\\n\\nbl pxl -> tx512\\n\
\\ndl pyl -> tx513\\n\\nal pzl -> tx514\\n\\nal tx332 -> tx515\\n\\n-2. tx468 \
-> tx516\\n\\n-2. tx489 -> tx517\\n\\ntx493 + tx512 -> tx518\\n\\ntx513 + \
tx515 + tx516 -> tx519\\n\\ntx467 + tx514 + tx517 -> tx520\\n\\ncl tzz568 -> \
tx521\\n\\ncl tzz567 -> tx522\\n\\ncl tzz566 -> tx523\\n\\ntx518 tzz555 -> \
tx524\\n\\ntx519 tzz555 -> tx525\\n\\ntx520 tzz555 -> tx526\\n\\ntx522 + \
tx524 -> tx527\\n\\ntx523 + tx525 -> tx528\\n\\ntx521 + tx526 -> \
tx529\\n\\ntx527 tzz562 -> tx530\\n\\ntx528 tzz561 -> tx531\\n\\ntx529 tzz563 \
-> tx532\\n\\ntx530 + tx531 + tx532 -> tx533\\n\\ntx533 tzz558 -> \
gcl\\n\\n-gcl -> fcl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 2, fcl \
);]\\n\\nal pxl -> tx534\\n\\ntzz573 -> tx535\\n\\nal tx333 -> tx536\\n\\n-2. \
tx466 -> tx537\\n\\n-2. tx513 -> tx538\\n\\ntx491 + tx512 -> tx539\\n\\ntx535 \
+ tx536 + tx537 -> tx540\\n\\ntx468 + tx534 + tx538 -> tx541\\n\\ndl tzz568 \
-> tx542\\n\\ndl tzz567 -> tx543\\n\\ndl tzz566 -> tx544\\n\\ntx539 tzz555 -> \
tx545\\n\\ntx540 tzz555 -> tx546\\n\\ntx541 tzz555 -> tx547\\n\\ntx544 + \
tx545 -> tx548\\n\\ntx542 + tx546 -> tx549\\n\\ntx543 + tx547 -> \
tx550\\n\\ntx548 tzz561 -> tx551\\n\\ntx549 tzz563 -> tx552\\n\\ntx550 tzz562 \
-> tx553\\n\\ntx551 + tx552 + tx553 -> tx554\\n\\ntx554 tzz558 -> \
gdl\\n\\n-gdl -> fdl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 3, fdl \
);]\\n\\n-2. tzz558 -> tzz576\\n\\ntx377 tzz576 -> gxl\\n\\n-gxl -> \
fxl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 4, fxl );]\\n\\ntx378 tzz576 -> \
gyl\\n\\n-gyl -> fyl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 5, fyl \
);]\\n\\ntx379 tzz576 -> gzl\\n\\n-gzl -> \
fzl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 6, fzl );]\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.707387984234692*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing declares to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_termDeclares.cc\"\>"}],
  SequenceForm["Writing declares to file: ", "_STAPLE_termDeclares.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.70738798432279*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing code to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_termCode.cc\"\>"}],
  SequenceForm["Writing code to file: ", "_STAPLE_termCode.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.707330300475561*^9, 3.7073409608399897`*^9, 
  3.70738798432628*^9}],

Cell[BoxData["\"\<After removal: \
CCode[STAPLE_SET_PARAMETER(ks,ks);]\\\\n\\\\nCCode[STAPLE_SET_PARAMETER(r0,r0)\
;]\\\\n\\\\nCCode[STAPLE_SET_PARAMETER(I1,rigidBodyK);]\\\\n\\\\nCCode[STAPLE_\
SET_PARAMETER(I2,rigidBodyL);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(ak,I1,0);]\\\
\\n\\\\nCCode[STAPLE_SET_POSITION(bk,I1,1);]\\\\n\\\\nCCode[STAPLE_SET_\
POSITION(ck,I1,2);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(dk,I1,3);]\\\\n\\\\\
nCCode[STAPLE_SET_POSITION(xk,I1,4);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(yk,\
I1,5);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(zk,I1,6);]\\\\n\\\\nCCode[STAPLE_\
SET_POSITION(al,I2,0);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(bl,I2,1);]\\\\n\\\\\
nCCode[STAPLE_SET_POSITION(cl,I2,2);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(dl,\
I2,3);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(xl,I2,4);]\\\\n\\\\nCCode[STAPLE_\
SET_POSITION(yl,I2,5);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(zl,I2,6);]\\\\n\\\\\
nCCode[STAPLE_SET_POINT(pxk,pointK,getX());]\\\\n\\\\nCCode[STAPLE_SET_POINT(\
pyk,pointK,getY());]\\\\n\\\\nCCode[STAPLE_SET_POINT(pzk,pointK,getZ());]\\\\\
n\\\\nCCode[STAPLE_SET_POINT(pxl,pointL,getX());]\\\\n\\\\nCCode[STAPLE_SET_\
POINT(pyl,pointL,getY());]\\\\n\\\\nCCode[STAPLE_SET_POINT(pzl,pointL,getZ());\
]\\\\n\\\\npower2[bk] -> tx198\\\\n\\\\npower2[bl] -> \
tx199\\\\n\\\\npower2[ck] -> tx200\\\\n\\\\npower2[cl] -> \
tx201\\\\n\\\\npower2[dk] -> tx202\\\\n\\\\npower2[dl] -> tx203\\\\n\\\\n-pxk \
-> tzz398\\\\n\\\\nak ck -> tzz417\\\\n\\\\ntzz398 tzz417 -> \
tx204\\\\n\\\\nbk ck pxk -> tx205\\\\n\\\\ndk pxk -> tzz413\\\\n\\\\nak \
tzz413 -> tx206\\\\n\\\\nbk tzz413 -> tx207\\\\n\\\\n-pxl -> \
tzz409\\\\n\\\\nal cl tzz409 -> tx208\\\\n\\\\nbl cl pxl -> tx209\\\\n\\\\ndl \
pxl -> tzz411\\\\n\\\\nal tzz411 -> tx210\\\\n\\\\nbl tzz411 -> \
tx211\\\\n\\\\nak bk -> tzz418\\\\n\\\\npyk tzz418 -> tx212\\\\n\\\\nck pyk \
-> tzz416\\\\n\\\\nbk tzz416 -> tx213\\\\n\\\\n-pyk -> tzz402\\\\n\\\\nak dk \
tzz402 -> tx214\\\\n\\\\ndk tzz416 -> tx215\\\\n\\\\nal bl pyl -> \
tx216\\\\n\\\\ncl pyl -> tzz415\\\\n\\\\nbl tzz415 -> tx217\\\\n\\\\n-pyl -> \
tzz408\\\\n\\\\nal dl tzz408 -> tx218\\\\n\\\\ndl tzz415 -> \
tx219\\\\n\\\\n-pzk -> tzz397\\\\n\\\\ntzz397 tzz418 -> tx220\\\\n\\\\npzk \
tzz417 -> tx221\\\\n\\\\ndk pzk -> tzz412\\\\n\\\\nbk tzz412 -> \
tx222\\\\n\\\\nck tzz412 -> tx223\\\\n\\\\nbl pzl -> tzz406\\\\n\\\\n-(al \
tzz406) -> tx224\\\\n\\\\ncl pzl -> tzz414\\\\n\\\\nal tzz414 -> tx225\\\\n\\\
\\ndl tzz406 -> tx226\\\\n\\\\ndl tzz414 -> tx227\[AliasDelimiter]\
\[AliasDelimiter]\[AliasDelimiter]\[AliasDelimiter]\\\\ntx198 tzz402 -> tx228\
\\\\n\\\\ntx198 tzz397 -> tx229\\\\n\\\\ntx199 tzz408 -> tx230\\\\n\\\\n-pzl \
-> tzz419\\\\n\\\\ntx199 tzz419 -> tx231\\\\n\\\\ntx200 tzz398 -> \
tx232\\\\n\\\\ntx200 tzz397 -> tx233\\\\n\\\\ntx201 tzz409 -> \
tx234\\\\n\\\\ntx201 tzz419 -> tx235\\\\n\\\\ntx202 tzz398 -> \
tx236\\\\n\\\\ntx202 tzz402 -> tx237\\\\n\\\\ntx203 tzz409 -> \
tx238\\\\n\\\\ntx203 tzz408 -> tx239\\\\n\\\\ntx204 + tx207 + tx212 + tx215 + \
tx229 + tx233 -> tx240\\\\n\\\\ntx208 + tx211 + tx216 + tx219 + tx231 + tx235 \
-> tx241\\\\n\\\\ntx213 + tx214 + tx221 + tx222 + tx232 + tx236 -> tx242\\\\n\
\\\\ntx205 + tx206 + tx220 + tx223 + tx228 + tx237 -> tx243\\\\n\\\\ntx217 + \
tx218 + tx225 + tx226 + tx234 + tx238 -> tx244\\\\n\\\\ntx209 + tx210 + tx224 \
+ tx227 + tx230 + tx239 -> tx245\\\\n\\\\ntzz409 -> tx246\\\\n\\\\ntzz408 -> \
tx247\\\\n\\\\ntzz419 -> tx248\\\\n\\\\n2. tx240 -> tx249\\\\n\\\\n-2. tx241 \
-> tx250\\\\n\\\\n2. tx242 -> tx251\\\\n\\\\n2. tx243 -> tx252\\\\n\\\\n-2. \
tx244 -> tx253\\\\n\\\\n-2. tx245 -> tx254\\\\n\\\\n-xl -> tx255\\\\n\\\\n-yl \
-> tx256\\\\n\\\\n-zl -> tx257\\\\n\\\\npxk + tx246 + tx251 + tx253 + tx255 + \
xk -> tx258\\\\n\\\\npyk + tx247 + tx252 + tx254 + tx256 + yk -> tx259\\\\n\\\
\\npzk + tx248 + tx249 + tx250 + tx257 + zk -> tx260\\\\n\\\\npower2[tx258] \
-> tx261\\\\n\\\\npower2[tx259] -> tx262\\\\n\\\\npower2[tx260] -> tx263\\\\n\
\\\\ntx261 + tx262 + tx263 -> tx264\\\\n\\\\n-r0 -> \
tx265\\\\n\\\\nmysqrt[tx264] -> tx266\\\\n\\\\ntx265 + tx266 -> \
tx267\\\\n\\\\npower2[tx267] -> tx268\\\\n\\\\nks tx268 -> \
Energy\\\\n\\\\nCCode[STAPLE_ENERGY_ACCUMULATE(Energy);]\\\\n\\\\ntx201 tx246 \
-> tx269\\\\n\\\\ntx203 tx246 -> tx270\\\\n\\\\ntx199 tx247 -> \
tx271\\\\n\\\\ntx203 tx247 -> tx272\\\\n\\\\ntx199 tx248 -> \
tx273\\\\n\\\\ntx201 tx248 -> tx274\\\\n\\\\ntx217 + tx218 + tx225 + tx226 + \
tx269 + tx270 -> tx275\\\\n\\\\ntx209 + tx210 + tx224 + tx227 + tx271 + tx272 \
-> tx276\\\\n\\\\ntx208 + tx211 + tx216 + tx219 + tx273 + tx274 -> tx277\\\\n\
\\\\n-2. tx275 -> tx278\\\\n\\\\n-2. tx276 -> tx279\\\\n\\\\n-2. tx277 -> \
tx280\\\\n\\\\npxk + tx246 + tx251 + tx255 + tx278 + xk -> tx281\\\\n\\\\npyk \
+ tx247 + tx252 + tx256 + tx279 + yk -> tx282\\\\n\\\\npzk + tx248 + tx249 + \
tx257 + tx280 + zk -> tx283\\\\n\\\\nck tzz398 -> tx284\\\\n\\\\ntzz413 -> \
tx285\\\\n\\\\nbk pyk -> tx286\\\\n\\\\ndk tzz402 -> tx287\\\\n\\\\nbk tzz397 \
-> tx288\\\\n\\\\nck pzk -> tx289\\\\n\\\\npower2[tx281] -> \
tx290\\\\n\\\\npower2[tx282] -> tx291\\\\n\\\\npower2[tx283] -> \
tx292\\\\n\\\\ntx284 + tx286 -> tx293\\\\n\\\\ntx285 + tx288 -> \
tx294\\\\n\\\\ntx287 + tx289 -> tx295\\\\n\\\\ntx290 + tx291 + tx292 -> tx296\
\\\\n\\\\n4. tx283 -> tzz399\\\\n\\\\ntx293 tzz399 -> tx297\\\\n\\\\n4. tx282 \
-> tzz400\\\\n\\\\ntx294 tzz400 -> tx298\\\\n\\\\n4. tx281 -> \
tzz401\\\\n\\\\ntx295 tzz401 -> tx299\\\\n\\\\nmysqrt[tx296] -> \
tx300\\\\n\\\\nreciprocal[tx300] -> tx301\\\\n\\\\ntx297 + tx298 + tx299 -> \
tx302\\\\n\\\\ntx265 + tx300 -> tx303\\\\n\\\\ntx301 tx303 -> \
tzz395\\\\n\\\\nks tzz395 -> tzz396\\\\n\\\\ntx302 tzz396 -> \
gak\\\\n\\\\n-gak -> fak\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 0, fak \
);]\\\\n\\\\nck pxk -> tx304\\\\n\\\\nak pyk -> tx305\\\\n\\\\ntzz416 -> \
tx306\\\\n\\\\nak tzz397 -> tx307\\\\n\\\\n-2. bk pzk -> \
tx308\\\\n\\\\ntzz412 -> tx309\\\\n\\\\n-2. tx286 -> tx310\\\\n\\\\ntx285 + \
tx305 + tx308 -> tx311\\\\n\\\\ntx306 + tx309 -> tx312\\\\n\\\\ntx304 + tx307 \
+ tx310 -> tx313\\\\n\\\\ntx311 tzz399 -> tx314\\\\n\\\\ntx312 tzz401 -> \
tx315\\\\n\\\\ntx313 tzz400 -> tx316\\\\n\\\\ntx314 + tx315 + tx316 -> \
tx317\\\\n\\\\ntx317 tzz396 -> gbk\\\\n\\\\n-gbk -> \
fbk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 1, fbk );]\\\\n\\\\nak tzz398 \
-> tx318\\\\n\\\\nbk pxk -> tx319\\\\n\\\\ndk pyk -> tx320\\\\n\\\\nak pzk -> \
tx321\\\\n\\\\n-2. tx289 -> tx322\\\\n\\\\n-2. tx304 -> tx323\\\\n\\\\ntx309 \
+ tx319 -> tx324\\\\n\\\\ntx318 + tx320 + tx322 -> tx325\\\\n\\\\ntx286 + \
tx321 + tx323 -> tx326\\\\n\\\\ntx324 tzz400 -> tx327\\\\n\\\\ntx325 tzz399 \
-> tx328\\\\n\\\\ntx326 tzz401 -> tx329\\\\n\\\\ntx327 + tx328 + tx329 -> \
tx330\\\\n\\\\ntx330 tzz396 -> gck\\\\n\\\\n-gck -> \
fck\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 2, fck );]\\\\n\\\\nak pxk -> \
tx331\\\\n\\\\nbk pzk -> tx332\\\\n\\\\n-2. tx285 -> tx333\\\\n\\\\n-tx305 -> \
tx334\\\\n\\\\n-2. tx320 -> tx335\\\\n\\\\ntx306 + tx319 -> \
tx336\\\\n\\\\ntx332 + tx333 + tx334 -> tx337\\\\n\\\\ntx289 + tx331 + tx335 \
-> tx338\\\\n\\\\ntx336 tzz399 -> tx339\\\\n\\\\ntx337 tzz401 -> tx340\\\\n\\\
\\ntx338 tzz400 -> tx341\\\\n\\\\ntx339 + tx340 + tx341 -> \
tx342\\\\n\\\\ntx342 tzz396 -> gdk\\\\n\\\\n-gdk -> \
fdk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 3, fdk );]\\\\n\\\\n2. tzz396 \
-> tzz407\\\\n\\\\ntx281 tzz407 -> gxk\\\\n\\\\n-gxk -> \
fxk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 4, fxk );]\\\\n\\\\ntx282 \
tzz407 -> gyk\\\\n\\\\n-gyk -> fyk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, \
5, fyk );]\\\\n\\\\ntx283 tzz407 -> gzk\\\\n\\\\n-gzk -> \
fzk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 6, fzk );]\\\\n\\\\ntzz411 -> \
tx343\\\\n\\\\nbl pyl -> tx344\\\\n\\\\ntzz414 -> tx345\\\\n\\\\ncl tx246 -> \
tx346\\\\n\\\\ndl tx247 -> tx347\\\\n\\\\nbl tx248 -> tx348\\\\n\\\\ntx344 + \
tx346 -> tx349\\\\n\\\\ntx345 + tx347 -> tx350\\\\n\\\\ntx343 + tx348 -> \
tx351\\\\n\\\\n-4. tx283 -> tzz403\\\\n\\\\ntx349 tzz403 -> \
tx352\\\\n\\\\n-4. tx281 -> tzz405\\\\n\\\\ntx350 tzz405 -> \
tx353\\\\n\\\\n-4. tx282 -> tzz404\\\\n\\\\ntx351 tzz404 -> \
tx354\\\\n\\\\ntx352 + tx353 + tx354 -> tx355\\\\n\\\\ntx355 tzz396 -> \
gal\\\\n\\\\n-gal -> fal\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 0, fal \
);]\\\\n\\\\ncl pxl -> tx356\\\\n\\\\nal pyl -> tx357\\\\n\\\\ntzz415 -> \
tx358\\\\n\\\\n-2. tzz406 -> tx359\\\\n\\\\ndl pzl -> tx360\\\\n\\\\nal tx248 \
-> tx361\\\\n\\\\n-2. tx344 -> tx362\\\\n\\\\ntx343 + tx357 + tx359 -> \
tx363\\\\n\\\\ntx358 + tx360 -> tx364\\\\n\\\\ntx356 + tx361 + tx362 -> tx365\
\\\\n\\\\ntx363 tzz403 -> tx366\\\\n\\\\ntx364 tzz405 -> tx367\\\\n\\\\ntx365 \
tzz404 -> tx368\\\\n\\\\ntx366 + tx367 + tx368 -> tx369\\\\n\\\\ntx369 tzz396 \
-> gbl\\\\n\\\\n-gbl -> fbl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 1, fbl \
);]\\\\n\\\\nbl pxl -> tx370\\\\n\\\\ndl pyl -> tx371\\\\n\\\\nal pzl -> \
tx372\\\\n\\\\nal tx246 -> tx373\\\\n\\\\n-2. tx345 -> tx374\\\\n\\\\n-2. \
tx356 -> tx375\\\\n\\\\ntx360 + tx370 -> tx376\\\\n\\\\ntx371 + tx373 + tx374 \
-> tx377\\\\n\\\\ntx344 + tx372 + tx375 -> tx378\\\\n\\\\ntx376 tzz404 -> \
tx379\\\\n\\\\ntx377 tzz403 -> tx380\\\\n\\\\ntx378 tzz405 -> \
tx381\\\\n\\\\ntx379 + tx380 + tx381 -> tx382\\\\n\\\\ntx382 tzz396 -> \
gcl\\\\n\\\\n-gcl -> fcl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 2, fcl \
);]\\\\n\\\\nal pxl -> tx383\\\\n\\\\ntzz406 -> tx384\\\\n\\\\nal tx247 -> \
tx385\\\\n\\\\n-2. tx343 -> tx386\\\\n\\\\n-2. tx371 -> tx387\\\\n\\\\ntx358 \
+ tx370 -> tx388\\\\n\\\\ntx384 + tx385 + tx386 -> tx389\\\\n\\\\ntx345 + \
tx383 + tx387 -> tx390\\\\n\\\\ntx388 tzz403 -> tx391\\\\n\\\\ntx389 tzz405 \
-> tx392\\\\n\\\\ntx390 tzz404 -> tx393\\\\n\\\\ntx391 + tx392 + tx393 -> \
tx394\\\\n\\\\ntx394 tzz396 -> gdl\\\\n\\\\n-gdl -> \
fdl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 3, fdl );]\\\\n\\\\n-2. tzz396 \
-> tzz410\\\\n\\\\ntx281 tzz410 -> gxl\\\\n\\\\n-gxl -> \
fxl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 4, fxl );]\\\\n\\\\ntx282 \
tzz410 -> gyl\\\\n\\\\n-gyl -> fyl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, \
5, fyl );]\\\\n\\\\ntx283 tzz410 -> gzl\\\\n\\\\n-gzl -> \
fzl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 6, fzl );]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.702666640270697*^9, 3.702667223609469*^9, 3.702889707661439*^9, 
   3.702891210318593*^9, 3.702894400586055*^9, 3.702894500717475*^9, 
   3.7073192647294073`*^9, 3.707321572021159*^9, 3.707328272120843*^9, 
   3.7073302583131533`*^9, 3.707330833272649*^9, 3.7073425954669437`*^9, {
   3.707354522411519*^9, 3.707354530945825*^9}}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.70734259557329*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz409 -> tx246, tzz408 -> tx247, \
tzz419 -> tx248, tzz413 -> tx285, tzz416 -> tx306, tzz412 -> tx309, tzz411 -> \
tx343, tzz414 -> tx345, tzz415 -> tx358, tzz406 -> tx384}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.707342595576136*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.7073425955789967`*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz409 -> \
tx246\\n\\ntzz408 -> tx247\\n\\ntzz419 -> tx248\\n\\ntzz413 -> \
tx285\\n\\ntzz416 -> tx306\\n\\ntzz412 -> tx309\\n\\ntzz411 -> \
tx343\\n\\ntzz414 -> tx345\\n\\ntzz415 -> tx358\\n\\ntzz406 -> tx384\"\>"], \
"Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.707342595581746*^9}],

Cell[BoxData["\<\"After removal: \
CCode[STAPLE_SET_PARAMETER(ks,ks);]\\n\\nCCode[STAPLE_SET_PARAMETER(r0,r0);]\\\
n\\nCCode[STAPLE_SET_PARAMETER(I1,rigidBodyK);]\\n\\nCCode[STAPLE_SET_\
PARAMETER(I2,rigidBodyL);]\\n\\nCCode[STAPLE_SET_POSITION(ak,I1,0);]\\n\\\
nCCode[STAPLE_SET_POSITION(bk,I1,1);]\\n\\nCCode[STAPLE_SET_POSITION(ck,I1,2);\
]\\n\\nCCode[STAPLE_SET_POSITION(dk,I1,3);]\\n\\nCCode[STAPLE_SET_POSITION(xk,\
I1,4);]\\n\\nCCode[STAPLE_SET_POSITION(yk,I1,5);]\\n\\nCCode[STAPLE_SET_\
POSITION(zk,I1,6);]\\n\\nCCode[STAPLE_SET_POSITION(al,I2,0);]\\n\\nCCode[\
STAPLE_SET_POSITION(bl,I2,1);]\\n\\nCCode[STAPLE_SET_POSITION(cl,I2,2);]\\n\\\
nCCode[STAPLE_SET_POSITION(dl,I2,3);]\\n\\nCCode[STAPLE_SET_POSITION(xl,I2,4);\
]\\n\\nCCode[STAPLE_SET_POSITION(yl,I2,5);]\\n\\nCCode[STAPLE_SET_POSITION(zl,\
I2,6);]\\n\\nCCode[STAPLE_SET_POINT(pxk,pointK,getX());]\\n\\nCCode[STAPLE_\
SET_POINT(pyk,pointK,getY());]\\n\\nCCode[STAPLE_SET_POINT(pzk,pointK,getZ());\
]\\n\\nCCode[STAPLE_SET_POINT(pxl,pointL,getX());]\\n\\nCCode[STAPLE_SET_\
POINT(pyl,pointL,getY());]\\n\\nCCode[STAPLE_SET_POINT(pzl,pointL,getZ());]\\\
n\\npower2[bk] -> tx198\\n\\npower2[bl] -> tx199\\n\\npower2[ck] -> \
tx200\\n\\npower2[cl] -> tx201\\n\\npower2[dk] -> tx202\\n\\npower2[dl] -> \
tx203\\n\\n-pxk -> tzz398\\n\\nak ck -> tzz417\\n\\ntzz398 tzz417 -> tx204\\n\
\\nbk ck pxk -> tx205\\n\\ndk pxk -> tzz413\\n\\nak tzz413 -> tx206\\n\\nbk \
tzz413 -> tx207\\n\\n-pxl -> tzz409\\n\\nal cl tzz409 -> tx208\\n\\nbl cl pxl \
-> tx209\\n\\ndl pxl -> tzz411\\n\\nal tzz411 -> tx210\\n\\nbl tzz411 -> \
tx211\\n\\nak bk -> tzz418\\n\\npyk tzz418 -> tx212\\n\\nck pyk -> \
tzz416\\n\\nbk tzz416 -> tx213\\n\\n-pyk -> tzz402\\n\\nak dk tzz402 -> tx214\
\\n\\ndk tzz416 -> tx215\\n\\nal bl pyl -> tx216\\n\\ncl pyl -> \
tzz415\\n\\nbl tzz415 -> tx217\\n\\n-pyl -> tzz408\\n\\nal dl tzz408 -> tx218\
\\n\\ndl tzz415 -> tx219\\n\\n-pzk -> tzz397\\n\\ntzz397 tzz418 -> \
tx220\\n\\npzk tzz417 -> tx221\\n\\ndk pzk -> tzz412\\n\\nbk tzz412 -> \
tx222\\n\\nck tzz412 -> tx223\\n\\nbl pzl -> tzz406\\n\\n-(al tzz406) -> \
tx224\\n\\ncl pzl -> tzz414\\n\\nal tzz414 -> tx225\\n\\ndl tzz406 -> \
tx226\\n\\ndl tzz414 -> tx227\\n\\ntx198 tzz402 -> tx228\\n\\ntx198 tzz397 -> \
tx229\\n\\ntx199 tzz408 -> tx230\\n\\n-pzl -> tzz419\\n\\ntx199 tzz419 -> \
tx231\\n\\ntx200 tzz398 -> tx232\\n\\ntx200 tzz397 -> tx233\\n\\ntx201 tzz409 \
-> tx234\\n\\ntx201 tzz419 -> tx235\\n\\ntx202 tzz398 -> tx236\\n\\ntx202 \
tzz402 -> tx237\\n\\ntx203 tzz409 -> tx238\\n\\ntx203 tzz408 -> \
tx239\\n\\ntx204 + tx207 + tx212 + tx215 + tx229 + tx233 -> tx240\\n\\ntx208 \
+ tx211 + tx216 + tx219 + tx231 + tx235 -> tx241\\n\\ntx213 + tx214 + tx221 + \
tx222 + tx232 + tx236 -> tx242\\n\\ntx205 + tx206 + tx220 + tx223 + tx228 + \
tx237 -> tx243\\n\\ntx217 + tx218 + tx225 + tx226 + tx234 + tx238 -> tx244\\n\
\\ntx209 + tx210 + tx224 + tx227 + tx230 + tx239 -> tx245\\n\\ntzz409 -> \
tx246\\n\\ntzz408 -> tx247\\n\\ntzz419 -> tx248\\n\\n2. tx240 -> \
tx249\\n\\n-2. tx241 -> tx250\\n\\n2. tx242 -> tx251\\n\\n2. tx243 -> \
tx252\\n\\n-2. tx244 -> tx253\\n\\n-2. tx245 -> tx254\\n\\n-xl -> \
tx255\\n\\n-yl -> tx256\\n\\n-zl -> tx257\\n\\npxk + tx246 + tx251 + tx253 + \
tx255 + xk -> tx258\\n\\npyk + tx247 + tx252 + tx254 + tx256 + yk -> tx259\\n\
\\npzk + tx248 + tx249 + tx250 + tx257 + zk -> tx260\\n\\npower2[tx258] -> \
tx261\\n\\npower2[tx259] -> tx262\\n\\npower2[tx260] -> tx263\\n\\ntx261 + \
tx262 + tx263 -> tx264\\n\\n-r0 -> tx265\\n\\nmysqrt[tx264] -> \
tx266\\n\\ntx265 + tx266 -> tx267\\n\\npower2[tx267] -> tx268\\n\\nks tx268 \
-> Energy\\n\\nCCode[STAPLE_ENERGY_ACCUMULATE(Energy);]\\n\\ntx201 tx246 -> \
tx269\\n\\ntx203 tx246 -> tx270\\n\\ntx199 tx247 -> tx271\\n\\ntx203 tx247 -> \
tx272\\n\\ntx199 tx248 -> tx273\\n\\ntx201 tx248 -> tx274\\n\\ntx217 + tx218 \
+ tx225 + tx226 + tx269 + tx270 -> tx275\\n\\ntx209 + tx210 + tx224 + tx227 + \
tx271 + tx272 -> tx276\\n\\ntx208 + tx211 + tx216 + tx219 + tx273 + tx274 -> \
tx277\\n\\n-2. tx275 -> tx278\\n\\n-2. tx276 -> tx279\\n\\n-2. tx277 -> tx280\
\\n\\npxk + tx246 + tx251 + tx255 + tx278 + xk -> tx281\\n\\npyk + tx247 + \
tx252 + tx256 + tx279 + yk -> tx282\\n\\npzk + tx248 + tx249 + tx257 + tx280 \
+ zk -> tx283\\n\\nck tzz398 -> tx284\\n\\ntzz413 -> tx285\\n\\nbk pyk -> \
tx286\\n\\ndk tzz402 -> tx287\\n\\nbk tzz397 -> tx288\\n\\nck pzk -> tx289\\n\
\\npower2[tx281] -> tx290\\n\\npower2[tx282] -> tx291\\n\\npower2[tx283] -> \
tx292\\n\\ntx284 + tx286 -> tx293\\n\\ntx285 + tx288 -> tx294\\n\\ntx287 + \
tx289 -> tx295\\n\\ntx290 + tx291 + tx292 -> tx296\\n\\n4. tx283 -> tzz399\\n\
\\ntx293 tzz399 -> tx297\\n\\n4. tx282 -> tzz400\\n\\ntx294 tzz400 -> \
tx298\\n\\n4. tx281 -> tzz401\\n\\ntx295 tzz401 -> tx299\\n\\nmysqrt[tx296] \
-> tx300\\n\\nreciprocal[tx300] -> tx301\\n\\ntx297 + tx298 + tx299 -> \
tx302\\n\\ntx265 + tx300 -> tx303\\n\\ntx301 tx303 -> tzz395\\n\\nks tzz395 \
-> tzz396\\n\\ntx302 tzz396 -> gak\\n\\n-gak -> \
fak\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 0, fak );]\\n\\nck pxk -> tx304\\n\
\\nak pyk -> tx305\\n\\ntzz416 -> tx306\\n\\nak tzz397 -> tx307\\n\\n-2. bk \
pzk -> tx308\\n\\ntzz412 -> tx309\\n\\n-2. tx286 -> tx310\\n\\ntx285 + tx305 \
+ tx308 -> tx311\\n\\ntx306 + tx309 -> tx312\\n\\ntx304 + tx307 + tx310 -> \
tx313\\n\\ntx311 tzz399 -> tx314\\n\\ntx312 tzz401 -> tx315\\n\\ntx313 tzz400 \
-> tx316\\n\\ntx314 + tx315 + tx316 -> tx317\\n\\ntx317 tzz396 -> \
gbk\\n\\n-gbk -> fbk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 1, fbk \
);]\\n\\nak tzz398 -> tx318\\n\\nbk pxk -> tx319\\n\\ndk pyk -> tx320\\n\\nak \
pzk -> tx321\\n\\n-2. tx289 -> tx322\\n\\n-2. tx304 -> tx323\\n\\ntx309 + \
tx319 -> tx324\\n\\ntx318 + tx320 + tx322 -> tx325\\n\\ntx286 + tx321 + tx323 \
-> tx326\\n\\ntx324 tzz400 -> tx327\\n\\ntx325 tzz399 -> tx328\\n\\ntx326 \
tzz401 -> tx329\\n\\ntx327 + tx328 + tx329 -> tx330\\n\\ntx330 tzz396 -> \
gck\\n\\n-gck -> fck\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 2, fck \
);]\\n\\nak pxk -> tx331\\n\\nbk pzk -> tx332\\n\\n-2. tx285 -> \
tx333\\n\\n-tx305 -> tx334\\n\\n-2. tx320 -> tx335\\n\\ntx306 + tx319 -> \
tx336\\n\\ntx332 + tx333 + tx334 -> tx337\\n\\ntx289 + tx331 + tx335 -> tx338\
\\n\\ntx336 tzz399 -> tx339\\n\\ntx337 tzz401 -> tx340\\n\\ntx338 tzz400 -> \
tx341\\n\\ntx339 + tx340 + tx341 -> tx342\\n\\ntx342 tzz396 -> gdk\\n\\n-gdk \
-> fdk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 3, fdk );]\\n\\n2. tzz396 -> \
tzz407\\n\\ntx281 tzz407 -> gxk\\n\\n-gxk -> \
fxk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 4, fxk );]\\n\\ntx282 tzz407 -> \
gyk\\n\\n-gyk -> fyk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 5, fyk \
);]\\n\\ntx283 tzz407 -> gzk\\n\\n-gzk -> \
fzk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 6, fzk );]\\n\\ntzz411 -> tx343\\n\
\\nbl pyl -> tx344\\n\\ntzz414 -> tx345\\n\\ncl tx246 -> tx346\\n\\ndl tx247 \
-> tx347\\n\\nbl tx248 -> tx348\\n\\ntx344 + tx346 -> tx349\\n\\ntx345 + \
tx347 -> tx350\\n\\ntx343 + tx348 -> tx351\\n\\n-4. tx283 -> \
tzz403\\n\\ntx349 tzz403 -> tx352\\n\\n-4. tx281 -> tzz405\\n\\ntx350 tzz405 \
-> tx353\\n\\n-4. tx282 -> tzz404\\n\\ntx351 tzz404 -> tx354\\n\\ntx352 + \
tx353 + tx354 -> tx355\\n\\ntx355 tzz396 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\ncl pxl -> tx356\\n\
\\nal pyl -> tx357\\n\\ntzz415 -> tx358\\n\\n-2. tzz406 -> tx359\\n\\ndl pzl \
-> tx360\\n\\nal tx248 -> tx361\\n\\n-2. tx344 -> tx362\\n\\ntx343 + tx357 + \
tx359 -> tx363\\n\\ntx358 + tx360 -> tx364\\n\\ntx356 + tx361 + tx362 -> \
tx365\\n\\ntx363 tzz403 -> tx366\\n\\ntx364 tzz405 -> tx367\\n\\ntx365 tzz404 \
-> tx368\\n\\ntx366 + tx367 + tx368 -> tx369\\n\\ntx369 tzz396 -> \
gbl\\n\\n-gbl -> fbl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 1, fbl \
);]\\n\\nbl pxl -> tx370\\n\\ndl pyl -> tx371\\n\\nal pzl -> tx372\\n\\nal \
tx246 -> tx373\\n\\n-2. tx345 -> tx374\\n\\n-2. tx356 -> tx375\\n\\ntx360 + \
tx370 -> tx376\\n\\ntx371 + tx373 + tx374 -> tx377\\n\\ntx344 + tx372 + tx375 \
-> tx378\\n\\ntx376 tzz404 -> tx379\\n\\ntx377 tzz403 -> tx380\\n\\ntx378 \
tzz405 -> tx381\\n\\ntx379 + tx380 + tx381 -> tx382\\n\\ntx382 tzz396 -> \
gcl\\n\\n-gcl -> fcl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 2, fcl \
);]\\n\\nal pxl -> tx383\\n\\ntzz406 -> tx384\\n\\nal tx247 -> tx385\\n\\n-2. \
tx343 -> tx386\\n\\n-2. tx371 -> tx387\\n\\ntx358 + tx370 -> tx388\\n\\ntx384 \
+ tx385 + tx386 -> tx389\\n\\ntx345 + tx383 + tx387 -> tx390\\n\\ntx388 \
tzz403 -> tx391\\n\\ntx389 tzz405 -> tx392\\n\\ntx390 tzz404 -> \
tx393\\n\\ntx391 + tx392 + tx393 -> tx394\\n\\ntx394 tzz396 -> gdl\\n\\n-gdl \
-> fdl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 3, fdl );]\\n\\n-2. tzz396 -> \
tzz410\\n\\ntx281 tzz410 -> gxl\\n\\n-gxl -> \
fxl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 4, fxl );]\\n\\ntx282 tzz410 -> \
gyl\\n\\n-gyl -> fyl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 5, fyl \
);]\\n\\ntx283 tzz410 -> gzl\\n\\n-gzl -> \
fzl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 6, fzl );]\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.707342595585619*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz409 -> tx246, tzz408 -> tx247, \
tzz419 -> tx248, tzz413 -> tx285, tzz416 -> tx306, tzz412 -> tx309, tzz411 -> \
tx343, tzz414 -> tx345, tzz415 -> tx358, tzz406 -> tx384}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.707342598454301*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.707342598457505*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz409 -> \
tx246\\n\\ntzz408 -> tx247\\n\\ntzz419 -> tx248\\n\\ntzz413 -> \
tx285\\n\\ntzz416 -> tx306\\n\\ntzz412 -> tx309\\n\\ntzz411 -> \
tx343\\n\\ntzz414 -> tx345\\n\\ntzz415 -> tx358\\n\\ntzz406 -> tx384\"\>"], \
"Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.707342598460785*^9}],

Cell[BoxData["\<\"After removal: \
CCode[STAPLE_SET_PARAMETER(ks,ks);]\\n\\nCCode[STAPLE_SET_PARAMETER(r0,r0);]\\\
n\\nCCode[STAPLE_SET_PARAMETER(I1,rigidBodyK);]\\n\\nCCode[STAPLE_SET_\
PARAMETER(I2,rigidBodyL);]\\n\\nCCode[STAPLE_SET_POSITION(ak,I1,0);]\\n\\\
nCCode[STAPLE_SET_POSITION(bk,I1,1);]\\n\\nCCode[STAPLE_SET_POSITION(ck,I1,2);\
]\\n\\nCCode[STAPLE_SET_POSITION(dk,I1,3);]\\n\\nCCode[STAPLE_SET_POSITION(xk,\
I1,4);]\\n\\nCCode[STAPLE_SET_POSITION(yk,I1,5);]\\n\\nCCode[STAPLE_SET_\
POSITION(zk,I1,6);]\\n\\nCCode[STAPLE_SET_POSITION(al,I2,0);]\\n\\nCCode[\
STAPLE_SET_POSITION(bl,I2,1);]\\n\\nCCode[STAPLE_SET_POSITION(cl,I2,2);]\\n\\\
nCCode[STAPLE_SET_POSITION(dl,I2,3);]\\n\\nCCode[STAPLE_SET_POSITION(xl,I2,4);\
]\\n\\nCCode[STAPLE_SET_POSITION(yl,I2,5);]\\n\\nCCode[STAPLE_SET_POSITION(zl,\
I2,6);]\\n\\nCCode[STAPLE_SET_POINT(pxk,pointK,getX());]\\n\\nCCode[STAPLE_\
SET_POINT(pyk,pointK,getY());]\\n\\nCCode[STAPLE_SET_POINT(pzk,pointK,getZ());\
]\\n\\nCCode[STAPLE_SET_POINT(pxl,pointL,getX());]\\n\\nCCode[STAPLE_SET_\
POINT(pyl,pointL,getY());]\\n\\nCCode[STAPLE_SET_POINT(pzl,pointL,getZ());]\\\
n\\npower2[bk] -> tx198\\n\\npower2[bl] -> tx199\\n\\npower2[ck] -> \
tx200\\n\\npower2[cl] -> tx201\\n\\npower2[dk] -> tx202\\n\\npower2[dl] -> \
tx203\\n\\n-pxk -> tzz398\\n\\nak ck -> tzz417\\n\\ntzz398 tzz417 -> tx204\\n\
\\nbk ck pxk -> tx205\\n\\ndk pxk -> tzz413\\n\\nak tzz413 -> tx206\\n\\nbk \
tzz413 -> tx207\\n\\n-pxl -> tzz409\\n\\nal cl tzz409 -> tx208\\n\\nbl cl pxl \
-> tx209\\n\\ndl pxl -> tzz411\\n\\nal tzz411 -> tx210\\n\\nbl tzz411 -> \
tx211\\n\\nak bk -> tzz418\\n\\npyk tzz418 -> tx212\\n\\nck pyk -> \
tzz416\\n\\nbk tzz416 -> tx213\\n\\n-pyk -> tzz402\\n\\nak dk tzz402 -> tx214\
\\n\\ndk tzz416 -> tx215\\n\\nal bl pyl -> tx216\\n\\ncl pyl -> \
tzz415\\n\\nbl tzz415 -> tx217\\n\\n-pyl -> tzz408\\n\\nal dl tzz408 -> tx218\
\\n\\ndl tzz415 -> tx219\\n\\n-pzk -> tzz397\\n\\ntzz397 tzz418 -> \
tx220\\n\\npzk tzz417 -> tx221\\n\\ndk pzk -> tzz412\\n\\nbk tzz412 -> \
tx222\\n\\nck tzz412 -> tx223\\n\\nbl pzl -> tzz406\\n\\n-(al tzz406) -> \
tx224\\n\\ncl pzl -> tzz414\\n\\nal tzz414 -> tx225\\n\\ndl tzz406 -> \
tx226\\n\\ndl tzz414 -> tx227\\n\\ntx198 tzz402 -> tx228\\n\\ntx198 tzz397 -> \
tx229\\n\\ntx199 tzz408 -> tx230\\n\\n-pzl -> tzz419\\n\\ntx199 tzz419 -> \
tx231\\n\\ntx200 tzz398 -> tx232\\n\\ntx200 tzz397 -> tx233\\n\\ntx201 tzz409 \
-> tx234\\n\\ntx201 tzz419 -> tx235\\n\\ntx202 tzz398 -> tx236\\n\\ntx202 \
tzz402 -> tx237\\n\\ntx203 tzz409 -> tx238\\n\\ntx203 tzz408 -> \
tx239\\n\\ntx204 + tx207 + tx212 + tx215 + tx229 + tx233 -> tx240\\n\\ntx216 \
+ tx219 -> tzz433\\n\\ntx211 + tzz433 -> tzz434\\n\\ntx208 + tzz434 -> tzz437\
\\n\\ntx231 + tx235 + tzz437 -> tx241\\n\\ntx213 + tx214 + tx221 + tx222 + \
tx232 + tx236 -> tx242\\n\\ntx205 + tx206 + tx220 + tx223 + tx228 + tx237 -> \
tx243\\n\\ntx225 + tx226 -> tzz429\\n\\ntx218 + tzz429 -> tzz431\\n\\ntx217 + \
tzz431 -> tzz432\\n\\ntx234 + tx238 + tzz432 -> tx244\\n\\ntx224 + tx227 -> \
tzz430\\n\\ntx210 + tzz430 -> tzz435\\n\\ntx209 + tzz435 -> tzz436\\n\\ntx230 \
+ tx239 + tzz436 -> tx245\\n\\ntzz409 -> tx246\\n\\ntzz408 -> \
tx247\\n\\ntzz419 -> tx248\\n\\n2. tx240 -> tx249\\n\\n-2. tx241 -> \
tx250\\n\\n2. tx242 -> tx251\\n\\n2. tx243 -> tx252\\n\\n-2. tx244 -> \
tx253\\n\\n-2. tx245 -> tx254\\n\\n-xl -> tx255\\n\\n-yl -> tx256\\n\\n-zl -> \
tx257\\n\\ntx255 + xk -> tzz422\\n\\ntx251 + tzz422 -> tzz424\\n\\ntx246 + \
tzz424 -> tzz428\\n\\npxk + tzz428 -> tzz440\\n\\ntx253 + tzz440 -> \
tx258\\n\\ntx256 + yk -> tzz421\\n\\ntx252 + tzz421 -> tzz423\\n\\ntx247 + \
tzz423 -> tzz427\\n\\npyk + tzz427 -> tzz439\\n\\ntx254 + tzz439 -> \
tx259\\n\\ntx257 + zk -> tzz420\\n\\ntx249 + tzz420 -> tzz425\\n\\ntx248 + \
tzz425 -> tzz426\\n\\npzk + tzz426 -> tzz438\\n\\ntx250 + tzz438 -> \
tx260\\n\\npower2[tx258] -> tx261\\n\\npower2[tx259] -> \
tx262\\n\\npower2[tx260] -> tx263\\n\\ntx261 + tx262 + tx263 -> \
tx264\\n\\n-r0 -> tx265\\n\\nmysqrt[tx264] -> tx266\\n\\ntx265 + tx266 -> \
tx267\\n\\npower2[tx267] -> tx268\\n\\nks tx268 -> \
Energy\\n\\nCCode[STAPLE_ENERGY_ACCUMULATE(Energy);]\\n\\ntx201 tx246 -> \
tx269\\n\\ntx203 tx246 -> tx270\\n\\ntx199 tx247 -> tx271\\n\\ntx203 tx247 -> \
tx272\\n\\ntx199 tx248 -> tx273\\n\\ntx201 tx248 -> tx274\\n\\ntx269 + tx270 \
+ tzz432 -> tx275\\n\\ntx271 + tx272 + tzz436 -> tx276\\n\\ntx273 + tx274 + \
tzz437 -> tx277\\n\\n-2. tx275 -> tx278\\n\\n-2. tx276 -> tx279\\n\\n-2. \
tx277 -> tx280\\n\\ntx278 + tzz440 -> tx281\\n\\ntx279 + tzz439 -> \
tx282\\n\\ntx280 + tzz438 -> tx283\\n\\nck tzz398 -> tx284\\n\\ntzz413 -> \
tx285\\n\\nbk pyk -> tx286\\n\\ndk tzz402 -> tx287\\n\\nbk tzz397 -> tx288\\n\
\\nck pzk -> tx289\\n\\npower2[tx281] -> tx290\\n\\npower2[tx282] -> tx291\\n\
\\npower2[tx283] -> tx292\\n\\ntx284 + tx286 -> tx293\\n\\ntx285 + tx288 -> \
tx294\\n\\ntx287 + tx289 -> tx295\\n\\ntx290 + tx291 + tx292 -> tx296\\n\\n4. \
tx283 -> tzz399\\n\\ntx293 tzz399 -> tx297\\n\\n4. tx282 -> tzz400\\n\\ntx294 \
tzz400 -> tx298\\n\\n4. tx281 -> tzz401\\n\\ntx295 tzz401 -> \
tx299\\n\\nmysqrt[tx296] -> tx300\\n\\nreciprocal[tx300] -> tx301\\n\\ntx297 \
+ tx298 + tx299 -> tx302\\n\\ntx265 + tx300 -> tx303\\n\\ntx301 tx303 -> \
tzz395\\n\\nks tzz395 -> tzz396\\n\\ntx302 tzz396 -> gak\\n\\n-gak -> \
fak\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 0, fak );]\\n\\nck pxk -> tx304\\n\
\\nak pyk -> tx305\\n\\ntzz416 -> tx306\\n\\nak tzz397 -> tx307\\n\\n-2. bk \
pzk -> tx308\\n\\ntzz412 -> tx309\\n\\n-2. tx286 -> tx310\\n\\ntx285 + tx305 \
+ tx308 -> tx311\\n\\ntx306 + tx309 -> tx312\\n\\ntx304 + tx307 + tx310 -> \
tx313\\n\\ntx311 tzz399 -> tx314\\n\\ntx312 tzz401 -> tx315\\n\\ntx313 tzz400 \
-> tx316\\n\\ntx314 + tx315 + tx316 -> tx317\\n\\ntx317 tzz396 -> \
gbk\\n\\n-gbk -> fbk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 1, fbk \
);]\\n\\nak tzz398 -> tx318\\n\\nbk pxk -> tx319\\n\\ndk pyk -> tx320\\n\\nak \
pzk -> tx321\\n\\n-2. tx289 -> tx322\\n\\n-2. tx304 -> tx323\\n\\ntx309 + \
tx319 -> tx324\\n\\ntx318 + tx320 + tx322 -> tx325\\n\\ntx286 + tx321 + tx323 \
-> tx326\\n\\ntx324 tzz400 -> tx327\\n\\ntx325 tzz399 -> tx328\\n\\ntx326 \
tzz401 -> tx329\\n\\ntx327 + tx328 + tx329 -> tx330\\n\\ntx330 tzz396 -> \
gck\\n\\n-gck -> fck\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 2, fck \
);]\\n\\nak pxk -> tx331\\n\\nbk pzk -> tx332\\n\\n-2. tx285 -> \
tx333\\n\\n-tx305 -> tx334\\n\\n-2. tx320 -> tx335\\n\\ntx306 + tx319 -> \
tx336\\n\\ntx332 + tx333 + tx334 -> tx337\\n\\ntx289 + tx331 + tx335 -> tx338\
\\n\\ntx336 tzz399 -> tx339\\n\\ntx337 tzz401 -> tx340\\n\\ntx338 tzz400 -> \
tx341\\n\\ntx339 + tx340 + tx341 -> tx342\\n\\ntx342 tzz396 -> gdk\\n\\n-gdk \
-> fdk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 3, fdk );]\\n\\n2. tzz396 -> \
tzz407\\n\\ntx281 tzz407 -> gxk\\n\\n-gxk -> \
fxk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 4, fxk );]\\n\\ntx282 tzz407 -> \
gyk\\n\\n-gyk -> fyk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 5, fyk \
);]\\n\\ntx283 tzz407 -> gzk\\n\\n-gzk -> \
fzk\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 6, fzk );]\\n\\ntzz411 -> tx343\\n\
\\nbl pyl -> tx344\\n\\ntzz414 -> tx345\\n\\ncl tx246 -> tx346\\n\\ndl tx247 \
-> tx347\\n\\nbl tx248 -> tx348\\n\\ntx344 + tx346 -> tx349\\n\\ntx345 + \
tx347 -> tx350\\n\\ntx343 + tx348 -> tx351\\n\\n-4. tx283 -> \
tzz403\\n\\ntx349 tzz403 -> tx352\\n\\n-4. tx281 -> tzz405\\n\\ntx350 tzz405 \
-> tx353\\n\\n-4. tx282 -> tzz404\\n\\ntx351 tzz404 -> tx354\\n\\ntx352 + \
tx353 + tx354 -> tx355\\n\\ntx355 tzz396 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\ncl pxl -> tx356\\n\
\\nal pyl -> tx357\\n\\ntzz415 -> tx358\\n\\n-2. tzz406 -> tx359\\n\\ndl pzl \
-> tx360\\n\\nal tx248 -> tx361\\n\\n-2. tx344 -> tx362\\n\\ntx343 + tx357 + \
tx359 -> tx363\\n\\ntx358 + tx360 -> tx364\\n\\ntx356 + tx361 + tx362 -> \
tx365\\n\\ntx363 tzz403 -> tx366\\n\\ntx364 tzz405 -> tx367\\n\\ntx365 tzz404 \
-> tx368\\n\\ntx366 + tx367 + tx368 -> tx369\\n\\ntx369 tzz396 -> \
gbl\\n\\n-gbl -> fbl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 1, fbl \
);]\\n\\nbl pxl -> tx370\\n\\ndl pyl -> tx371\\n\\nal pzl -> tx372\\n\\nal \
tx246 -> tx373\\n\\n-2. tx345 -> tx374\\n\\n-2. tx356 -> tx375\\n\\ntx360 + \
tx370 -> tx376\\n\\ntx371 + tx373 + tx374 -> tx377\\n\\ntx344 + tx372 + tx375 \
-> tx378\\n\\ntx376 tzz404 -> tx379\\n\\ntx377 tzz403 -> tx380\\n\\ntx378 \
tzz405 -> tx381\\n\\ntx379 + tx380 + tx381 -> tx382\\n\\ntx382 tzz396 -> \
gcl\\n\\n-gcl -> fcl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 2, fcl \
);]\\n\\nal pxl -> tx383\\n\\ntzz406 -> tx384\\n\\nal tx247 -> tx385\\n\\n-2. \
tx343 -> tx386\\n\\n-2. tx371 -> tx387\\n\\ntx358 + tx370 -> tx388\\n\\ntx384 \
+ tx385 + tx386 -> tx389\\n\\ntx345 + tx383 + tx387 -> tx390\\n\\ntx388 \
tzz403 -> tx391\\n\\ntx389 tzz405 -> tx392\\n\\ntx390 tzz404 -> \
tx393\\n\\ntx391 + tx392 + tx393 -> tx394\\n\\ntx394 tzz396 -> gdl\\n\\n-gdl \
-> fdl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 3, fdl );]\\n\\n-2. tzz396 -> \
tzz410\\n\\ntx281 tzz410 -> gxl\\n\\n-gxl -> \
fxl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 4, fxl );]\\n\\ntx282 tzz410 -> \
gyl\\n\\n-gyl -> fyl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 5, fyl \
);]\\n\\ntx283 tzz410 -> gzl\\n\\n-gzl -> \
fzl\\n\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 6, fzl );]\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.70734259846412*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing declares to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_termDeclares.cc\"\>"}],
  SequenceForm["Writing declares to file: ", "_STAPLE_termDeclares.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.7073425987700167`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing code to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_STAPLE_termCode.cc\"\>"}],
  SequenceForm["Writing code to file: ", "_STAPLE_termCode.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667223609469*^9, 
  3.702889707661439*^9, 3.702891210318593*^9, 3.702894400586055*^9, 
  3.702894500717475*^9, 3.7073192647294073`*^9, 3.707321572021159*^9, 
  3.707328272120843*^9, 3.7073302583131533`*^9, 3.707330833272649*^9, 
  3.70734259877312*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.702666640270697*^9, 3.702667238826087*^9, 
  3.702667882952414*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.7026672388274307`*^9}],

Cell[BoxData["\<\"Collecting terms\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.70266723887259*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], ":", 
  " ", "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \
\[NoBreak]\\!\\(Null\\\\ \\(\\({\\(\\(Name \[Rule] \\\"CONNECT\\\"\\)\\), \\(\
\\(AdditionalCDeclares \[Rule] \\\"\\\"\\)\\), \\(\\(DerivativeVariables \
\[Rule] \\(\\({x1, y1, z1, x2, y2, z2}\\)\\)\\)\\), \\(\\(Rules \[Rule] \
\\(\\({\\(\\(CCode[\\\"CONNECT_SET_PARAMETER(I1);\\\"]\\)\\), \
\\(\\(CCode[\\\"CONNECT_SET_PARAMETER(I2);\\\"]\\)\\), \
\\(\\(CCode[\\\"CONNECT_SET_POSITION(ak,I1,0);\\\"]\\)\\), \\(\\(\
\[LeftSkeleton] 45 \[RightSkeleton]\\)\\), \\(\\(\\(\\(\\(\\(2\\\\ \
\\(\\(Plus[\\(\\(\[LeftSkeleton] 3 \[RightSkeleton]\\)\\)]\\)\\)\\\\ \
\\(\\(Plus[\\(\\(\[LeftSkeleton] 8 \[RightSkeleton]\\)\\)]\\)\\)\\)\\) + \
\\(\\(2\\\\ \\(\\(Plus[\\(\\(\[LeftSkeleton] 3 \
\[RightSkeleton]\\)\\)]\\)\\)\\\\ \\(\\(Plus[\\(\\(\[LeftSkeleton] 8 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\) + \\(\\(2\\\\ \\(\\(Plus[\\(\\(\
\[LeftSkeleton] 3 \[RightSkeleton]\\)\\)]\\)\\)\\\\ \\(\\(Plus[\\(\\(\
\[LeftSkeleton] 8 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)\\) \[Rule] \
gdl\\)\\), \\(\\(\\(\\(-gdl\\)\\) \[Rule] fdl\\)\\), \\(\\(\[LeftSkeleton] 10 \
\[RightSkeleton]\\)\\)}\\)\\)\\)\\), \\(\\(Input \[Rule] \\(\\({ak, bk, ck, \
dk, xk, yk, zk, ak, bk, ck, dk, xk, yk, zk}\\)\\)\\)\\), \\(\\(Output \[Rule] \
\\(\\({Energy, fak, fbk, fck, fdk, fxk, fyk, fzk, fal, fbl, fcl, fdl, fxl, \
fyl, fzl, connectDeviation}\\)\\)\\)\\)}\\)\\)\\)\[NoBreak] is Protected. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.702666658477009*^9, 3.702667238874064*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667244718501*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667244719933*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.702666640270697*^9, 3.702667244721278*^9, 
  3.702667883206108*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.7026672447226954`*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667244764295*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.70266724476563*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.702666640270697*^9, 3.7026672447676687`*^9, 
  3.702667883390546*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.7026672447691317`*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667244797524*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667244798894*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.702666640270697*^9, 3.7026672448001738`*^9, 
  3.702667883572517*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667244801591*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz318 -> gxk, tzz317 -> gyk, tzz316 \
-> gzk}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.7026672455813513`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.702666640270697*^9, 3.702667245582816*^9, 
  3.702667883759779*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz318 -> gxk\\n\\ntzz317 \
-> gyk\\n\\ntzz316 -> gzk\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667245584216*^9}],

Cell[BoxData["\<\"After removal: \
CCode[STAPLE_SET_PARAMETER(I1);]\\\\n\\\\nCCode[STAPLE_SET_PARAMETER(I2);]\\\\\
n\\\\nCCode[STAPLE_SET_POSITION(ak,I1,0);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(\
bk,I1,1);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(ck,I1,2);]\\\\n\\\\nCCode[\
STAPLE_SET_POSITION(dk,I1,3);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(xk,I1,4);]\\\
\\n\\\\nCCode[STAPLE_SET_POSITION(yk,I1,5);]\\\\n\\\\nCCode[STAPLE_SET_\
POSITION(zk,I1,6);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(al,I2,0);]\\\\n\\\\\
nCCode[STAPLE_SET_POSITION(bl,I2,1);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(cl,\
I2,2);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(dl,I2,3);]\\\\n\\\\nCCode[STAPLE_\
SET_POSITION(xl,I2,4);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(yl,I2,5);]\\\\n\\\\\
nCCode[STAPLE_SET_POSITION(zl,I2,6);]\\\\n\\\\npower2[bk] -> \
tx156\\\\n\\\\npower2[bl] -> tx157\\\\n\\\\npower2[ck] -> \
tx158\\\\n\\\\npower2[cl] -> tx159\\\\n\\\\npower2[dk] -> \
tx160\\\\n\\\\npower2[dl] -> tx161\\\\n\\\\npower2[ak] -> \
tx162\\\\n\\\\npower2[al] -> tx163\\\\n\\\\n-2. ak -> tzz313\\\\n\\\\nbk \
tzz313 -> tx164\\\\n\\\\n-2. al -> tzz312\\\\n\\\\nbl tzz312 -> \
tx165\\\\n\\\\nck tzz313 -> tx166\\\\n\\\\n2. ck -> tzz315\\\\n\\\\nak tzz315 \
-> tx167\\\\n\\\\nbk tzz315 -> tx168\\\\n\\\\ncl tzz312 -> tx169\\\\n\\\\n2. \
cl -> tzz314\\\\n\\\\nal tzz314 -> tx170\\\\n\\\\nbl tzz314 -> \
tx171\\\\n\\\\ndk tzz313 -> tx172\\\\n\\\\n2. dk -> tzz311\\\\n\\\\nak tzz311 \
-> tx173\\\\n\\\\nbk tzz311 -> tx174\\\\n\\\\nck tzz311 -> tx175\\\\n\\\\ndl \
tzz312 -> tx176\\\\n\\\\n2. al -> tzz319\\\\n\\\\ndl tzz319 -> \
tx177\\\\n\\\\n2. bl -> tzz320\\\\n\\\\ndl tzz320 -> tx178\\\\n\\\\ndl tzz314 \
-> tx179\\\\n\\\\n-tx156 -> tx180\\\\n\\\\n-tx157 -> tx181\\\\n\\\\n-tx158 -> \
tx182\\\\n\\\\n-tx159 -> tx183\\\\n\\\\n-tx160 -> tx184\\\\n\\\\n-tx161 -> \
tx185\\\\n\\\\ntx156 + tx158 + tx160 + tx162 -> tx186\\\\n\\\\ntx157 + tx159 \
+ tx161 + tx163 -> tx187\\\\n\\\\ntx168 + tx172 -> tx188\\\\n\\\\ntx168 + \
tx173 -> tx189\\\\n\\\\ntx166 + tx174 -> tx190\\\\n\\\\ntx167 + tx174 -> \
tx191\\\\n\\\\ntx164 + tx175 -> tx192\\\\n\\\\ntx171 + tx176 -> \
tx193\\\\n\\\\ntx171 + tx177 -> tx194\\\\n\\\\ntx169 + tx178 -> \
tx195\\\\n\\\\ntx170 + tx178 -> tx196\\\\n\\\\ntx165 + tx179 -> \
tx197\\\\n\\\\ntx160 + tx162 + tx180 + tx182 -> tx198\\\\n\\\\ntx161 + tx163 \
+ tx181 + tx183 -> tx199\\\\n\\\\ntx158 + tx162 + tx180 + tx184 -> tx200\\\\n\
\\\\ntx159 + tx163 + tx181 + tx185 -> tx201\\\\n\\\\ntx186 x1 -> tx202\\\\n\\\
\\ntx189 x1 -> tx203\\\\n\\\\ntx190 x1 -> tx204\\\\n\\\\n-x2 -> tzz325\\\\n\\\
\\ntx187 tzz325 -> tx205\\\\n\\\\ntx194 tzz325 -> tx206\\\\n\\\\ntx195 tzz325 \
-> tx207\\\\n\\\\n-xl -> tx208\\\\n\\\\ntx188 y1 -> tx209\\\\n\\\\ntx192 y1 \
-> tx210\\\\n\\\\ntx200 y1 -> tx211\\\\n\\\\n-y2 -> tzz324\\\\n\\\\ntx193 \
tzz324 -> tx212\\\\n\\\\ntx197 tzz324 -> tx213\\\\n\\\\ntx201 tzz324 -> tx214\
\\\\n\\\\n-yl -> tx215\\\\n\\\\ntx191 z1 -> tx216\\\\n\\\\ntx192 z1 -> \
tx217\\\\n\\\\ntx198 z1 -> tx218\\\\n\\\\n-z2 -> tzz323\\\\n\\\\ntx196 tzz323 \
-> tx219\\\\n\\\\ntx197 tzz323 -> tx220\\\\n\\\\ntx199 tzz323 -> tx221\\\\n\\\
\\n-zl -> tx222\\\\n\\\\ntx202 + tx205 + tx208 + tx209 + tx212 + tx216 + \
tx219 + xk -> tx223\\\\n\\\\ntx203 + tx206 + tx211 + tx214 + tx215 + tx217 + \
tx220 + yk -> tx224\\\\n\\\\ntx204 + tx207 + tx210 + tx213 + tx218 + tx221 + \
tx222 + zk -> tx225\\\\n\\\\npower2[tx223] -> tx226\\\\n\\\\npower2[tx224] -> \
tx227\\\\n\\\\npower2[tx225] -> tx228\\\\n\\\\ntx226 + tx227 + tx228 -> \
Energy\\\\n\\\\nCCode[staple_ENERGY_ACCUMULATE(Energy);]\\\\n\\\\n2. ak -> \
tzz322\\\\n\\\\ntzz322 x1 -> tx229\\\\n\\\\n-2. ck x1 -> \
tx230\\\\n\\\\ntzz311 x1 -> tx231\\\\n\\\\ntzz322 y1 -> tx232\\\\n\\\\n-2. y1 \
-> tzz330\\\\n\\\\nbk tzz330 -> tx233\\\\n\\\\ndk tzz330 -> \
tx234\\\\n\\\\ntzz322 z1 -> tx235\\\\n\\\\n-2. z1 -> tzz329\\\\n\\\\nbk \
tzz329 -> tx236\\\\n\\\\ntzz315 z1 -> tx237\\\\n\\\\ntx230 + tx233 + tx235 -> \
tx238\\\\n\\\\ntx231 + tx232 + tx236 -> tx239\\\\n\\\\ntx229 + tx234 + tx237 \
-> tx240\\\\n\\\\n2. tx225 -> tzz316\\\\n\\\\ntx238 tzz316 -> \
tx241\\\\n\\\\n2. tx224 -> tzz317\\\\n\\\\ntx239 tzz317 -> tx242\\\\n\\\\n2. \
tx223 -> tzz318\\\\n\\\\ntx240 tzz318 -> tx243\\\\n\\\\ntx241 + tx242 + tx243 \
-> gak\\\\n\\\\n-gak -> fak\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 0, fak \
);]\\\\n\\\\n2. bk -> tzz321\\\\n\\\\ntzz321 x1 -> tx244\\\\n\\\\ntzz315 x1 \
-> tx245\\\\n\\\\ntzz313 y1 -> tx246\\\\n\\\\ntzz315 y1 -> \
tx247\\\\n\\\\ntzz313 z1 -> tx248\\\\n\\\\ntzz311 z1 -> tx249\\\\n\\\\ntx231 \
+ tx236 + tx246 -> tx250\\\\n\\\\ntx233 + tx245 + tx248 -> \
tx251\\\\n\\\\ntx244 + tx247 + tx249 -> tx252\\\\n\\\\ntx250 tzz316 -> \
tx253\\\\n\\\\ntx251 tzz317 -> tx254\\\\n\\\\ntx252 tzz318 -> \
tx255\\\\n\\\\ntx253 + tx254 + tx255 -> gbk\\\\n\\\\n-gbk -> \
fbk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 1, fbk );]\\\\n\\\\ntzz313 x1 \
-> tx256\\\\n\\\\ntzz321 y1 -> tx257\\\\n\\\\ntzz311 y1 -> tx258\\\\n\\\\nck \
tzz329 -> tx259\\\\n\\\\ntx235 + tx245 + tx257 -> tx260\\\\n\\\\ntx256 + \
tx258 + tx259 -> tx261\\\\n\\\\ntx252 tzz317 -> tx262\\\\n\\\\ntx260 tzz318 \
-> tx263\\\\n\\\\ntx261 tzz316 -> tx264\\\\n\\\\ntx262 + tx263 + tx264 -> gck\
\\\\n\\\\n-gck -> fck\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 2, fck );]\\\
\\n\\\\ntzz321 z1 -> tx265\\\\n\\\\ntx231 + tx246 + tx265 -> \
tx266\\\\n\\\\ntx240 tzz317 -> tx267\\\\n\\\\ntx252 tzz316 -> \
tx268\\\\n\\\\ntx266 tzz318 -> tx269\\\\n\\\\ntx267 + tx268 + tx269 -> \
gdk\\\\n\\\\n-gdk -> fdk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 3, fdk \
);]\\\\n\\\\ntzz318 -> gxk\\\\n\\\\n-gxk -> \
fxk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 4, fxk );]\\\\n\\\\ntzz317 -> \
gyk\\\\n\\\\n-gyk -> fyk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 5, fyk \
);]\\\\n\\\\ntzz316 -> gzk\\\\n\\\\n-gzk -> \
fzk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 6, fzk );]\\\\n\\\\ntzz312 x2 \
-> tx270\\\\n\\\\ntzz314 x2 -> tx271\\\\n\\\\n-2. x2 -> tzz328\\\\n\\\\ndl \
tzz328 -> tx272\\\\n\\\\ntzz312 y2 -> tx273\\\\n\\\\ntzz320 y2 -> \
tx274\\\\n\\\\n2. dl y2 -> tx275\\\\n\\\\ntzz312 z2 -> tx276\\\\n\\\\ntzz320 \
z2 -> tx277\\\\n\\\\n-2. z2 -> tzz326\\\\n\\\\ncl tzz326 -> \
tx278\\\\n\\\\ntx271 + tx274 + tx276 -> tx279\\\\n\\\\ntx272 + tx273 + tx277 \
-> tx280\\\\n\\\\ntx270 + tx275 + tx278 -> tx281\\\\n\\\\ngzk tx279 -> \
tx282\\\\n\\\\ngyk tx280 -> tx283\\\\n\\\\ngxk tx281 -> tx284\\\\n\\\\ntx282 \
+ tx283 + tx284 -> gal\\\\n\\\\n-gal -> \
fal\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 0, fal );]\\\\n\\\\nbl tzz328 \
-> tx285\\\\n\\\\ncl tzz328 -> tx286\\\\n\\\\ntzz319 y2 -> tx287\\\\n\\\\n-2. \
y2 -> tzz327\\\\n\\\\ncl tzz327 -> tx288\\\\n\\\\ntzz319 z2 -> \
tx289\\\\n\\\\ndl tzz326 -> tx290\\\\n\\\\ntx272 + tx277 + tx287 -> \
tx291\\\\n\\\\ntx274 + tx286 + tx289 -> tx292\\\\n\\\\ntx285 + tx288 + tx290 \
-> tx293\\\\n\\\\ngzk tx291 -> tx294\\\\n\\\\ngyk tx292 -> tx295\\\\n\\\\ngxk \
tx293 -> tx296\\\\n\\\\ntx294 + tx295 + tx296 -> gbl\\\\n\\\\n-gbl -> \
fbl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 1, fbl );]\\\\n\\\\ntzz319 x2 \
-> tx297\\\\n\\\\nbl tzz327 -> tx298\\\\n\\\\ndl tzz327 -> \
tx299\\\\n\\\\ntzz314 z2 -> tx300\\\\n\\\\ntx276 + tx286 + tx298 -> \
tx301\\\\n\\\\ntx297 + tx299 + tx300 -> tx302\\\\n\\\\ngyk tx293 -> \
tx303\\\\n\\\\ngxk tx301 -> tx304\\\\n\\\\ngzk tx302 -> tx305\\\\n\\\\ntx303 \
+ tx304 + tx305 -> gcl\\\\n\\\\n-gcl -> \
fcl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 2, fcl );]\\\\n\\\\nbl tzz326 \
-> tx306\\\\n\\\\ntx272 + tx287 + tx306 -> tx307\\\\n\\\\ngyk tx281 -> \
tx308\\\\n\\\\ngzk tx293 -> tx309\\\\n\\\\ngxk tx307 -> tx310\\\\n\\\\ntx308 \
+ tx309 + tx310 -> gdl\\\\n\\\\n-gdl -> \
fdl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 3, fdl );]\\\\n\\\\n-2. tx223 \
-> gxl\\\\n\\\\n-gxl -> fxl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\\\n\\\\n-2. tx224 -> gyl\\\\n\\\\n-gyl -> \
fyl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 5, fyl );]\\\\n\\\\n-2. tx225 \
-> gzl\\\\n\\\\n-gzl -> fzl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 6, fzl \
);]\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.702666640270697*^9, 3.7026672455856*^9, {3.702667866916711*^9, 
   3.702667883937563*^9}}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667245648881*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz318 -> gxk, tzz317 -> gyk, tzz316 \
-> gzk}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667245650425*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.702666640270697*^9, 3.702667245651865*^9, 
  3.7026678841172247`*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz318 -> gxk\\n\\ntzz317 \
-> gyk\\n\\ntzz316 -> gzk\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667245653268*^9}],

Cell[BoxData["\<\"After removal: \
CCode[STAPLE_SET_PARAMETER(I1);]\\\\n\\\\nCCode[STAPLE_SET_PARAMETER(I2);]\\\\\
n\\\\nCCode[STAPLE_SET_POSITION(ak,I1,0);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(\
bk,I1,1);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(ck,I1,2);]\\\\n\\\\nCCode[\
STAPLE_SET_POSITION(dk,I1,3);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(xk,I1,4);]\\\
\\n\\\\nCCode[STAPLE_SET_POSITION(yk,I1,5);]\\\\n\\\\nCCode[STAPLE_SET_\
POSITION(zk,I1,6);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(al,I2,0);]\\\\n\\\\\
nCCode[STAPLE_SET_POSITION(bl,I2,1);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(cl,\
I2,2);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(dl,I2,3);]\\\\n\\\\nCCode[STAPLE_\
SET_POSITION(xl,I2,4);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(yl,I2,5);]\\\\n\\\\\
nCCode[STAPLE_SET_POSITION(zl,I2,6);]\\\\n\\\\npower2[bk] -> \
tx156\\\\n\\\\npower2[bl] -> tx157\\\\n\\\\npower2[ck] -> \
tx158\\\\n\\\\npower2[cl] -> tx159\\\\n\\\\npower2[dk] -> \
tx160\\\\n\\\\npower2[dl] -> tx161\\\\n\\\\npower2[ak] -> \
tx162\\\\n\\\\npower2[al] -> tx163\\\\n\\\\n-2. ak -> tzz313\\\\n\\\\nbk \
tzz313 -> tx164\\\\n\\\\n-2. al -> tzz312\\\\n\\\\nbl tzz312 -> \
tx165\\\\n\\\\nck tzz313 -> tx166\\\\n\\\\n2. ck -> tzz315\\\\n\\\\nak tzz315 \
-> tx167\\\\n\\\\nbk tzz315 -> tx168\\\\n\\\\ncl tzz312 -> tx169\\\\n\\\\n2. \
cl -> tzz314\\\\n\\\\nal tzz314 -> tx170\\\\n\\\\nbl tzz314 -> \
tx171\\\\n\\\\ndk tzz313 -> tx172\\\\n\\\\n2. dk -> tzz311\\\\n\\\\nak tzz311 \
-> tx173\\\\n\\\\nbk tzz311 -> tx174\\\\n\\\\nck tzz311 -> tx175\\\\n\\\\ndl \
tzz312 -> tx176\\\\n\\\\n2. al -> tzz319\\\\n\\\\ndl tzz319 -> \
tx177\\\\n\\\\n2. bl -> tzz320\\\\n\\\\ndl tzz320 -> tx178\\\\n\\\\ndl tzz314 \
-> tx179\\\\n\\\\n-tx156 -> tx180\\\\n\\\\n-tx157 -> tx181\\\\n\\\\n-tx158 -> \
tx182\\\\n\\\\n-tx159 -> tx183\\\\n\\\\n-tx160 -> tx184\\\\n\\\\n-tx161 -> \
tx185\\\\n\\\\ntx156 + tx158 + tx160 + tx162 -> tx186\\\\n\\\\ntx157 + tx159 \
+ tx161 + tx163 -> tx187\\\\n\\\\ntx168 + tx172 -> tx188\\\\n\\\\ntx168 + \
tx173 -> tx189\\\\n\\\\ntx166 + tx174 -> tx190\\\\n\\\\ntx167 + tx174 -> \
tx191\\\\n\\\\ntx164 + tx175 -> tx192\\\\n\\\\ntx171 + tx176 -> \
tx193\\\\n\\\\ntx171 + tx177 -> tx194\\\\n\\\\ntx169 + tx178 -> \
tx195\\\\n\\\\ntx170 + tx178 -> tx196\\\\n\\\\ntx165 + tx179 -> \
tx197\\\\n\\\\ntx160 + tx162 + tx180 + tx182 -> tx198\\\\n\\\\ntx161 + tx163 \
+ tx181 + tx183 -> tx199\\\\n\\\\ntx158 + tx162 + tx180 + tx184 -> tx200\\\\n\
\\\\ntx159 + tx163 + tx181 + tx185 -> tx201\\\\n\\\\ntx186 x1 -> tx202\\\\n\\\
\\ntx189 x1 -> tx203\\\\n\\\\ntx190 x1 -> tx204\\\\n\\\\n-x2 -> tzz325\\\\n\\\
\\ntx187 tzz325 -> tx205\\\\n\\\\ntx194 tzz325 -> tx206\\\\n\\\\ntx195 tzz325 \
-> tx207\\\\n\\\\n-xl -> tx208\\\\n\\\\ntx188 y1 -> tx209\\\\n\\\\ntx192 y1 \
-> tx210\\\\n\\\\ntx200 y1 -> tx211\\\\n\\\\n-y2 -> tzz324\\\\n\\\\ntx193 \
tzz324 -> tx212\\\\n\\\\ntx197 tzz324 -> tx213\\\\n\\\\ntx201 tzz324 -> tx214\
\\\\n\\\\n-yl -> tx215\\\\n\\\\ntx191 z1 -> tx216\\\\n\\\\ntx192 z1 -> \
tx217\\\\n\\\\ntx198 z1 -> tx218\\\\n\\\\n-z2 -> tzz323\\\\n\\\\ntx196 tzz323 \
-> tx219\\\\n\\\\ntx197 tzz323 -> tx220\\\\n\\\\ntx199 tzz323 -> tx221\\\\n\\\
\\n-zl -> tx222\\\\n\\\\ntx202 + tx205 + tx208 + tx209 + tx212 + tx216 + \
tx219 + xk -> tx223\\\\n\\\\ntx203 + tx206 + tx211 + tx214 + tx215 + tx217 + \
tx220 + yk -> tx224\\\\n\\\\ntx204 + tx207 + tx210 + tx213 + tx218 + tx221 + \
tx222 + zk -> tx225\\\\n\\\\npower2[tx223] -> tx226\\\\n\\\\npower2[tx224] -> \
tx227\\\\n\\\\npower2[tx225] -> tx228\\\\n\\\\ntx226 + tx227 + tx228 -> \
Energy\\\\n\\\\nCCode[staple_ENERGY_ACCUMULATE(Energy);]\\\\n\\\\n2. ak -> \
tzz322\\\\n\\\\ntzz322 x1 -> tx229\\\\n\\\\n-2. ck x1 -> \
tx230\\\\n\\\\ntzz311 x1 -> tx231\\\\n\\\\ntzz322 y1 -> tx232\\\\n\\\\n-2. y1 \
-> tzz330\\\\n\\\\nbk tzz330 -> tx233\\\\n\\\\ndk tzz330 -> \
tx234\\\\n\\\\ntzz322 z1 -> tx235\\\\n\\\\n-2. z1 -> tzz329\\\\n\\\\nbk \
tzz329 -> tx236\\\\n\\\\ntzz315 z1 -> tx237\\\\n\\\\ntx230 + tx233 + tx235 -> \
tx238\\\\n\\\\ntx231 + tx232 + tx236 -> tx239\\\\n\\\\ntx229 + tx234 + tx237 \
-> tx240\\\\n\\\\n2. tx225 -> tzz316\\\\n\\\\ntx238 tzz316 -> \
tx241\\\\n\\\\n2. tx224 -> tzz317\\\\n\\\\ntx239 tzz317 -> tx242\\\\n\\\\n2. \
tx223 -> tzz318\\\\n\\\\ntx240 tzz318 -> tx243\\\\n\\\\ntx241 + tx242 + tx243 \
-> gak\\\\n\\\\n-gak -> fak\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 0, fak \
);]\\\\n\\\\n2. bk -> tzz321\\\\n\\\\ntzz321 x1 -> tx244\\\\n\\\\ntzz315 x1 \
-> tx245\\\\n\\\\ntzz313 y1 -> tx246\\\\n\\\\ntzz315 y1 -> \
tx247\\\\n\\\\ntzz313 z1 -> tx248\\\\n\\\\ntzz311 z1 -> tx249\\\\n\\\\ntx231 \
+ tx236 + tx246 -> tx250\\\\n\\\\ntx233 + tx245 + tx248 -> \
tx251\\\\n\\\\ntx244 + tx247 + tx249 -> tx252\\\\n\\\\ntx250 tzz316 -> \
tx253\\\\n\\\\ntx251 tzz317 -> tx254\\\\n\\\\ntx252 tzz318 -> \
tx255\\\\n\\\\ntx253 + tx254 + tx255 -> gbk\\\\n\\\\n-gbk -> \
fbk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 1, fbk );]\\\\n\\\\ntzz313 x1 \
-> tx256\\\\n\\\\ntzz321 y1 -> tx257\\\\n\\\\ntzz311 y1 -> tx258\\\\n\\\\nck \
tzz329 -> tx259\\\\n\\\\ntx235 + tx245 + tx257 -> tx260\\\\n\\\\ntx256 + \
tx258 + tx259 -> tx261\\\\n\\\\ntx252 tzz317 -> tx262\\\\n\\\\ntx260 tzz318 \
-> tx263\\\\n\\\\ntx261 tzz316 -> tx264\\\\n\\\\ntx262 + tx263 + tx264 -> gck\
\\\\n\\\\n-gck -> fck\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 2, fck );]\\\
\\n\\\\ntzz321 z1 -> tx265\\\\n\\\\ntx231 + tx246 + tx265 -> \
tx266\\\\n\\\\ntx240 tzz317 -> tx267\\\\n\\\\ntx252 tzz316 -> \
tx268\\\\n\\\\ntx266 tzz318 -> tx269\\\\n\\\\ntx267 + tx268 + tx269 -> \
gdk\\\\n\\\\n-gdk -> fdk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 3, fdk \
);]\\\\n\\\\ntzz318 -> gxk\\\\n\\\\n-gxk -> \
fxk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 4, fxk );]\\\\n\\\\ntzz317 -> \
gyk\\\\n\\\\n-gyk -> fyk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 5, fyk \
);]\\\\n\\\\ntzz316 -> gzk\\\\n\\\\n-gzk -> \
fzk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 6, fzk );]\\\\n\\\\ntzz312 x2 \
-> tx270\\\\n\\\\ntzz314 x2 -> tx271\\\\n\\\\n-2. x2 -> tzz328\\\\n\\\\ndl \
tzz328 -> tx272\\\\n\\\\ntzz312 y2 -> tx273\\\\n\\\\ntzz320 y2 -> \
tx274\\\\n\\\\n2. dl y2 -> tx275\\\\n\\\\ntzz312 z2 -> tx276\\\\n\\\\ntzz320 \
z2 -> tx277\\\\n\\\\n-2. z2 -> tzz326\\\\n\\\\ncl tzz326 -> \
tx278\\\\n\\\\ntx271 + tx274 + tx276 -> tx279\\\\n\\\\ntx272 + tx273 + tx277 \
-> tx280\\\\n\\\\ntx270 + tx275 + tx278 -> tx281\\\\n\\\\ngzk tx279 -> \
tx282\\\\n\\\\ngyk tx280 -> tx283\\\\n\\\\ngxk tx281 -> tx284\\\\n\\\\ntx282 \
+ tx283 + tx284 -> gal\\\\n\\\\n-gal -> \
fal\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 0, fal );]\\\\n\\\\nbl tzz328 \
-> tx285\\\\n\\\\ncl tzz328 -> tx286\\\\n\\\\ntzz319 y2 -> tx287\\\\n\\\\n-2. \
y2 -> tzz327\\\\n\\\\ncl tzz327 -> tx288\\\\n\\\\ntzz319 z2 -> \
tx289\\\\n\\\\ndl tzz326 -> tx290\\\\n\\\\ntx272 + tx277 + tx287 -> \
tx291\\\\n\\\\ntx274 + tx286 + tx289 -> tx292\\\\n\\\\ntx285 + tx288 + tx290 \
-> tx293\\\\n\\\\ngzk tx291 -> tx294\\\\n\\\\ngyk tx292 -> tx295\\\\n\\\\ngxk \
tx293 -> tx296\\\\n\\\\ntx294 + tx295 + tx296 -> gbl\\\\n\\\\n-gbl -> \
fbl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 1, fbl );]\\\\n\\\\ntzz319 x2 \
-> tx297\\\\n\\\\nbl tzz327 -> tx298\\\\n\\\\ndl tzz327 -> \
tx299\\\\n\\\\ntzz314 z2 -> tx300\\\\n\\\\ntx276 + tx286 + tx298 -> \
tx301\\\\n\\\\ntx297 + tx299 + tx300 -> tx302\\\\n\\\\ngyk tx293 -> \
tx303\\\\n\\\\ngxk tx301 -> tx304\\\\n\\\\ngzk tx302 -> tx305\\\\n\\\\ntx303 \
+ tx304 + tx305 -> gcl\\\\n\\\\n-gcl -> \
fcl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 2, fcl );]\\\\n\\\\nbl tzz326 \
-> tx306\\\\n\\\\ntx272 + tx287 + tx306 -> tx307\\\\n\\\\ngyk tx281 -> \
tx308\\\\n\\\\ngzk tx293 -> tx309\\\\n\\\\ngxk tx307 -> tx310\\\\n\\\\ntx308 \
+ tx309 + tx310 -> gdl\\\\n\\\\n-gdl -> \
fdl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 3, fdl );]\\\\n\\\\n-2. tx223 \
-> gxl\\\\n\\\\n-gxl -> fxl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\\\n\\\\n-2. tx224 -> gyl\\\\n\\\\n-gyl -> \
fyl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 5, fyl );]\\\\n\\\\n-2. tx225 \
-> gzl\\\\n\\\\n-gzl -> fzl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 6, fzl \
);]\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.702666640270697*^9, 3.7026672456546783`*^9, {3.702667867137817*^9, 
   3.7026678842833033`*^9}}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz318 -> gxk, tzz317 -> gyk, tzz316 \
-> gzk}\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667245864833*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, stapleDeviation}\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.702666640270697*^9, 3.702667245866466*^9, 
  3.702667884453957*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz318 -> gxk\\n\\ntzz317 \
-> gyk\\n\\ntzz316 -> gzk\"\>"], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667245867931*^9}],

Cell[BoxData["\<\"After removal: \
CCode[STAPLE_SET_PARAMETER(I1);]\\\\n\\\\nCCode[STAPLE_SET_PARAMETER(I2);]\\\\\
n\\\\nCCode[STAPLE_SET_POSITION(ak,I1,0);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(\
bk,I1,1);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(ck,I1,2);]\\\\n\\\\nCCode[\
STAPLE_SET_POSITION(dk,I1,3);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(xk,I1,4);]\\\
\\n\\\\nCCode[STAPLE_SET_POSITION(yk,I1,5);]\\\\n\\\\nCCode[STAPLE_SET_\
POSITION(zk,I1,6);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(al,I2,0);]\\\\n\\\\\
nCCode[STAPLE_SET_POSITION(bl,I2,1);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(cl,\
I2,2);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(dl,I2,3);]\\\\n\\\\nCCode[STAPLE_\
SET_POSITION(xl,I2,4);]\\\\n\\\\nCCode[STAPLE_SET_POSITION(yl,I2,5);]\\\\n\\\\\
nCCode[STAPLE_SET_POSITION(zl,I2,6);]\\\\n\\\\npower2[bk] -> \
tx156\\\\n\\\\npower2[bl] -> tx157\\\\n\\\\npower2[ck] -> \
tx158\\\\n\\\\npower2[cl] -> tx159\\\\n\\\\npower2[dk] -> \
tx160\\\\n\\\\npower2[dl] -> tx161\\\\n\\\\npower2[ak] -> \
tx162\\\\n\\\\npower2[al] -> tx163\\\\n\\\\n-2. ak -> tzz313\\\\n\\\\nbk \
tzz313 -> tx164\\\\n\\\\n-2. al -> tzz312\\\\n\\\\nbl tzz312 -> \
tx165\\\\n\\\\nck tzz313 -> tx166\\\\n\\\\n2. ck -> tzz315\\\\n\\\\nak tzz315 \
-> tx167\\\\n\\\\nbk tzz315 -> tx168\\\\n\\\\ncl tzz312 -> tx169\\\\n\\\\n2. \
cl -> tzz314\\\\n\\\\nal tzz314 -> tx170\\\\n\\\\nbl tzz314 -> \
tx171\\\\n\\\\ndk tzz313 -> tx172\\\\n\\\\n2. dk -> tzz311\\\\n\\\\nak tzz311 \
-> tx173\\\\n\\\\nbk tzz311 -> tx174\\\\n\\\\nck tzz311 -> tx175\\\\n\\\\ndl \
tzz312 -> tx176\\\\n\\\\n2. al -> tzz319\\\\n\\\\ndl tzz319 -> \
tx177\\\\n\\\\n2. bl -> tzz320\\\\n\\\\ndl tzz320 -> tx178\\\\n\\\\ndl tzz314 \
-> tx179\\\\n\\\\n-tx156 -> tx180\\\\n\\\\n-tx157 -> tx181\\\\n\\\\n-tx158 -> \
tx182\\\\n\\\\n-tx159 -> tx183\\\\n\\\\n-tx160 -> tx184\\\\n\\\\n-tx161 -> \
tx185\\\\n\\\\ntx156 + tx158 + tx160 + tx162 -> tx186\\\\n\\\\ntx157 + tx159 \
+ tx161 + tx163 -> tx187\\\\n\\\\ntx168 + tx172 -> tx188\\\\n\\\\ntx168 + \
tx173 -> tx189\\\\n\\\\ntx166 + tx174 -> tx190\\\\n\\\\ntx167 + tx174 -> \
tx191\\\\n\\\\ntx164 + tx175 -> tx192\\\\n\\\\ntx171 + tx176 -> \
tx193\\\\n\\\\ntx171 + tx177 -> tx194\\\\n\\\\ntx169 + tx178 -> \
tx195\\\\n\\\\ntx170 + tx178 -> tx196\\\\n\\\\ntx165 + tx179 -> \
tx197\\\\n\\\\ntx162 + tx180 -> tzz334\\\\n\\\\ntx160 + tx182 + tzz334 -> \
tx198\\\\n\\\\ntx163 + tx181 -> tzz333\\\\n\\\\ntx161 + tx183 + tzz333 -> \
tx199\\\\n\\\\ntx158 + tx184 + tzz334 -> tx200\\\\n\\\\ntx159 + tx185 + \
tzz333 -> tx201\\\\n\\\\ntx186 x1 -> tx202\\\\n\\\\ntx189 x1 -> \
tx203\\\\n\\\\ntx190 x1 -> tx204\\\\n\\\\n-x2 -> tzz325\\\\n\\\\ntx187 tzz325 \
-> tx205\\\\n\\\\ntx194 tzz325 -> tx206\\\\n\\\\ntx195 tzz325 -> tx207\\\\n\\\
\\n-xl -> tx208\\\\n\\\\ntx188 y1 -> tx209\\\\n\\\\ntx192 y1 -> \
tx210\\\\n\\\\ntx200 y1 -> tx211\\\\n\\\\n-y2 -> tzz324\\\\n\\\\ntx193 tzz324 \
-> tx212\\\\n\\\\ntx197 tzz324 -> tx213\\\\n\\\\ntx201 tzz324 -> tx214\\\\n\\\
\\n-yl -> tx215\\\\n\\\\ntx191 z1 -> tx216\\\\n\\\\ntx192 z1 -> \
tx217\\\\n\\\\ntx198 z1 -> tx218\\\\n\\\\n-z2 -> tzz323\\\\n\\\\ntx196 tzz323 \
-> tx219\\\\n\\\\ntx197 tzz323 -> tx220\\\\n\\\\ntx199 tzz323 -> tx221\\\\n\\\
\\n-zl -> tx222\\\\n\\\\ntx202 + tx205 + tx208 + tx209 + tx212 + tx216 + \
tx219 + xk -> tx223\\\\n\\\\ntx203 + tx206 + tx211 + tx214 + tx215 + tx217 + \
tx220 + yk -> tx224\\\\n\\\\ntx204 + tx207 + tx210 + tx213 + tx218 + tx221 + \
tx222 + zk -> tx225\\\\n\\\\npower2[tx223] -> tx226\\\\n\\\\npower2[tx224] -> \
tx227\\\\n\\\\npower2[tx225] -> tx228\\\\n\\\\ntx226 + tx227 + tx228 -> \
Energy\\\\n\\\\nCCode[staple_ENERGY_ACCUMULATE(Energy);]\\\\n\\\\n2. ak -> \
tzz322\\\\n\\\\ntzz322 x1 -> tx229\\\\n\\\\n-2. ck x1 -> \
tx230\\\\n\\\\ntzz311 x1 -> tx231\\\\n\\\\ntzz322 y1 -> tx232\\\\n\\\\n-2. y1 \
-> tzz330\\\\n\\\\nbk tzz330 -> tx233\\\\n\\\\ndk tzz330 -> \
tx234\\\\n\\\\ntzz322 z1 -> tx235\\\\n\\\\n-2. z1 -> tzz329\\\\n\\\\nbk \
tzz329 -> tx236\\\\n\\\\ntzz315 z1 -> tx237\\\\n\\\\ntx230 + tx233 + tx235 -> \
tx238\\\\n\\\\ntx231 + tx232 + tx236 -> tx239\\\\n\\\\ntx229 + tx234 + tx237 \
-> tx240\\\\n\\\\n2. tx225 -> tzz316\\\\n\\\\ntx238 tzz316 -> \
tx241\\\\n\\\\n2. tx224 -> tzz317\\\\n\\\\ntx239 tzz317 -> tx242\\\\n\\\\n2. \
tx223 -> tzz318\\\\n\\\\ntx240 tzz318 -> tx243\\\\n\\\\ntx241 + tx242 + tx243 \
-> gak\\\\n\\\\n-gak -> fak\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 0, fak \
);]\\\\n\\\\n2. bk -> tzz321\\\\n\\\\ntzz321 x1 -> tx244\\\\n\\\\ntzz315 x1 \
-> tx245\\\\n\\\\ntzz313 y1 -> tx246\\\\n\\\\ntzz315 y1 -> \
tx247\\\\n\\\\ntzz313 z1 -> tx248\\\\n\\\\ntzz311 z1 -> tx249\\\\n\\\\ntx231 \
+ tx246 -> tzz332\\\\n\\\\ntx236 + tzz332 -> tx250\\\\n\\\\ntx233 + tx245 + \
tx248 -> tx251\\\\n\\\\ntx244 + tx247 + tx249 -> tx252\\\\n\\\\ntx250 tzz316 \
-> tx253\\\\n\\\\ntx251 tzz317 -> tx254\\\\n\\\\ntx252 tzz318 -> tx255\\\\n\\\
\\ntx253 + tx254 + tx255 -> gbk\\\\n\\\\n-gbk -> \
fbk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 1, fbk );]\\\\n\\\\ntzz313 x1 \
-> tx256\\\\n\\\\ntzz321 y1 -> tx257\\\\n\\\\ntzz311 y1 -> tx258\\\\n\\\\nck \
tzz329 -> tx259\\\\n\\\\ntx235 + tx245 + tx257 -> tx260\\\\n\\\\ntx256 + \
tx258 + tx259 -> tx261\\\\n\\\\ntx252 tzz317 -> tx262\\\\n\\\\ntx260 tzz318 \
-> tx263\\\\n\\\\ntx261 tzz316 -> tx264\\\\n\\\\ntx262 + tx263 + tx264 -> gck\
\\\\n\\\\n-gck -> fck\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 2, fck );]\\\
\\n\\\\ntzz321 z1 -> tx265\\\\n\\\\ntx265 + tzz332 -> tx266\\\\n\\\\ntx240 \
tzz317 -> tx267\\\\n\\\\ntx252 tzz316 -> tx268\\\\n\\\\ntx266 tzz318 -> tx269\
\\\\n\\\\ntx267 + tx268 + tx269 -> gdk\\\\n\\\\n-gdk -> \
fdk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 3, fdk );]\\\\n\\\\ntzz318 -> \
gxk\\\\n\\\\n-gxk -> fxk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 4, fxk \
);]\\\\n\\\\ntzz317 -> gyk\\\\n\\\\n-gyk -> \
fyk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 5, fyk );]\\\\n\\\\ntzz316 -> \
gzk\\\\n\\\\n-gzk -> fzk\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I1, 6, fzk \
);]\\\\n\\\\ntzz312 x2 -> tx270\\\\n\\\\ntzz314 x2 -> tx271\\\\n\\\\n-2. x2 \
-> tzz328\\\\n\\\\ndl tzz328 -> tx272\\\\n\\\\ntzz312 y2 -> \
tx273\\\\n\\\\ntzz320 y2 -> tx274\\\\n\\\\n2. dl y2 -> tx275\\\\n\\\\ntzz312 \
z2 -> tx276\\\\n\\\\ntzz320 z2 -> tx277\\\\n\\\\n-2. z2 -> tzz326\\\\n\\\\ncl \
tzz326 -> tx278\\\\n\\\\ntx271 + tx274 + tx276 -> tx279\\\\n\\\\ntx272 + \
tx273 + tx277 -> tx280\\\\n\\\\ntx270 + tx275 + tx278 -> tx281\\\\n\\\\ngzk \
tx279 -> tx282\\\\n\\\\ngyk tx280 -> tx283\\\\n\\\\ngxk tx281 -> tx284\\\\n\\\
\\ntx282 + tx283 + tx284 -> gal\\\\n\\\\n-gal -> \
fal\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 0, fal );]\\\\n\\\\nbl tzz328 \
-> tx285\\\\n\\\\ncl tzz328 -> tx286\\\\n\\\\ntzz319 y2 -> tx287\\\\n\\\\n-2. \
y2 -> tzz327\\\\n\\\\ncl tzz327 -> tx288\\\\n\\\\ntzz319 z2 -> \
tx289\\\\n\\\\ndl tzz326 -> tx290\\\\n\\\\ntx272 + tx287 -> \
tzz331\\\\n\\\\ntx277 + tzz331 -> tx291\\\\n\\\\ntx274 + tx286 + tx289 -> \
tx292\\\\n\\\\ntx285 + tx288 + tx290 -> tx293\\\\n\\\\ngzk tx291 -> \
tx294\\\\n\\\\ngyk tx292 -> tx295\\\\n\\\\ngxk tx293 -> tx296\\\\n\\\\ntx294 \
+ tx295 + tx296 -> gbl\\\\n\\\\n-gbl -> \
fbl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 1, fbl );]\\\\n\\\\ntzz319 x2 \
-> tx297\\\\n\\\\nbl tzz327 -> tx298\\\\n\\\\ndl tzz327 -> \
tx299\\\\n\\\\ntzz314 z2 -> tx300\\\\n\\\\ntx276 + tx286 + tx298 -> \
tx301\\\\n\\\\ntx297 + tx299 + tx300 -> tx302\\\\n\\\\ngyk tx293 -> \
tx303\\\\n\\\\ngxk tx301 -> tx304\\\\n\\\\ngzk tx302 -> tx305\\\\n\\\\ntx303 \
+ tx304 + tx305 -> gcl\\\\n\\\\n-gcl -> \
fcl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 2, fcl );]\\\\n\\\\nbl tzz326 \
-> tx306\\\\n\\\\ntx306 + tzz331 -> tx307\\\\n\\\\ngyk tx281 -> \
tx308\\\\n\\\\ngzk tx293 -> tx309\\\\n\\\\ngxk tx307 -> tx310\\\\n\\\\ntx308 \
+ tx309 + tx310 -> gdl\\\\n\\\\n-gdl -> \
fdl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 3, fdl );]\\\\n\\\\n-2. tx223 \
-> gxl\\\\n\\\\n-gxl -> fxl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\\\n\\\\n-2. tx224 -> gyl\\\\n\\\\n-gyl -> \
fyl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 5, fyl );]\\\\n\\\\n-2. tx225 \
-> gzl\\\\n\\\\n-gzl -> fzl\\\\n\\\\nCCode[STAPLE_FORCE_ACCUMULATE(I2, 6, fzl \
);]\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.702666640270697*^9, 3.702667245869404*^9, {3.702667867353277*^9, 
   3.7026678846397448`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing declares to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_CONNECT_termDeclares.cc\"\>"}],
  SequenceForm["Writing declares to file: ", "_CONNECT_termDeclares.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667245915365*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing code to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_CONNECT_termCode.cc\"\>"}],
  SequenceForm["Writing code to file: ", "_CONNECT_termCode.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.702666640270697*^9, 3.702667245916841*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Draw an evaluation tree for the optimized \"C\" code.  It doesn' t do \
anything useful but it looks impressive - I have got to print some of these \
on large format posters.

Inputs (independent variables and parameters) are on the left and drawn in \
Black, and outputs are on the right and also drawn in Black. Computationally \
expensive functions are highlighted in red, Plus functions are blue and Times \
functions are green.\
\>", "Subsection",
 CellChangeTimes->{{3.494844130294557*^9, 3.494844200819201*^9}, {
  3.494844239453156*^9, 3.494844307388302*^9}, {3.494844349909049*^9, 
  3.494844362349473*^9}, {3.494844417981534*^9, 3.49484444617253*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"packGraph", "[", "staplePack", "]"}]], "Input",
 CellChangeTimes->{{3.405634991753235*^9, 3.405634995403973*^9}, {
   3.4085648880849*^9, 3.408564889562644*^9}, 3.7026665440166197`*^9, 
   3.7026678792391*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 6.530612244897958}, {0.03, 
     14.545454545454547`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 19.591836734693878`}, {0.03, 
     43.63636363636363}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 32.65306122448979}, {0.03, 
     72.72727272727273}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 45.71428571428571}, {0.03, 
     101.81818181818181`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 58.77551020408163}, {0.03, 
     130.9090909090909}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 71.83673469387755}, {0.03, 160.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 84.89795918367346}, {0.03, 
     189.0909090909091}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 97.95918367346937}, {0.03, 
     218.1818181818182}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 111.0204081632653}, {0.03, 
     247.27272727272725`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 124.08163265306122`}, {0.03, 
     14.545454545454547`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 124.08163265306122`}, {0.03, 
     130.9090909090909}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 5.}, {0.13, 111.0204081632653}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 5.}, {0.13, 124.08163265306122`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 137.14285714285714`}, {0.03, 
     72.72727272727273}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 137.14285714285714`}, {0.03, 
     130.9090909090909}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 137.14285714285714`}, {0.03, 
     247.27272727272725`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 150.20408163265304`}, {0.03, 
     189.0909090909091}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 150.20408163265304`}, {0.03, 
     247.27272727272725`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 15.}, {0.03, 14.545454545454547`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 15.}, {0.13, 150.20408163265304`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 25.}, {0.03, 72.72727272727273}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 25.}, {0.13, 150.20408163265304`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 163.26530612244898`}, {0.03, 
     276.3636363636364}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 35.}, {0.03, 43.63636363636363}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 35.}, {0.03, 160.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 35.}, {0.13, 163.26530612244898`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 176.32653061224488`}, {0.03, 
     101.81818181818181`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 176.32653061224488`}, {0.03, 160.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 176.32653061224488`}, {0.03, 
     276.3636363636364}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 189.3877551020408}, {0.03, 
     218.1818181818182}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 189.3877551020408}, {0.03, 
     276.3636363636364}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 45.}, {0.03, 43.63636363636363}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 45.}, {0.13, 189.3877551020408}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 55.}, {0.03, 101.81818181818181`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 55.}, {0.13, 189.3877551020408}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 202.44897959183672`}, {0.03, 
     14.545454545454547`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 202.44897959183672`}, {0.03, 
     72.72727272727273}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 65.}, {0.03, 305.4545454545455}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 65.}, {0.13, 202.44897959183672`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 215.51020408163265`}, {0.03, 
     130.9090909090909}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 215.51020408163265`}, {0.03, 
     305.4545454545455}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 75.}, {0.03, 72.72727272727273}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 75.}, {0.13, 215.51020408163265`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 228.57142857142856`}, {0.03, 
     305.4545454545455}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 85.}, {0.03, 14.545454545454547`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 85.}, {0.03, 189.0909090909091}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 85.}, {0.13, 228.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 95.}, {0.03, 189.0909090909091}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 95.}, {0.13, 215.51020408163265`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 241.63265306122446`}, {0.03, 
     43.63636363636363}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 241.63265306122446`}, {0.03, 
     101.81818181818181`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 241.63265306122446`}, {0.03, 
     334.5454545454545}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 254.69387755102036`}, {0.03, 160.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 254.69387755102036`}, {0.03, 
     334.5454545454545}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 105.}, {0.03, 101.81818181818181`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 105.}, {0.13, 254.69387755102036`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 267.7551020408163}, {0.03, 
     334.5454545454545}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 115.}, {0.03, 43.63636363636363}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 115.}, {0.03, 218.1818181818182}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 115.}, {0.13, 267.7551020408163}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 125.}, {0.03, 218.1818181818182}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 125.}, {0.13, 254.69387755102036`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 280.81632653061223`}, {0.03, 
     363.6363636363637}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 135.}, {0.13, 280.81632653061223`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 135.}, {0.13, 202.44897959183672`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 145.}, {0.03, 363.6363636363637}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 145.}, {0.13, 124.08163265306122`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 293.87755102040813`}, {0.03, 
     189.0909090909091}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 293.87755102040813`}, {0.03, 
     363.6363636363637}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 155.}, {0.03, 72.72727272727273}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 155.}, {0.13, 293.87755102040813`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 165.}, {0.03, 130.9090909090909}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 165.}, {0.13, 293.87755102040813`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 306.9387755102041}, {0.03, 
     101.81818181818181`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 306.9387755102041}, {0.03, 
     392.72727272727275`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 175.}, {0.03, 43.63636363636363}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 175.}, {0.13, 306.9387755102041}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 319.99999999999994`}, {0.03, 160.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 319.99999999999994`}, {0.03, 
     392.72727272727275`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 185.}, {0.03, 43.63636363636363}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 185.}, {0.13, 319.99999999999994`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 195.}, {0.03, 218.1818181818182}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 195.}, {0.13, 306.9387755102041}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 205.}, {0.03, 218.1818181818182}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 205.}, {0.13, 319.99999999999994`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 215.}, {0.13, 32.65306122448979}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 215.}, {0.13, 228.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 225.}, {0.13, 32.65306122448979}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 225.}, {0.13, 280.81632653061223`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 235.}, {0.13, 45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 235.}, {0.13, 267.7551020408163}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 333.06122448979585`}, {0.03, 
     392.72727272727275`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 245.}, {0.13, 45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 245.}, {0.13, 333.06122448979585`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 255.}, {0.13, 58.77551020408163}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 255.}, {0.13, 111.0204081632653}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 265.}, {0.13, 58.77551020408163}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 265.}, {0.13, 280.81632653061223`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 275.}, {0.13, 71.83673469387755}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 275.}, {0.13, 163.26530612244898`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 285.}, {0.13, 71.83673469387755}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 285.}, {0.13, 333.06122448979585`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 295.}, {0.13, 84.89795918367346}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 295.}, {0.13, 111.0204081632653}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 305.}, {0.13, 84.89795918367346}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 305.}, {0.13, 228.57142857142856`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 315.}, {0.13, 6.530612244897958}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 315.}, {0.13, 32.65306122448979}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 315.}, {0.13, 58.77551020408163}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 315.}, {0.13, 84.89795918367346}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 325.}, {0.13, 97.95918367346937}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 325.}, {0.13, 163.26530612244898`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 335.}, {0.13, 97.95918367346937}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 335.}, {0.13, 267.7551020408163}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.17, 345.}, {0.13, 19.591836734693878`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 345.}, {0.13, 45.71428571428571}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 345.}, {0.13, 71.83673469387755}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 345.}, {0.13, 97.95918367346937}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 8.}, {0.22999999999999998`, 5.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 8.}, {0.22999999999999998`, 25.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 8.}, {0.22999999999999998`, 65.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 8.}, {0.22999999999999998`, 95.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 8.}, {0.22999999999999998`, 225.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 8.}, {0.22999999999999998`, 265.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 24.000000000000004`}, {0.13, 241.63265306122446`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 24.000000000000004`}, {0.22999999999999998`, 125.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 21.333333333333332`}, {
     0.22999999999999998`, 55.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 21.333333333333332`}, {0.33, 
     24.000000000000004`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 9.696969696969697}, {0.22999999999999998`,
      35.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 9.696969696969697}, {0.43, 
     21.333333333333332`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 24.615384615384617`}, {0.22999999999999998`,
      245.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 24.615384615384617`}, {0.22999999999999998`,
      285.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 24.615384615384617`}, {0.53, 
     9.696969696969697}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 40.}, {0.22999999999999998`, 75.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 40.}, {0.22999999999999998`, 85.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 40.}, {0.22999999999999998`, 145.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 40.}, {0.22999999999999998`, 155.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 40.}, {0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 40.}, {0.22999999999999998`, 295.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 56.00000000000001}, {0.13, 137.14285714285714`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 56.00000000000001}, {0.22999999999999998`, 15.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 56.00000000000001}, {0.22999999999999998`, 135.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 56.00000000000001}, {0.22999999999999998`, 165.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 56.00000000000001}, {0.22999999999999998`, 215.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 56.00000000000001}, {0.22999999999999998`, 305.}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[{{0.27, 72.}, {0.22999999999999998`, 315.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 88.}, {0.22999999999999998`, 185.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 88.}, {0.22999999999999998`, 195.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 64.}, {0.22999999999999998`, 115.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.37000000000000005`, 64.}, {0.33, 88.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 29.090909090909093`}, {
     0.22999999999999998`, 105.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 29.090909090909093`}, {0.43, 64.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 73.84615384615385}, {0.22999999999999998`, 
     275.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 73.84615384615385}, {0.22999999999999998`, 
     325.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 73.84615384615385}, {0.53, 
     29.090909090909093`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 104.}, {0.22999999999999998`, 175.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 104.}, {0.22999999999999998`, 205.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 106.66666666666666`}, {
     0.22999999999999998`, 45.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 106.66666666666666`}, {0.33, 104.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 48.484848484848484`}, {0.13, 
     176.32653061224488`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 48.484848484848484`}, {0.43, 
     106.66666666666666`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 123.07692307692308`}, {0.22999999999999998`,
      235.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 123.07692307692308`}, {0.22999999999999998`,
      335.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 123.07692307692308`}, {0.53, 
     48.484848484848484`}}]}, 
   {RGBColor[1, 0, 0], LineBox[{{0.27, 120.}, {0.22999999999999998`, 345.}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 355.}, {0.13, 163.26530612244898`}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 365.}, {0.13, 267.7551020408163}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 375.}, {0.13, 333.06122448979585`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 149.33333333333334`}, {0.33, 72.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 67.87878787878788}, {0.33, 8.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 67.87878787878788}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 87.27272727272727}, {0.33, 40.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 87.27272727272727}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 106.66666666666669`}, {0.33, 
     56.00000000000001}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 106.66666666666669`}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.37000000000000005`, 192.}, {0.33, 120.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 12.8}, {0.63, 24.615384615384617`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 12.8}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 38.4}, {0.63, 73.84615384615385}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 38.4}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 64.}, {0.63, 123.07692307692308`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 64.}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 346.1224489795918}, {0.03, 
     421.8181818181818}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 359.1836734693877}, {0.03, 
     450.90909090909093`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 372.2448979591837}, {0.03, 480.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 385.}, {0.13, 346.1224489795918}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 385.}, {0.03, 509.0909090909091}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 172.30769230769232`}, {0.53, 
     87.27272727272727}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 172.30769230769232`}, {0.22999999999999998`,
      385.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.67, 89.60000000000001}, {0.22999999999999998`, 355.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.67, 89.60000000000001}, {0.63, 172.30769230769232`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 11.428571428571427`}, {0.03, 247.27272727272725`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 11.428571428571427`}, {0.73, 89.60000000000001}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 16.842105263157894`}, {0.73, 38.4}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 16.842105263157894`}, {0.8300000000000001, 
     11.428571428571427`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 395.}, {0.13, 359.1836734693877}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 395.}, {0.03, 538.1818181818182}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 221.53846153846155`}, {0.53, 
     106.66666666666669`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 221.53846153846155`}, {0.22999999999999998`,
      395.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.67, 115.19999999999999`}, {0.22999999999999998`, 365.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.67, 115.19999999999999`}, {0.63, 221.53846153846155`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 34.285714285714285`}, {0.03, 305.4545454545455}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 34.285714285714285`}, {0.73, 115.19999999999999`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 50.526315789473685`}, {0.73, 64.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 50.526315789473685`}, {0.8300000000000001, 
     34.285714285714285`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 405.}, {0.13, 372.2448979591837}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 405.}, {0.03, 567.2727272727273}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 270.76923076923083`}, {0.53, 
     67.87878787878788}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 270.76923076923083`}, {0.22999999999999998`,
      405.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.67, 140.8}, {0.22999999999999998`, 375.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.67, 140.8}, {0.63, 270.76923076923083`}}]},
    
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 57.14285714285714}, {0.03, 363.6363636363637}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 57.14285714285714}, {0.73, 140.8}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 84.21052631578947}, {0.73, 12.8}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 84.21052631578947}, {0.8300000000000001, 
     57.14285714285714}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 32.}, {0.9300000000000002, 16.842105263157894`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 96.00000000000001}, {0.9300000000000002, 
     50.526315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 160.}, {0.9300000000000002, 84.21052631578947}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.07, 11.851851851851851`}, {1.03, 32.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.07, 11.851851851851851`}, {1.03, 96.00000000000001}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.07, 11.851851851851851`}, {1.03, 160.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 385.3061224489796}, {0.03, 
     596.3636363636364}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[{{1.17, 29.090909090909093`}, {1.1300000000000001`, 
     11.851851851851851`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.27, 64.}, {0.13, 385.3061224489796}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.27, 64.}, {1.2300000000000002`, 29.090909090909093`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 106.66666666666666`}, {1.33, 64.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 106.66666666666666`}, {1.33, 192.00000000000003`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 106.66666666666666`}, {1.4300000000000002`, 
     106.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 136.}, {0.13, 71.83673469387755}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 136.}, {0.22999999999999998`, 355.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 152.}, {0.13, 97.95918367346937}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 152.}, {0.22999999999999998`, 355.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 168.}, {0.13, 45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 168.}, {0.22999999999999998`, 365.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 184.00000000000003`}, {0.13, 97.95918367346937}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 184.00000000000003`}, {0.22999999999999998`, 365.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 200.}, {0.13, 45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 200.}, {0.22999999999999998`, 375.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 216.}, {0.13, 71.83673469387755}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 216.}, {0.22999999999999998`, 375.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.5700000000000001, 320.}, {0.33, 136.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.5700000000000001, 320.}, {0.33, 152.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 320.}, {0.53, 29.090909090909093`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 369.2307692307693}, {0.33, 168.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 369.2307692307693}, {0.33, 
     184.00000000000003`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 369.2307692307693}, {0.53, 
     48.484848484848484`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 418.46153846153845`}, {0.33, 200.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 418.46153846153845`}, {0.33, 216.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 418.46153846153845`}, {0.53, 
     9.696969696969697}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 415.}, {0.03, 130.9090909090909}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 415.}, {0.13, 111.0204081632653}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 425.}, {0.13, 150.20408163265304`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 398.3673469387754}, {0.03, 
     72.72727272727273}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 398.3673469387754}, {0.03, 
     305.4545454545455}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 435.}, {0.03, 189.0909090909091}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 435.}, {0.13, 228.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 445.}, {0.03, 72.72727272727273}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 445.}, {0.13, 280.81632653061223`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 411.4285714285714}, {0.03, 
     130.9090909090909}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 411.4285714285714}, {0.03, 
     363.6363636363637}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 166.4}, {0.63, 320.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 166.4}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 192.}, {0.63, 369.2307692307693}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 192.}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 217.60000000000002`}, {0.63, 418.46153846153845`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 217.60000000000002`}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 234.66666666666666`}, {0.33, 72.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 232.00000000000003`}, {0.22999999999999998`, 415.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 232.00000000000003`}, {0.13, 398.3673469387754}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 248.}, {0.22999999999999998`, 425.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 248.}, {0.22999999999999998`, 445.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 264.}, {0.22999999999999998`, 435.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 264.}, {0.13, 411.4285714285714}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 117.89473684210526`}, {0.73, 166.4}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 117.89473684210526`}, {0.8300000000000001, 
     11.428571428571427`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 151.57894736842104`}, {0.73, 192.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 151.57894736842104`}, {0.8300000000000001, 
     34.285714285714285`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 185.26315789473685`}, {0.73, 217.60000000000002`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 185.26315789473685`}, {0.8300000000000001, 
     57.14285714285714}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 126.06060606060606`}, {0.43, 
     234.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.5700000000000001, 467.69230769230774`}, {0.33, 8.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.5700000000000001, 467.69230769230774`}, {0.53, 
     126.06060606060606`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 243.2}, {0.03, 14.545454545454547`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 243.2}, {0.63, 467.69230769230774`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.5700000000000001, 516.9230769230769}, {0.33, 40.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.5700000000000001, 516.9230769230769}, {0.53, 
     126.06060606060606`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 268.8}, {0.03, 14.545454545454547`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 268.8}, {0.63, 516.9230769230769}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.5700000000000001, 566.1538461538462}, {0.33, 
     56.00000000000001}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.5700000000000001, 566.1538461538462}, {0.53, 
     126.06060606060606`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 294.40000000000003`}, {0.03, 14.545454545454547`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 294.40000000000003`}, {0.63, 566.1538461538462}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 145.45454545454547`}, {0.33, 
     232.00000000000003`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 145.45454545454547`}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 164.84848484848484`}, {0.33, 248.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 164.84848484848484`}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 184.24242424242425`}, {0.33, 264.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 184.24242424242425`}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 224.00000000000003`}, {0.9300000000000002, 
     117.89473684210526`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 288.}, {0.9300000000000002, 151.57894736842104`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 352.}, {0.9300000000000002, 185.26315789473685`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 80.}, {0.73, 243.2}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 80.}, {0.53, 145.45454545454547`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 102.85714285714285`}, {0.73, 294.40000000000003`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 102.85714285714285`}, {0.53, 164.84848484848484`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 125.71428571428571`}, {0.73, 268.8}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 125.71428571428571`}, {0.53, 184.24242424242425`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.07, 35.55555555555556}, {1.03, 224.00000000000003`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.07, 35.55555555555556}, {1.03, 288.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.07, 35.55555555555556}, {1.03, 352.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 416.}, {0.9300000000000002, 185.26315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 59.25925925925925}, {0.8300000000000001, 80.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 59.25925925925925}, {1.03, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 480.}, {0.9300000000000002, 151.57894736842104`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 82.96296296296296}, {0.8300000000000001, 
     102.85714285714285`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 82.96296296296296}, {1.03, 480.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 544.}, {0.9300000000000002, 117.89473684210526`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 106.66666666666666`}, {0.8300000000000001, 
     125.71428571428571`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 106.66666666666666`}, {1.03, 544.}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[{{1.17, 87.27272727272727}, {1.1300000000000001`, 
     35.55555555555556}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[{{1.27, 320.}, {1.2300000000000002`, 87.27272727272727}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 145.45454545454547`}, {1.1300000000000001`, 
     59.25925925925925}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 145.45454545454547`}, {1.1300000000000001`, 
     82.96296296296296}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 145.45454545454547`}, {1.1300000000000001`, 
     106.66666666666666`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.27, 448.00000000000006`}, {0.13, 385.3061224489796}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.27, 448.00000000000006`}, {1.2300000000000002`, 
     87.27272727272727}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 320.}, {1.33, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.37, 320.}, {1.33, 448.00000000000006`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 320.}, {1.33, 192.00000000000003`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 320.}, {1.4300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 24.615384615384617`}, {1.2300000000000002`, 
     145.45454545454547`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 24.615384615384617`}, {1.5300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 21.333333333333332`}, {1.6300000000000001`, 
     24.615384615384617`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 424.48979591836735`}, {0.03, 
     130.9090909090909}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 424.48979591836735`}, {0.03, 
     247.27272727272725`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 437.55102040816325`}, {0.03, 
     14.545454545454547`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 437.55102040816325`}, {0.03, 
     305.4545454545455}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 455.}, {0.13, 215.51020408163265`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 465.}, {0.03, 14.545454545454547`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 465.}, {0.13, 280.81632653061223`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 450.6122448979591}, {0.03, 
     72.72727272727273}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 450.6122448979591}, {0.03, 
     363.6363636363637}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 475.}, {0.13, 293.87755102040813`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 485.}, {0.13, 398.3673469387754}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 280.}, {0.22999999999999998`, 425.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 280.}, {0.13, 437.55102040816325`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 280.}, {0.13, 450.6122448979591}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 296.}, {0.22999999999999998`, 455.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 296.}, {0.22999999999999998`, 475.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 312.}, {0.13, 424.48979591836735`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 312.}, {0.22999999999999998`, 465.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 312.}, {0.22999999999999998`, 485.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 320.}, {0.03, 72.72727272727273}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 320.}, {0.63, 467.69230769230774`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 345.6}, {0.03, 72.72727272727273}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 345.6}, {0.63, 516.9230769230769}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 371.2}, {0.03, 72.72727272727273}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 371.2}, {0.63, 566.1538461538462}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 203.63636363636363`}, {0.33, 280.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 203.63636363636363`}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 223.03030303030306`}, {0.33, 296.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 223.03030303030306`}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 242.42424242424244`}, {0.33, 312.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 242.42424242424244`}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 148.57142857142856`}, {0.73, 320.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 148.57142857142856`}, {0.53, 203.63636363636363`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 171.42857142857142`}, {0.73, 345.6}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 171.42857142857142`}, {0.53, 223.03030303030306`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 194.28571428571428`}, {0.73, 371.2}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 194.28571428571428`}, {0.53, 242.42424242424244`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 130.37037037037035`}, {0.8300000000000001, 
     148.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 130.37037037037035`}, {1.03, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 154.07407407407408`}, {0.8300000000000001, 
     171.42857142857142`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 154.07407407407408`}, {1.03, 544.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 177.77777777777777`}, {0.8300000000000001, 
     194.28571428571428`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 177.77777777777777`}, {1.03, 480.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 203.63636363636363`}, {1.1300000000000001`, 
     130.37037037037035`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 203.63636363636363`}, {1.1300000000000001`, 
     154.07407407407408`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 203.63636363636363`}, {1.1300000000000001`, 
     177.77777777777777`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 73.84615384615385}, {1.2300000000000002`, 
     203.63636363636363`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 73.84615384615385}, {1.5300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 64.}, {1.6300000000000001`, 73.84615384615385}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 495.}, {0.03, 14.545454545454547`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 495.}, {0.13, 111.0204081632653}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 463.67346938775506`}, {0.03, 
     72.72727272727273}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 463.67346938775506`}, {0.03, 
     247.27272727272725`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 476.73469387755097`}, {0.03, 
     189.0909090909091}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 476.73469387755097`}, {0.03, 
     305.4545454545455}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 489.7959183673469}, {0.03, 
     14.545454545454547`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 489.7959183673469}, {0.03, 
     363.6363636363637}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 505.}, {0.13, 411.4285714285714}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 515.}, {0.13, 424.48979591836735`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 328.00000000000006`}, {0.22999999999999998`, 475.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 328.00000000000006`}, {0.13, 463.67346938775506`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 344.}, {0.22999999999999998`, 495.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 344.}, {0.13, 476.73469387755097`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 344.}, {0.22999999999999998`, 505.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 360.}, {0.13, 398.3673469387754}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 360.}, {0.13, 489.7959183673469}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 360.}, {0.22999999999999998`, 515.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 396.8}, {0.03, 130.9090909090909}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 396.8}, {0.63, 467.69230769230774`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 422.40000000000003`}, {0.03, 130.9090909090909}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 422.40000000000003`}, {0.63, 516.9230769230769}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 448.00000000000006`}, {0.03, 130.9090909090909}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 448.00000000000006`}, {0.63, 566.1538461538462}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 261.8181818181818}, {0.33, 
     328.00000000000006`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 261.8181818181818}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 281.2121212121212}, {0.33, 344.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 281.2121212121212}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 300.6060606060606}, {0.33, 360.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 300.6060606060606}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 217.1428571428571}, {0.73, 448.00000000000006`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 217.1428571428571}, {0.53, 261.8181818181818}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 240.}, {0.73, 396.8}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 240.}, {0.53, 281.2121212121212}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 262.85714285714283`}, {0.73, 422.40000000000003`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 262.85714285714283`}, {0.53, 300.6060606060606}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 201.48148148148147`}, {0.8300000000000001, 
     217.1428571428571}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 201.48148148148147`}, {1.03, 480.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 225.1851851851852}, {0.8300000000000001, 240.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 225.1851851851852}, {1.03, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 248.88888888888886`}, {0.8300000000000001, 
     262.85714285714283`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 248.88888888888886`}, {1.03, 544.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 261.8181818181818}, {1.1300000000000001`, 
     201.48148148148147`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 261.8181818181818}, {1.1300000000000001`, 
     225.1851851851852}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 261.8181818181818}, {1.1300000000000001`, 
     248.88888888888886`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 123.07692307692308`}, {1.2300000000000002`, 
     261.8181818181818}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 123.07692307692308`}, {1.5300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 106.66666666666666`}, {1.6300000000000001`, 
     123.07692307692308`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 502.85714285714283`}, {0.03, 
     14.545454545454547`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 502.85714285714283`}, {0.03, 
     247.27272727272725`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 515.9183673469387}, {0.03, 
     72.72727272727273}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 515.9183673469387}, {0.03, 
     363.6363636363637}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 376.}, {0.22999999999999998`, 425.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 525.}, {0.13, 437.55102040816325`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 535.}, {0.13, 476.73469387755097`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 392.}, {0.22999999999999998`, 455.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 392.}, {0.13, 463.67346938775506`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 277.33333333333337`}, {0.13, 
     515.9183673469387}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 277.33333333333337`}, {0.33, 376.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 277.33333333333337`}, {
     0.22999999999999998`, 525.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 408.00000000000006`}, {0.13, 411.4285714285714}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 408.00000000000006`}, {0.13, 502.85714285714283`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 408.00000000000006`}, {0.22999999999999998`, 535.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 473.6}, {0.03, 189.0909090909091}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 473.6}, {0.63, 467.69230769230774`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 499.20000000000005`}, {0.03, 189.0909090909091}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 499.20000000000005`}, {0.63, 516.9230769230769}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 524.8000000000001}, {0.03, 189.0909090909091}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 524.8000000000001}, {0.63, 566.1538461538462}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.47000000000000003`, 320.}, {0.33, 392.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 320.}, {0.43, 149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 339.3939393939394}, {0.43, 
     277.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 339.3939393939394}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 358.7878787878788}, {0.33, 
     408.00000000000006`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 358.7878787878788}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 285.71428571428567`}, {0.73, 473.6}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 285.71428571428567`}, {0.53, 320.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 308.57142857142856`}, {0.73, 499.20000000000005`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 308.57142857142856`}, {0.53, 339.3939393939394}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 331.4285714285714}, {0.73, 524.8000000000001}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 331.4285714285714}, {0.53, 358.7878787878788}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 272.5925925925926}, {0.8300000000000001, 
     285.71428571428567`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 272.5925925925926}, {1.03, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 296.29629629629625`}, {0.8300000000000001, 
     308.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 296.29629629629625`}, {1.03, 544.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 320.}, {0.8300000000000001, 331.4285714285714}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 320.}, {1.03, 480.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 320.}, {1.1300000000000001`, 272.5925925925926}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 320.}, {1.1300000000000001`, 296.29629629629625`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 320.}, {1.1300000000000001`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 172.30769230769232`}, {1.2300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 172.30769230769232`}, {1.5300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 149.33333333333334`}, {1.6300000000000001`, 
     172.30769230769232`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 221.53846153846155`}, {1.5300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 221.53846153846155`}, {1.03, 544.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 192.}, {1.6300000000000001`, 221.53846153846155`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 270.76923076923083`}, {1.5300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 270.76923076923083`}, {1.03, 480.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 234.66666666666666`}, {1.6300000000000001`, 
     270.76923076923083`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 320.}, {1.5300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.57, 320.}, {1.03, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 277.33333333333337`}, {1.6300000000000001`, 320.}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 545.}, {0.13, 189.3877551020408}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 528.9795918367347}, {0.03, 
     101.81818181818181`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 528.9795918367347}, {0.03, 
     334.5454545454545}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 555.}, {0.13, 319.99999999999994`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 424.00000000000006`}, {0.03, 160.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 424.00000000000006`}, {0.22999999999999998`, 355.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 440.}, {0.03, 218.1818181818182}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 440.}, {0.22999999999999998`, 365.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 456.}, {0.03, 101.81818181818181`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 456.}, {0.22999999999999998`, 375.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.37000000000000005`, 320.}, {0.33, 120.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 362.66666666666663`}, {0.13, 
     528.9795918367347}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 362.66666666666663`}, {0.33, 
     424.00000000000006`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 405.3333333333333}, {0.22999999999999998`,
      555.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 405.3333333333333}, {0.33, 440.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 448.}, {0.22999999999999998`, 545.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.37000000000000005`, 448.}, {0.33, 456.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 378.1818181818182}, {0.43, 320.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 550.4}, {0.63, 320.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 550.4}, {0.53, 378.1818181818182}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 354.2857142857142}, {0.03, 43.63636363636363}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 354.2857142857142}, {0.73, 550.4}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 576.}, {0.63, 369.2307692307693}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 576.}, {0.53, 378.1818181818182}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 377.14285714285717`}, {0.03, 43.63636363636363}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 377.14285714285717`}, {0.73, 576.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 601.6}, {0.63, 418.46153846153845`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 601.6}, {0.53, 378.1818181818182}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 400.}, {0.03, 43.63636363636363}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 400.}, {0.73, 601.6}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 397.57575757575756`}, {0.43, 
     362.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 397.57575757575756`}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 416.96969696969694`}, {0.43, 
     405.3333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 416.96969696969694`}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 436.3636363636364}, {0.43, 448.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 436.3636363636364}, {0.43, 192.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 218.9473684210526}, {0.8300000000000001, 400.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 218.9473684210526}, {0.53, 397.57575757575756`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 252.63157894736844`}, {0.8300000000000001, 
     354.2857142857142}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 252.63157894736844`}, {0.53, 416.96969696969694`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 286.31578947368416`}, {0.8300000000000001, 
     377.14285714285717`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 286.31578947368416`}, {0.53, 436.3636363636364}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 343.7037037037037}, {0.9300000000000002, 
     218.9473684210526}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 343.7037037037037}, {1.03, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 367.4074074074074}, {0.9300000000000002, 
     252.63157894736844`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 367.4074074074074}, {1.03, 544.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 391.1111111111111}, {0.9300000000000002, 
     286.31578947368416`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 391.1111111111111}, {1.03, 480.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 378.1818181818182}, {1.1300000000000001`, 
     343.7037037037037}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 378.1818181818182}, {1.1300000000000001`, 
     367.4074074074074}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 378.1818181818182}, {1.1300000000000001`, 
     391.1111111111111}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 369.2307692307693}, {1.2300000000000002`, 
     378.1818181818182}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 369.2307692307693}, {1.5300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 320.}, {1.6300000000000001`, 369.2307692307693}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 542.0408163265306}, {0.03, 160.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 542.0408163265306}, {0.03, 
     276.3636363636364}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 555.1020408163265}, {0.03, 
     43.63636363636363}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 555.1020408163265}, {0.03, 
     334.5454545454545}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 565.}, {0.13, 254.69387755102036`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 575.}, {0.13, 306.9387755102041}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 568.1632653061224}, {0.03, 
     218.1818181818182}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 568.1632653061224}, {0.03, 
     392.72727272727275`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 472.}, {0.03, 43.63636363636363}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 472.}, {0.22999999999999998`, 375.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 585.}, {0.13, 528.9795918367347}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 488.00000000000006`}, {0.22999999999999998`, 545.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 488.00000000000006`}, {0.13, 555.1020408163265}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 488.00000000000006`}, {0.22999999999999998`, 575.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 504.00000000000006`}, {0.22999999999999998`, 565.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 504.00000000000006`}, {0.13, 568.1632653061224}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 490.66666666666663`}, {0.13, 
     542.0408163265306}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 490.66666666666663`}, {0.33, 472.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 490.66666666666663`}, {
     0.22999999999999998`, 585.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 422.85714285714283`}, {0.03, 101.81818181818181`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 422.85714285714283`}, {0.73, 550.4}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 445.71428571428567`}, {0.03, 101.81818181818181`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 445.71428571428567`}, {0.73, 576.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 468.57142857142856`}, {0.03, 101.81818181818181`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 468.57142857142856`}, {0.73, 601.6}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 455.75757575757575`}, {0.33, 
     488.00000000000006`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 455.75757575757575`}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 475.1515151515151}, {0.33, 
     504.00000000000006`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 475.1515151515151}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 494.5454545454545}, {0.43, 
     490.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 494.5454545454545}, {0.43, 192.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 320.}, {0.8300000000000001, 468.57142857142856`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 320.}, {0.53, 455.75757575757575`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 353.6842105263157}, {0.8300000000000001, 
     422.85714285714283`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 353.6842105263157}, {0.53, 475.1515151515151}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 387.36842105263156`}, {0.8300000000000001, 
     445.71428571428567`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 387.36842105263156`}, {0.53, 494.5454545454545}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 414.8148148148148}, {0.9300000000000002, 320.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 414.8148148148148}, {1.03, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 438.5185185185185}, {0.9300000000000002, 
     353.6842105263157}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 438.5185185185185}, {1.03, 544.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 462.22222222222223`}, {0.9300000000000002, 
     387.36842105263156`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 462.22222222222223`}, {1.03, 480.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 436.3636363636364}, {1.1300000000000001`, 
     414.8148148148148}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 436.3636363636364}, {1.1300000000000001`, 
     438.5185185185185}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 436.3636363636364}, {1.1300000000000001`, 
     462.22222222222223`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 418.46153846153845`}, {1.2300000000000002`, 
     436.3636363636364}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 418.46153846153845`}, {1.5300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 362.66666666666663`}, {1.6300000000000001`, 
     418.46153846153845`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 581.2244897959183}, {0.03, 
     101.81818181818181`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 581.2244897959183}, {0.03, 
     276.3636363636364}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 594.2857142857142}, {0.03, 
     218.1818181818182}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 594.2857142857142}, {0.03, 
     334.5454545454545}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 607.3469387755101}, {0.03, 
     43.63636363636363}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 607.3469387755101}, {0.03, 
     392.72727272727275`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 520.}, {0.03, 43.63636363636363}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 520.}, {0.22999999999999998`, 355.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 536.}, {0.22999999999999998`, 555.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 595.}, {0.13, 542.0408163265306}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 605.}, {0.13, 568.1632653061224}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 605.}, {0.13, 581.2244897959183}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 533.3333333333334}, {0.13, 
     594.2857142857142}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 533.3333333333334}, {0.33, 520.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 533.3333333333334}, {0.33, 536.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 552.}, {0.13, 528.9795918367347}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 552.}, {0.13, 607.3469387755101}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 552.}, {0.22999999999999998`, 595.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 491.4285714285714}, {0.03, 160.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 491.4285714285714}, {0.73, 550.4}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 514.2857142857142}, {0.03, 160.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 514.2857142857142}, {0.73, 576.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 537.1428571428571}, {0.03, 160.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 537.1428571428571}, {0.73, 601.6}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 513.939393939394}, {0.22999999999999998`, 
     605.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 513.939393939394}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 533.3333333333334}, {0.43, 
     533.3333333333334}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 533.3333333333334}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 552.7272727272727}, {0.33, 552.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 552.7272727272727}, {0.43, 192.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 421.05263157894734`}, {0.8300000000000001, 
     514.2857142857142}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 421.05263157894734`}, {0.53, 513.939393939394}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 454.7368421052631}, {0.8300000000000001, 
     537.1428571428571}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 454.7368421052631}, {0.53, 533.3333333333334}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 488.4210526315789}, {0.8300000000000001, 
     491.4285714285714}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 488.4210526315789}, {0.53, 552.7272727272727}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 485.92592592592587`}, {0.9300000000000002, 
     421.05263157894734`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 485.92592592592587`}, {1.03, 480.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 509.6296296296296}, {0.9300000000000002, 
     454.7368421052631}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 509.6296296296296}, {1.03, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 533.3333333333333}, {0.9300000000000002, 
     488.4210526315789}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 533.3333333333333}, {1.03, 544.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 494.5454545454545}, {1.1300000000000001`, 
     485.92592592592587`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 494.5454545454545}, {1.1300000000000001`, 
     509.6296296296296}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 494.5454545454545}, {1.1300000000000001`, 
     533.3333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 467.69230769230774`}, {1.2300000000000002`, 
     494.5454545454545}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 467.69230769230774`}, {1.5300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 405.3333333333333}, {1.6300000000000001`, 
     467.69230769230774`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 620.4081632653061}, {0.03, 
     43.63636363636363}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 620.4081632653061}, {0.03, 
     276.3636363636364}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 615.}, {0.13, 306.9387755102041}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 568.}, {0.03, 43.63636363636363}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 568.}, {0.22999999999999998`, 365.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 584.}, {0.22999999999999998`, 545.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 625.}, {0.13, 594.2857142857142}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 600.}, {0.22999999999999998`, 565.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 600.}, {0.13, 581.2244897959183}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 576.}, {0.22999999999999998`, 615.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.37000000000000005`, 576.}, {0.33, 568.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.37000000000000005`, 576.}, {0.33, 584.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 616.}, {0.22999999999999998`, 555.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 616.}, {0.13, 620.4081632653061}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 616.}, {0.22999999999999998`, 625.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 560.}, {0.03, 218.1818181818182}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 560.}, {0.73, 550.4}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 582.8571428571429}, {0.03, 218.1818181818182}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 582.8571428571429}, {0.73, 576.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 605.7142857142857}, {0.03, 218.1818181818182}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 605.7142857142857}, {0.73, 601.6}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 572.1212121212121}, {0.33, 600.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 572.1212121212121}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 591.5151515151515}, {0.43, 576.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 591.5151515151515}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 610.909090909091}, {0.33, 616.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 610.909090909091}, {0.43, 192.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 522.1052631578947}, {0.8300000000000001, 
     605.7142857142857}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 522.1052631578947}, {0.53, 572.1212121212121}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 555.7894736842105}, {0.8300000000000001, 560.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 555.7894736842105}, {0.53, 591.5151515151515}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 589.4736842105262}, {0.8300000000000001, 
     582.8571428571429}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 589.4736842105262}, {0.53, 610.909090909091}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 557.0370370370371}, {0.9300000000000002, 
     522.1052631578947}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 557.0370370370371}, {1.03, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 580.7407407407406}, {0.9300000000000002, 
     555.7894736842105}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 580.7407407407406}, {1.03, 544.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 604.4444444444445}, {0.9300000000000002, 
     589.4736842105262}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 604.4444444444445}, {1.03, 480.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 552.7272727272727}, {1.1300000000000001`, 
     557.0370370370371}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 552.7272727272727}, {1.1300000000000001`, 
     580.7407407407406}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 552.7272727272727}, {1.1300000000000001`, 
     604.4444444444445}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 516.9230769230769}, {1.2300000000000002`, 
     552.7272727272727}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 516.9230769230769}, {1.5300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 448.}, {1.6300000000000001`, 516.9230769230769}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 566.1538461538462}, {1.5300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 490.66666666666663`}, {0.9300000000000002, 
     117.89473684210526`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 490.66666666666663`}, {1.6300000000000001`, 
     566.1538461538462}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 80.}, {1.7300000000000002`, 490.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 533.3333333333334}, {0.9300000000000002, 
     151.57894736842104`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 533.3333333333334}, {1.6300000000000001`, 
     566.1538461538462}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 240.}, {1.7300000000000002`, 533.3333333333334}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 576.}, {0.9300000000000002, 185.26315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 576.}, {1.6300000000000001`, 566.1538461538462}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 400.}, {1.7300000000000002`, 576.}}]}, 
   {GrayLevel[0], InsetBox["\<\"ak\"\>", {0., 14.545454545454547`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx278:power2\"\>", {0.1, 6.530612244897958},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"al\"\>", {0., 43.63636363636363},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx279:power2\"\>", {0.1, 19.591836734693878`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"bk\"\>", {0., 72.72727272727273},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx280:power2\"\>", {0.1, 32.65306122448979},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"bl\"\>", {0., 101.81818181818181`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx281:power2\"\>", {0.1, 45.71428571428571},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"ck\"\>", {0., 130.9090909090909},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx282:power2\"\>", {0.1, 58.77551020408163},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"cl\"\>", {0., 160.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx283:power2\"\>", {0.1, 71.83673469387755},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"dk\"\>", {0., 189.0909090909091},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx284:power2\"\>", {0.1, 84.89795918367346},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"dl\"\>", {0., 218.1818181818182},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx285:power2\"\>", {0.1, 97.95918367346937},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"pxk\"\>", {0., 247.27272727272725`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz565:Times(-1)\"\>", {0.1, 111.0204081632653},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz583:Times\"\>", {0.1, 124.08163265306122`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx286:Times\"\>", {0.2, 5.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx287:Times\"\>", {0.1, 137.14285714285714`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz579:Times\"\>", {0.1, 150.20408163265304`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx288:Times\"\>", {0.2, 15.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx289:Times\"\>", {0.2, 25.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"pxl\"\>", {0., 276.3636363636364},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz575:Times(-1)\"\>", {0.1, 163.26530612244898`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx290:Times\"\>", {0.2, 35.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx291:Times\"\>", {0.1, 176.32653061224488`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz577:Times\"\>", {0.1, 189.3877551020408},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx292:Times\"\>", {0.2, 45.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx293:Times\"\>", {0.2, 55.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz584:Times\"\>", {0.1, 202.44897959183672`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"pyk\"\>", {0., 305.4545454545455},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx294:Times\"\>", {0.2, 65.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz582:Times\"\>", {0.1, 215.51020408163265`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx295:Times\"\>", {0.2, 75.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz572:Times(-1)\"\>", {0.1, 228.57142857142856`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx296:Times\"\>", {0.2, 85.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx297:Times\"\>", {0.2, 95.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"pyl\"\>", {0., 334.5454545454545},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx298:Times\"\>", {0.1, 241.63265306122446`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz581:Times\"\>", {0.1, 254.69387755102036`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx299:Times\"\>", {0.2, 105.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz574:Times(-1)\"\>", {0.1, 267.7551020408163},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx300:Times\"\>", {0.2, 115.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx301:Times\"\>", {0.2, 125.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"pzk\"\>", {0., 363.6363636363637},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz564:Times(-1)\"\>", {0.1, 280.81632653061223`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx302:Times\"\>", {0.2, 135.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx303:Times\"\>", {0.2, 145.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz578:Times\"\>", {0.1, 293.87755102040813`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx304:Times\"\>", {0.2, 155.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx305:Times\"\>", {0.2, 165.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"pzl\"\>", {0., 392.72727272727275`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz573:Times\"\>", {0.1, 306.9387755102041},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx306:Times(-1)\"\>", {0.2, 175.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz580:Times\"\>", {0.1, 319.99999999999994`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx307:Times\"\>", {0.2, 185.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx308:Times\"\>", {0.2, 195.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx309:Times\"\>", {0.2, 205.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx310:Times\"\>", {0.2, 215.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx311:Times\"\>", {0.2, 225.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx312:Times\"\>", {0.2, 235.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz585:Times(-1)\"\>", {0.1, 333.06122448979585`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx313:Times\"\>", {0.2, 245.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx314:Times\"\>", {0.2, 255.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx315:Times\"\>", {0.2, 265.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx316:Times\"\>", {0.2, 275.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx317:Times\"\>", {0.2, 285.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx318:Times\"\>", {0.2, 295.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx319:Times\"\>", {0.2, 305.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx320:Plus\"\>", {0.2, 315.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx321:Times\"\>", {0.2, 325.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx322:Times\"\>", {0.2, 335.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx323:Plus\"\>", {0.2, 345.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx324:Plus\"\>", {0.30000000000000004`, 8.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz599:Plus\"\>", {0.30000000000000004`, 24.000000000000004`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz600:Plus\"\>", {0.4, 21.333333333333332`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz603:Plus\"\>", {0.5, 9.696969696969697},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx325:Plus\"\>", {0.6000000000000001, 24.615384615384617`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx326:Plus\"\>", {0.30000000000000004`, 40.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx327:Plus\"\>", {0.30000000000000004`, 56.00000000000001},
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], 
    InsetBox["\<\"tx328:reciprocal\"\>", {0.30000000000000004`, 72.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz595:Plus\"\>", {0.30000000000000004`, 88.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tzz597:Plus\"\>", {0.4, 64.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz598:Plus\"\>", {0.5, 29.090909090909093`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx329:Plus\"\>", {0.6000000000000001, 73.84615384615385},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz596:Plus\"\>", {0.30000000000000004`, 104.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz601:Plus\"\>", {0.4, 106.66666666666666`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz602:Plus\"\>", {0.5, 48.484848484848484`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx330:Plus\"\>", {0.6000000000000001, 123.07692307692308`},
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], 
    InsetBox["\<\"tx331:reciprocal\"\>", {0.30000000000000004`, 120.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx332:Symbol\"\>", {0.2, 355.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx333:Symbol\"\>", {0.2, 365.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx334:Symbol\"\>", {0.2, 375.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz556:Times(2.)\"\>", {0.4, 149.33333333333334`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx335:Times\"\>", {0.5, 67.87878787878788},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx336:Times\"\>", {0.5, 87.27272727272727},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx337:Times\"\>", {0.5, 106.66666666666669`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz555:Times(-2.)\"\>", {0.4, 192.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx338:Times\"\>", {0.7000000000000001, 12.8},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx339:Times\"\>", {0.7000000000000001, 38.4},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx340:Times\"\>", {0.7000000000000001, 64.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"xl\"\>", {0., 421.8181818181818},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx341:Times(-1)\"\>", {0.1, 346.1224489795918},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"yl\"\>", {0., 450.90909090909093`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx342:Times(-1)\"\>", {0.1, 359.1836734693877},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"zl\"\>", {0., 480.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx343:Times(-1)\"\>", {0.1, 372.2448979591837},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"xk\"\>", {0., 509.0909090909091},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tzz588:Plus\"\>", {0.2, 385.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz590:Plus\"\>", {0.6000000000000001, 172.30769230769232`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz594:Plus\"\>", {0.7000000000000001, 89.60000000000001},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz606:Plus\"\>", {0.8, 11.428571428571427`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx344:Plus\"\>", {0.9, 16.842105263157894`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"yk\"\>", {0., 538.1818181818182},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tzz587:Plus\"\>", {0.2, 395.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz589:Plus\"\>", {0.6000000000000001, 221.53846153846155`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz593:Plus\"\>", {0.7000000000000001, 115.19999999999999`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz605:Plus\"\>", {0.8, 34.285714285714285`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx345:Plus\"\>", {0.9, 50.526315789473685`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"zk\"\>", {0., 567.2727272727273},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tzz586:Plus\"\>", {0.2, 405.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz591:Plus\"\>", {0.6000000000000001, 270.76923076923083`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz592:Plus\"\>", {0.7000000000000001, 140.8},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz604:Plus\"\>", {0.8, 57.14285714285714},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx346:Plus\"\>", {0.9, 84.21052631578947},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx347:power2\"\>", {1., 32.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx348:power2\"\>", {1., 96.00000000000001},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx349:power2\"\>", {1., 160.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx350:Plus\"\>", {1.1, 11.851851851851851`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"r0\"\>", {0., 596.3636363636364},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx351:Times(-1)\"\>", {0.1, 385.3061224489796},
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], 
    InsetBox["\<\"tx352:mysqrt\"\>", {1.2000000000000002`, 29.090909090909093`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx353:Plus\"\>", {1.3, 64.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx354:power2\"\>", {1.4000000000000001`, 106.66666666666666`},
     
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"ks\"\>", {1.3, 192.00000000000003`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"Energy:Times\"\>", {1.5, 106.66666666666666`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx355:Times\"\>", {0.30000000000000004`, 136.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx356:Times\"\>", {0.30000000000000004`, 152.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx357:Times\"\>", {0.30000000000000004`, 168.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx358:Times\"\>", {0.30000000000000004`, 184.00000000000003`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx359:Times\"\>", {0.30000000000000004`, 200.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx360:Times\"\>", {0.30000000000000004`, 216.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx361:Plus\"\>", {0.6000000000000001, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx362:Plus\"\>", {0.6000000000000001, 369.2307692307693},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx363:Plus\"\>", {0.6000000000000001, 418.46153846153845`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx364:Times\"\>", {0.2, 415.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx365:Symbol\"\>", {0.2, 425.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx366:Times\"\>", {0.1, 398.3673469387754},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx367:Times\"\>", {0.2, 435.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx368:Times\"\>", {0.2, 445.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx369:Times\"\>", {0.1, 411.4285714285714},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx370:Times\"\>", {0.7000000000000001, 166.4},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx371:Times\"\>", {0.7000000000000001, 192.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx372:Times\"\>", {0.7000000000000001, 217.60000000000002`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx373:power2\"\>", {0.4, 234.66666666666666`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx374:Plus\"\>", {0.30000000000000004`, 232.00000000000003`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx375:Plus\"\>", {0.30000000000000004`, 248.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx376:Plus\"\>", {0.30000000000000004`, 264.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx377:Plus\"\>", {0.9, 117.89473684210526`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx378:Plus\"\>", {0.9, 151.57894736842104`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx379:Plus\"\>", {0.9, 185.26315789473685`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz560:Times(-4.)\"\>", {0.5, 126.06060606060606`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz571:Times\"\>", {0.6000000000000001, 467.69230769230774`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx380:Times\"\>", {0.7000000000000001, 243.2},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz570:Times\"\>", {0.6000000000000001, 516.9230769230769},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx381:Times\"\>", {0.7000000000000001, 268.8},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz569:Times\"\>", {0.6000000000000001, 566.1538461538462},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx382:Times\"\>", {0.7000000000000001, 294.40000000000003`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx383:Times\"\>", {0.5, 145.45454545454547`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx384:Times\"\>", {0.5, 164.84848484848484`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx385:Times\"\>", {0.5, 184.24242424242425`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx386:power2\"\>", {1., 224.00000000000003`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx387:power2\"\>", {1., 288.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx388:power2\"\>", {1., 352.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx389:Plus\"\>", {0.8, 80.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx390:Plus\"\>", {0.8, 102.85714285714285`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx391:Plus\"\>", {0.8, 125.71428571428571`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx392:Plus\"\>", {1.1, 35.55555555555556},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz561:Times(2.)\"\>", {1., 416.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx393:Times\"\>", {1.1, 59.25925925925925},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz562:Times(2.)\"\>", {1., 480.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx394:Times\"\>", {1.1, 82.96296296296296},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz563:Times(2.)\"\>", {1., 544.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx395:Times\"\>", {1.1, 106.66666666666666`},
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], 
    InsetBox["\<\"tx396:mysqrt\"\>", {1.2000000000000002`, 87.27272727272727},
     
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], InsetBox["\<\"tx397:reciprocal\"\>", {1.3, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx398:Plus\"\>", {1.2000000000000002`, 145.45454545454547`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx399:Plus\"\>", {1.3, 448.00000000000006`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz557:Times\"\>", {1.4000000000000001`, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz558:Times\"\>", {1.5, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"gak:Times\"\>", {1.6, 24.615384615384617`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fak:Times(-1)\"\>", {1.7000000000000002`, 21.333333333333332`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx400:Times\"\>", {0.1, 424.48979591836735`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx401:Times\"\>", {0.1, 437.55102040816325`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx402:Symbol\"\>", {0.2, 455.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx403:Times\"\>", {0.2, 465.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx404:Times(-2.)\"\>", {0.1, 450.6122448979591},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx405:Symbol\"\>", {0.2, 475.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx406:Times(-2.)\"\>", {0.2, 485.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx407:Plus\"\>", {0.30000000000000004`, 280.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx408:Plus\"\>", {0.30000000000000004`, 296.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx409:Plus\"\>", {0.30000000000000004`, 312.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx410:Times\"\>", {0.7000000000000001, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx411:Times\"\>", {0.7000000000000001, 345.6},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx412:Times\"\>", {0.7000000000000001, 371.2},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx413:Times\"\>", {0.5, 203.63636363636363`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx414:Times\"\>", {0.5, 223.03030303030306`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx415:Times\"\>", {0.5, 242.42424242424244`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx416:Plus\"\>", {0.8, 148.57142857142856`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx417:Plus\"\>", {0.8, 171.42857142857142`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx418:Plus\"\>", {0.8, 194.28571428571428`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx419:Times\"\>", {1.1, 130.37037037037035`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx420:Times\"\>", {1.1, 154.07407407407408`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx421:Times\"\>", {1.1, 177.77777777777777`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx422:Plus\"\>", {1.2000000000000002`, 203.63636363636363`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"gbk:Times\"\>", {1.6, 73.84615384615385},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fbk:Times(-1)\"\>", {1.7000000000000002`, 64.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx423:Times\"\>", {0.2, 495.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx424:Times\"\>", {0.1, 463.67346938775506`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx425:Times\"\>", {0.1, 476.73469387755097`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx426:Times\"\>", {0.1, 489.7959183673469},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx427:Times(-2.)\"\>", {0.2, 505.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx428:Times(-2.)\"\>", {0.2, 515.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx429:Plus\"\>", {0.30000000000000004`, 328.00000000000006`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx430:Plus\"\>", {0.30000000000000004`, 344.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx431:Plus\"\>", {0.30000000000000004`, 360.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx432:Times\"\>", {0.7000000000000001, 396.8},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx433:Times\"\>", {0.7000000000000001, 422.40000000000003`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx434:Times\"\>", {0.7000000000000001, 448.00000000000006`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx435:Times\"\>", {0.5, 261.8181818181818},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx436:Times\"\>", {0.5, 281.2121212121212},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx437:Times\"\>", {0.5, 300.6060606060606},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx438:Plus\"\>", {0.8, 217.1428571428571},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx439:Plus\"\>", {0.8, 240.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx440:Plus\"\>", {0.8, 262.85714285714283`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx441:Times\"\>", {1.1, 201.48148148148147`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx442:Times\"\>", {1.1, 225.1851851851852},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx443:Times\"\>", {1.1, 248.88888888888886`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx444:Plus\"\>", {1.2000000000000002`, 261.8181818181818},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"gck:Times\"\>", {1.6, 123.07692307692308`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fck:Times(-1)\"\>", {1.7000000000000002`, 106.66666666666666`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx445:Times\"\>", {0.1, 502.85714285714283`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx446:Times\"\>", {0.1, 515.9183673469387},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx447:Times(-2.)\"\>", {0.30000000000000004`, 376.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx448:Times(-1)\"\>", {0.2, 525.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx449:Times(-2.)\"\>", {0.2, 535.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx450:Plus\"\>", {0.30000000000000004`, 392.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx451:Plus\"\>", {0.4, 277.33333333333337`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx452:Plus\"\>", {0.30000000000000004`, 408.00000000000006`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx453:Times\"\>", {0.7000000000000001, 473.6},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx454:Times\"\>", {0.7000000000000001, 499.20000000000005`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx455:Times\"\>", {0.7000000000000001, 524.8000000000001},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx456:Times\"\>", {0.5, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx457:Times\"\>", {0.5, 339.3939393939394},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx458:Times\"\>", {0.5, 358.7878787878788},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx459:Plus\"\>", {0.8, 285.71428571428567`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx460:Plus\"\>", {0.8, 308.57142857142856`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx461:Plus\"\>", {0.8, 331.4285714285714},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx462:Times\"\>", {1.1, 272.5925925925926},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx463:Times\"\>", {1.1, 296.29629629629625`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx464:Times\"\>", {1.1, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx465:Plus\"\>", {1.2000000000000002`, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"gdk:Times\"\>", {1.6, 172.30769230769232`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fdk:Times(-1)\"\>", {1.7000000000000002`, 149.33333333333334`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"gxk:Times\"\>", {1.6, 221.53846153846155`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fxk:Times(-1)\"\>", {1.7000000000000002`, 192.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"gyk:Times\"\>", {1.6, 270.76923076923083`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fyk:Times(-1)\"\>", {1.7000000000000002`, 234.66666666666666`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"gzk:Times\"\>", {1.6, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fzk:Times(-1)\"\>", {1.7000000000000002`, 277.33333333333337`},
     
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx466:Symbol\"\>", {0.2, 545.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx467:Times\"\>", {0.1, 528.9795918367347},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx468:Symbol\"\>", {0.2, 555.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx469:Times\"\>", {0.30000000000000004`, 424.00000000000006`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx470:Times\"\>", {0.30000000000000004`, 440.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx471:Times\"\>", {0.30000000000000004`, 456.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx472:power2\"\>", {0.4, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx473:Plus\"\>", {0.4, 362.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx474:Plus\"\>", {0.4, 405.3333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx475:Plus\"\>", {0.4, 448.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz559:Times(4.)\"\>", {0.5, 378.1818181818182},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz568:Times\"\>", {0.7000000000000001, 550.4},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx476:Times\"\>", {0.8, 354.2857142857142},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz567:Times\"\>", {0.7000000000000001, 576.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx477:Times\"\>", {0.8, 377.14285714285717`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz566:Times\"\>", {0.7000000000000001, 601.6},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx478:Times\"\>", {0.8, 400.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx479:Times\"\>", {0.5, 397.57575757575756`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx480:Times\"\>", {0.5, 416.96969696969694`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx481:Times\"\>", {0.5, 436.3636363636364},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx482:Plus\"\>", {0.9, 218.9473684210526},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx483:Plus\"\>", {0.9, 252.63157894736844`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx484:Plus\"\>", {0.9, 286.31578947368416`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx485:Times\"\>", {1.1, 343.7037037037037},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx486:Times\"\>", {1.1, 367.4074074074074},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx487:Times\"\>", {1.1, 391.1111111111111},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx488:Plus\"\>", {1.2000000000000002`, 378.1818181818182},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"gal:Times\"\>", {1.6, 369.2307692307693},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fal:Times(-1)\"\>", {1.7000000000000002`, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx489:Times\"\>", {0.1, 542.0408163265306},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx490:Times\"\>", {0.1, 555.1020408163265},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx491:Symbol\"\>", {0.2, 565.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx492:Times(-2.)\"\>", {0.2, 575.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx493:Times\"\>", {0.1, 568.1632653061224},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx494:Times\"\>", {0.30000000000000004`, 472.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx495:Times(-2.)\"\>", {0.2, 585.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx496:Plus\"\>", {0.30000000000000004`, 488.00000000000006`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx497:Plus\"\>", {0.30000000000000004`, 504.00000000000006`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx498:Plus\"\>", {0.4, 490.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx499:Times\"\>", {0.8, 422.85714285714283`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx500:Times\"\>", {0.8, 445.71428571428567`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx501:Times\"\>", {0.8, 468.57142857142856`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx502:Times\"\>", {0.5, 455.75757575757575`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx503:Times\"\>", {0.5, 475.1515151515151},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx504:Times\"\>", {0.5, 494.5454545454545},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx505:Plus\"\>", {0.9, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx506:Plus\"\>", {0.9, 353.6842105263157},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx507:Plus\"\>", {0.9, 387.36842105263156`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx508:Times\"\>", {1.1, 414.8148148148148},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx509:Times\"\>", {1.1, 438.5185185185185},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx510:Times\"\>", {1.1, 462.22222222222223`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx511:Plus\"\>", {1.2000000000000002`, 436.3636363636364},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"gbl:Times\"\>", {1.6, 418.46153846153845`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fbl:Times(-1)\"\>", {1.7000000000000002`, 362.66666666666663`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx512:Times\"\>", {0.1, 581.2244897959183},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx513:Times\"\>", {0.1, 594.2857142857142},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx514:Times\"\>", {0.1, 607.3469387755101},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx515:Times\"\>", {0.30000000000000004`, 520.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx516:Times(-2.)\"\>", {0.30000000000000004`, 536.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx517:Times(-2.)\"\>", {0.2, 595.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx518:Plus\"\>", {0.2, 605.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx519:Plus\"\>", {0.4, 533.3333333333334},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx520:Plus\"\>", {0.30000000000000004`, 552.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx521:Times\"\>", {0.8, 491.4285714285714},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx522:Times\"\>", {0.8, 514.2857142857142},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx523:Times\"\>", {0.8, 537.1428571428571},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx524:Times\"\>", {0.5, 513.939393939394},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx525:Times\"\>", {0.5, 533.3333333333334},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx526:Times\"\>", {0.5, 552.7272727272727},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx527:Plus\"\>", {0.9, 421.05263157894734`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx528:Plus\"\>", {0.9, 454.7368421052631},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx529:Plus\"\>", {0.9, 488.4210526315789},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx530:Times\"\>", {1.1, 485.92592592592587`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx531:Times\"\>", {1.1, 509.6296296296296},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx532:Times\"\>", {1.1, 533.3333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx533:Plus\"\>", {1.2000000000000002`, 494.5454545454545},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"gcl:Times\"\>", {1.6, 467.69230769230774`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fcl:Times(-1)\"\>", {1.7000000000000002`, 405.3333333333333},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx534:Times\"\>", {0.1, 620.4081632653061},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx535:Symbol\"\>", {0.2, 615.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx536:Times\"\>", {0.30000000000000004`, 568.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx537:Times(-2.)\"\>", {0.30000000000000004`, 584.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx538:Times(-2.)\"\>", {0.2, 625.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx539:Plus\"\>", {0.30000000000000004`, 600.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx540:Plus\"\>", {0.4, 576.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx541:Plus\"\>", {0.30000000000000004`, 616.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx542:Times\"\>", {0.8, 560.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx543:Times\"\>", {0.8, 582.8571428571429},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx544:Times\"\>", {0.8, 605.7142857142857},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx545:Times\"\>", {0.5, 572.1212121212121},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx546:Times\"\>", {0.5, 591.5151515151515},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx547:Times\"\>", {0.5, 610.909090909091},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx548:Plus\"\>", {0.9, 522.1052631578947},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx549:Plus\"\>", {0.9, 555.7894736842105},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx550:Plus\"\>", {0.9, 589.4736842105262},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx551:Times\"\>", {1.1, 557.0370370370371},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx552:Times\"\>", {1.1, 580.7407407407406},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx553:Times\"\>", {1.1, 604.4444444444445},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx554:Plus\"\>", {1.2000000000000002`, 552.7272727272727},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"gdl:Times\"\>", {1.6, 516.9230769230769},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fdl:Times(-1)\"\>", {1.7000000000000002`, 448.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz576:Times(-2.)\"\>", {1.6, 566.1538461538462},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"gxl:Times\"\>", {1.7000000000000002`, 490.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"fxl:Times(-1)\"\>", {1.8, 80.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"gyl:Times\"\>", {1.7000000000000002`, 533.3333333333334},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"fyl:Times(-1)\"\>", {1.8, 240.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"gzl:Times\"\>", {1.7000000000000002`, 576.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"fzl:Times(-1)\"\>", {1.8, 400.},
     Background->Automatic]}},
  AspectRatio->0.41,
  ImageSize->{986.67578125, Automatic}]], "Output",
 CellChangeTimes->{3.702666678818524*^9, 3.7026672464843082`*^9, 
  3.702667942886034*^9, 3.7028897104966097`*^9, 3.7028899993186197`*^9, 
  3.702891214921299*^9, 3.7028914600480623`*^9, 3.7028944028541117`*^9, 
  3.70289450253447*^9, 3.7071475791301727`*^9, 3.707148818433988*^9, 
  3.707319267897547*^9, 3.707319383084227*^9, 3.707321573320304*^9, 
  3.707321613299719*^9, 3.70732828589126*^9, 3.70733030704198*^9, 
  3.707330840253703*^9, 3.7073409674090767`*^9, 3.707342600915766*^9, 
  3.7073879854831867`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsfXl8nXP2/22bJl3Sfd+1WtqqqF0pFbXWEvsaa4md2MVWYo3awgxhEDPE
IJaJMWIQJQbXEjSMWKJNkSIIUnWrt+35vd/nfD7P8yS56Tb9/vd7Pq829z73
WT/LWd/nnP1PvPC0U84+8cLTZ5+40V7nn5h/2umzL9hoz3PPx64unWKxLl/E
Yp3u3CjGzxKL+f/abAv4X7vd/3/vBt67h/5Jk4Q0oTXr/wmR4bq7C/5LSNJO
iPUI9iVxYDP36zf+34LvCXfcIP0/Hb+3+H26JfGtudUebrPaPkdcciUm+VLD
Q4fp7u74r07ysDtLiuUZyUGrx75qfI9hfw1OysFTcCZtiu/1uFc1LpMrpVKG
SxXgd25N+J4jhfg/Hy2ub1aHPTEc5Z+rTo+J4V8JPvOIZql0j1SLO+XpHavw
qYT3w5n1+MbfC3F8LY6KaeOTNqIHivVTpRThKWrQK64PkxL0a1e3L4lHSNjO
2FC3LxF2V6yz7+vmcF+bzrTTYlMiI+VHpUerfcngmx+9FndcFzcQos+eq72E
4/2hnCeNdlEdFn3wcKBjGfo/p09csnEBe9ZmdGoB/uVGuroF3/PkSLlYPpN3
MVxVMg9n5OHq3OrxORvd2aDnVLszCtGZ1foKTfgFj9zZ9VZSR6MkMrsS+Jaj
457AY8Twj+9cq+PfontvXJUjG8+ulUH4dZc7EnLOOUk5aWGJXPpGldzxgshz
CwvxS5Es/FnS9Da9dczy0OlZuSLP3CiSU6qPJVnYl4fPtSW20oqKRYrLbYjj
xdKFO2O9JK88MlZ41JxssX7HcTk4rQyTurlGJBufs/MxF5v9qGdKRSH+ZOEW
6NGqQrtNfgGOw77qz+388krsy2d3y3Q/XsnoBEomxc8i3pOzKxmZWUk8TEsi
OtvSdba1WrNJPaaPPyXFBE20BKdEJuhT+j22WTB1ElKuKyVXHpPrdWLwyQt1
X6l8IsVuRU/C/5vJ5TJHxy8XE6kxuGgjxjUbe8p1rpbqdEvgSjFHIVp0XmTh
qoXYwxXM30kbsvBLOfbk4ZvvozqdpAn3KaQJtza0XtV1mBUxnVNGhUAv8PJ8
1gz8f6Tsjt/9Ik3iijE8YzzooD6gBn+VTmifyCo9pgl348ROgKoYJWmSCp17
LW6qFOvsbnErU2LTdHXyCVqCvmjGtxxdHv43Pn8N9tl1WuQOfC79PC5T8d43
VTbJNeVNcv4tCTnllCbZ8hd7vyF/apY+GN2uIEsjRohMnSqy554ixxwuMmqg
yJU3iNx/v8i5B4hccR4eZaYNdjIRUDSpxrwsrbPPpXkilQ1uP+b/J+iyOvxW
5+Z53P3W1CDBu5RgThfXelqUKQkMW3aR/VaE36o4wdihsZU6P6vqtBN1GcZb
ZCc9bayU59mS+ev9tlwKS3FZLI+ieSIF+B7DKi7HrMvN1bOlBr/nYmkV47yS
ePj4RTgmLwePTAJd666FFV5YZOdxK8NSzsFxSTxOAT7H8K+yLly+dRV2XjnO
b6y0z7l4llwcV4wxK8HfIhxThPvFm+UcPS09Sv+jK9YvTu30ZOtDmlvEE2uu
5+ZW67mLP0S/9U51F7FLNrdEdvTXA93a3SWYa66P5D3M3/PRYrI99p4gm6Bl
SrpsLDvLVWgPytUyX5bpsZU4oszNlBZdR5V+1AMK3gLibh3brOu72n0u1HVU
qRy4PrhCFliHziC3KivxyXiz7a+VjfD5tGd1lmIf+Xq4KuwqZE2V+lSkGNPw
m3UJaVSWUpMKSVgX9pM90abgojmO4PCyFXpYTJdx0pEgMs+Ee5gs3JLHNeDm
zcFwjE+xjPkatoyb9YWM3NXgCjlKvqwbqnGlPO2wuHvEYlmsxLNE2XmN2Lr6
4w+Rr78Wef99kRfA1B7+i8gUSFX5l4qcdJLIzJ1sLnbqJDJnjps5vaQKK7iw
OpwAhZz+SZtgXLVcJoX5dmpesVKAQJrg6nXnutfsKS1c7YV2rWJM9ThOeK62
CefX4qGL5PXSlcbRwBKMdW0kxVm6mvWeXPUFNpxShb+Lquze7P4W9MrH88Pv
fBhSgk+4zPLsnGY8T1a+XavFLZhmXCO31M0ATLcmtwrqwMSzisUTH2XO2Ubk
4ljx51faLWJGbKTKzV8+YmFcdnC9EMjNAc022cuJSuF6jOwL1q2Xr/FtsP6P
NYqjwpUeyNJ26S2kvtyeqPjF9rTtYTdQpTgmHwNZ3WxiRg5+K8Xg5ZUY6a5F
Z+ThDYuwv8yR71TH1eO6sRz7vbzArl1SGZJ/TuYi/J6N35qxszDL6CFFk2xc
6/N30MH4vRLPUwDumO9ffg1CcVS+cIMYdFlzU3huL3/c2gjPF+nHWN/gfknf
w04Iz5RfZZGcLjvKSSBjXPu9pCfIW0y2BqsvQatFWyl/qJoAocEeqZsuX1uy
3KqwSItUvSpVchC3w6jgRIlpQqlFIe7kGL54IaZIB7xEhaM4qIIJIKU4lpQl
LuPA1GffTem8yalZUIqMsri3HwmaUICj6tEo0EyRS/BYb+q1snGlUvyf6+hX
UnqgFcl1ekeKQiaubS43oh2jYhCl9Fx9jvPwvFeDBhrRtr0VkrTbDgmInO/7
ZvyYC/LFV65RoT5LtTX+X4Lj8pwMyMs14bZXyxUyW8mtsmk89lVyG/YUS5Ob
KL0CefqTLwXyjEjPdNNGODlJ/Lg1YTAKc21fRYPvllHKxXNyjHo0VRlD5uaX
PbeGWpvM3Miss/KMAmaRmuH8KIXj79U48de65UrhZrU8g78JOT1xvdTEf9Mh
2dH1zQ8/iFy4jcj1j+K+WGTnn2zPN3KcSLduTmjAM2c5+aehPJSFPDW+/wIs
JPfMLbUBJQwmPd8pq6D1gqnFvWKFUfk/UxduTpb1w7OXiAwaK3L0USJbOVJH
YsBrZ5mOsb2etjXG26vm5Rik3FaqeVw+UHU6F3OpEEfUBGpY232msuc4lT1f
ZzXnEo8sD9633qnn2a3U8xzlkzUYxzKdOiX4XOlU9TiOK3YsfIH73dSOKuXN
XJYVqp7Hg+4ZKzVFSs1tusZbM5u6BeCh+F6lO0z8zI2ZWMqtCJ+rP7FzGm0B
K0Pi53bHuWs0OEEyWWcya8hQM3WoimrsuF1wzi8rMRyFNiWa8Ty12N9UHTyj
yY6j10tZVZGZ+3D5It/rOCcfM7oUZD8n362IjjXW9VRYdXPE2JTLHmBIGEJc
I7+wAHeIycU3zcH3bCmvqQG7xSDmFOLySRNje8pnaA+h5aFtjtYTFGwTGSjH
yaXyLNpbcrxTBuuDZcBRKVQTkl8GE8TUzKJAtm9w1DbmqJ7OCbVN2PwrUmJl
aqNRvhd1PtpbVRu5F1HBtUBpemXwO2dePa6UjT3bvRDKci26gijnqUXOPVsP
zFkapv6BtReTyR0Yw/JljLeFbS8fYgFuJUNkf11YuTIGnUDZ4jGZiGMOkvsi
9rHQFlaDB2lUW9jm2LOF3K1iaymOfnqD2cKMcneT5++yydG9J0TSg+1zlzT7
W/2Nm09pUl9pEgU3cHZPuyltlpkyIBX4ubrelKpmN0u54CrcqBWbXmnDQsEl
P6TbLXU2JbmYqoooQM0H079Zbsv/Q3YoWSTpRY9iel4k38l3sal672myfLnI
l+A38+ZByfyryLXXipx8sunLEyeK9OgB1Qm60yiQ1h33FtkDqtOkzUUy8Oqx
ASLX3STy+jx7Hl1N1IudcNWEZ6/xKzTmCIDNPF1CfL8kZmiJW1oFTgxtxvs3
uPWkKzzLVnMW/pbGpRWNf/4qkT5DRG6/Hb2Pa2ySZc9xCwS0Fl4nITEj8sNU
Yyp0U5oCSQH+5QUTP6nS6Tdob8idquEl3D7bqtw+GgXz3SKq06lrw0FzXiIi
E5ugUxzsG6A2kGzHFGrxKUvPTAY2D8oF2SuK5ftVJbq4bErUq5WnUup0oRfp
zGx2i39EKyLPjXx2s2tE7rtPZNttRfbZIST8yQbry6iN4sb7A76qZJFU8I3/
tj+uuCZia3X8uTHp9/UMnwMnDR+E+QG5ZTwkwz6YK5ddhjm1o53zlzcldq6b
9zzWzwNupZjLBSD9Mcy3t95PbY+JGOakIs/WRSX+5lWGx/l5tM72mDdW4Rk/
lZb/LGprj9GtFWnvLlX5ICI8rx7DFQO9S9ZIbg5k6WrosJBLGrVjeOwFoN6X
ysFo26P1QhuMRuvwWWj3oP0b4iDJzB5ygdyLz1vh8+FyE+j+xphsz8qraHG0
t9EehdS+D6jme2g12t6R22VXuQPfP8T+Q3HuoXKlnCyHyQMyX/4r7+M3Xq9K
XscEOhDnH4S2CfbtgLvNxxR7EQLpUXjGk2QaJl6VfCl/w6cY5OSXsDx2xKez
MUUX4N6TwJw/lIc+fUhGLpiD59sHi6UOfOkGmSWngdyQpr8oP8ov0Dl+dQaN
q2VnmYv+WCq/Q8O/Dx15H+4Wk79ieJbjSXaSjECmuQ3kmXb0rUG2z8aCowl8
DHqNxJq29Td1ER2Ju2yDu0bs6MrxSNYvAbEnwb8In7PUgvEhzu+NK3VsSDft
xWS6CgnNLG/j/1qdCYVOf/E8dpjEMd0POEBkKJSsWdD4Fy4RWbUKMiXoTVqa
ib5KJCowRdw8pjBTjVtWgpzVOMNAQZQ0Utd0trfmQO3O8NM3mOI0CugULvTH
dJdv0fqg/YTGpfM12tlofdHORFski2Kb6LHZ0oyLf/ABlg+e7S4wr4swtw8/
XGQHkIvhw810utFGkNV2Mf2bS/jee/HcWFr/BXloxOR+6HZb0l2hpkzH8t5y
hsitV9s+sgHaHQvR6XnZ9rxL6u03csBCvH9tk1kjvFHE2yUDFaveyLyXV0ja
8irsc02xGjhsmTu5sdGzBfy9As+dDhLU4IwsJf8UmTHVGPRWOObtes8WerVi
CxyAMiftfI92N9pOaF3QnpdrVdIO5wAHuNLta1KbVlVgANfjQquJ6Y/YGXAD
2v2yndRi3KAmMhW5xWXLFUUy5WEsod/LVYhqVC9XUuUYk0rK9XGMqvUPxOxl
y0TuvE3koIPwDHj97cG5p04RueceDAs4cy44dKLOuoaaX5PTisquV5HcW/ZI
GF9+r/1hNQmzEtc6w7dnCLQmcwQKSo1wB0wBXyaAKZyLWfb05SKjjxG5HAou
TRZTt8aodBcZPFhk551N+Jg7F8rbsyKffhrahjGjM1xvkgd4Q4kZODq0/+6i
P3dtJTIsgO5z8N4cQ7q00qWlpfWpznDYxS292iLTTGkCqvJSiWmegVVsbe2F
Se0okCvQjJotfwzshXrQxXqiYy+YWglwfqyTwnwIxVkl0pLAxFKkQTZVrkwe
Zh6bNPztDII4WXZDA1vpDG6wK9SnGXj/LBmFfzvLdDTO5B3RpqHtgDZVRss4
8JptQUsn4FLdQd0nyUYQq6fKlmibQejuh29TZDh+HYm/U3RfNxmrR05E2xRt
Aq7TC0f0xb3Gycad8d+4WG8cNBYX2wjkewwOGI0fR+EiI2UE2nC0YWhD0Yag
kSH2X7C1dB7zVWcZIAPw9P3R+qGRfvWBHpQBbaiXWq664l5dMUBd8STd8a8b
fkvDvs74vyv+penioHuKF39TfjA6oS6qeeBA8+RoE6Naua3IkS6Ub02mH5XS
O3WL7IuTO/ZOHbM8Rx78zCTEWokaspqCFVvmSA1twLvtJjJmjMif/6wKQeBd
+8tfIHFDQJoATW70aHf7JjN9ZjvTaIvbl5tli48Sd2PEYpKoNykupA/ddAFT
OqYOXACSnI1z4o1GqrMKxVssT0ajNSyczl2VGl6CxhE5Ee1z+Rzip5EdLrYG
0ILXXhN5+GGR60FGTj1VZG+QncmTRXqC6tIhRwF+v/1EzjhD5CYoDn//O4TN
N8y6v3KleGb3008iDz4IpjpLJDPTmOylB6sPzmEAektFvj5xsKlB11nKm5zV
nPpQldercpUUpbnF6QzkdrjjHw3JkEZwI1X67TffeemycKHIJZeIDBwIsXof
keee06feRn8epsKD97ksBNvgaA+EEEOWvC/aYHw7HAsxW2dBpaNgTfhU2Gpf
Uv2mMTUQeb8ujUa1Ae9IzU+8b4lbXBXpSvH+KfNJVSuruvelcjUd7fr3ajl/
Fe8zT4UbzvQWc7q4a86UVdAOD0XX9Mcc7YUBnIQRP/A4kRNBqGNHiPTtJTL7
SnP5sQvrlpi2yrlIja0C9K4l3l7DiDe3P05HsTwcRdJPzt+kLT2zeDaGTIVi
1QTMkHEbm6k+t1RfV+d1SZFZQCmmvPKK8T0aaThsG+P4dIgsE8baNSfPEDls
U5yHe3/5rO0rrTE+yXVWjOcrj2g/Ca4h0xxi3joc2SdJJ+ZQ5Kstc0ajktDy
uq6uhZ3dqmDf7Ysv54GJ9usnctS2Kr3IgKH+OdLaWoe9gaG5zhSZsvn2t8bR
NLqUPItaH+OwOBGi5Qcaif+Q2pHbSf3290tLdbWxtC1dn7VAMKq0hRWB3FSr
tYXfttX/A9ZXX1EoRVUQduKFpllhDuWiv0oxFmU1TZmuRzyR72x8UBnB5WhL
ZWkr35QHcqS5hUw6WeKcnTHnLkhKuRmc0tUI1CyfgNgfj0VRBg6RAzGrZR1Q
Rd3cPhpXuma3yNKV/uajxVuJvb5TLC+ojyOFsxZ62/v6ctVow8EVO/bWdrzP
eWutP0asl7P2ctCVcac0QGBI7az9dVWz3PZhgyo+m25qdqRkYBvoKk2YPgMG
iIwcaSwASkXo9Io4swIHV/hwsT4p9vlzwYJAUwfqeHve8TPaNWgQIeQItFpn
nUkk3fVbIYjIuFq75ga1Qwv98ovIf14V+cc/jU+TBRx1lMh229obUVUir54O
FfDoo8GpLhW5+26Rf/1L5KOPhE/eyhXY+m0zZNGXUMFAH/bYQ6R3b5FDDjHG
uGSJRzf0kiqwqmwsyCpHJxXSUW6Qjlp3zZI88/bEbIEHlg4K6qpS4thCZ7wu
ixtUJKpuUd378ksnA6SrCvHQQ2ZEGjvWZHIM1pbuicS5TIbLnuBxU7HyYhAM
pssF+La93KjjUqYoiXqdX5URyTiyT0IMVbGuqqIAPKdmaHcOl03A8YJ5ax44
ak2NuJMhHvNUkypUsF62rm4DLbyZLJbdGgukayJfTihJytvJArX/5dMDJzZS
HFmO6KRx6MkzlHv4qUat5JprotOvlzRUBAKWvYgj/E32dCZT4GPkuMBgnHSU
MxE5lsyNigWYm5+f5FXO8+cknx4Kh3gH82MSJKI8jPkOGKCe+LEzThq5pXuU
FneJ/jr0ZMv1NMziCePlRtsbFqfY516lwel13jlXm5RUjhz+xGV5b+FK6Vv0
d6msXdTWkWM4pu6yYgX67zTbvQV2Pne3fU4jRIs2kcYQT9LKSl7nBF4CNkps
n5rrnGPDuwD/NzO5vUYZjin+8yrJO/RdkxJo/HjxRb3GJm5VSBsQg5mNW0Ju
U+WJtDP9dVEwsHPExExWDJxDLXXlkptbIMUFuVJY0aCyUk42hbVGKaDTqKSS
RnQb+X5qhOBK+QPtYjTP9/h3b7SP5L11wCOWy+vyjqTCI1bhefeVE5whzNbo
hsYjtvWsdIxHpOq5pR5XkMLVvzf+DZRBci/asVDrWrv6sxxVMadXqn3tXP3D
1tvVP/8bkWH3lssRP9IbZ67+FStq5IAlhTL80zwZ+XiTPPmk2ggdHeiqtrVD
D4WgtKXZ3c48k55bmzi0F9+JJgHdGC+/oc1FGyK7yzaKDfyjHTbwRoejOQYa
1p1Q4vYEKSvDTDh0O1BzUIOxQyA0TwSzARVPx5wdAZI3BDc9BevzhjnQ2qCx
FVyF82ZD/1lhfdABNtC6rFeH0MCDdwQ/w99N+op0wzSeOh6PB6aydKka+W1J
JYzgBOJxs34OnA0hO3YksGvUAKRCx5tvepmrq7yDOX3ccaZvnngiRgyi++b6
23AILIu1R3dG6y3dZVsoZP9E44LidjsajRFvySOYKvVuOXB6xHXKptqXjZE2
oFGNtw5ar1DOpazUpESiJDA703ZXLs7266hEd/nmGzO0DhtmvqyiIpOVKFlQ
ovj441CK+P57e70ffwwZihJNDEpZlREzBUIVGxC0rK61BzI8zNsFPAQqMOBh
qJc0mbm6KGRHfJACB8KwMIBM+f13kXdBMEtxwwsuENlrL7zEIFwaGsu0aQZk
ueoYu/yCZqeAZ0ohvr4cD++a77SWW+5rv6+4MpgNXoEE/U/pevJw9A/w6sOL
5skEOUtG62VWyEO1y2I7uTX+73+DgU4S2Q3Hn5cbYmDZ7RwCWh+VfKWw3fMG
KniFeC0pywldUM4dtVa2+wx3TCAYklE+8og9HEWvZ5+NfeLePan2KjUnxSbq
vnF8Qkc4i/CpxWFDckAkc/Xvw5jRJJflmJ12XCHm7JIIORedklUOH5Dv1TR3
XZqrFjjTFREp5ho3REqJXlkRKUapuzldKq4QmnIFwZTqA5NWo3cy3HSLPnU8
UEUa9anRMY5L9g3mWTI07yZrMEF1lfVyQ9kbjZe6H43bErTZaJ5bkjv2Bw8t
kPvkd7QafCrS2+cGyDZyo0IIa3SZTAe3uVL+ZENpSF831TYRCwnxaN0Nj/Id
j88jrkqAoK0NyvdRvOVckDS3qPqqpXRP2Qq84TD5q9ymY8qTa9XX+LFCMj/Q
YINmPN402VE+dDfWfd7ibcgJbobZT7o7l0mLI8EZMn8+dLqZLfLS6+ZrHoe5
uPN+CXny1YSjST0CMOTLL5uVc99Z0FJKzPryt7+J1748EjyCibSXRc82NoeM
wL7qtz7+FDct3kGjhZl6PBiG0aaxsgx0/cApCRnQPEq2+PYSmQ4VZ/vDDCg3
Hqyodw/TSjRIAFxvbyKJdxD5E0b/ceg7m4ADPnlCe+dyRw7nFBDcQA1ri8Hd
7zJIx9OMwM2COnntHHPbOAyuj3/af39onv+wt+7u3pp4O5pPaRmmw462UmgF
PjArqipHg7VaWkHmXfiMO86zLNIhhs8QBnEHGj0GnFXHoz2HBk4ZGBzZ2aeg
Eae0CE106efrXDOJqLmDfaIIn3zn3S2QOtdL3fUXSlb5anUxSlagpogah6OL
O5aZIb/+KvLAAyJbbw1u08XsslTQKV95V9Hll5u12c4QlRAaI7AAN+cC1hr5
zUkUw3y4ULBRIaN6wI1TmP7Qxx8XueIKkQMPtJlF3y/DTsjSOVS0FX/+79aw
RwW2WUxGoPvUVhj0x9ujq4sc1q4uPDfVPl6vttbxo4TpN3mF5jDIKVCoRitv
XI6Dd+gsxf5fyYqzvgP1uED61VyueIWv5CtzkaZptAttp3w1sEY/p1euNIWZ
lvLmUC9v76YQFUi8w62UZNch8srKzRsREUbW4KTo6Sc2fe1PPWX9vDlEvCee
oD2+1o1yg6o9WSDABYoYLpEGxzX7qKnesGuNSiNJfusDF2yNyvW1ev6VmL0L
FXnxEdSlJomC3o2qhqi7Qc4F0BL9TUQZg3fz8vfFyk/zHWNowL0qIHFW6XlV
ql3EFYWn7MnNwgznLvYwARFxYDQoLl6tHOAerRaabCxLFZgASE4fHBfgZJkc
LDYuWnomMtC8HZU21JPlUNmtlXehm86a88EyeskAuQ5tlYv7cghx7yVq0DC2
soDBhdDcDYcSH4m+2+RcsM6qjlDiPQOUeEdBtxPEvIV/kS2CoNtcDbotkYmy
mZwqJ+HvNKjRolLVPtAVJkNbUGqlzxoCDQ13chw6chj+DoNKehwoYq68BIFj
LPYcthZAw7eXh+rwxhWN8uIXrYGGNmTjAroxBRxjcB+jE/Suzd7T4l9U8cJ6
Liu2v6nAsC1YS2VF5myoT3S8b40A2c1WC5Cd+tkT6NylUghGOnOmyNkXiRwG
5rvjjkZHiCqk7bQTISQ9ktJlNpbFvFdwDXze9zm1Z5Gkn2I6iG704nmojMJF
cJ/L2/vlV+urXxNqnGRyBhTH5wkZiaVEjXvmPHu2CT8SKHJ9lCaWXGKHZ2KE
NsHf17/CnHPdE//KelXDj4gCsggB7otZkO0o+fRLN5L4vSDfupfbmqJWmp1l
i66sZKMbsVxTpKgMPl+8QrYu/lg2LVosPWuOVT/u82jLZbnrnjSVEXdF2x8N
onQ0nsczxs5r2OfjfsJ47cBo5phwT3WNUK6h8aMXiNTBB4s8/bSJQNR/KJLR
yv711yFzXrrU/Aj19WYRJnUjEyCggwrbDTeYv9gz4E02sevOmYPuKreYTehX
Ma+D0ofMGVQC+l9WYJ8rXBc3+j5NGlgLIp5/xcI8C/3MKQyjUiL77CxnC24w
UuetqLpR9c2vbO3IJMCdYY6pHJlXVC9SaYmed9qE5sm8rfW2XWkBUPGGa4lW
A/RqMM8J7dpsM2WNwb6ot8UPeBQ50+xwJW2kyEx3O/VpUOKkl4cS/IoVMdUg
wI4blVLVuT5rUtkOU3CU+7kDw2kXt2owAzEP9wLdrVKLzD1yoczE96mgiIOh
z+wCrcbUPCI80lXY3xYNMmkEB1+jXDcMUx4awXbVBBw5EeGk9vsCVc7KFK7h
IVbiaHbMmTirNReAdUoCdJn8paAzhQt0DIenImBiiusKHqsK3xy8LGbjFhvo
F0vY966P02RrNK+2rpSVaW6eU0AYKX3Af/sqwKUL+DUPGiqToOr9FULKQtkP
bSqY15ng3x0FAySc2l6FF1UrqzN0buhgAPoKRz8Tl2O/XV0wwAgXDPBiB4kW
9pDuaO/Lf/CeffCWX+rvYaKFRUptPnWJFvy8+kpuFItA95OxISIcpM60cBfY
93+kY4Ao485PLalVoOpOtyXkyiuTMuIjPPmSdgBRu02/AN58IfSCw7Cuh1Cm
PVlk3vPGq+cej8NOtAeoAwla3B7aHLpEHQMKJdDu0X26dQx33lV+fFtkuwss
fvYQSOyDsS579bDzYzPnS6ziaNWhOuP7wKFGOGgnPOYYw35Sr9p/rMjuINcb
4dz+g1fKNkcvk9hhb8jElqvl9qYn5I/6VQYCSZg9jP4aOldL8Dnr5hTIgys6
RiOsSwiA85nplu0YNmksbW4uBMAzbL4KIxzCBTcqIMOffw5aerTZqYfj9Kuf
sksGhLDZwkg5RAQ85poMobeorIsoQI2mutjJqwuL6qlACuICoxgZyjtjak6Q
PpVPyrFYy3MLV8rmhSucKp+mIUIbo12IBgIxTndnKCN8/XXDXZEdzJghCiP7
5RdP6rsqA73qKoOPkCnSDO/J1J13mutZnKzODvruOzPekLVQ1qGtnQyWRmmq
g0QNE891wgkKX/P8nqJHgYGrHO/uLpVlbnI3SiuvM2MSVNkrjsgQkX326N0C
V2RNhIkSDOwG326drv4RYnaJTiRakW6hpbI0yz0Lfae33GIddM45OmaBiYT+
d/rvwU9d9pmuBtLbdVdzjlPS++OPWJBXKGSmTqrhs+IdGzHgjOVtST6qu2kq
MG0hptqdQU4+V0JjFo48Z6st1iMqnO5JElaxxtQ+62ipdU61AZDuHpEb5AxM
pImyEzSdUfi7CXqNqEsymEFQBEeAncyCPjMTTOVouUjOI1EHcZ2HHt4f1/6T
uvSaAihDyET81pYjD1E+auywOgCpJSIsp1pdi5Y8JAdvUe30+BplPCTzBoZr
UaYWmnCbpRED0Kj/+4FxrLg1aq6VyryxG7h90Lw79RV5xXPdpPOnTpfZMhCc
lyiHLo77pmPS8bft0D5Eq1V/ZL170RligBwCeZLqGspyIocBzE3JLdchalAX
Y55ytDztlGwnTXBo8/CPBrQiHfBKNaTRPFGhnyhyJRSETh/ufe+Wy9AvC2XK
MnM/1qnCna++1s3lzWBojMvdIAekyPLSBxr+LLSj0UaA7w7C97fkRz2mfZaX
Zu3Vag0iL3UBGI1u1YdR01EM7ZoyvNywKkf2uSUu20cwtOfdkpBp05rkvlUB
hjagoTxtJuTR/tAMvoJyNaSfUZjLrzMtgKz2WNMhHTU5LMB0c2NGl5Iygw/k
V6beR+K6eLFoyAfNTIeAQm5/iBmS6bqlVtIdRKDHQMPx7IDfDwTBvMGlLfgA
vGXjB5s83tv6O2kEmwSZjrKejh1vtTPuwThVJ/5z30Xv1cmwnMUypORTmYTv
p5StCNIlFBRZKpemZGpoREq4hKxbOAVBJLTa+XAKYo7oYSwAa87PM7HE09EO
0jWlR5O/WAcklLkGVJ+80twOgb5C569Pk+AtWbfNFTn7bH99d89QdApcam0j
446fYM/+3nshpJfTNyvCjQjVyS8LwzaSQYDaaoPfCO+nZzCKkTwe582ueV2S
zSvUYqPd1hwqs1Vog9AelAdj49zjfPKJSVt0lkyZYpZjTGmz+3fT2X3kkaYb
U0fmRn8hmRNmpmkVmWoXJ6qa8TrsKPIvGlI4SSkVnHWWuWH+8x+VDvyLMRxo
3Djrw/5uFJri5rRgH+WWBofSDpHVCgLbep+35Na4KUpLND2muRBxFi0O3Mo2
ol3lZTSa5ojZuwBtgSxwtsx2Sf0Gut00FfBhKX189pl4/suAEQaS0Gvy2GPi
2b52B8Ho7DkKOokEiJN70rpSt44qna2Vo580czMN2E0JY+MgKyA15aDHd4D2
3ol/h6L10GAE4lfrAgWzVtElNRE0ZVsdpEtUBwmN/+thPqaP9SA5Rk4DNS+T
yxh5IY/Kx/ID2nL0a57SdOpTDYrA4ZPx/4rAcOrgRup0qdRedlzJHoviTsDF
bd3iQYr0xGbV8y2XQZ4eU6hhtdlO8hBlfcXYW6BsiHua9ZGLNWLdswGqo+IN
3YnIG9vWpEgjChFtuPapaJ5rHyAHeDHXgvcK9PJEAl0n16GPe0tvjCHt3D3B
uzMh5tCxNRmnjpJr5V15SEULbuaIrnPczp6kRcWQssh4tZub3q/GdUXT04EH
hqhfigKFbkAblB1fCIWzLep3a7xLFzxeT4VPHoM2EQ+3OtRvrfZ1seZDKQkU
8zao31R8eP1TNB3wJHoiaajfGmkIHJyrfgeJ6SNyB1TFv9xmwVzE0I/axtxz
m28ZmsXqfPD7pBCbXu80PZCb/4LQXTNTZCy05auPFWZSkoOPENkUyz99gDmQ
B+LvltuYzjIT+sjwHUEcsewnYF/lJ2vAq3MlxpbLlJ8OkDnQimcdYNDbrbYy
ECh1HhoiadKuDlSEdEqGGmJF69PdyUo5O6ZhX/YqPVKBQFLt8yrNGmJQbDoN
XKcUcO84gkv0DOWCZpu6UlVmdLyyXryHpDjH4vR4qVJnUl+fDHBjNukwA5xR
5V4BZpQ234P2stM23TWCsqaNtcT0O2rBoWV+pAbjlUS9XknLkRBzmvjahCF6
9uxANzYlsuyZNAkJk0Lh95qGgPNTnGVI2mvyGiefjj4FwFtvDbF61H7nz3fj
1JUgNNkGk2+77SwAavp0j1PI1MlE/kqb6cUXW2QTvfd03fB4pjG7DWvmpZdE
vv02UKRpyK6xl3csuXXyu4GRfT7ppX8cGgSZ7IFMlbb8F+VFZWEpMtR6bk/H
NjGvFD2wBLq73ZQX6Een0ow+mOxvGgp6AcPXpz0QM2vQIMNSER2mo6ay3oDg
YPLXAk73VoEa7sXCfTrCXMjFgdwUvW2pm2DfyetQwoZivBh/mAnF5U6M3x2y
u2wFMpav/MkzZgusigfiaoQ0xjxmegNZja1Xejg7ooEh7OETEduj6T741ZtK
mkFqTTeJigFxPGOtXwHBKCcllLabDWIUYB/oiqlRvhwPerRRVUm9Ymtm2lVh
pXxweoPpBV4lq9yleshTaGRJ1GI5oWZCI85wjJehmCNlvPSTntEImhb1bOeq
5zZPPZ9JH0HTZvp5vkkQKIW3rbfuOFrmSjlFuVy+PC3nYnxj4JU0ETMQ6K9Q
whkfehnaeXL2aqDAPpTAllG9Ik7i8n+Q9atQQijwsj9qZOQPhbJXQ55m/bLe
2FJuPNuo1qX3QKfcTGS3Q8N4OuaQ2XdbE9dJHY/DMa8/Yamb+PvEmRbjPQpr
tWc/y7qx0VCRTIjG2+P77nmGDvoblIpNzwVT+239YPJPzxFNangs6FS/3quk
8431MmavRRqn8sMPfjr2VaAEvRBDE9fKgbl/yElFy6WG92qP9ugYAdJ9bUJW
glumSrFIdf2OOzCTNguOt6xXi4NkotJIVa/CscPeQTxDlQt181GI4qJo1eq7
dhkWHzpHZKfjoXftYndPkWHRiM9APS2f47i7yJBh6AA8ztgjzBuZUxxRlXGJ
IjLjptZZUdQHnuPyXuU7gM1gqXbq/tqEU3rmSFd+Lvq3pcGmCNV99hl1N05H
XNPLvSvQzkFj6DcET3PFZqhUxYih3fEyffsaU2PwJfFY/RyR4cgwPIyOf+qi
jY0e4dJLVVkqcMTIX321SXZ0NHJSkyXRHUzGSscmUxbxuj48jFozJTd+297t
i4b+eRsEAaB/QePC3VQ2kVvldnq5fcBehC7H1jmLuKWLX/Ct2cOHDDGL8cqV
ASNdssRw2+yUjTd2jLS/BBLeU+Um13DTqFDs/+oDG6qzzocEvbXIDtMtf16A
kS6ysM2m6i7cyeABLmKOMkXPnHIbbWrczH1Z66Q2+lCqi23y1DnqRoOJB1rQ
IcFHodk+H7MCL/v55jF7TGryOSUSSIPFDg3rX6OqIfaAm99ECf0b7RC0vqpz
TUM/vqvxycyhNAcqznZyrMaPuAzTalkkXKuQpmWb/a3VmVQ8e8AGtCuHCh7P
yldPrxpsg7yDuqM4EtDV3UGXzJifpbCzQmUmxS6hH3M2eRGOVt0SFxHU1S2e
pJr2swN4VFIfUK3APjrWM2oiNoztdlWQ81vyluOXg/TERvlJjkJjCuO4uxwN
1JQluO8QOVj5pKU4zoSMtJUy9Z1kF3kEbZlLc7wYEs7PEgIF1jHwNS27RQZs
5ZWnYbo4fgPl+JcwI9sWYPt9MPLHEs6gsgUTUlQrNGs4ft0RAusjAYA5BVhZ
B7RA/b/N8ob2vYeRrh7B7OGjbWs7fA/OsPERCfLaQPtg5CpFEgJoqj82EZgp
cO524Wu0LdO8xjwNJFM0s209FTQctPwYLIe5txo5uw8E4ZznjTFR42AeQwUO
u+Xm9nkcd0cRAzOuMt2UlI5aCHVWJkdgBp/PPgPPS9xDhEh/94bz0Q5HG9B8
vlzUdKvGxnKj1ysVIsSrHdH8Kr3cL55NcPv4JXv7IaOMzPGtXX5PD63h03qH
ZgOE2eISw7YobXJptWiwLs1VTOfaYrOehsrVpavd0bt622CzvCnwDqhZXd2Q
1Nc7Rm18vtwRrMZyd7cG06r1YSslyH1Gc0RBhapWa4rbLLHu6eFuztRXe6Ht
gfaL/DLSDQiXBYFKRxxhY0f3AYFJUA+dLjdELeSvvmogpssuNU56daEEMJ0F
X9g1qF0deyzmAaZbt+6GSOb1qKmVgQu/WRPmznHo7yCiwl/rww8tttcly9nW
95GEdQ0q1TbbPiHqdHUFbg7e1kOOlLNoA/NwkxoFmwQIax/8EXzf0KGE8yOh
hLu/1ijvLesolLBLxHAaUnmi/QlDY5IIcG5jy9vafI173lhic9jjG7RH3YMx
CfdBd+qjh9JleehMoqOk0H2ux7F1La1FSc4dXe1JwzqrMKtKbzh66kFw64n5
UnkNpsTlVH2vVNdVyWmgL99UOJtSIrwWN3uXmEbIQED8Du0GNGbnIfkvUQhu
E9gi2V2hJrGlRnOkHCoHyM7qgfRxJzUuz0mTUmfajN9Zk9q0AS3GAeFKKttp
cWPo94XiW89gX1jZ5TD9P2CkDWicKDT08O9ZclYkECHhoMfdZRZYI8WIjmNp
9wA36yVDoYx2w7/RYKZjZUvwtAGgARvLRXKjwtDr/o8WQFHLkcECuCXZPpZ2
92ABUFEeiHXOaiRFCoiegf9745mHq/n5FIz4cPde2+qqTwV+pu+CQR+zZU9c
7URFZW1oQHSqzKuTVxbLnIVFkhGvUZjL+eebFY0J+MiHiBimfE3gEtMOcbHS
EM8YbioWv//uF31vXZQxp0VT1SFmhYItwxgJmSX+M8U+r++1jVFgXO3ZV0JP
AanvnG4OXTp26QtIJgPH2VI0yjpMnjTAzULieU5AI7yTYRegpC4EuKfcuKPI
mdfhshNFhuPSp85SCisTJ7XLuhrz7hpVnrNcjjdnEa0Ch6suCZXhBie6k3wE
6YDXAXL1/m30u3QmL5mSGnHlA5yp8xBVQ9gQzevNgQs0XeIlRqT8GHCDUmJa
bEaQwpzz3HtQXURJYHBMFbj6lRMIwI+95rUAjcnKmG4T2usI9wB0CxI+SxmB
7gqaWfCAVq8gLEiwGTTKmbz5HmDdh9q7dOliv/WFZjsGJxyBy9w1ByLaPrjM
3I4LEmgO1ti6Q7vXlDVoDLOFzQizBplxb7C0DrroOO8tt6/lMagEOXK2nI4V
WIf1WAcalK00KAS3kSbV22Qbu8EDIPfE5+m3J6ShYW0CIJlUqCVQ1DfBwphX
bXaCBx8Un+0nUn7BLmFxhIPcklxThYUAKhAVBzwarSgeQAWaKTgWRS6Tblzc
J73nRsdFWb1N/xFmeiky27KuAz4JawL5U2iiosBcURzeudRZBumCocK+X5kc
vpPIySfGXTBYc3gtbo7x3+seiQr5C2jEkTMxGeP33pP3vMmY8ip/TkQyGYfW
6zDV6Gr0K989QZhhxETtymQEDJhPw9FnvAE12f7S3932YIrNcjy02AEQMO+V
1/X8jkJ352CO3YJGYNZGyswPVRzb9spuBmJS9xMW9iHeYif13l2uMf8bevYS
CpB+xSIZMSIpf/3NZu9+cq3cg65hzoGBEBImQf+ulf/iin/y+QL0nnvj+dI1
c+EdYLfbyxkYmQkQKe5QWLKBnr0XOAQ4J91TLlD/Q7WDgUUAB9ad49YL83wb
Pl/5TK1mWd/z7oTsuWdSRn1UIhn3VUmfg8CVHjfMc0Y3E6AJMKHqwkR51JQZ
l8HPjO+gpgwB2yMs2gQdpNJGPYnXVLMPGRehW4m6Non2M8+o+dCbHJivkHkL
+W2gm18McDsDjY5+Giy/kW9ipottJT//bPa5Xba3BTVhc1CN+wx2tZeLwCx5
o30WWz55QXbIjbScR3G4aL2Lu9lJ7Yy7KcAirHJ8dl1hV33xyp1dZFfFh+1g
Vx7zQMcbcUDsIRLAP/4Ig2Db18RrXZQmLbLP6/3dIue2RlZ1wWJ8XWXmu+Xu
4Ny1qxWUEd3nNi7CxggqOl1NGVdeaaop5TgafRsaXL2+zaSDMkK6/fabgfRY
3u3o6SKjNrep16un9eCJUJJuvUzkyGNEuuL7ZOh571WvW/2LdQd6t06bNB7X
uftByIZzbNZccAqeK79V2qStg94K8ZL+dV164iCKyacgjjslqshZHvm5MuiY
alW/Ah/LhovGbJ/qtG00ZpdINKbvkQHy0gsgEjGLfCJsZPeisJfzSlOX9kgV
pRgv9nFz3aw45ZqiFte5rEcgARAyUeP9Py6zY2FFYCxuXcog8GErmELlcffu
Y40g1LhpFJW76R5Ss0GLBDjLlmovWBjeQ6sS1ptJQX/LtpUcrzVTRKxQlmIV
zJheJcl+RbJypTNTVUPybGr2bxG7x70Vs4Zfj0auyNgjIuaXyJLubgbSSFzn
NFfbarw5PLB9+8TrYci+T7yeDGzfmjstFhuvfyySizLIEM0m3E0zHdJRwPTA
Z4KKzwXfDCe9qZa4pXXqHjrKLFU1XY7WzFdn4oAumuOjQA4UYrT7yBYg+sNl
K80yfIRsg73jNFMU4yaYOXBDLYBMPGraWe/IxEua5NrX4xBZ9gRVzgAL31Gf
h3lJrpCZ+H4mWNEhMgJPtpvspeFrXZwPvZNGc8UU+jUAwgqTGFcEIk5bfHWt
SzVuW61a5eJuNMatF+b6plU5stfNcRmDq1/1dJM88laTxD9PgJy2zlv82GOm
+ZAfcyOehbhKLrpDDjXXH+far7+GBRwjjKabW4BtUyySajNDwrnnGsGn8MBQ
YcavLFoUSAftRfX0qKiuie8p1GJKmwrXVWc3B5wSAKWDeql3yE8D5dD6ypwN
FFF4R4ak/nuOq2kkltGIlvYff3Q+295qsqb07XWKSGUqc5thPf5caxTGLRj+
7uvvrk3mYYZI0+5LHzYNGOhOr0/Tg0AQEn8mr7/6aoLorH8YB0jrwkvykuMO
+22gwlYMtqARDvLgknoNByLSadDrOHJpuctQuGELW93/RZPMXp4l2e9UyKQf
C2T4iZZmgsk+jj8eVHJfMNIdRC680LrsIQzesP1MOqQt6IDp1rWDh4och5nJ
TvIroqO6J/EQjL62yO9o7qkhEH8nTra4/GGzDHQ80MkdZbVeJe8vRlhClTwR
ZG2qiKyKtomhGxW/whlSZwZYe9SNxEzsOQE92NCRnG3xn20iOX2PVTn7brg4
e0kOBmlTKLofLjQjHQu8lBYr+5dnX5BUBV4CA13b6Ma2RXh5pxQRj17gSlnf
Ze5PuOQPqert2l27heI7k6bUvGnzgkalAoU4+tBLtXJRzdanc0CWQCPQOIeY
17xU9stxQR9e+tcQOZq+cgw9qTV7vdmnJkRXllp2U71Xw7cmklDGKHLMsdKC
P1ZcmCvJoaXyp/0rZNUBuZaBZfMrw1epT9ylj5POkEEMcqVWgCFVJDYL3NeH
fZMZ00oZDmNrIEUqs/rV+n/A28nMDkObgEYf9VStMzBaIx7azn2fnaNQ6m3k
9oJqfg545GB5Uww7OE9OdVRhAFTmB2R/fMoEH98dbT/w2DTpLkfKcXICbjlA
y+rsLMcI84G1tJv3C+Vn+VIew+cJcif2kZvvDRX7epxNA8ExcpLsIJupAk4Y
W+zpxyX25Xj9jUCzDMgYWfi8l8zSlEjnoZ0A/fhIORcSxnG4T6WwwlgPzT02
Dnz/SQUM99K4baLNRwdw7vbQ7Qd0XYVFsnw+97Yld4duUDx325K7V12F1cCk
AX01koSW7IqnQVAxk7pi9McNhz5qsXTrWjOeS/iaB6B8zRA59VKo3jtDmqAS
Bjp+5VngKfi867nRmvF91qsEH1X9i+ViVxukq8oFrOFMkAOj2j6Wj2PeR850
HUTdErJD3wElGNr76S71cgcjRcnvaLvO8OTJMQO15ZbqIGkG5uIyMxV4dZ8k
j13CxV5e58hT37VOykxVnhmWmG7tzDMtsAUiQDSzti+yQKHp4Yd9asA0Na4x
SyyrcHwqn5oAsXZF0AgUqJSbpKMiaD8sMdFvr71apHsyJlv+u0k7kbrG6oug
DZS1KYI2c2WxFPzDiqCN30UkI6tehn5ULju/XCeFhY1y3MqYnPt9MwfPQ3Zf
uRbyQS8by4NyTD4ahY68Ao85sL/5fxiNcATm3wWuPulpl4l8/ZZj0NdHKt+M
UJbh4Q7rAzmP5traahR+O8Qq3/Td0oomsHOe/JdlJ/VyQTJwupdgwGqUOGVp
Eu1s7ZvQmR9Nn21RIfn4nX73Qo9S2kzDTPIjeW83ZJxpW2zr6uNMy4PvhPj2
7yey3xSRu/9qJafAcV0pnp7y9tvSaovW8G4TkxlMsqCud8TytNb1eN6w6rYt
L78cLD3W4wksWOSvhqZ0+/rYmPuyIuTnPsiQy78iohjQyeYjKypZSaE4BPG3
w85nqHbDqosEhxAKaefp/WN36jHpmsCW2bfITrdBuw8NyroPjaRbf5DzbGgC
y5gDXrYuCm0wkCOVOTPujpwpplw1kzlZ3GHhZHxbp2BMc5wUOH9sQpd2iYxH
ew16eG4k2VYe9h8F3jwWnHQL6GOHycMaitBPI6ZHgMPuqHk0+oJDTpWNIXGk
axgXjd/dWAcIdLqzRlh3w9kMQ58M/XlLNezvjKsdqrnMdpNrIA8chtcdIVtL
xmdbSKz+POmbmCUHvrymGbmv+HzSR2sZ0nQFjY+SSejTmeqKOA2tAM9sIPIf
UgDGX9KAgFALZw+lAJFP26AgcvOBFCrNvvz7JjW500B++unGqRmXshw3yoSM
+uDjFgA9oLeTuqc7+tVe6tYtKmE//mewZLqaNjVSOhly7MDtDPy26NOO8oz0
TS12a5rf5lRit2600tP5/av8aoknuuosvAmNVuYD0d6T95w/KZ3xu3LeeaZQ
kCtTG/32W6cgp6mCzN5gropffnHZAru2cjg480Oo2DWHJgpDcHVvlWKaaY8Z
bEreQggX1fPCIPlTV93PpMEMRqVO/tprIRdmQgqG38xAgxziI8k6qDnnpR4W
daQt6AWs9dBJZECtf71aiZVTJL1BivaZWy0nLy6Ve1fkeJkvYn1fv5pz26ws
kjNegAy5pFzm1YGhL09dc87LokshJI7FcKZBNBoKUeVwdPwltziHyQyRnbJC
ELnCpyA8HEjJCVO1L97hklsldY2glgimfcg6YdqjmbUmM8EY5s4N+5ug9hVm
4PDBVqFx2701a6ZLy2SKjgscDTK0p8j7HWTgaXBwoGL1vlWgeQ9dpZOdxNXI
Gp4iAjQU3xkSdv45FkFw4smG51Q09cb2ThRSubUp7xPES9Y3uSw7XoAZ2qoe
vN6ydn3L+0BfHvl3/F2l1uj6uC5+nwbY5N78sPKIxzMkatlLMWLuFInC44pz
w33VQcEBZ49LU3scA+OYsi1JgVAChZWQZ9IBcioG/X4gH/R1Y8bUv1s7h4nj
eX3dw7WtvX116f3QF7BOymsdrnUSXqSH1qKj0srIJ2pq0A+ChenjiClN0yVN
JAlX50top2JNd8fxF8r5cggGtD+e8ACVqzZVos58XZ1xTcvV1Ultk1vIQHwe
o0FLzMnJcnwDFBvPlXWoHAGORGJId/FjaEzN5+3s/0VjfDxZPH9nDYRPv1oK
utss47b9gUVKHE0bkWK6XY3vdzFbtFrEmTWbPcuafOyDmXgy6r2vyuMB6voF
aLZnOwNMXA1UHyqhynP7zPXcEEgwa0Zd92vn/fPuO8Yd3nWX7aP0Q1wX8UL3
Y0z74+R5NYbvytnDS4v9fGLfYPPSIl27RF1vsxF0gLFmD8zG3yMKlVMEmSND
INHaS4z/qP1eJcaNmVq+9JdAYvTXISMn57JFL8Z70Fh2gHUP90RjUKkPGWEg
C9NAMtCFEF6CxiIJDcjNmEF/p51UJTUTS6YClXi0zwLBt2JuA4bGEBxObsTU
XeRauJpnRl+hcWLSEo6JZTdpXbmurTGSSaCZDmgy5ok3Rr4BGnDWhU3St6YQ
MxoS3Q+V8t1PNfq72QyLJRbYLtZUuW6YrG3luiaxynU+eCNF5TrV8+hGYIor
kvijCyxQyI8PA4nIryUY+7CQzz9fNbTbTttKaHqMFPKJ4MHXrZBPDx0/5l7z
G/V5TvEbb7TBYtUE6CDT3Ixhv7VJmx1IG36MTCqo59qOwJvzvNfIzb6+0jaE
0tc9oURE8fEVV3GhP1bJ3260z3seaH9BpT2vi1blYcydT8OqeT8Ko+UrB4cF
7ZP/Y1Wes26SsonfKfI6r0i8mhPxHwWpzVoJeCa8Odabplm/GCbBf5DfbnNL
rxGNsjVJIJ1xjAuDuOZ1tHI0uiilPWNpV/mbylB2DgmESyu3lZpefDgtGQzx
SOlotIqyFivXIcui9gHxp/JD5Wukq7G6BRpdgJu7nJcxqEkXyJ/lCblfLoEw
mS9XYaD3lEeg75HF3yOzZFewHgbuno43ov2GWdD4ZnuCtO+vNtjpuPooxU89
iMapNQjM6Exc+Us0hizQ98sK5Xxeui6/kC+8d5siSCz7Z+mzy9fUUv3SaT+5
XlP9ZTxYYl88zyiwxHtwB/42EHToOpno4MUZqjL+jDfaDardRLzBDm5qxmXX
mM/JfKJTK/+vocX8dN5nRTLsnZpA2iJ0lVEaNK4R8rkrlI0zzjE8yVajPRua
HFTLanxf5KQ9bOFsMtXOYZa82wqt0CuXa7u8iM4TuD7iWbJulbKie1vex99l
0isxVWbEH5C/YZ74ijYfobHE7jJZNtKtFKZapU+aOQSZ3r9SKoPKiLQnkgsz
xyvjnpg+KB4PYLTsGRpKyazROxPcSqFSSGJ2222hX5aJ2Ul/Caulg5XK6Q8/
OE7URevYUwy5VW51XuHhnpipYv6iK/RE+9e9mLlDMDu4Qrgg/7vwc9n9jxwZ
fpaxTSZ0/KwhtIkZ4yiOKOvZUcXcx3ZFOJEjG+tWUa51mAJDHArkklUlsu+S
YpmebVIHg3EYynrooYETm/FbzK4pgY7RO6jK8wgY0533mcY+EUNw3XEGGjai
1g4FvToQdIrqPYwY8rUQvL+L/ceKSSSRDBTnXGc+/UcfVRl8B3dqNNOzDeGo
dpKcr9hLon/VqaL66SpLEq/zqUcP+5yqpE6KWDjNuqypQZOGewHDWauSOkGi
COaeGD9ekn//R2w7N4GpvVO92HdffeWb3WSlIPwvNG8MOx3tQ/nQQ4QJLaWn
R9pzgnZFugm2ACfASxknMELW2xWptpqltC+RNLMi9kAx3McAlaT6YUkM0XQG
1Be6szyXDzHpEmQ6immq/k4KMqHonokDrSJ2D/CXDD2upzBwZSgu21/P6oxf
M/UBMvX2ffVxBuNbN70er2oxoYO0jPjeUC/Ggy7PAu+g4rWzUlcrINDtaVov
LEvxNDkcatAB/DVSrm1T8A9S9W21evdYvFSadsRA5YCHyUH4va9cKRacHCJb
E5BPiyRM3UvlYbYroeWPa4NsnbxeyNaiVTnywHxDOlQ4x0eVWjqr5LWfRAY+
GmTz1Y3xnkS40gXDPH9cbT0wvuld3Wfn5j/nGptbhJNsDvI4ZppFe//6q3jE
vJeNUqXv+9/kpU8wFldoFcNbSlbKbkUfgPPPVKcXwx6otDKt431yn0ue3lPn
/d/RKHOw3ntZ4il5+JFVyrXoDGNKIRJ3FnP1tdfIA7ifHI35ZFMXVpVkkOsv
hJymgKFGq7uZ4NVDPvrAIjJoduPGJBP8vv+BBgFhXoBlywJWQi2ZL8lU4PaQ
QzBBiqQ4gA6Iup7JBoc3bSHbPXSDjP/HF0qfT3kXLGFJR8XdqlTrMLoXV8pf
Fzz62lV3y3THssA5Ea20WTLtAcvFkBZ5TRckOLDbcf7cf794AqP/+7I0dMjm
QwTp19+SAxLlGwVatUbvpkcTA+nGBIOjRolPTMNH8gAabiTXTPHOR+Rj0bQK
Pn+KG3oCoSqd14nAqf32C1Pm0O65ukr1qeKrUlSvX8saMEFZIzqMKKh8911A
42kjJZSLKhWm4I2uKyjtszAwZWymbKUItFSWDnFXOhuNuq60p/HtqlG3pfFp
SvgOUvsO7UhkIRCdpW3sDU339EOT3hdCBBcJK49xe18eBePZC78/oUtzOUT+
GGjZj1BLKJ7PgyA0R76R79GeRcsCMZ4E8bdcHpLLILbnyQ3gKSNBbntBLD5c
iJiwfHc9tA79YRDEaeUx/jJD7pTj9dO1oIFPy+3KnTq/g/un/S5ptXej664B
UTgMx90HIf4eCGu5sg2ekEkzrgcRHw3lIhP36qJJ63h2DzCNLM1BSJKym+yo
fO9dPLtt7TLFuv0NKknVic8WsH6ZY28BVR98XhwsL18emR+FJDfJTr+EmWO9
jZRFg2hBoa3gVWYgxM17Ztp8pNPDR/jTAHP7xSLvfW9P4qWWFBJKkNGlsNpN
0tULKz63AoeXZj8WoEv65HjpGqHKSUsf/jjFrw4k6spnXOFUf+5fq2SXWyqk
83vbSs+vJsoZbz4sLUtXONIzXEkMXYpMS0uJaF3Syam/qdShk5iO1s1kLT9d
Zgua0dBNcfEQbH05Wa+CoZ06W23S7cF9BoO+Hn+ZScITpijNpytKPLCBy4gi
FPQbswoMVL3mvKWXS++y0yRzn2rp2mep5B67XO74Lh/K8ZpKkjHqNk/rFRYp
fL0xDARec0Uyb8wj/WRlSSo8hGNQfQLJ9RSa6FnqQ4526f/MOk/amUiEJSC+
+MJs94znePppl54tXTMCMImc31jva8yYABnKIpz0p9Omc8lFahMMc/KG3qwg
iqMlss/71qJGFG4uMcBO7mciGvkUXqwnMKaoKGD6RAZTjZEIg09V331NNd97
pNgXSPWsskZHG755is8pTqAMsTuY4te6pyUJZc26A9BIkhkJNF/m+/zt3P0M
mrSn+O3qMrel+LG0oLwkGwi/j68mvWMUb9vIjSWYLvSy74lFFkoQhmKnYYMo
9hvlZGfnNNR1VuBqGtPGYWj+CEJDRoDaT4U4/YR8BkHub/ju0eS90RE3g6MV
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
sY9AEm+VeaUr9O7DyksCAnozGrVPP7epV7P3ORc4wjNW7SqX/vdvcsLpvyv8
iYIZgYgQtoa429LaMu2QRplUeZ4yFdLONxoXSkGBGXeYi4SJ3KjY+Fei2E3t
jwgXb0yrAmXLBt2ocq5DBRSVG6Co1q3CklynRPQPYn+DddjcOnvKtIki4zfD
2t/c+vz9L82lT1Mh/afcBxHUdwSlei7ZW2+NxAih0S9Atb1RGn0lFp8ehoZ/
9gm1sYcftox13MhhKY4xrI/ZFxiIxu9MHwCmMsKNOvGfBK5wwrBbaSaCIuFN
/wzf49V/+smP8JYBOaT0/8jN0trZ/oXIxJizDLWsffbSL38yOxxT5168P/qL
maIuFDkW+uK06c7EmmbnMbE5aSst7uSBVx2Bzxi2D98UmcpnWW7G/80KrXT5
O9+HLP3Nj7XvA4eOZrsytu/29dLKUjrSjeG76dg2OGyEExP4vlRBmlrCoDvv
m6iJsBDqpy7ozt+WZInCOr1nRq43V/vDk8/4tFPF8sTKHOkSr5elv1tWvBOX
10iXmo4z4GW7qgrcUmXKi9pVxH0vdcCxaFY8n8lxTXaVZilzcns69lVD2rdg
pcpPD5OCdzalhdhzItYj3WILhXrEznETj9oRdRVqEYxAI8wVKpHHTlO94RqW
tpyony4Grx3RxGUJOtJU1/KWuOliKUIek+v1wT/EAw4O7HKdgkivmDyKX56T
nSDi0po1CX/PwOB8I7e6Y8jdytWBsi7FMY6HonIG+BKp16UyM0j5xeIY/5Z5
yu1GaGAF2ySJvVAsvRZNctw1A3xnhNKYMHLBvPWPyzMY1OugfXVXy1saOCvd
ycQN0+afLVusDtikwx7N31chpmO3QjaN/Z+yeB1PX/uTcbl5SfssXjv8rUE9
JVzOb71lnhF+HjnCMK4+H/eIvl5SS9cgIH2C1ikGAptzmE4ggM/S7pYT0QXW
J4atse53jWE7tOVZ/E3I/ok8GRy/U16WN8MCrS06dUFqA4MaYZDnXbxc+s1+
SnpX7yvdlvWRo347mY5tl/Wru4bvcbWTgJGMP/3aj7Jp+eXS6ed+MvGdY+WF
hrqAQFETIo964YUIdj5hztAAvdKsnwMXfgQ+aY/aU/UGdraHq8x72UxM995r
Hgfa3qjWYKUGCbYJYaE88cor4gBcaWpepsxE1BLkRi87EJVAjI/PfML0oN99
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
syE6n2yAXk0idYizoexDGYjoHcpElI3OfvhtOfjcr1Rm8hkKL11VJT2qC5Sx
lSrXypVxlyRV3Sq+6w+1He8KyhgmGVwfW2soC62rrXWvAyA8PNM6RWG0dkCQ
HItuqTPOMFloZKuIf0qqsw6zUap1GOEWp+mxzmRuqU5Tj3jWatX5FR0cJykj
/NsSqGiAvyZPd8JzGwI1XU9LV+wpeTxzZ3AgCWT5r/x3KzcnqGZR9uU3yx3T
R50bngnHI2mPq12qL/I46ipeyvwB7QN5tRVs3ZafLkW3b5BLodwS/U1EF6xP
ts/fF7dzpFTIWxh9nlelYxlXcUGFm8DZaUn7vZAhbk6p/NzaDGPpgzx0jCI/
gxX4meYUive9XO6n/jJa93dSmSYTC6CTnCoPS1j3e08ImwxGPBWLYooK9mkq
NzEMZbRq6IQSEV1dq5O/XjZknZmnFTR2pnT7HGfX50vnxM7SuXShxF68RAYv
m6ZJC7tA3mGgPSW07cCemFWrF55tnIzXd9sI5GALzYdyuuyH7j8SMtVATYLY
E4t/V5krN8qPslJao5oZ/UOK/SmG4gEtbht3OYNaoZonrheq+ejlOXL8ne3T
Dh5eUSX9DhbJLDNU86DBltqAznsaZMj3aB9mqCO/00LAtUGcGRkfIVcE8ZIy
Mg1nUCGqdVR5nxT7fHQhvRf0DfiNsdK0vxBfzo2MklG2s1btK5nLj5UhWyyV
jH1fkK6/DpD771yuj3PF3RawQNnCOUI9bri2KAz/blPIx62FBjm58HfpX3uY
+q5Iq3+UH/2Sax8Rnik/LcILDzPA3eajTUv+Y2mocTe7AoIuItxO2yaYpgFu
ZdnDMvLSEpeIcyPIxac75Yd2C0vwl3CybHSft30UKoUtDwDyHSlMY2srZas9
Rb5sMJVmsxVlMuPcGsV1npSs0nSyRrvrLaPyikKZcOUHgU+v+8/F8sBLbTWm
AOtEnw2l4bvuEpelIkP+WJmUWVW3SL+TnpbefVcqL6V7nahqX4idzs0ZruGz
73CWOqApH9JtkBx4DTVLyGLpajwDq62jetS3N18pAxZXK+7goLwamYoj31q1
upolQ2VtapZsu7JIjv8nuvWXcvlTRZOUv9Ms79cn5c9vlTplwwaIC4rSICUN
4syxkKLh+gRL02/tcWY+L29ZlakVCtQutlxoZXXBqUzqXBSPrqd+a8rJq54n
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
NXJZJlfwAPVNF4rVGSCL9J8XxVZaQGklBbCjAnVXuJqpZbF/v0B9khiGoWIZ
E9BHrOdZcui341ufeBjT6LqpJYgGUnTajdBeEXeVwnLGR+n/IShQL/M3A0UM
v9SVaTihTNbI/Kws5BfmI3dBRRgK7KmZfjYsYjEVf2fP2Xhr+olaZ8hhHwb2
Ef9ZAReD8szEjZVP3iaXi8DrOpyCgZirSeHL5LP9BT0xikZmAh3/R8X16iV2
ldEyRtC46LKbbhcxxK3l74Hi1Hf24UcvmRMj9XPJIGl/LwELTBTsIxfMhDX6
yB7i5Cj3lMsZR8rXE2fBWyewoFIcr1+6wNt8pGylt4z2ZFkH4ywQ0Fpaz5z3
CAU57sY4KczOsuVvZKY5TfzVsridr7AhSa7CoXJ2xUEZp97emOB8MjNmanMt
xrconbxVOXX/rHwkrzELe+VU6rW+rUowXKtpqH7ydi0fYeB4k/hhsbyz8er7
atccGTlzvxKBsXnIbm2CFPNazENtUjWmHSrraWsxEN7+popLmwTlueCXSRhw
zxHd3K8LanHp/rU4uWc9npsna/XVjq/b267rTvc+Sy0/3eDvLspEw54VeKBt
Fr4fVY/5CypRJVZqVaXJ6X747zuML9t2DP6TbXL7rMBmlclrcwvk9VxsoVX7
LNJkH4xB74f9nFQ+M1p0oyiVz1Q8w7JrsMatJmRiUTeRqxmzum+9FbgnjMRS
QYcrBB12hipkRXYLC11FuolffRW0T31JBms/WTXM+uHKv2s199D0NbXzJlyV
jJTFlZrn5fpr3jLgv//Ps2UMZuCUhu3Bf6K9F9RXpsNG0TBeDqqG8EHdSgow
0uFysfqwpef7u7U336EdI/+Vjp3SGyOG8MpRzHrX/Yt/Rp8Fdyh5QY9P7KOA
TRTmwQkJ+9UNRnxqLTrFumippEv6OJp9WOrzbMdUidi2sZ7GoOy22qpLRrtG
XhTzCbw+tEdEZn0GbUbSHZfjh8ia3vZSMGRPSX+CFWpVUjtZr3+tMWvUYXdm
jejgxhvhL5P8nxRCOv/8a4B9jSor5AGxEY1LR7D/pStPfuklQ/ljFJ1gkTjt
yy/dJe+krRqocMa+P+TsU2mbQWpGIamdS4Y3/R1GYzk+ycZhdJatClk3zr5C
XAi5yLKWnGmBdHtsvLRMlgsC9U04owtOtM0J6fCasMeQe3DQk8VJ9jUFf+h7
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
r94a+EmQy3QlbtGYaL1GMMudoIqRbQw6dFVbdJ3ZBF1n6ZWqwCd/2n2qEoHH
aWpjxNSp91CsmL7crafxCpprrUFnAeEyLLOhwVQNnsyzSVWjLmm8/xLZTERj
rYyL5uouTXw1CrpRdQixfrZbrzuF2jiExcGDRizm/ZXbjdFiuWmujUOGwq4q
10/Pc0F40z8vKIwLN9BzqJIqrgRjaI4qDerPz8ymuIa/opDyk2tks2z0sJXG
ody0FzxFiNjKdecl6WAz/pBDv0AwkVHDnorJ2Bv7KmdnrGDNVn7ULVHuoizk
2hlutqCeR2RoTfN7OstENZuNR09kamiNnMJ0Le/82CPhZ7qYFoqzyW8KJwnH
6H8yMUtYxtIJigdRuZKL4LW4WoDkch8jbMFGeEcsRWLOvXK24iuf/QS89ZfL
WcrvJz1MOo4NZR6oNGB32gzp9dYQX7LfY5AiWdQnMPoraXJi98q9OEDeuQEH
18xBC7HOCb8dhCGNdEknNukB5fo9vazLQkelPL2iaod9Zb9D1RK7fk97nw1c
9/6O+z25AhdOkPu2lSO5OkPn7AGqRtUBLebchnYP/Ki8SBZfsNClbx+gcweB
qWKGB8z4Fl7xsQIrBevd+Sj6jlmHkWMCvWG/V8Q4rcdmfeF91XU4r2ALvMyv
MbTuJhyfBQzL24wFWUZeiuk8imVm2HpuCmNWfGfKGSgmniLo66QZOxbG1KJD
Q1HQ3W+ob5SfUXwY3aDCmBwnXE5YS8D4EIPzHRtPxNx9GvDIB6YB8lP38jsx
HH73J8oqpXKjk2JUI2OhLxkCsyt/UNN7eYYVwYaRAvRyfbObb+og7VRwk0Q/
op61rxFVbyw7t/L65cC/XoMvfUdEGbEB0XgBNHNyoKElPk6VCXOI3HOSLTl6
KY5/MNfXBRFltrLB8Ak5axHXZQ36v3Q+uq8pIwvZIUinY+4eER0ylYZZ0AXN
lat4gbpWZWGP4gjq6wP98tJ3y5EYzcddDwJL1uah/bKgwfl599ciMTuCBDm7
yT9N1bE/Ewsse6Etft+2ESlPz0bXTf2UvkShAdYTMrDGnA8tq0Axp7/JOg8m
OlkaV4GKLnZmsoqw15Sv0XHkCs3UsuSL7C8ynsh8+vHHIOTALsVkLjHLxkAJ
WU2uyoHxMgGaPg2bYT6nU2AOYZQyqMjoIuOJyUgiLeY3599gPCSygSZNl3sz
xSCzA/fXCNSOm/PV76AR3ztNY3UFGf+3zfmsirdLorNs2Vbr6INYm6f888/B
us4IKgl/zIa5yh/CfNsxO0RPifgZt8TQa054wlzWzvjg083YdVKNLMzvCfp5
RXzYy2QQH4yeL5yH/X6ZKb40BWKTkLixo/roLtezqzwfk3877jBc65sh3xq7
u9ZjuwLAVasiOHprFsacKXcw3zQnfVCu0jtbA5d7lvw+9swIrm5s2l04FmpO
uvfjZubTXaBrIpfKBpzilNC0X5fvyVeXccPXjtPsPIWIqMDFUAMFQBlO0Ltq
OtraIyTpNF+POtuGNf1snrZem43P5BskQ5lHjSYOazSQZeqVylWFk63logjX
JoX3E9EloFxwggONQZdesydXQFLbpIDkPSXy7IMjcCRmiCc7Qv4+SM5nKA7X
gswj5eceymQZIZ+ZhvGCIqaJcd8de2kj5FT5NL/JYNKB8nu6Yr42sqzOa1Lp
tNQW/VAHu5dsnUp72/ywiaOthVMSxP7RcGyyQG981HcGTCe7Cv+95r2xYvZ9
5wSb2GSJvMr8F29FrV6UXOvz0I4wQkSPlr+T2teABoMN40MdH8o0Vx6Q2RMB
S3EneP0P1ilQZxqC7RsC5ndzleOuoW36TSfkMAM8Z95ftl1fbHOiplzGFJOX
qStQb8dXiboE81qyJFQOnb5csY+vdND4h1XqCy0Hpo1tkkiMwfZwsa5CZoyX
SWvmI95YXbkYV7kB5RG/xGofTfSG08KF4g8kB8limPjkGBlJXTFIk7dEWFRS
ZfMVeo0kq7DBC0N6R2NPFXWv1rMeKrPNOk/2jOm87iv/Eyfmi9/SVfU6PSWM
L5abfbCGkXvpGHtS5m1PRXFdZUQeDxMu3EXcPo7eYwV1LbSpNk8gxljB9+8L
KusL761b0HrDvvBOWAnv91Foce4STZ14Y8sRv9jUfHMA7aP7aak0Okd9N4rp
A5AiW+TfI+VoT5Ixc5nOrImq3dLjgzsxYPBWPPrrMfLZ2ZpiY/dEzpugw5Tf
TUr1sogbi9VLyxdX9D+ahs1AfwxvmKJN3xZv23k7KVdmlR3JRZeo6x9ZgbZr
ZiNuXW94G7pixMN3o22HqFrLjmnGQqV3FbDX3/ye3Un8Bm81vOoC9J60GlcV
/K5Wbzb1mat2rE2aV9GoKOfgBRsQl1uImUW/6Wfm0eoJqlq9FfjPy0B3z6hB
kthxzeC/p01aShEhW2e7W84qnPn/WHsP+Kiq7Xv8pveE0HvvJfSmoARRFMUo
Yo8VjKioKIhEfSpR1CiiscYaG+oTnzxs2LDEFkssQYkKYgCDEGCAUAaYkPXf
a59z7kwAy/f3f5OPAjczd+4995yz19577bWLt5I77PdTpVYA2Zp8zRG0flT2
Lo0XBquMpb6hZLd8/kvlL1MQMwID++B2TWgLkuXvve8MWmFic12B0sg2uH0j
UaP5/aqw0KCqymeZLtXMfZa4FJ1Fj1aLWl8cw8+2CQKRP9PENr38uJzHmhAS
OKhSNx/H4ROZE8wd3LzzWLVpHd5bpfoNXbrWo/1jt2DU7uF2l62yu25Yrz3f
NVYkoKsIM0Xg84fdnuX2qmU7TAU16TULtobV2rmljv2uGs3Hlck8DPeLT1hT
ilc3mn7xd3xvEm7eQpI/e8kKWy3zuoIDYPagREWIJFmPXHkOBh62Wycg6cAs
i/ruOz+xSEeA1U0MPzLJy6RvC3sKSoA2arYPqTffhY/kIbH4nBlazifBp64a
iJFCSoMRAJKaxPpmgk2iKYEDHfRtqYoTiS3di9w4ZkHJ9WOQnqiBderEpFu3
whEobd9AjUlSboUvpoVJc+brUELmB/UI/MkK9dpHMsPARL+e6W/6BjoCEOst
GAZFRLSCFYGM6yMioHhwfjdGk+sMeQnGsbiok6ZqWLJDIXRy3emDs0z0Evmh
b05sRPUo8uSj6+KQGminqR6mfy4QFNFN9r3Ufy3AfZufQpMtneHVjcWUD9do
HvkB+emkZUV/2UfZ1wEhv41e70Jr5m0fZfPrMGy85U7jjjRqVIOBoRzcIg7a
73v+3K3OeyyEDgEPE/aG2yh/bPur1uwOoPkjVU6XXQPjs2aFYSNTBV2bBJjp
9wbYy2TYguEMDiWHgSwwwRgu6N0QOXKvN3cciHg6BjVqTXqD8G2R5hvDMjMR
vXRj7NKNDBWZnN7tei9h4ODqdWttoLXU5kgZLi3UC3MOYWTFncVczguuxU3y
kWOtsnlIm80F7b6RZTHOXThBZshk1b9+VMudzMm+0nLqoTJjWNg2VUum+HWs
hnP42ag4zhDoUsQCA78ED86VDfjbfXhAw25uZIWg+/2h7irgOwcOZpg20U40
jZFg2W49w/zLsEG8oC7lArvxQUdwiVIFTxIzPU5gUYps2KyypnTN37fCaBHR
CsPoEi2FAYmukqNUH3iNDkpku+9yrefIVkFrs7lWuOChvgKoFsRXrf9392fH
I3w5B8cSmbTljoswOHSqvrSaTtXXP0Uo6AvlmI0oWcDcSQ1gYJJCwQQFfRkC
kPoq2T7J4MYJStu7FFdrXVg7q3JXJOjJ0z44qYKluomlOR9/YLN/I9UKeo2d
WyrIKNM2ZuZrF77UcrxU+TJGg5lqHiUPtY3MR+dMTMP7guP6y/7TAs9jsUyB
KfL33oISGcebKZ/YJI7zhXKGZnL5yYh7+gzE1smVPfem/P5IxI7bCi9K/Oyj
30LTFy/Ta+aCT9UkPDv0zJKdsJ1c96WanqZ7zAhic/v3dHkn2ySe/sU2pK7r
iowNY9G6vg2uBcscl8tj7ie76yzFlWw7PRKPxNjRZfXgEnwqwJBEgOl+9eAV
+59D/Mre6BEYwRp1Ez8egLMur8WdDxhVJ2Z6vawgup0RxDn3lGN04ESV0p34
/gIkNNqDOLHOI0Yb4dC42Hot0iGdKrVdALfsn6ejyYIQSnlwfUWKzepiYLbW
9aET5HNsSQDzQv9Bmhislh9cjFPfeRQd++xUoW72cXadmP9CedaVz1D85l/B
eRFzr5WWOHOnpfH6tapW7eIZM0L4XmxvDnUuCvdrlPC+rwPK9SPXzoFXV6xG
UDq06FNcHXpAk8vLrA224T+/tdeBYM8pVPKl/HQbCa2xBW/VDuzJn+SzU7iv
apn53aDDgWGyrVzOAre8cAiJ4rcXiBvDyTQglIuWH52nDlV86RIMqcvC1Wuq
leBtuja/eYDsfYzNp0Qe4+iFIlJuPmHcbT7ckPqzr+pkA4oCOys0uMjCrmBd
GYbtlC1px8Gq9+Nfr8F1Nxu2+IW7ToO38TFExWxCm/VXaiosD6U+fKHDTZme
xts74rz7vlauAWPU5J5t3+5DPb6NoXaG9AkxmGl2UI+SDARnvfvUo8Ojt6Lf
sb8rV+/OO5WQ5+wktT5JHZsyxVSIEg0ybkgTvnufn9NWsYGIMB8pfc78MiTZ
kP3UUL/JVYTWixPTrbuph2CjQ+axGXwfNNiEGUmOEORppm8zVQsgAGXYjnWy
1IR0igGHam54iEaGmnfmtCaVdcZC587/bWNDBw9ZNkt3AREz5uWXjWxc5N0S
RtpGeH4UkdqRxDWAy8638pX7SGliaoP0dgbCqAdD+0d2+DDLcE5QIJCqemGM
C1PQgFklhtUIBRepDHOp2kxCfkrbCND2RWdNu7EsJJUvw6f1poFzr7dKZOrm
io0eovHFw2VDj5VnfKQ2KDt0A+egSgMZq5TrA7Gwy816AtIhez9ukNIF0wzB
c2PdP+vgzJV8RVE5Oq8uwDX1poOzaSxfoK7YOd/WaAkTfRJGa+lUyCbYPWKi
pSSEqN9E1XtdwIxEsvqX5T2snCKxVjY+M7FOiYiS8VWpV0K84KCUcwNdL9yq
iOOGWZen7y3VgB5fkec7sLbU8FhM8nSpBiNnWJNcpufn3RoJbpPUdL9fIkco
M2/cQ1dbyqdTpmNZqsWaBrEZiNsTZ4mr4VoAGuTOoGYZXhd8lYTxAi/PlyMP
inMyQ1mg1BdtqUGYN8VpqRG4UOiH3PLhAqIGM1XCdI9caokIxE8BryEsaog0
nTiUc4ENZ6xMZ4BzgbM0TXfgPa71MXitXI0bf/LjiAT5otyH7Ok2Td3Isi15
nfkaFq7VYqACDQFPllV2Fo6RjSVFYMplsiZ7KcOx5sC9vTUO1dHE7e018ihN
Mj5P31OgCltG5sNkLst1H3dtyDkByH20e7sdIsp/+NViwYiEt3nVKJ+hDOF6
FLJZGe5CGFwaNY4UFUyKjogfur/3FBzFqAfR0/NgJG+mLdJIUkKSIwZOEpxk
ehWkyd/a65YTztHHKaTmAyJKZBTxQ3zoCxm5kXpEJlOmLRf5WtBXmgzubL3r
sGsxQu6/r5xpkEy3AbhfftdfJt1g3ebuxr0yTrvtNclPnUC0ey9A9J6zEcXs
c/JmeL+cjqiakfr7Y7RTYmd9d4KYvQT5W6psneeJd2WKXKLlrqMMUJaP1LdA
/C99cU/1dNVzYS+yOBmQtjL3H8O5cln91AWj7GRXufQs9NC+Tc9ip210dK4A
4aY6XIMxVgtdL/v4UcXnI+QGDfhuLQ7Ak36h6yrLj+WO8p8tYQ5Gr9dNoWt0
bRGav1+IqVvLla/Vcvx3GPjrKYjZ0gwxc+7EqPE7NXwysmsNPupygZrkyy4z
84PFoEyycAegatzNJbVW6Li54iWqfxNiMt3nBJHZJvKiKWJY24WQcvkXSF5j
WqEwnqRz7q8FkSO1E8djvL/gOUNIaaVYHV+HF6zDNYFHfaNIOVrGFsPvT/cl
99mLiVTWJgLdnsgJcxcjeYzUl88zWWJXd2DpiuaqLWqsCvkhQlfaSQIosQxp
YGI2XFEjx67F7o6468XVGPrbbHi52xHfdJt203XYhta4t8yN18WZARo2R1hm
UY47Rs58hQXyhrVcaW80VZskvLWD+k0VMrOy8fAHZscvsr4mu56wuoJyy2LC
HC5hozvW4lI8sOPmwboCWHJELYraYMjBQyqtj/h2Gppf9F+kZezXilJWB7FQ
ddIkXzSDGbTh9qcc5aar1GjV/eLwEB12GLIRST3WaP2pS71TwZI9gKg7xfQx
86g3XGBGOykZB9UHUcNWBSsWmULqD76372EqeIbV0ZNXxTLz+0JXsRk0847v
o3hIuQX1fydcEbDB7TkvAZ+8BjRncbgMTYLM1C4DgblnC7YUt+cFea5pmUpQ
tTnbOOU9WmV/FQ/p3TsijHSoRo7Bvz52qEaO7hgRC4tdw60AYrQUmqCWLQLd
91LqijloVu449EjFR26rm7DJJppaaKGsa6xAd5L8cDaVZvCeC5GL0zWhJpU1
U7ULeioBiMWUrASi5BU56UuUSPW5irYJXGpwzcyRr1/vrpmNDapw4Y5iHDFO
70XD24zdUoGNQYMbcZHsjBPVQf/rDtTl2qS4wqbrCOw5a8lXpQJGu/cX4ZJr
xPX46c/aUMfq9VGQh/QEWbOu1puHKXvHoDVfVJ4Vb9nFHVOS9qO2sxHM7G0/
whbcHBGOEqnKHBEZYTNRMmA6n2TBlLZ8odXHngau8vXiwllZ40K6PK0ARJvd
axTRtJvAqUSLJcLtlhcqJDpUHbIhflVGswjZG+iXIS/zy5AX+WXIIb3Igogy
5NyIMuRc7XTJU36kFSYc13mKxZ4RD6RQO2JWq8L8QIy29K2rNDF9LU5X76MN
mgleelrefa9f1JylmKxIn+UMFQjNxzvqMTs9+mpFMYzxWT/BzqX2iMCJdmhq
rAJiuXJxC3QIDvYTihsoILp7ZF4mX2VOZ1hiIl9PyA+Fkvji+hAj1MsuzAo/
uxzS6UVISURBvsJdcpLjzW/DEkkNW92U2/nsdvEQnNRCnD2hmxKqU9mAKVKu
D7nM3wmqNRxdbj9tjnEKUMQOB2K9dMyXB+djJHhWj8PTuBwzPc0ECy0WbHWC
xUDsdxZNGMGpmK6NKhJV36SJxhSzNZ6Y4pNGQpbEebQgHyZQX5Ux9DNc5yAS
F9O7IvRgcLKngFN2jxx/ALz/XvWXTpVrbCOuK4uUrxWkeKtGChlhVKGSbQKr
Fk6Ht5haIHKk5GJ4h3+EqNkvI/rBedrugguzqwp7x+IMgWKxiu6a4GwFaYla
03U8z//eZEQt769xwu71o1T6rJVYvWWCWbkVnYOXVXQlXVDuw7L9nS0j1l6u
7FUZs+EYKga/s7bJYHc5w6i+Tka0OZ7dsRhNmwZx3X5TVrwT98jvzlKW7Cj5
3mk6PYKCYnMw9AojPdriX0HZJkN4YXcxEh6VRUua/QuGUd2xs4mwPPaYmJ7J
PyL6pdMRvaUpoq6fhztPW4wxzX7QZFtZmYtVxDEwqXFSPuW5uB3rgpvtJGqk
QR6KHFNMi/Uk5JfRfAdlEn9bs0G3e14reQPMBe4KbjTYo6aal+1rDEREaxzj
gZq0rIJi+tDBPe6ZtC4cJqrA90d/34oxZMy9dDu2h9UQxSIW5RqpqqOrr8aC
2ve1anjhIoM23deyrMUSAv3PsnyAUUAigYJ8I6+yUOZfeQn8rCDDQUTGFO/k
kDl8RMtCSt/o835FbKMdGq/pfNMzSH30KlqtaPsVzLgzdFYl+3uxbmQewi01
qg86FsIi60dlwLUTdq/FFabPxsD1xtfJs8KP3Jbmhzw0fjqgKhDhJooZarUa
Nd+LzF8Ha8EII3zUeGKkyzZh1Hjv1U9/h9jhXyO93TbcMm+/doJ2j47xO4K5
ysqw38ZwEOUOOWMYHgxngDtoVO300w3goCEfNHwf0l85D9/tr1CDzlAWa16c
ohqrc7Ya8Q7l4B19qRE1KSOrIKIqiTzFnp6li5J1UImw2Hu1Pm77eNqaGl0T
WwhPvYBRMFMMdWhxEn2xCIZFCMPkhjIEqPSRDTJervWGG+TaPUNhrVhqptb1
kwQAdoWr9iC10XZT1ND+mWeGFTCYpn74YbMC3NCyvGfRIiOo44AGhc7ffz/8
2K3qqVsEEZqsYS5QxLF0e5o/UT51p3FxPviuUwvlX1XpVP1CVZadBBsrL9iI
mdtzb/mhI84UiOv6weQDKw7ZX4bVhgyMvSk/5RF9tp1+NQmmXUwqz35vE/WO
OHHfecd4LFSiqd1hVLeL5Lt7oq3VvPzT/tr6+rouzwKjNKTeV6v9u4n6ly/H
P2qybZiYsTpU9Jr4xHznLk7j1WTWktfKePbw4eG0c7eu9fgpri/DyPaYiRFy
zTG0ShBL3VjZwlzkN6SEsTL7nbDfH4jwAhf5KMZo1S1hPMnfDUMWD+Wg3Gtn
Hz3V6r5U4zIP18BFWsvlOZqIHjcbbknn2CphooEf8WNj/+vLrIhByBL/TJCx
xOJFgpHGdjQY8eQd8cXTPISHPIeBCM6vxBxV4GotX8tJw5Gge1yhAK8oEgO5
BkL5Ck8bbmwLjSdsvzZGy16KG+ipJGjMtEQr2B3wZTZWuXe+0Btj26RL4EDc
Q+LdTId57N5LmNpemXOZ8v8sDFNhFAp33yNL5hLX8CU9UodFAUSG0ujay9p5
2K+PZuKyseCdD2TcG8QCc3FgLHCfTOUu8uZ4+ebjcbh8OxHYkIOg6kPiurF0
tYmgDS6OI+VZHIFxls8nP9tHySa4AnGhvvAevgHelkzEfibH5v5L7TQxTZKg
K+qkTZMnRfl0cyspKqByzqprVJIndnI54lZkCXBnxrWr8kLayO9phMcp1+8J
XYILBANRuq69Xm83dXr4IkeFuIIbxS04UX53Jz4V1zKptjmOefQpX+o4zC/e
J7MmS+6qlTyuEzCjPhs3vVMm1zID8143NIFLbwuKZanBqG0m5HV7VUDFI0hT
Yrlj376mpjW610+Iei4XKdtTkH7rHLTvt821iiLBlyqfqmq76yJc/tAKTa4y
KaW7cSg8t0iXfVOzejloFErHCoYF8m6ntfA9WqqGVprYvo9jWKVmqVHKqJKh
8Fcue6hSyzA8h+MUTr1d870mE7hMxLDZ2v84tQDLV5hEMQ3rtm3h0lvmRihq
wbwbE7jt7p2PJ9e9jROuWYHYrU1RWbPZNxO8RhJkeS1h7Se/CPCQx5wqOfVV
KQZJL3rZMl9zm2mYZuNq8eizLgCSpu5FUt4zuHT+r3oOXho1NxhhoqbZlTND
SGyyE4nHvY87XvshAq8kqClgj0IOG4eP+II4Q/CGbVmeqo+IST2aCbb+pAzs
8R8VYtDM91UplpiDkI3Xtm8fnJDrlwI70pub9ta6adnKFFodwpvTxvqoz0d5
WkZiyYHsk1lcZJJ/mkuOqBYOmDxh+KOZfj3qtQUG7TDMxXDX6T1M+03yKIdf
aS7FddvmCVzfkgdehF9ESpjAiCNfLOaRee7DCqIn11/ToU7qFJ99Mvww2nym
uuXyC6bhz3Rfw5Ok2DZjRphTGXHMbLCWn7mKoV9bmzuj2Gi86usf6L72yQnh
iUW7cE7JSp/HxmQmMwrkopHHRpmCdJWSitM9i71iDI/NaMCxEyJV2+hjk+RF
CQOZOR3trRBtnW+cdM/xNAg4SVF0vVcIQumH0CMlHpoipx6Coa7exbXRJoak
Mjk/zo/QG7rnnhB+Xhvyt4HI9tquqIPYmU9flqjvbbG2iC346EJwrrKxm8s1
8rwftDmbkS8bqDP9ssj94a7L9C3Vp+tQ18zeUY11IkxUw/GMai2PynNH3fMN
c5pdSQnZ4y9gpP/2SeKZ3oEBoIRLpobxiWCYSbnL1JQ29W+xXE8WiaryFWWU
2zrTMh8usDnmk7bHFE3eu3jXTuF4bRvMcsIO8ohHyGNnGaGvUhSjQiX25YXB
U1gOxY0dc7FkZ+NAE88w9VeRJHhmsaLkXNyYWW1humymYaD80HZNwblaGDMQ
Y8UaU+A00XPKI561sdQfHCyjVKJagK/Iu7SW0M2zv4rrkMLZG31Iu1cJNrl2
BpTcPZpTnKhwnMxOwmBWWU6VH28/2U5niYVPg/eZANA1L8Eb9hliZ8+HV9lD
VwsteXu0RC/BEH3ki26Trzf9Shshak8K4pcdj5g1U9Clvp3srqQrMW01UNub
FeIlldtNV1HXOLn7VuKEb9AL+y/Ol+Om92muuANbbPdEuuynylhwvkzdfANS
J3yEZvubiZEbokNgktRhqudEeRgLBKBSjP6IvRM1olG0pwzPhLKQHbwHmSUF
8ELFeOP9AKa+WaWpB66hvLwQJjUL6h7PHYdB7kGD38Qpz09C4u5MTWNuwRZj
sRIVrk/K24TE2+YiaXsLjK41+ifqLQX9hr0RjpJPz2Gl8uuFPVFZ3hrDg0N1
4vqS4Am6KaDaxQKhSsclYqzkrL79Z/EvK65oyDhV5D2+/WfShA4B/SIXv2PZ
LP0mwNn9DJX8JhfBOepkwbCclHxpxiPIiaBCG2FWp7quGH1EPZp/ewzu2lvk
b+cyIMrveBpPW8ZgrDYmoSNDPsmOHb4tpyQXI0OffOLMvpbi6K7MW3n8jfWu
1ZX6PtGMJsjpmD3KyH0VE1Zfxt3B5UHYnCR9TDn67xmmGwgbCLa0q4MdrUjA
Zw6SJYUsJaS3ld5E7PWg7zHn5iDtdKJd83dfIDc80Iw76wM2WL2Q1oL7+sgu
wnQT7VnuQvcMO6vpXpJvbBwfMYM/hTIdq8rga41oNaGln1HjRL2dtcCCYsNW
atHUvHfkKJmBMuCzHzPvcbQzy4bTl7PhZNh1vVauV6zQV79ZJSKTPiBEZeiM
L/q5b73lix5Q3paYJqzQm6zaZo3F1oy52c4z+caZlwqKGC7HO5pDQUezim+o
z1ptDG2k0FT4kOcI2lWO92CrZb8P1WttgyMPFRbtwYnlT+K62rfRylsjHsEJ
aFoQQkxhMeIrFiG5NhUdVaP1Z9lrDHmIfqHrrE7yEPOMRG9OV5P1AHZC+0aZ
BCgGBghkiW+I4ZmCMs5gntqgiZjoCr84hlwbTMEQVrGlArOLNTVhlRIGlHia
228PY/K1a01olC3kCDTlEfvGg7j6+UF3URLFtuY0dolLn8lNrlduxuLAt/Kv
3QfKfkgzUjXU9OtOgpPeImt/kPzQXSCupSApSSZsHt8u4vMWRfjwn9VZjNAy
xM8sws+ospcdp0+LXjhhPdn/ZWJyR9tzET1x9HGgPUzXqtJILnArjdV7emnM
azAwTqPA01IRjA+0Fo87G0jacJwKeUaryJPLFjCYOwPHm7c19jk4rq7V+fnX
CMbq18DPD1i88JqOM2NOLGEgFCxGsRnbs/xtkzOMKRpfc6tvBWLuuxLeo2If
9yQiqmISvP7fwmu6SWblBLWHxvhnqILAMWLVeMtxb9wCVjlE18cpL+VywVhn
iXdM/sw2VMkTSpZj9+ul/1uzAUeqh8130ycp06hAmaqOm7ZeHZQyxy3feLQ3
os0bFyNxT4bYxyPlm5NkAj37F1S1YhxbdhviggaJ3PGi7NFeb/w8qRC1Xn8s
rc/D86dShTMPS878FjtkawpEF+LXpkUojpZVGVNhjiXfhq0zbsLLNVOQWd8I
c7ZPxd4c4wrs+7lWiZF3dJTtMmUR7rmjEqHjycy4G+8GH8fUijbRnCiyBuqL
PoB6JPlWmSdrhnGE2CSWaJ5Jd5UbuBIbC47FzhlDcE5tBlYr0WOOmNl9qKt+
17x3iQ3HV4dQUnkB9rgO2/REgtZTkt+vzRMwnXMedi++ThfVroqfndFkitlq
9fpBHWptMbbE6LNrSUdHlbRPlvt88YWhF1N6iCpKFOwRWOA5dH/cjlPRdO59
mPTE6+he38NPsPFPft9szLbnNQ4wnQnKxr7/vl9TT9ootQ7om8t2aq4sVSHe
MfaHf2eMnT4wg8OMvyt+abYL8Zc8jpG5q5yVoKHi2iTTNmVHC2Q/XcKbO1QS
5a+OsfdWwFIFEu0V0eRyo+Q30yPnmBBBjTsGuP/B/ei77lht80x0VBu0dsvQ
aajy2mGoONrfA8cONntuOzl2lnjDqXIzU/5llFNdyd6iGTCEoY7aTNgJ0roL
zXXWF6ar2MxhwEU329CvXC43Q9JMvqdo6yHq9J31XVJgmLl0zHlOkpPodXeT
z5wwUhsZu3ElSurY0R8o5R9s2OC3tWDIvbQ0cgwT0F/89IFTtL+jOopp9ql9
u9rt9h3DiqH2VZht1Ag4fwyNYgWmZAcxN/h0AxoFZ8WA4BOI90KIrslWuryj
UVA7bnhZIW6pXYYB2evwIpagWVFQbW4v2Y9m5ZrrWFjhx/KpM0/DsBd7OV56
jKm6VasibylTpa04+ajjzVAEG37QhjK+RWbHSVotcykm116giIxThM4uATiF
ysjIbm/Pz/YCxKCPPRa2r8SjZ59tWvURzDBO5dgmdP3vHvMqDbLX0T4VOrb8
Pjq2ZM/T7xNjON6ejg0343XHTtRw3Q/4wRtiP0pDVaqR5L5KRGE4vxhVXexH
yTlxLjMBxC/4xTb5ilEXyYrFNzSLQ3XnNhXSxqYRttJ20GrzGdET624lDs+Q
fT/WZu5aiu80Rq4wxWbMu4tfmGHbVxlv0bxzAI7SOrrVmK/szkXiGeWqcqVz
141k1SJLNDByVGfK4w1pfKOp2NczYSqZeV3kvjkx1BPEp2qkBItjVK7JUAWP
tX5rX8Rv6gfv4zxr8MUC7sqA9+lwpMi+ZxptMtfeF3FiDdNWDEXixLcR89jF
audJ5CaJmxZsjsxBQ8EJiltDn6+F7suv60j8rILZfcVTTdRGm57szrmazOXD
5Rh2EyvZU8z/YvGyafG6iDf3U929jPaqD07pottwm9lIj9aAyAtvbMd1++eg
eG4cVhWcj4vmrsM1J9+PHdffjxpZC8tzg1iwQJzD5iHd5lNTlqE2eiGyk0KY
n3AXBvQNmfbo4h/8flQPXLLpVJz0WRKC03LRuNcG3RaXvlKD+o0WuhXl2B2q
VnHxjiVP6pK9fmk6vn17klzXBBsSrDCS0qFyo1ene0BOuCQlPwt7yn7Aa0U9
saqsta7RRTM81C+0URr6CvnvYYPsXsHibubYkoXAL0thMp8hVGd5+Ll8uH7H
zuzDcbdsOm7dMxDEkBgQVgwhcGDujv9KswaAnjADTVzrZDVxbRLvUnXYD5DG
4T9frUFUoDHuKQko/FqKpb5FYeyBQSZiVZNhjFXlaIbNGWuVrcVZRGoN8qmx
WkAOx1tDQi4mvUh6k/QqmeKknWYb0dEPLMPYF/5ATMpuxHetwq2PbdCNRzYS
Exjug5VaGVSH1P+8j475b+G6Xd/4W3LZ2kOw/P6E+VdRYrgCbAO90NLxD8UG
vE5w35hsE7Smlxojx/oIsn7hEblcz7hSY3P3olXRy1ppxHKQRYUKaDzX9pqR
5lYyH2980bSupoagU14kLJF91ZqSRlqanr8k3GLThZR1JgXNNRXLHnxsjrFk
bZrqjtWw+fmfFyUXZzfoWk0PigMsXpIfZGa+mg+EL7qebI35DztvOmprMPi3
+WdzBQPU9lx/ffjXvKKxI4DYJBPfuFtcsXOtIND3QZeX/gr3LfkDIxSQbsQF
oStwuvwwvtalOIDk0mm6dbu89GHFW9G/dJ7JS4eewK0V78gmtFRMdBXGy7kv
KqhXtmhOvmExH0oq8qhiuc3CErxQtkXAyDeyC8zEf8rXuDtn2wrmKeAbkxgl
MLbUSEeYlUwtqaGmt7HmQGgqWcfPz+ZsuQBt145Ek39PQ9J9s/U4QzR796Kz
PQktOU/5yithCgatOZcfQS5DyvfeG7a2rMCaefT3RKzWtTTeLMOMrP6hG0XG
/+/4fbz9NTEL+6fRPNLq0vqKmTQKjMlqGmkKqmRzniqQhLA7pPnZMFFRXN82
dh5GdsogDeB0nKa7P8uQNmDDGHuddJbj7RZhSmts7Xs3fZDOwyM2or2jl0Yk
kKDMsGh5R5Keopv4XrSJbBPJzl/NLf+rM8bqeY7DKb4PGK1EfFPDOkTgwUO2
KKfEZiAP1Akyv1X9H8/lbRncy5TB6C5WjJiZ3zFMznaMXklbfK7J9yLsxj6c
iy5aFqJ2d28vxPzU0/z9nbOQ0H85vIr5iPlwMqLrYq1tTtHCmditNyN6fSfE
7DdtL1kEMA53YJRqmURbhHK4jCbLNRfKztpV22w0FXxZY8f9XJhW1M1xtNxt
utpwnvtkwUv9tOQgW7Mr9N677Bnr99jqoFncXFvt0UTG6JkGpQeU0kx6qxLf
7DelB8WFaVhVMhWxwWSk1R2BL4d5CF39lPZAp5HhJkqaclzcUoQ8wTzJdZgS
97ROUwRo7O7A/th4TD4hiJM7X4/glNPkPI20OUw1bD/0Dsa2qu5HwIQPK6uV
FfRL4AvcXDYQoYI09ZxYL26eWpnReeWLny2zWF3bPZTrsfryrRqMrpSdsqIi
Wc3TTxU0ArejPutILKxN4soJF/0vKzb6IcQd5R3xae2jCGVdLUPdimbN2Usu
F9rQUpT6ppmdQpnV4r9cv2hCcXKdyMeif8iOj6zBNV6dZj78rlohVY4PqdZF
0v3XYFLVDNwpgGC87EHm3SwkX6CBmx3Y4TuDEbpih8rwumYQjJjR0aF1+fBD
n+H/448G6OfnKxnGHG6kX/cW3tO9dsG2J2T3CaHblFqNuTG39ugry9B4231I
e+haJDXdgQ4d6zXmRl953jxrOdrp3tCncAfalV2qbgx9xcmrc5G8sAbHTbFP
8RD8rYOOWSGParNY1XS6v5PnRetz20zdNz3DWU1Tgjln50NjjHq1a5CyTfz1
HiT/l6/xeV6lBVqoYk17nA4UKUJ0JMk6CEV0ZqUf27DLdbpetMvsOqWcl24S
GCEGt6dsmglJhn5wmaDLYTYRXVLhF20cqph0rXWrI8w6gU6eUbmzZj0TZ403
b2P/zzzZY/se8X/u/+krZy21qe9FlrDyv+z/mV9i77YF3vxkO/qc9Avu/Oxj
DLvjP0i8qgStj6uT+bITA5e9hO75gjOy1iBpYZV8fTlah0xq+PjQTBxTsBMj
lz6uqWH2jtTUcPVmHDdjp4aJXOWgJQyahWPT2RoNt6mCCnsPdPGZ+j6UOCCr
mOJL7pMtqQrX5tXj1MJtSBEMwhQi28G6CfGh/DDVSPDsQALRFpPJ4UmSoml7
Gn/mCkhhYaicia/Mu29BxgPXIWNzZxz/x4Uo3H+XH7d2bXcFTnuuOIkbCKXd
Gbro3h0OFLBy4axxG6nFYlt7xOua45bJyC2z7uwQ5rvg8ZoZZ6iVTBk6v2T5
7cO+4frrbkruY+iYNQnDrJViGvossY+PCryYAFeYttBvEUFdiwor1VxgKWx/
1ezj/9ggwvq78ThSgEpbsXx9MRjPCuwxHSLgkAdlA4mCcCDyaK/Bb4cWMq1y
GOEOve1YbWQQJ0eHKGuBLU5T1eN/TvfmUdbievbzTmWC6e+xyrJiFraZ4BPG
NTLI6dZPl0ZKz4elZszCvk3sE9Oupos4+Xuut+h02e5NqPlmeQAjtAPriVZ0
0Nsnpv4RipSdh6ivDoe3rZEYtdvQZOz7pq8WL0YMtre/F3LefkxFMtLl5gyJ
rLc64iSuU17iJnmYR4r32kou9QEd9tVywy8o0/8yWFElbJKrON4nsxXJCmQ/
LV4rPV/WB937Fh/VJbZUc5BMtsV+P61yzCGs0CEfJkN0nni3XI6n7s1B7t0V
Oi26zA3i2SEnYuXi+5Hw+H9w6fJjdenWFvTDuN6bVUApJaUGS2ILEJTjoYSl
mDJsJTJjfsXmuQXYy2ONnkB1XEfNIAU/M8ua1W70EgYGMvDvqimqYaG7FTOG
NetNfLFYdtBFtPxyfPVS1Gffi1vwL5xTmorfFo3Fh4H7ItBGtnUvg+azS6v9
8+2pWYs3ZnioXtZJGSdPcYuR6/8+vxe+rRgmS2exbDlynh2yLeVRZcD4cdXl
9yCn9ggtT5wuT/plvOwCAWRc0Ts3i9YcI3GNUbJP8allo8SrFBaTvvHxJvbL
lgDr19uZdwIie/I8LTjILNGFOGFzLjJe/tD2c7sEaTJTJgrUNurgnbSK5zK5
BBcJLVfZoBKtDjJczYAu60LVns73BTnJ7RyxdpWGo6dPD+CN0KF7w3SsXYgm
55TLAvprLfJj7NJL2z4XaWeXyerOxS1rTXOYjbJOxu3viKiLd+Cmlyv0OwlJ
rbKZ5sMJxvhizvwU7TTXDHMLg7h0vcy9fQtx2Ci2ha1GVCgXX+z0w6+R7C8z
lBn+sdWl4aZrzrQsqzacd27tRMauF1VmE3Xnfa1+F+duINN8CKZYRcBtFLG6
AHhO5unFaXSX6CKydNBdpSszF6TOXXUl0KOnoeufezbwzHMqABKZSziw7JDH
DpTjIMLioC5f7thPSegh7ulFj5s33ioe74gh4qYKPjn1ATsgtWHOxZ+0F3XJ
cB28CJL+nxD4zdW0PmR30ffE3e9cWInHK5bj2tp7cWXp7zJ+vwp+PkFZsaxi
iauPR9we2dFXdUHKd4dhwG8n4cJ9F+OG6s+RMO5T3Ld+kZ/V3oZt7nEfpCcn
37dwSRgI6c1tPcQxv2dYop+EL49AHtSysXpybpyp2cKrZW7KOSWcsAQdJObz
9/tsjxQyeWSbcJiD2Pv++yMfW4pyOhnAI9ZgnIscBUbuTt10iWqA0AUnv+Up
PGWJ7UlaUUleyjdWPZd4hSkUFk0Q/8us8iXs2EQ8+/C9RMqW/RGPnfLDwIej
IhdodWH1sfbX7GJMcWRGg8l7Yh5bcMpI/XUTbe7OG+NDPVss1BGyF12J29Wa
dxfjSqFS00BgiWqIkflfZLtSGRLSgS0uYhDR4sJv9/L/0j7gfbGTi+X6GrYP
gOdQx1fyQ7uHMOrwZbzo3wUjM//ddfAdAnE5CV4KjxGxEVl0wyyMk2NDcJhs
0PE6APGKUWJtrIPmPE3/zrnRFV3wg5pacscHCKho6uulku9HO/I1vjiEPIkv
O+JooSSvt5RpR3BE/D1GOw+wCycD/K3VmrMNhdP3MyS0NHhzHtITJ7x1B7xf
KaTVD9E7iEQGCKr8Ct7rV8h3JOstE4wZWdlkHXe2jO4jPy6UUyS3M1luizd8
IW7V0PI1ymborIlX1x3KB1iaLfYjXWxkFf0HG0pNlzfXK6brI5ffQUZivji4
BlzdpM22JoB8uR7y+AbIVw3DR/hM/jYDnS/7Eutl1ddlXYOlo97ExjECMvLb
4LNrW6H29nRM+eVGxDTeJvZgFSqjcrBEtsfLhpahdVIAAxutwqrmOaj512um
2Y/b+grK3ChvW0QVqFOQGUjHL3ndsC//QuNFrS43oW0VY3AS+0V6jJGLX8sX
4IElzRDM7YDXAnegPvdEee8MY5doT9bKtpmXawro5XzPrO+En/KaoqbweMEs
d+CrwCuYIHijYkYsVuc3Q33ePLOf5tNbpCMqeCoURLPaRghlXY838SInp9un
WP1CUu1KrPQjIMQpTPQBYcY3STmsCOPGQUeGrO4rrjBVbMYh7OI/RHOTNbLY
xR94O4BBg2oxJXijnLGvHBmKi3GFxv9el2VGPiapK06TLuRKSfQcRr7vGa1J
KLSzm9TVZVpRdsa8KnQ4zs8J4+DuIsfj6qocpD9Si7KyPxfCPmL/Vxi9dgi8
9UVo1WEf5r20FPN2L9Ht4XWY+tMesni4dQ06ex8WLDBhXmIzNxmIEl5893fd
JE37m7YYv2Epjj0FSBwrY3B1EI3SuZPUom9dluz31n4cgtt24LEvCw1iXbPG
GIYu8r1x8rCSxBq172iU+rt1NCZtzk0N+yr9HQcuq9hk98urwiEm5gQoR8Jn
LAjFhS3I02YEG/7wJmp+mZwuKkgQuVDwbu5ckz8Re9PSfpSxsDFjYD9k/k/O
dbxMnZs+VnSrZRGDLGd0Qo5fD/Cn7T5dODssDOzTuw7u9dn4kL0+i4pCSCl8
SjyeuRinCfs6TK14CS/vW4KCt8tw2Fm/oXHroAmEZKvl9AvzBJDOnw87YlCL
eCgtsiV5NAgeP0LiwxLDv7BKLal6LPJVbpX18uyGkSuPf816vwrCffuz8kOG
vdhd/9tZNsJjlOCkdCplDAZjsEEVmUrecxq7zEmwWJhPkzC035gg8qaZ1Afv
k2iALANGZpgg5mlfx+t+7WMkAcc8Au1Mbp62UUyI7L/tt7CEqY/g2nFNZtko
tl07X7DEAhITz6TWnSKdTZua2W8m3ZA0w0xrAsmJ8AMhiXpBLyhLfqTiRPrz
JMdRgm0v9pqO5kl6X8xIbcDHslQTxfgmiafWXHylz3CBmJAxAtrcUFf44vVl
vtMW0WjBroTG/yu5+mz7Fa4HPMIQxFCcklFbuUi2BoZP5BMl5Vi1tEhl5xeV
C3qSuefJjl8RCDkvgDs8TfRADLR1c40UqzFbEwuXzYhSDkQTQTJJ8p+RIL1L
1m8jZahH2fe0EDfyCZxhgjcZ2vCK6PBJDSE1lhHM0KK4AfJljDgfJ5DnHkF+
ThIjLHXhxq25jlY3eWQEUZy6NYLMRuNovYwkORsvncxOR8HTCtM6QSf9v4P3
6MOI/e0ceEHx/EpWIXbag/B2dZLfxxJ0xAig6ylXfz7OsXeZKIjqeU1lMTc1
WFXtkzT+Q05FGwGmQ8V9ZertawGr1Dxl0SyBqKuBczPaaigrhh/81nXsi6SI
rptYCqbvglgrsHeoTKZe+n/yQ77EGjlnvHzTLFmbC8VCpAtW6aQ8xwmffoLr
nmyFitJ5uPPzArmFYlx0aQBPrqxC/5zfkPVxDpYtboTo62/DjIQzxACUIT76
G3zc5h2tuFZNzfGXm6Atq9QW5nHHcKQBuh7s50PTxLIcgTN2IzY9HV4PLdFZ
y7o21gZvxVbnq7LygllGQjqf5BavXkd3pdm01nAat6Q9wW0u7VkQmoadWUNl
pPZp7JHN9tySYgUACUWIiINENuVzxoVcPuojMOLOCD4do1NOMfvFZ5/ZfCSZ
Tj521I+MvW2RBiI/2G1q+p6Sx5Gu/sY7Og4Mt1AxB3aFZtkGUWHlPrOC2aDg
fLxtdzijVdKilYE9fi6/GSKrQymcxJxDj59yMDMQiPhgWFr5u5XAxUtuQ9Sq
ZUhfOQhHVX2ODfsjBaNdeXRrPISrtXT6ziJu1kEkVuYjqiofTdbkaxHPYTsu
ROIvrAFqiaHVlyI5KJ8L5qFvQRCNOwhSay4u4wCDIq7bkI2eHwf8fZlWn/Gv
pa5XUjv/0P3vCpCYIsCluRn4gf2BWLFAhx0DvMDQ2kATh3j6Dvw/Uf9o3chE
LK0J58kZ4+jc2UTbGfGpqHDgM0ltEosHmJ4nI4EMDTLEyXhjuHzTpnA7I3az
+o8WEDu2TZICGvbHbCoIpWUX81mCtyFyTc3FLp51sbuOXn/b5NI1hY1sSKDD
GfjfNLksqzD3Rc+dZZNk9Dk9LiKwc88NB3NI7TniCNgRNMcitauaRhxzwSGX
fWB8mpsb05/i77oCV4p50HEjx5EFKSwAM0JJgzU8xWEj4HNdoYh/eVkJWZXi
bXlou7MIR63OQeoXq/DTqlL1WY/GnRohoKn4QhajExjn68DGzwc3IDfv+n9t
Nn4oKb6An39I97uNszHiUoS7jZN9zSLaagszOS1JhCEdR9Cqq1hjNpa41yZy
Gts9jaETimvR3SYOofqKHzpJ9PM1jNlz62BxJEMpNhA8St/WRDMZzBJniCmM
k/8/K7arTAv5qjFeHtswcagB00VpkQpk5iq/ksFgx0y0dioipXwgdGnyPxRR
D4dQqCPgWmdZ/GIoR8l68kWyHWQXG0excslClNfIxecUi/mTU3uqwuxqCFmG
TQ9MxtHil/YaouDsTFCOCBtXJ2plOxNgDHPzdbf8kFQ6R6Monp6Dyj4TBZ4w
LscSRpq+PmKhp8vvHxYg+ZiMXqpa8SwFJCNUN5b2uSs7EZoBOxtGq8pc/QPy
gGIFJrEv0Gg52dHiTZA+wJhSKy3Le0cBBZ/zb/LDkpKEfSkyELvgnfaC7KXf
yC2JFx1Th6jmsiHmPmNCHjZ2wlu7XpuKGnWEGJuqIqw9VUzzHJkKY2SZviIW
rbNcRxOxx0wRpim0m6XCSVMFBjcEMGHVXkq9kI35+K48G5JK0XmYKWfoKzju
VawTF3iyDnVzLZ4YLd/cFMNtbP/+NR8g7qcsxIfS0SrUF0lPVeGPjeVoWVOA
qwJ5OOOrGiXkH3lkCCUtz0dwSHPdHMum3oqU5I3YmXuC8Zq4YZ58NhuJyfBW
QuWBisr8VD65wKzsIYIhOftn/Oy5GkKskg3WMwECegj8PQNvVERZjdXOr+WS
42wYYrKCrgybOUZCDzoPLPQh7Oa3MCBBp2pnyXlqRTZivRbxCHTxd2BmpPhN
zCMba5OidTG5decpuWDSJMPDJ2OPrg81TkiJocI1edfmM0YNjfXBi8XF73Fj
BS4WFPdLPbe42dRWkol4BB7EjRoI6Sloi7dhFrhJ0ubqlebC6CgH1dvwBDw0
glEXIRbJvbEUSaEivPnxAX1r6D0ZDPPmJhPJ4OW+W9ewb82VglH+81qZrI9c
ZAyqQ9NlOWi052yZSmchUrR3roytp6paXXSKbMf3WkPz9jpj1OIvrkb0jGrE
zfgdk/fmIqW2FWLG/oqU6nsxfRbwWm0OrlwTRBdBeYPHhTWHIvotmGCA1Q2q
psssgGLvFtmhrfx2i0xj/S46y8yrdNm1zz/D/P2t700ZCKn17MT4N1xMPyvH
ISQHiCoWNLw2puG4H+TTslkMpZvos7KwhViFDm5dHRwhn0QAm8SyJnuguuWE
JzT3ZBexJrGVXEXXI2U0vjNREm6iQwV2kUz6j7ssuhxvsCFU+f/TZfF0sfWP
CBxqLas4U0b12PO1oMYPvZBV2Vx7nIdtDqtquAi2bHHVdkaRlBKV9AVmYZZb
5YwLk8aeruIirah+afMZrTX8xeJXEjM5ylxDzGWwgpUvrq0eZ5QpdLhiNmsH
A4itzscjdVwXmRpW7y4bOdf2PMX7FGd2g2IbMLvcVDwie3BHJCPMTXXEX7Xb
dr1iOKhGaLDWHv3zdtsVMIyCSEVEUpYoAsupxyJQ4la6FzfdBJe4IQFl99lT
CcpsjiJex5Y1nrSGVP9bKj/7sd+gjyQ/ccN9iwaSvVpYRsocD0km5NEZ+lsz
LdSnNSHLgJZki1hmBgmmY6ZqL9InbyOfewLTVPCaY1oOF2ANavdVkyn+0lkc
v3eLgyI+gv7fSWx7LoxCX9a2NGsIQ2L0I4VZ2brGHShGUGCIhlayGXRUIBGn
mOMkDUTQCHJqMjrO4WJEmGiZI03XmQael3un/GTYLns01hRpZSeyu+FKOY/D
fLyEQdoFzLQpPwHPsU2HvC9Zp2iMenUj1BjTwX5bXVFTnNlbTH6yXtkkW5x5
qbJGW8gllwqmYQSfn6MUHyuazPli1IB7LTYg7iaZaAlB04WlzVp4fZbDO/od
P3vVVjWCEjQzQKzl0jmcAjEqoRQnV3oVLhLwU2opApPxnmK1JI2zNBbIM1RM
VRf5szcfkNkgumHkx4sw917+g0//VFVYOF+cjWQZVobtOGzMZDIpwJgCY0JO
mos9Psi8YoS53dSPkbVqsqrnXLV1LhofVo1NdUHNkDLLGRUFbdfSLyqASaN/
gPfKyUj4ozEerJqNvbUbdFMMnTYcwY8/8q15UHXmIzevxMhj+jdeA4eFSms/
4sdwRbHvY/nsAtKAaKg5+qz6/UQJNNDoLEOqr4mlZIFtvVVo4DmMCmGVLxxE
Qj0DN3QV2KX83NqjcJ0sPp6bC1guyb/8CzW1dqubywpGmPRlIvjcK7Yiamsm
Rp66Tuu63aZJX45WmQVixtK1p7qhzoKkall0pYYSYnrhpQk0mioAM0OA2EMw
DOmh2I0VETJaxVaZbKENmxbq4r1EwMsZsmImV9Zo/PeyRU789QDp/e66e7C8
t8VkQ33ZVx/eF9bWyP6+W2BGbS6aB7PQf1MB0upTI744rAw7Wi6Ki5JayPNl
uvI9vwg6tNL7GkVo3bpeFoH8l1qLuDvzMemCbep9X/LIElxZX4rpqwSglATC
kf+miJDm11cZK1cnGMs55GjjDvaX7blLH3NsVI4BBOcKzMqViXuPTOBTrzSj
/vTTfknI33BHE+2coroNwyMMQlFCmi8iNoJNPmsmXphtpD+qV9Lf6CGLH2sL
5rsoiqEiunsRBTGMQkUn5vao3MEaXAJWMngJYu+71rTqY5ESMzVUxbG1P/r6
R636VpllQt5qVoOUzd+26XNRR6IpehP8aoYCWYAhl+Iyl926GZpQeBXGaGrq
GRPtsyWNsbovcmqwtLEDOrjaGkYHSWfgFs+FFETQHzQKH1BUlQ0A6S+RkTFx
otjiO3fqtu/UGBn8Pa38DnR/70yZ7oPQ7Ntj0G7TQERtzoSjG7IQMRam7DDd
pvXzfD3BwAG+2kE9oC1wbIEDGz5Hftb9zoQUww2fL7ANnw/OQ4QbPi9EwG4q
CZg500wwyimSXE7YTAIRqdROmo/E81UzH2KbP1vNFk9qu7rb1CRgCITjKWjO
gJDkgzI1tJgB7f+wW8n9DCuLxTMZm3Slyb0iP2SUMHlBA8daWI44gy3EJ24b
JZ+Azn6ENlFY7Tks4liunfX4Okhk3O7F8LFChKSzH+GYKT+8auCADE0iluVn
o1ipyTUonlGIyk1lyM3OR0lRARaW17g+wElWLpP4QvMw3vGKFmhtmZlxeQr+
nU4pw0SJqnrcRHEzP88AN0MNjKfTPSah+nSxxbvJjpcdeqkMmsu9MQ9Xhd9x
nlhpmjAqW9DcEuCx5o+PinE//kn7wkHn9/BZMJvYCR3lgRqiGFEFP0NlC7rZ
7jq947+GN2C7hjSi2lQjcVQlvMkr4fX4SX8frZQRVqscbmWo6dC215EYLItg
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
d8gPffhIoRhu/y+/bC49KjeAnHON4BHsYMn7XPCVrBxaV0Hudq9uq7CdQL/x
/qa45J1X/F5SjBnSFPD3dAp45yzsZGCdOQdOChe1J3eel+p5IcTk1urEcB2K
aVsZlaAz6WtxxmnAmp4hjTj96ZUrw/Q6llkwac4HKKgmLWIrZ4SZXhvhB4EP
t3QOqtt6qTtJrz+8laf4Jpqef25uuDEyY+MM4E62NbQB/zNN/q4xsr6+e052
4ssNoZ3RBla9s8iGwfN1n+IAIaWGepcj/qIzMvUufXZ/yMAsV7FAUQPy8hnh
mDbNAph4HWDqvRLXcJ7dcINmIpyKFJn93bpFjkqMGhkra2RjIC2Vm8kwH9n9
7D1Gbgmbe7KrgeuQQqvB/GOadkuPN9pe8sM/ueEyVMicKMEl0+o0Utzzd2O3
U1qgyeavWfvrnjmNFRczPYUP8IEDKAQl9FYpsMQpQWolqyt274bn0gxcHAxZ
0FS6PYSFTvlWl5R/sgCBbFB2ZSHjmwECRqZYZUTW+IN40JrZGB1bpooAFw2I
1/nA5UZmKecdZ/j8+X51hWm56m9rqBXXrzrgC4AFanxZTAs6UvQjkS+ulSMm
7EDRorEYsKGVUnjpKmzERs954KqOLz/cMriT2dC762HOECWXN6MmspsMjfgU
Y9f97A/zKHIsxU4xvts1tCfSr7YTnBBBwJgz6cy2ZNgJpx67FZQ2RnqizgfG
OOmC8EU8x/BMYzlOdpzLm7toO3fg/fgFk8Sc07VJVobbEbLfv64Z9AGyJdJo
Zsq/zhT3t4l4Bv+V+VQj5oLdf0kU5Q7OvasFhWxhGhRVClTIshSkhZilzHwa
JXL8ObmIITlQHD9iTII3hpXiLV9Nqw9brYdXeA28NusE1NbByxTXeuQnSJh9
r81fGxdysayHsWKWuwhcYuCAdxFr77Oj/n+edSEXitPYQ+xVGxmhJLnW+QI6
DrP4h1HkmWj/xDyk7mqizPv2MiPP1iqxtrZ/RTO5i0myA/fUcD2/v+vapxC/
hTn2Ibj2k3I8UB/W6xjPT7xdiUtWTrVXGos2y6+T1Uk+/yC0WjUWUXvlPlf0
RNS2DAxeeTpi+1Yqhai+dx9/YyCgzP42TrthmprMp/zQfgXyzOVTsqLWHbK3
1MQ/Bv/tf0vi1PdxC2JwhtEUbidv4k2f3U6Mwsjf79X1mg2YMrUevUL9FLWS
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
RYfHI63CoqiNptGzs6XaGsyPyiUj8jCLQOuHBhs7VncLqyOoAVc4Q4AwDA8E
USxV1lGnSNFmKKh+U0egRZMaltb2fZwh59rl3IKgkhkgzlGlVnGSuVGO91S2
kE5iws/Uz0YdbwLTEI4E9MjRVx0tsSs8wFKVeO+VEnt5ksRqFDSUnCOxo/8m
sboLJWXRBPt4klfrMVNAzeWYuxdJ+mFvGlh705wAayzl8SSf2bvIh83E3+Ms
HxDEhDhMP09c5355MlRcPiunC9SU1Po6j42LNr6oZsUZVl6TIefpKZ6KHywT
366VIUPikhEvkB4nVRqr/KT749J5zDeStCVHbm+8SZJUBN3/TxdtHKur/NGz
/iQFdUNUa91ng7++dLhQeruPJ9gmEoYSRnacqVNynayLFlwgXscBN1gf9la1
9jPM6ZOvaOudIDuaWA0Rl8gimawXmKMgsrPBoYyGHMn9cpjkfv+KlUDg2+v1
1DK5pjEvIgl7SS2W/fSRUz1UPbf+n6ZNYMjY7PJpTVTmbu0gEw5skNjU5yTj
m2GSvDnDHBQhuRyZheed7xLloPQPWYZpAYPOvS/9INl1udK13yYy6KPwBQYC
7kx6EwWWFyfB4maZYSTsvnySpL12mJyy4rogvXFz+vwjv3T3s9HEAUGG0oE6
Wnfo485Uw7CZderNkkPqKYs+Vtoqqjrk6LiUffy9tGloKwULZknLjxbLBz9g
bAWNFNBfrW0BttEnav4cI8+ZRL9GLlFUe4YFsDpaaZdLNGqrs0na+iFLz5GM
ZYNk948elXe2/sPMuGKDYtuXPrX9Ts26z1VirLlOUt4dK0/XozXmR1SwrXRh
p05xmTTgExJsUeZqxIUW0hjmQBbE6+LFnnw83SQuiSbUQxK2oHSCj8HYCFUR
ZKMhJ5PwyGuvif/N/Z+wyZAh7r0AQ6bqi6dPyKZ0c08QHiNMBpyg7hIIQc4o
vh/oHp3hlWMQwveosIM0DPw5OFbwEVFWQS9CGMM58DEqzHCmWpp5Taj9Ahbj
/eBjMHbBCBoqVggohbRWS81UJHD6IS5rw9ZVbcKt4TM03OHpL+oSjb0sASac
ShI+fj5DYXFlXWIZ74oO46+zG2Vw8RY5pPIVmVA7VWYt+tnKgV6T9wOjK1EV
BhSeCVzJxEHRRsBhhASAg+VE5h7LOtRUsSvyrCfreIt5EntlKWIIYY1Te/Gp
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
OCBZVsnBZPMF1iBEWqHHqAelFyU+1TkdCwdx0BSvt1HsQ79Xx6tW4Mb1Lyi+
4ZhSS7t+dKmB5oj6fohaqlnqtGihCiuOSSOBVXhhf5purojH5usWiC6djy6b
cnDtKwFt5HPwoNe93B7sDucorXrA0QoYiqp8+xl2MMizvMKh1EcZanwUW/Yd
01J9ucXr7MGZoyj4so/+RNedVkgGMgV/ViCuKg0NP1mKiL+z0fUKT+MrDVZa
mnn95Gx4fXlHCpydcludvrx2PQ2v05g3T7a4T6RjzhwBXzZZ6f/SmNejRPMb
vsz0bJM8N4f28D805s3Oq1UvAbEpE1NJTEB/LNEbvQr0wFDR09vQv2qs5gYl
Kimvia7SO0FMTK1Er8WNWth2v3oz6NUokHktrFyn6luWS4pduKGgiMgkOXAy
wv3pelrR7E7oEGZwd1LZO6+AMtBjiV2W8NAMDUriCsEQjmWBsRi230EIHCFO
yLG8Yhqxf7paE0m5bZj4QlcUsRV3IvvL8Y5Y9so1/w2+aWavSBFPUc/9LVd3
HiguBbos1q6FLTaop88aHR18Xg1s0jF08KCtkYjVYeeDcXfRCWpoD0z3Xza4
IIZQb4ToaG4zkulofFN+BHRbgvJ4Bcn8TnNTOq3/ltn8aEaWeopuNRHSKtuE
LkJTY/k5+btlEI/QihzbVKMuyJCpKxUb0JdlTlpZICt+vk2/FGVQ7E+wd3mu
TZviDz0lTCYyVJhNVRiEqyHLkH6aPjlx70ma9BYn2/IFD6BSsH6PVY7YW7Z4
Cz1nrH67nojcZoqamsto0AvxOVa5yWCWJjMam2GWnf5uoq7ukYlspXmza3fI
Hq8+D/XvfAwxlU3QfEEmbrrlHoETPnwgNtVIXINGBalG3h8We3DTcERWGWDh
+1xMgcBN8D11DXyVonN+6QTXL9TR7nEJMfxWoA0AgnH+YN5uhVdLwcO083CZ
DwM184HWESHvuYKICdJCK5wfFrv7CpnshuqTGCggf+NxdRN97vhGG/H0ku+H
b+mA0z5+Dj9v+AspmlfZFQufambPV4SMQC88/t0MldlnaneLCBngWNVd3Bbv
VC/BgO1novW2dghb9B3iDslkVafqgi078KiM5cNoEUhHgwuNFfXcfmY4nK2G
IgPbtEM9KB7MqTyumd9Hn5nerQ99YBioRtcWqy2dtD4DcXl/4obaNNmwP4h2
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
Gwz8seg/YosMQRfxqtNZ4BgvcjZO3rfRZmOa40XBMazlpidxrSCFBMFhXF+G
Do5G5kRQ2AaDBdvlmbZzPCrqXgzaXrne9WK8ahuoCcvHlYgKyR3Vyet1grAE
fLLyqkF9N3g3yTJtaAfvO/kefdHk8cfVIaYjxHunr/RKhPMcEUfzozhMdl1V
lYXGSwLoPvZnHLfxLHSo76SKg8durXO/RBBdB9VN34tmcJ7vKrEWpM4iifos
+fc+8XRcA1uvvFK5/pn4cn8VZjxbhb4X1+DHky5G0V4Dwxd/8STWXj9a44+M
OzL217WuF9qP2YgGolsbCDIbPm8vBl1frzQ51M+5olPL7RzQ6TeG0HDsl/Ks
OqHVz9n48Kc/kTXTqvdWWJpr3lYgKr7AZmB+DW5T5zqpYiQuL/sGg+T7AZOB
s8YreMO4xcuReWe1qPnNeDPwC1bmm8+YKf7e0KyDGPVLMZK8AJre+D1i/vYl
hgVH6RQJszXTlTODYJAFlqwiIbDJ3NkRTXO/9hEbCz1JFUuGWzaisIabIGnP
Hh175+9FVjEwo8XIDj+PgSsCT34um5J5sEKZVULsjaLNp11ggJ/JgNnzt6Nj
zxrcsOsuv86EIV9Rv/4AK02oH4jBjHv+0Gv5BT+ZCRjsn6xvhKjdjZB8sJGo
jvN1q5wceADenhQ02dFOfM1X9BpOrc2B13cHWr8+XXyZeMs9PoWBO4dMg7ZB
1vXyHTLKrKOviV6Ul4lSebUUt9lKBV0l6tzDKd9WosmppbL5J+OTP4+tiYZo
kwLbGBrKM/rUrzr45huDkkYXLld+rKRN3XDzdy+irv6gRp327LGkYBn6APO2
PIr0N6ag/a0vou+o7WiUGlKAxbAHydT69zc9cyTIY06MZCo8+C8XJBiEo1Bi
TomGZLXYYFeFcrUYGA+GvrcMP6gt452yXrYtjk3fW6aKwwX9ww6bnSb0FxT2
7SJ0+9HHCdUeKBGFVYCH3jTjhNKeLEE0C/zWfqTqb+zyarxeVobkU6BBXsoL
sScpblj807mNmTPLg4yGpLshzPn11/+7ObN5nm0ahRkDVlTxl3Nm+48E2oq/
cfEjcHVOdC/SNTTkOIVitIqUrmaOEg73c8SUTBVTHBgzF4Bl3t1Ec/stW5pr
IIDo/MXF6rsTsrNJ7CU8qLxuDeQTp4vabSuQmbQpKWocGqk5IUqIiE14PuyM
iFcY9rlDk8t/NT/1CdmfTyl9eLo6+dPEOP0P81N9GgE2Me1UM1to0gdWlhiP
ZYcFe/F5kH2JjZLsbkyMeIJM9dAECHBqax/2ypWGzhiR0I1s3v36RbxmRkMw
j+hGQ9BbFR95sP0T1ovRvX4YD/t1aJvly3lBhHDyHgvdzCgJlk9SVzyBJ5w7
zbVkKQqjeHaqvZahMfLmMBnPzHwTf3KkRkH13KojrthMsmK0jRxoshQp/lvD
YLmVk+tDsp4VuE1JFjrq0zUu1HKEoViN8l92xtnHynZCi8aOzs3zV2N9ciwd
ZLn24S7QnGfV4dnOeD/biYjT5Rtf7FDoRWJ5ESkvG/mF8obsPO2BKhXnJkd2
JapLxCaL6BV9iuUFIm5Z+SgrL0a2vJaTrxOx4+0Z4wJN0fQfd+h8FMbBaCNp
G0UvWtns5HM6s66InfjPyxcrNeOVHChO/RxOQ2eRU0uljiuGoS+v0vSvUT3V
ai0mK924GWxJWNFe7GGKSBHhEPMEswWgcaYyYyGpYi26i4VjEv1U9NGWR+Nv
3KwQiOLEgwy09MUZ8NDxNYkehp4+VL/nfo//Mx7eTg+9XuuF6N3G9Y8LZcJr
XCXmfD28Ha21KCf6t94qmkNg2HZaa/As3J53+NQwzjGeJLgkIWCI3Qu+N5Zh
o5a6vae+HO/pSy3IKRRhNRMimoo+7CcAc6n4KY7X/H11v6ifmggULsBcjje+
YqMW69OGDtlo2vN+er49vPrrNe9U9s61eG3JeWqjWGBAuBZzQyGOH70DTbPW
6RyQfqKJGk77Df0n1cAT3b9jH7CXDEt50ClDySIIl959EM/JVzvZHR2ztmIZ
Vuv91VSHe5mKc41LrTK5kVMB/8CFG+YhWvZp7CPTcf3CNepV8thdXo/OBStF
Ki7G4KxaLKvejhqKsPc9Lvr1VTTvVIMbBVv1FiMxp/pJXTfmpH7AD0YTJGvF
CQ0ql5aomVEfimZybQaSH5yL868MqBl4//2IuF7IdKmz9IuVRfQP2bHI3MFC
LPRNlXyRlIROxeh94zHosp809EXkd9ttfnaV5XNMXKRXt0XiWxPxya+bfC3K
MmPyHTITb/5v6ohdwcHoyssRvcG0eEdrfDIG3a3QN5ONkrO/QIBub5z4QT7a
vbIW7fdMxm3LDAwq+HtQFGsPEYRGdtzZGX55p9MrR8wfa3aEovpF9NogBkPJ
2LplIhrvkQuQ05x18L8rqpvlVjJkV2bIvpyIRT4jFjvoKTOulGn0gx+g85Zh
WtnV7o4ifFYatF3nqUokw+IwJnEJy3hrjBCdProe4+Z+p5g0c90QdJz3FFKb
1Sj7IFOVe/eG2eE4UoIRJfguUStNsAxQGllPmYPfxxeKgTriVuU27i9O27l2
Wt0kQZzn4wQsj3hknu7AyRqAjxzxGREwO2zsUFtEYLYjjAAB0rMHDQYYsjcb
6bvy0eb7PI1ypn9bhilTgpj1QyFSK/Jw8sGZaHdtEK/tNEbg0gOFaGM5IWmX
+9op2888o/xLTto6dDCDY5s1c4/mvw+MrSwxA8KKCo4cBuZaEW+7B+jaVKCi
mJS758reMcPAHFYj4mADJRDmfyQHNzU+wzAsaKjxexlild2KqXsmFS1oswG0
jupZnXwy/IPEW/O/+EyjXvSIikTztNLpQW3EPtyhVatpGgQYqFq0p/zHMag/
iSdixqBukedeccRo1MjhsCUqy6Zw55DRqO2OoKHbLcpslAhxKicgggOPHsLh
o1Efke9XhQ4djcoe+sV4S4MpJiMRFhEaBwo8o+3UTCTXIqGWa48lCGUki8aT
pfI7sMNrbR89OcksR7iv3dQ6J2uwz59IQc1Ixfk5Ph9m30Zkxkp7hjtYBMIi
MVfEVoWq4fq2GM3s0nyyfWEDNjiWSQY+aAG5R9g9yoPAjZzIDqSxYo/RPf7k
Rmmwvpge8S7ssr0EsYfkNx/Bo8SLEU3WZX5ykXlRKs//IcmZbk8XCG9cvxYx
Irfp6+lKZQUzLQeHwKdGqC4rQHaeJZspyUNWvilHK5opOLFQ9n+OQfk15aIt
xHlaWSD2N2+lgdwi+qFEHyZwJV06MVaHxiljkw+fWlkCdYZGl8kXYQ8hjY6l
k68BOhIjkssAOiiLXBBFii3NaxUCDNLEVMYpIXAn+etmWvPLz+Ds4Ec0DROH
bpp6yRUIwYKW9rhdALqjCXNl2wTpvC52zbJHVRl8FdzFIGp0FDp276gQjBLG
IawMR7T9vi2SfnGwUEDcbrFwq89WqOcVPyH3nKV1WXQKCBcHa/WZ7SCkfFbj
wVAO5vzLeCBUawUFQazeZxIZ5vDZ19WYUooba8HvUPmN8eQ3iafXW3ANB91c
pLzyPX0AfovAhXb6INMRfe3j6Fv0stq1zJocNFpYheC5TZBXd6NhXy8eg3u+
O0+p5Ch/Xd+8EXFttyJ307vonrVJzpqij2nQjb/rzIqot07FDUXlOpeCnWPc
3PMnAfkWDlIMZufXIK18gqZy2VfjusfLRQ3nlZjuYVo5/j03+CRxOkd9tEQR
EHumWdLleCN3iD84PHsfGtak497yDXINfyJT3Ok7L4fPG8mDUQxyzlCc+BzY
f83jbfnik2DYfDu2+ynCd9b+iqTFV8ALpOP8DbMj8plxqqjYZ9brnpfQLNRc
CzsCCLixrk8uqkHSHQ8gaV8mLq6/FGU7NqheY4Lg27ofVMIpQaIuNPbCChry
FbGwiEDA25lq8ZLZEQocQu0x8pUFaHTXfPQODBXvr7sW/xvsFK1ZSHIV7dwV
QuLuZojvuU6MqT/2S9vejvtbJUbuyML99QEFss1FcimBx+EkgdU/+Vbzr1QM
K4NHXbwNqQtuRvKBdEWbHGzq8iP0kKlYuePexbuuIo3dgKyR6t3brAYZk1mD
wqKT5j+egsbV7bU5hXSCRnk09ofMs7uLI7IoCdTsZKRmQQtxDykHGRkjTSY7
+ZhVG/vQhzixagwyQ0208IBs5C4XxTG17AiEb+hbaNrK1KQVqLtJaXaJEx6G
3f8qeSgVmlD6t0igpw+1XJMYJiRYpglHRx5j4Kep19roK5Q0HG3sUFVVADfs
WIo75wETpxiKTUb0KDKMrZIHnDSbBw5Yy9xYewkYICJ+Z8o0aK0501ATzcRY
HX9ABm4e/Bh2EOhGqDWEFEzBCuT0ialxtPmsNeHXzCOM18dOmEooSm4iPcwE
ML9+nLMA777bkGJHTgk7fJpYBHeVrcxJPoKwKmivi4qD0srhyJT2L/CFX4fO
bAFtNR0WGmaCKlOH3kqbQrnsPMgU0/XkrSj+ea2yJNDGJNku8KayH/i5/ZWO
P4pdKJoliVZ7xUEBqbrbcvGMOJ20Qfk27+WPOfXvyxTnRU6canZMGr2X5LpP
13ljTfC6KKPIcaes72gyIYBscUfmbz503GkRbBbCJ8CKI7GIKlziYNatcjvs
2gXX00hAxHgUwRQ7tLnbWtpLZo1oo0aROyMWv/ZvjGv2TvFHZgh29UbY31F5
JdkvFlUTmA23v+MOoq5lbIu2ic0QjheOyxhjv1gnQi4whtYsTnZPcJfl1yJU
cvCJhZTcgKxMy/JlMpy2HClmLRwna2QDiwY+UUWbYaLHyl0GbK9L6bFTl/GH
pC6N3JdoojIcHz0UOhUY3Ul45Hlm7YMVRRqRcsMOTIRK1jKLygcOOjFT0kJT
r55yxLBn1BR3p2mPbhg6NVfbzN+xnG4ztuqzpa1urV+tdNtQ2X8pj6T6kOx3
tc19V/vMaRvEaedkMOJUki30Qi8z5iNaT82PFkztxxgZ9uRlvm4qmc2j76JN
Ia7DtcD2UNJDiXkvBolpiYJIzpfPH4i4HXEmXXgwSkm3TZIzCVHT5KH80BNe
yTB4gz5HVJtN+kSai+SaGpl4wQ4d1UytWxdE7tOrNTZ+0q1B5fX9SbU1j42u
6dBzoy8dt3xAy8+ydTfcLyDweeuUMAnvdglRNxtjXDnyG5u/Rux7ZyFpR2uR
64eR0vcA0mL3IpSQiGBov3mavXrhwsBoRRpTf7sTsU0DyFk1D0NqitAze4Oc
caSep2lDdfrgXfQcorY3QYcPp6JFr2pMH2OQS/FGv9KDXU5j84Nq4Rm+Itvc
qrV/amjointNV1hf2RIvvGq8KMdrecfMEFpn/4l2VUPRr+xnHJf/ndZ18fdL
aiqQ9e73Oohjdtm3espyNrqXIkKcmynupabj6jOExtUmEGPfDg+ej30+1Dus
eHhuxSYkPHMNUurSXdBb30fHNzt0CtI2Ho8TZ5TSDtltZewZwyVktiZLEYWU
PT50yaYEr0D7Dy5H7M4meGDfP9Qfe8PyOHBwJ+0g6ZuZshm8P9tuihYq9KMD
F6LjRV+g+ddnIa0+Q59dU8tKzzoL4vaMUAZS94lgDVmHHp9Mw1375mPxv9aK
OGXjHpNAxq/7V6J9TRa6Lwn44buXca09V2N5Ml20xoLP1myrI7UM+y6yi6uQ
Uu3htI8DOkqeWo4ixmuih/olvvTcfA9y2TDXwAj+s3jWVU+RaTUtzVzCCy+E
B2P9/e/AhIc+1+wq4wtMDNW6OvrGCqlZ3sKJ7xytEjkJnuV4fJ1PnmyTfC8J
rkmwxJwhAQkru9lgwYSKg8hcUW5ySgbjgCIRvvtLhMBCr7A5iVO4v9TvJYTG
B0V1OWzEGp9l8muSVLvx6scgqdbXTLviYnUBF7vREcnYuKlM+Y1OrMxTfJxQ
lYeEQBaa/FiGy9eIht9eqpEDsoO6WiHW/I0bB3z5pYaXHKcDK9QcowGLu596
ynxPv+Qzw5fuxqvq8Ij58x0EitHXGcshObq811B6JUA2ne60NgJWL+4FFG3U
NIQj0mpg9WckjxaDVOwVXrrYBKv4RI7GrRW0H03elvLF1vtZECa7/SserWz5
rF9Wi9KQ3y9fairrG+mU7BbK2MmsVqxdRuYQaEp5RAAuM+IlS/cuK6HpMxPe
c6+SfIKAgECBURw6YGfp8PmT0HhbTzTc00IBAOMCUX80Q+eD3XSf0/KMFV+n
gfI7R+sY72zbltJPYDj38A0i8Pfjdx1XfwbuUXNWpaEZl6AsjGDeDc+XLUY4
DeF3ah8Nph1eVnw+OslpSbY+Em/BkQQu+jmIc2RrJ5StRLePDU/Cm3vC01XL
sNGPARKeUV0SrpHYS+TMn8fC2CH7c+j0FaO4pZUb7lU3J+8rHYM1ERm7Y3DL
hgvJqznCrg23lKM7pPLl+i3CouH2w1mWyWdOLgBxgI2qiVdfmKENOm5UQ1Q9
bHAYgiH+hqZ3Nt5EjC34itYkHZtqiP362FO4RKQFXDH2ZVd0x5DoO3jHHzEc
rsazM/p8/BQolYc9ebH+cu1iwWgzDT3F0twsuYIcFFeYVa0uK0T2TFnvvAKU
Vln8lKDKJk6DQDHq49+o/IKeviZPx1QJz5FFdDNKEgUCjNHIUUuL9LNxrtZd
NRW56w3DKBTuKTfRJ8dVNdmqqvFy2qstn0O6xp6a2cFhMaKNWuvpC2QH3Gw/
7xGsUKDxlXgVjr/K4NaLNbRies9HaW6ENeBeUK7oU5fnsA1aB+3PIVdkLB7L
rhnw1o2BV86RZqZXvYF8SqItLDbvF8v37Qikj3sfF2w6tC/Q4OocOyvgEmvD
w4n9w8eZDROx4QDZVnrPkePMLsAI2aHmiU7FOrxPJi2kv7cWE/4zyd5HLFp9
MgOBZ1uYxH7ofuSVxuH4+t6ICyYh48Rf0PHBx9WkJRZXat/1SQtK8P7TRsk1
EnMYJf+ePHE3mi+cjdT6vrh2eSVOzjtgxK8VZmZDe84Ca4PoaOeMR1/5Gk6+
4md88qHoVS+ctzuSSjOExWVVaJT/IjqvfQ99vGqcc3kdOjSX343fJoroKnSY
uQUzFuwmr6HnRmOxMSFTc5j91EQSpTOtz9oMFhywqHyjw3jJWoeQ0WsLztlw
vb6dAJz/smnvgJhl+vWs3hHc4NO+0W6x7IEd5nV1ftuu87/om8WF4tC3ZAY6
DwjgoT9e1Iw0mSao9YkjWOzDU7O6yglR1MFoNPi5u8I5xs3EuHuOYtO1UbKg
r/clZYg6EI/UYGPVWbxkHgxmMW7JFnC67wQVDEGwovv338MlFWya51NhhpzQ
jD6OP1A+TnEIubxZkstIRuV2LVxw3im9Rv4FsygMU5FQ0KkbRghpl6jsxBcx
f5KphpqxD2rSkhJTtsaDLM9uyBdncWT/OhXp/5qG7BvLMPTkeg07kTmTYShO
UrGT2htY/cmQCmehsi2Ly8EMFburBAP47c70vekVUSEwhsmmMMIQAVh+Jo/w
kT4zuw1dNpFtqdTo7uBdse2AdM+tZONV+wDraDxZydhXH8DX64CXXjJs4+RL
ImRmWpiQm8QE7IPbsCGSPDmslV1gjyCRISR2PV52mQ+RWMDP7lceZFFiMI5L
HmmviNKJrog1BUN6rsmSIQfCJj6yJ54wiMwwFzbWtj2Gd4k//7MGmCNQ7EIx
Y51PxjHpuLhx3SYuyjabOEzRlXAIRZetXdfwEyldyl29W+pR2biezK9H24Kv
EJCPZAlJlYVsXcSn5S6zq+THCVj7wQyQO9x4DzJRmfec7POT0ijTpHOEGi0v
dQRjknN0iNo0pdMlqmfYmKiAOoVgiFEA+vcMtbIciJkoy/Ggu5kQiNdBSn3m
g0fO+AFPvlWp5bwky0tKMtfGOCc/q0KDKLHoiVOQohUVZkZzc+3L7YgP9fpm
qQk7fF5siRKKhGe/moq+o2YsDgdafzUulpUFLUR9MrCRpRfzuA2eluGRUD4m
7ctBjzWlSD2nDJ225+PyP3LxYF2VHxdkVpHSxf3Nf3/4wcUZY1T5MClC1bEG
a5rblSPV+tOVb2vKjytG9bv36kspoTa+lahNAKQkdZ1IdJF50CGiHhPNb7m/
DBcZV4L7mv8yFuaqihhDY0cTV5euHsv5mbCcjdn+nubKWnfX5x+ja8y/E53i
t2gSt72mc0nhR7sZcbFuui0Us/1+6eZ5F+SKYyFALSdLI1JL11ajbHGefl+0
vEiEfzJKKoM2ksWxGcuR5eVgwfJyzZQ7mqzH7RBlxuuYq+2rZJaeZv7EszVQ
62w/wUcZyxDIM1XgFmM981TG+ggwHKnNeXT6zRPdqKG9jX5hvd3aFp9TpruI
p5stK8QiMZZgR+n0k1g7cz5aF7e5yHJr2Q/MlDHt0UX20CNKWR+epsZaiNtw
PFrtPAHn7s8xn7PJlN7fv2Ol3FAfkfpYePtNkyBL2RmL4//jdzeBd6VYRG0Q
FBi1b6LyVnt7k9Dg/tnwLqlAz01jkP3z0+gY6iRyNUx29VAbQayxGfp18vOz
fob+iGz8gCOy8cvlgTSTjTpQhOcbJUYrVJX9LzlBJ/mgrnKj/YMD0O6yctlB
Hub/VINW53yB1oE2aFodjzvwFCqrpiuK5JbOnFWElLM+Vp+KNMndgnPReeZ3
WHjgbR2LxN4/Vg1TbbBU5ZtXxIYGf5MdWogkL4jZ1a/ijaIQqqyGXSnQ6ZFP
gdkCAuLF5p5x0T5M33qfqi+qqfCksjZYcAyKUFqAN3Z9hPQvT0f8ny1xb63y
N5jeRPlqWzNQBZ+xfx70O9lZzc2x2pZnceoAe2RigwlImj8Xd/x9t1oaF5Cm
LU89fzka722jG4aFFuxnZlmAWLIGNF1sGA6aqmF29zO3yV5yZzHYakShZ6U7
dQMZ4Oj/JNVkIPmBO5G8rwlaDP9ZYwjkwyT0YIvhrK+W2ERfC6WHi62PU95C
xm9cQwH1SftgR+0D9ILRGLJuCvqGTlDOBNYTUFJZ1Ua3mwaVYTDGHVyLIkNz
tPXffuuuN1HpJNjARK1P1Urf6OXPf9MMGsvC1qxxdl/bs9WKUFUy+M4AjiE0
gVb108MkyroSV9rPT9Pz85xsCiTaZTCI8+IZr2LFdeS8+BHjdqLHfc8jfcVE
3LPrMVonVwvLSBsRLqWPYS9+LJsExHZbdzlOMzrc1Fzx5tuPw8nPFfE1pz1J
CETNCoRhAMtiWXnLg0+NgQcKFPnBR2JkjL1xxueYQ2GZEXt0Bw826UfGGjl5
hplahprlQdtup4aKL1mKzHFxLt9G8Mubpsl1o0cdhUTPnuFqXaZECZi5v+Tc
jqaJ4VVmAAmCGbgT+bE5mwzNgQ+dYx4O65C6tjKo5ORTjkmMpduSOfZAmXmt
JAD3sHyuLByaASQIWlkVFvdIbixWVBEgrS4MIbbgSbEES1FkT7dYdjBBiWE1
XKukVq62iOvGwnQuEDu8KYoksSKgJ0xmQShFk6aRppglUIS+3BKO7pQLS+eK
7yXYYoqKtdL3yRcBF4vduahE9NQQVco3F7QRhnaajOYq8PjxRxPG48FrNQ0N
G5VL7QH5LLo2JCp1zfAsmCXYXisowqQkjj7nNqCfd6xkxF8PunUdgLxu3htV
AcMwZHdwf0+MzawvJwzSnRNormVkjNM6L5Gi4cYPiJfjJIv2kI+JwWeGbznf
NtNqCDcRJvHXnui8p4+bCBNWKdddZ8keYlXRMnZLz5BoSfwy36Mh+uDnCzLx
htjLoWJlAIpaQzyZRHsnjBES4vJOuSWpZNjX+Dbe9qWRPY407UxcOjDE3ASV
Ews0+tvXiDwIDxABhviZbB9CGAw1tb9iei5bJdqlqxMUy3kwg0r4dFxEmtFQ
ET4Dasb4E1oYm4kX+SRq5YMo117GWLwua04HIVnnkogascXrhMUrtTQzzCXl
CqbJXzYIl6ns0NopyJAvgn/GinjOcaJ2k5VAurNawmvEYvUSPPCJPDWHrN8R
Nd9F9ku/1yfhsaIHtUc9areJ/RStLVag1Fc+w9skGKDGQLPjKvpqz965b7wk
YOY4eD92klf7w8upQ9Q5r8N7Yhqi9ibjHEHab8kZmeWmIC2UnZ8pV9QHw8X1
flbjRkfJkBu56HnUZPjDoipmyGumkmmYbIsdfjL8fVERrQVvJazvIRtzAua9
U4Vec6qwZMqdKH38PFH+JvB1/qedkPTviUhqux1xO5rrNqU/RUci8WAKOvUP
aBSCLMAENKwpYZiBXkWY3XO7iM8wdF26xbB7RiMuyXiq786nZuRrLfFP8QMJ
1imPlNlvy6pNa9BM0zEdSe/ZdbqZ4cQd+G3oCKIEDbIwTUqtRsDPuA9r5UTO
XYyBtn3o35ch8fNTMPbPKQqj+Cfcba5cjSwyjNG2qu2ItInv4/nn4dPlmZ60
S/BD3c8aRqI5Y3kAB8QyFefMELEL55BQyYlguZD1l39WoMmKSQpq2204mVfs
70oWpySf9E1EnbfJvtExtbsQQ0PD0HnrUCQ+PR1ty89Cq4NtdMkYPrYjGrS1
iWWU3HJUJLWhAzqUkzDB0EiZUAV12b//HW6qpifXo/Z4xO7OUNkc+Ps5sg8+
Sba6jLadJoYJBUabyIXK+k8CPSqcsRhrVWWShinatzfhJhp5DS82MhW+NNws
19qyBe7tzHG4STe37ynAo8/tUXDDoBqDK8QOAnwaW50y4Jb3cfzW09VvpJH7
09bqUalfjIvNp2ao9mIAiwehJS+SB0s2pu29QVNPLGKirmfGlLEW2jKWpBEf
MXe3ezeMdmukxB6M+FDOGa5h9oEHe9569DDfsw9z4EDzPdGGfJRbXca8KCTy
p56bbcIybEZz+HFiQU1BbopC9q7jjCHqLjvrdHl6DclzUGQ++ag0UNHaMKeN
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
6M54991QVtOjj5oHZMCNgI8bhFCMxJo0LUjKTkcWeWBJSNZNltusuwzR79zL
TWCtkwjtMy2bmGvVbNsy22XVRRsEciNWy4DeKMs8ta/pUzjGdir6/9mmubLS
9tRLVonLvc/HVUtFPkrS4Jkyh8wHbCsbc9Ylrd96pFUqBbYqsqi81c85aacl
gEEjB1UukCAtXyyx3ALTirG1218lt59S9DpGV/wutx9wt2+vnSm22M2qQc5E
vrcD2sksnwmXKRwMo6As0xaWrwg+6i+7J0M0ObPbwltY1iq2qXHEE64ywpRI
u+Iv0462QpQY27J0EWNnvfohsm0SX52lRVpmC6h99vUq7fn25CZzWyQ/vPX5
SvRoNFX4FCK9BKxNFCOwp/x2m0CbK2TxTrBt3UVoOEREQE9JzuCQSysn4xix
BoEF5Q09Rs4lwy1Fm6KwEJ4ziviEdhqf/nf83tl+lCL2q69g/zKnxqJFqCg8
Ue0JJj3JNvPiXCwEZx8YqnMmztF8nWgvwW1H7xCzI+R1J/ApF/I0s6k31W03
fTlJkQ/dxrRcaFgyfkjBzoPuKD4YERJzGUjMIZaM94BMvaOo4V8j7WsEuyxk
4EA4agmSsBIMIAz58Dq08hBCPr3tB6gXOPS8nOAKA1+6qIzspUnTPbzU5g6W
rJ38Evz/A+0FFtDM/RI8rpKu5/qjcNKzK5Bxih+TBKXe8vr36N3YT5PJgpbt
g4kA/I7hACY/mz/kxQzRqVKyRWm+doyaqYQtwzDMOnz66td5G4e/cjgiTovA
3MBc+CYJIJsmD7HDpzC0RGAgtVXsvxkjzJAzxSH2p2j1pgz6nCUWZyNi4dPw
fXSMwJ0IeTVRluIyDQFQS87VdoYn4H1tl3CvTtB5OBc/yCtXKo0GD6+Cze7Z
Xvh+i8E5zPu5UgTwD3Ut6Uo6ytBGHEiWq5E04iaTF9dQigyxT+996mLM2TxA
ZHgHZOxNwaXf9EV0cyzarpmByPeL1GIhEiciJ4LouKs/0qrHIn3WByqjKL7p
b+3Xz7NBSXLD9qp0knDG6CZNE/GQX38fN5XjFSWXz7DaExC5rgdOf2sxGpua
Pc5RrhOa+QPkymP8p2tndNf0hBE1asRe01Zh9K5JWp/xiXVxM5rB2XO6i1m5
vWXxLV1qQhVRXxyNQVeUefqMEX7ylDJWRXdfelMmui0/C32m/qZF28TKVFT0
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
6Fg1RQE8V65KwapQtgJ5Ju9+sxEpp9cpz2TS9mJcW/1KOM+kWZ1dFdIQTxIF
kTRiU8M2JHbdjpgb7kPUjffo8nSXYAIEK/lnzrRJFjNNJOtt4zRV5MalS5uC
8SGmrDIlkbaG4z1mgMgYXm01n1fzfIPjkPrG+VqylfLu2XjmG2MzEPW1z2jC
7b++RCxuJFImIptNxnbMPlllf6bisOM3qJfhp5+gFhWd2zQtCSaZ6ch+sdzT
9fsCGPrko4jb2hWTxIz5e/BaZH01XQNLMouugOb7xiqMqJ2G2K1d0H7e03ig
uJFxO0d59sYbRovSRUnHlCsjIoljJL1tvmSNanNP0wX/4tYPFbGRXJOyj/4T
Zqxw0BloY15YWKDNwwO0eFnh4ixWsiU5GMasRZrmfI+2IBMaXFergOKbR/Xa
TIh0eoWpB2/hLXP6MWroMokBdguchRf1I45qmJmDPBz9Iv+fIXI4PGTDDAFD
LBzq3WHKUI1PXACqRqcZOCX9EZ03vXv7ESVbqcNT9drVmwj06a+LMGp3hW4l
18/1228D6B7IxWGnAd+urMDxzaF+rol5daj2G6bh5JJS3Y5DmpcgziR3e2WB
DM6npZn7YiRtpulco6UCgwfbLZCo6OzJJ007bPJ4kPpbD9EogVAHE7IyhXhx
bJdkcwYzKyTK5CPSHUwkSYIgpwSY9cegpSwkrzid56g342aZJlue18xoZ91C
1ArMmtkgMx8rd06OkyprWlM50aNAFccBXGKHv1anpvUOjMvxD9ESXTX4ZMp3
FDt4abeM39BgopFlVn5Pjez/ZqxQMYJn4FjZX/RLp6mb8yKQ6o/Snav/ZjFx
S/X6D+v0VIhSfFtU87siAnIUydR73Vp5OM6Z8GynckVVrdUyd2xRy+wmqMSG
BQ92GxSq3AzIE+Xinc1+1Xnn42MNWfUUfX+DGCccyTrlYBSEM0HLLLzMJLr8
ma9NWEEH8f9h7UvAqiy3tjczCKKIKM5jjknOZVqKZZal2GBZ0mAZNodNRp0G
qXOKZk4TlkUTadGpKAuzrBNNpGFFFpWkNKCFulU0t7iR+1/3ep7n3Ru1vv//
r+/lKmEP7/AMa91ruhcJLzvacSJmnjfPzJcHcRig++ijsNfi1djhbqTBw9gW
x42eeXZR2o/9p+jHDEphrJ+Ihs56eiDEsHQghoEFmlLEt0wPYNxO7s5JLjqy
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
HSZmU2pjJgaKar++hw/xCUWihkqV9DN8eCOOSvJpGbplc3Nx+7IGr+ALnTYJ
PiOtrjhdgJPog2ki2PvJ30ccY3goVVVWMlnrq6bUvP9yWXGJAqa+MhwdvFex
W89nvv4iznp2qQKr3vL3C6tMoJ+WXd+CjWjfMEK3V61A8IUslycS7dLrgJMG
mevOKmxBh2y5xzUvIULuOfO4zThxYpPnfmadDldda9gDryNzn6mVICaCx1UN
pt55ETBGKKml6Yak7UH1qDLXH8R+VHVTA7OQ5R9K55L5aMJBoIm/U0PSE8RL
hfb2EYxovy5XdhBsPcVGtdnowjGlC6K1bY5J9U9RxzLLzZkyz33lxm7RsCvt
oMEiadK1mlokbsT1Ig2ML22Tun3XW6V2q1JkIjWWdp1+5+Y96zF6qiH/rF4N
tBtSI+vSseagHtYs+c779HoHb6TJcvZp/FMEYjpiN9yNtismwbdpIdq0lZU0
twKDv1yIqW804sH358v9p6FVU2tc2XSVwrfO+3ohcexX8O1K1KosPFweqi1D
pwenghF2ymG6vQhOaXzRgAutl89wD5v8MthJMMbcH4duOK4EygRfpEywCal5
LUXniTQyxsjppWMaP4GobdKs2V/R99yOlLRmBXdD6k/yiu2K3HWryF0muIqi
tK8aVQcd3gzNs8aWu10+oluYTGHasAFeuXOGMBmu5DKgM+v20t+YtejAFLXU
KtP7V52pjFpSLhK29gwUosu9v8iCFD3dVIjptYXa6SJ2AB1PdRgumvyyrXno
/muV4jmGcElrhejSXAU/juSSa2ksNTrXlqz9t2CqRpPLCMqDbO18dSQVydlC
RQ55MDCGRimBfdd9BYjID2BHS7m8t1SuUKAsEMcF46wyu4uyJT1R9QrmvQuU
k/MoFvjoETChfbnJ2vm2XMTFKLVOoFCfUqn1KR2uyaDjDKmK8XuBLz0YMGOr
l9CGgtlyDTE8lEeUV2a+68z8bUgqrse4yse9eo4BjzFUitVit1G1pQisugx9
RFG/puwI8746zfWuMFLGfsokdhV7iV0896As/x4iSrphFVZ4/eCYvpWvdfTy
FRLlyN8K/OTT+TqoRLm1qt1yFDzVaISTEOtjrJENTK7w+QIuXlOLK1/u5Sa8
JzZnuoiLforLI0T4PCXbnYKpgxJLrtWxo6lCTENfsFHcCRSvHrogRZGx2Tvu
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
WesNDbL4VQ2rM/+vNKwq9WsasbDdw8xV1Tq1DpPt4aGHHkJgbECnXsamfoiP
H4TsLn0Q94KAuIBMxfIbMOKH1+GVxCNrey/ULXsMHcJx6L1hkACo7oiL/xH/
fuAprNzYgr//owF9KWMgy7DbNcdhYvX1aGxskA0rB4V3GE4OKUkrVsjt/HuE
DE8Qz2/9QNDQVlQUFWsRjPapFDxRvKxBlxHjKI02Tk/0NOvbhehQPRWJyW3K
M518ruwYR8ai48ZeSH57sjJ6uz58JWIfuABHHGZ6r1D3kvzrpPg8pHVq1qQI
ARyzjmzsyiIrKiyTNn7K3JCOG6+TniTfQ7LI9u2WhpumGI8eOrHfgUeEkHd+
WK0Hw+lOmc11sT39tWKMWVfjh5BoVbijMOxEggiD4059iJdC4gPFzl/96T0c
1T4RwdY0TKt9SGGT6yVL74Zxd8IrGj8SGuU88W65NGOPMCu1qWiIaDgIPWgn
zWrsq2JT0SokVP3kezk7SMijRDnZOnwKDBdT6MiV4nFi8zVujoQzNE78mUE2
GkXCG8ISigg6GW5m96jdQiAqt+B418w0MclHrDrLUrpJb6JInhu5O579Egkv
zETGth6Ie+lkTPvuPL+0PVq0zrzfNHoig4OXyF0m8PyrGPJtoT6ZiQcbvJpX
LAhOtgqOYNfwhRh2ywbEE82JN/LlO+Y9rA1osuz5mpC/p7KYs8wCPMpKrGpo
NRNAJShCGFCyDsfktLNrmI7wWQIie/QDphwmDsN88zlS7y6r+VxlHnPKBOm0
LEWnhhm+/WWgnowhPoVRAh24KZDQUIhLBGsZcURi3TNlC6Erdyym6E9eWwGO
+3tIs3CXv1SCI3ZX+ySWBrW99VEGcgCiBJw09EGiy0iZoKPEGgP7VwA/rp2V
wkYB/OjLm3DCjRRdC+OAB118psJnfhAXUCH3g81fIO6pfHRsz0Luv2/D1bds
VVNIU8rqK0NKjtcKL/ZPoloQqxkZMdu82Zfapygv2xmRfn7//RbMGQ3eY481
6cwrrpCbMPOL05CkH6IL5gy4kuiMCKTwOtmPkq3DSBmTs7KaUuzYsKKeWzGL
2/gsHJWf98cVVaD8G+5mXWW+J8gWPAikkJRrxXm+lcIMCyiYrlt/vlVvNzVG
OVbXqVQtXL0lrRSpY7/MOvZWbkvGxiWnHJ5zY9tsi5GqdTco1k3y57UT5VYn
Ys/kVPNPNZi2tRhj6wuQ9ESTdlm49VaVFnVjTZNMtsTRR6tZNNCug7q7JrVs
DioPM8JFQExIR3BDSMeroVm0lS0aOEu0toqgynl6zAsT49FeMAPJ1EENaixH
Lk7PwYg8R591rDyP2bSnqfk1G2qzEsNI3CBYZ6tIriIywlgzy+QAG0hRCIFC
cgRQBPScGPRKtZJC/tB40IzzPvgeFu4RdHH1USyU18aQKm0er8fRihwvj/aN
s4NeL8eBcSyCPordEQTS3XRtT2hvacq529HZJojkqiaoJC+QIJM4l6CToT6C
UE5WglKGAglSOW4ErYxHh6z1p9Fj1JiRRmY2HBuB48PJL+PlovuGRsjl2qBS
YGVWgbBSJ2KhxvZMrx9NmPr9qSN+hd9m6HdizjtV97C+weTQQy7JEyuu01zM
N7ljv1tOVHrR+oKxOtZ87pGNIVbxv3HCXAcdW2MRq2yRQsMs82UfKDJC7EeF
hgDhAFU4EtVlS5QXuRvSw3AVILH6m4CTo4izL3cR03EaztMQB48mE0OPdATa
m5d32f+VaFazDdMOF586e2YVuoRn6h5eVfOGKpJmtmXp2kzf0A2B78VeLe4p
aDcGsc8MwOGtf0IMY0L3BfHQBUfAa5B7Lpd/B29C3wH/Quf0g+TWeiKF7xl8
K9bJw/606VGk5CViksaSzkAnWZjrPq/DFPl3MC6Ew89ZogWGwaOTkDtarGef
AvEb7BGqVsL897Ldp7anYuBcOcfQMkF3y5EonwlcPRbHPj1Zw3eHPzNWvHPr
TrcEcOzXR8GrXoFgWZyR1KiejbHHV6Fzx6cQmyufDc1RmgopK6a7ejXiQqVY
sNDsEUteKUPvnyq1Sonvq3zr1zmvvxYOn3xXHZKbPfT6ahle2fAzYZITZB6c
IOYkUXyCm3ddLQ/lanz8HVw5EPM6nE+D0c1WsCfBa6rAtYtg9X/qcPe9beh1
95UaQesgK1lcCj8LQotHK8M0xHt4z+l205emx8ggDUvCGcEwiylNjSZzCYwd
0VjRYDTZzcINA9seMNtNb9U0ifNUMY1f31W3PpM2HSBGkflicmI5wbrKzP/G
blQ8x+li9DrLa0xTLcESAwAzFc66MiAebExM+0XbystxTfqYZ8s8/l30/E7m
YGssSj5/FpZY4GdirZZeZGOKEtMztzxSaVN0knnZG8Lfq5Rth7oZSPjqHnSS
edJz+k6VlcwT1PHRJ8ChR29Ft3ufRMKkFpzedC22hndoEQUDoaw2WFZrBNb8
yrZa8zuVy2ShfoF5nT1QvJxGHcaY5goFlX0P34yeYm3+LOaZsrb55fI+9t7x
wriw9gVN17LI/5CC79GpKdtHhwyRkOHM412ZUkGb1suw+Pwk/EuQ+HQ8Jfid
KOOsdSUYunYSku8PqTQwEZa1Ib53XmkpLgDw65rpveQKTpPds4f6BY/K1Nmf
Znr1BqOZHlNWheFhubptb2n2t/O9fFI1cH3mSHZYsyGsQW9WMHJvy357FtJ2
dlLhXNlH/ZIzv19alG2Pfi3J3hP1JNhTh/FA1j6I9+k57jUrDOjGEceMmNOC
6g+iz+XPIp9oRbeP1Y9E1j/8YPFlotb6M3rMtC9XF2NG3BiYYRU44yAmFxV3
Yr5VZrrxXtKVV0WHi1RHggeaN1LcXO0dAQgDK73RT75xjEYjZB9xPXOuEqxy
lLVCrl9Prg0q1Cr/yVCmC02oxHUPqNHyFB4mW2uivCwKaLElCKkafqU8GIsw
+vUz/BSyBckm2C0O8s5WE2IlH23bNriduLkJP3sy0a+luRGOuKn++5z8ceQJ
ZiqyzJ7zJv7YdLtaBSIvznTiaW7PDKmQWU1+Bg+iQaImGiaG4Rj9c5LMzBVw
5ZCcwqAjPVWmb3mQIE7UxlQHe8GYBzRFz0sLRCtFdhsfGF1Volm6DPSZ6EKS
gkdESBTHalGiVBZd0r1lhJIIk9dboAVh8/ReiHSJ0vjMiELpY9AQmz6HPdRV
YTg5UoeUqJaS90b5Zt4DETZ9Ngb2Ob8Y2eQEonWgW826B44Dz020y9/zuujZ
02dl1J4J5JflDxPKpBNyH+KmwYQzPXaicj4H8YcG2MVDI0ogxa+hvZfb8x8j
M05cCZFH28EaA8ONrFbFlUaVailULoEpJqgGooCPH8n2z/tzyJn1OxYwRBhs
HAaCd2bZnFw+QTy31+jpyngMHykiYNIFEnX7NFPePy1HNqiNgAJ+Jtggxhi/
kySHLsPJoqSDdLwMGz90eYTjZMQZD16Cy2TlumZbxoj+qi7Ymf/XumClMFb7
v1/VyoWdikBrEFf8cAUC5wdw4OYDdU4Ou6s/UgrHCAo7Ed4oD32eSpNdezS8
QV0QbIpHh+EfoFO4E2IWrkXcoENw6EnbUXzj+/h49Ro0N7doZ6Dyus1orK/H
mLqxuPaF+Yj3CvGXR5vx6adhJCc3KAeOnYF6VRyMs5rnolc4G4fZ7oY8Pnmi
UBO6R5wQRuL5gtT+JkD81Ndw++1hZCTk4eG1m9BXPjM2dx4O3XUkkk5PQjdW
UbUHEOeNQrDxNHi1HeGxYZPXhL7FB+KaVfXIKhP0IWsqsegbHLi4HnOW1uO9
rUt1JO9f3az6QMOGNaBjeAFSO7RpgdlvCrnvqdYySR7SkqeBg8tKkVRfrSGQ
98Mm5H7cTg8j3913yJ3DP6BlKLy2HngNb/lZYjLz+4qj3emnCcic+Ake+tx0
TyBB+vHNKxCbtRlj644XQ8LisJfVRNLZpcCxg5c0FYyoMX8jW5ib1y5qJG+X
W5HtUN5K35bbGs2D+N9+baEvX50vZvti/WmhoM+Osl8OxQSDeUfqamC3CMZS
CFrHCcKZKWc8SDvXp+nWWuTHlxrF+l6q1cqUvKcd/yVCRI6c649ij6OR/Hty
Lgb1k+QshdohyMNlq+vRoVbWQNsBiNmWKpY9mhCxX41BixZ6Kj1qmnwDDUSa
2u8yBJfX4S9VX2GBbOoD3jtPuYBXNS/BeQt2obMAhfMXatUbaipa4RU/p/vR
bcuaBTW2+/EelqAUl5ufG/iFprWLU4ZS/p4Ay48+Bcad+r3RmFqfh8G5W1HR
YnsQxmucgSbcHQQvabQ7ZrZwE2O4FtoukhtPF9lyU8StYA1JZ+0vECfL/5V1
azHv3mUI1L6KqZ9PQ9F2Bw9TbMLChAujoJlliJmWynuqyQ9EdDDSHEZr5zys
lK36NvE4mCPrKVPhUF9NntfUs7ZGXMYwTv+gFKn1LrwVRlZ1EQavLlP+NX0a
ZrbTKk1Dqenv12DCTu4TQK8njdxUX5n13GS5QW5T3n6Nb+1ZEWOMpVuxfaNf
0yOajmhAdLn4XR4O2FSGAeeEleNXVFOiOw8dyF+iI059dB0eaXd1aaQjhjWA
kq9BLJ12LiJCJdkTTwSbjIvlgqIn08JwqIpwMSrHg9iDaJ3z6hk844c/iXFI
K2FiQlazgV7pyuNl1tqVqBCGmIhIokIUpyfB4BedDP5eoEbQfpxo5DlZ3pFo
ZbVm/ygelu+z+82wlWocYyn7J7nSulpbXBpRZivUTcpoUWl5hs3DJ+N//wNu
u03cpIOhMfwOfYBL2VPtMHHfxpvOJAXl1vh22qMxCdsq5bNeXJ5aYb6ReN7X
a5yvJFGLufcbk+QWihVphtPhcZ2cKmQfbVyOX1OSdqiUcTs27qCvG41w0z45
HDO/vlQFlFkjwXSR+aopmgYiciUrhhkyutf0mxnrZLCbMUj6TIx3EZ0SaTJO
SXYNqdWEbFz/RId8lESVDBHQDhDWEYeQ6nKIylaPVuEa5s05QzglUrQtT1BB
SZLazUylhNNa00XhNsFZxmgG2dVkpxLh8nNErozlcmYSbdP1YcKHYQjGZRk9
J3zktbMyhWPDqcgCIc5qysmxsVOT1ru2EK27GiIOAQE1h1B2PLMW4tRHYBSX
II7uGhXu3bJmNJgR2ciy7qBGqlKnnhHuyteakTot4WAPhQgxxoHVveP0Ed6F
b7d/vyISH1Ey6k16AOknrn0VfYNvTHzNv0dGl0lpRQSoHmBvlSmOoC//7/k/
cwtOsD8z+M0HGs1OGIiBvjAIX5sgE4x2gMF3wzQstnZxL0E1VoX9/oJqlBo2
Rr4Ft7bnIr5hOOJ2pCEmGIO+6/vq/M68Pg2ZyYciNrY3vKlB9K9Kh1ffFd3n
TEHMOtneTnlKvkXw98kPYfrVnVg3a3fzMaaO9q0Vyvg8bNFMJJ7eXdFlXmGl
9oakFiVr19me6Sm5GzYNuHzpFH3PmXd8i0mTGlXo46DDK3DqvBrdiLJLE5Fw
40h07RrCtQeb2trVoaWIz0lWi+2d5yGzfThi1/dDylBB0bdNB5ntXnMWUif/
U3NNfRuLkN5osEnXz/6uRNEJPxbj1C0mm9S/rlLN0LyH30Sg/licUfOdL+78
c3eqq24w14SaccffauTx52L06cDTq0owqT0Swb+qZR2Swjm498f9a99wZQyX
e6AbdarYlZtwrnwjtSk66nP6aDvwh1khdPp+PFLbOmu+hdFs5p3TFjyCYxeY
uvZiy1SiV89tj7aFnu47eCe6ap+8G+5G3LeZ4jbOe7yGFAlFg9obN1Xf14xm
Y3m7YM9WvE2WDdUsnk6dgJxutj2SWxBGXLCT/IaW8hyBCl0wDOeLj32jVeP4
t6DdQjfR43XDMy00DtAE0Mti1HyWxzi4aM3zYs/o6XM1R1wAw/K4TFzOmZgs
J0nVrNCra+5AcM1LiG8VRPnjHHQIZ+FCsa23ihXbj2CjQnxGLOrlvwr5vqNw
A2YIrBssl/U2VlmL8YUW489+NIwjT2lCQuctSJz/EK5vvgdvlbUhN89sZ+Vy
Qmpl8roHLF+NnNztWFppdlLqAJrK2lhfrC9ihdJw/0XmHMlivoZnA1c+AjxZ
861mzGNaYnSvoG3nwWcte5b9bG91RRgScx1OuUcxJ8ajVO6lP8arhSfC0bzZ
htcRUzMGMd91w9TX7kCnUJY+xVI/vmn6f0YA6jLbWJkuVaFbF67q89ek9h22
5VwkkMoQ5/bYJx7ByDFhTWLff7/p1UEdi5mmsl6bulJZ5M474fJn//43MGat
yaExtPb3p6pxWWspEpo8mVl1Ar3Ol3l3ljzByfIER8rzYnWjC6Qxeaew2qHT
qJd8Q+ve/s47DIiGZCF7GPtYSAOl8Jd4qU/82heBc8iuUnz8gyFwDjmKr9XL
qCzHBzoFwxpzkSnomF2MrzK/wrip3LTZlFM0qOR08bhBmUdZqpCEaVtmI8gH
ofyFA6pM5xFmkG8nJsFkENJ1tnD5M85GtMF1yj2BERXu+YwH0hLRDJB4w9V2
N+52aReCpSbLG4uETiLKbO59IYVa0bJ4sdG6bPYqe+lqOHwocM9DhhaZwAag
6Sb2yU831v+8QwubSrnK//oyeb1s36/pU2yIlPvZDi12o5poYGqu+Z5q+bwq
gjHI4IVxfYvA8eVvyBg/g+PlcxOqS9U6qgSl/CFA5BBxeBzrkHaLecuM9aOQ
veVAfZ1YgMPtKkE5zPyZr/F3jsbNGAJzPVy8aeoEmyAXnywNPYlBTPyTdUHg
61QVybxlmJau/HPyZ7m2pX5TCUosvyMYpugRyU1k9FD2hVbfbWx0PKwSgd/5
jTiHfky0Bp4jhbI8f6j2ustl9N4QgJP163j7tDvEmcS5O2BUtRgRZnxDpo1L
NYQQiWhb39cXZPyFeLu+GoaTxo6Nrl/xOU4MHvNJ8V8uIukKS0iFcI4gswXW
LDqgN9CukcGCF1IsxZR/xtk2m0T2/PdQQe7Jth7FdXySB2cwXoK+OEieJ/ez
Snuny0xSwb/L36L4ZpD6SUo9zmqfhKRvRyDQIRHJK5N1c09d1A+BwBgkJaUj
eAbFT+T712RgwLQLEN8cj+x1pyBx9Y2ITesg19VBK351TdQuR3G+qe7la02V
pTjslE2I35KBkSOvR0Ymm3iH8dLTddrJiXTC9ys/QdIRpuI3Pn8hMr4Zgvvv
uEqWUbk+hYqiEo2rXl14ALxLY/DY/95Bia34RUsV+nhzZW/vibhpMkqtyZhU
PQ0BmQkpP3aDFxZ49sTN6PX6UfAqstH9ny1ITshFILQYQwUDJ1eU4sbmFgwf
Los3VIpTZwEjp36H2AHrcdkbN/vW9udx8OE/o3SvWydg6qtcJJY3Y/Z1VX4q
bu84+OGvN+GELb8cBzfldeXYLJ+iWAWzvFdqF8n1av3e2dCEIUNNs5hQqFHm
5VzZiA5Tk8uOiJm9W1T6E0pNKIqIrZsK2ke0SWRf9S/Fn/Nza8w0cP/mFHgd
r8fb2c85ztXJhAatNBMaDKOzZJR7B2GjuIIumR1dWWgOw7PiHk8E5OZ2TKT2
xDMV70eKieutWrg8NfMlpIKzTUiOPVsDFXBkwZ6qZxkrPz2lHjHvhIjIHBHP
hkzIMg3tOE7MnkyOXIGi03CKYMhU9NpZiLimLui+/jJ0vOhTHNoyFaZob7CP
qKPVJOusr1hiydCe+K+jBRUQQdG/pcdOb/merbno8HCzViB98onJqHJLpWd+
e8vDaArtcJVGJAgdKKc5omGRmL2PzcwLqV6rb0PJ57/6alMpweKmLVvc7waI
4wN5Tm/qPmKbyGl3Lf6bBx8+DSj3hGoLuviw6dDzYBCA+wx39kPXzsNR+Y1I
67QTBxQ/gne31irg43lPU5uz0a6MOg275vmupMqbWb+0pyXWRR/7V/u3Yk36
LkrtUju1e89WZE9ai9QXT8ct7bf6RAQ2hSI9kcfy5WY8XnnFR3HsJzlnvXnq
ZD2Tfbz0+1wffU5Qz62/8sv6yHbk6XONRKpLTHNMF0eNekkP4kZmA0iMpBLL
XXe1YHH73u3Mq30h1P0ROPNgCZxbKjD7pn05ckWq9+4QEcEp3dybb4ZnaICp
vtSyayPBg+uVuzhgeFvEdgwbvYJXHIzjxs38Lf2oTdhkVnu6Lr1krVcq0DQl
8QBzDXzuxBPMy3XRMH+spkftWd3mxxgYM7D8l6me7uorQHIgWKN95fnGB8ns
DL8Z1d5tWzZa2W1xg5XnwVKwpp+/5sNC265F/+W4EdHfG92Ivbu3E+NapmB0
zUr9vtjCSoVFjIkRhjEuxqXAGBiJq1xCHFCuajbgPb3kI1z9yGd6rzTHjP9t
Uxpzq4U/aVr/QhDA83E8uOIJmpl1dhwbfo6Qi0tQlqOFrrE6xTnsVC5wOoeM
JvExcLgZiyR9yKWB+V3MJPOxkCUr5/eUaiWfJjRjXJAIg6QIPnF5hG4+0T3l
E0cUzoHdf3KisNP+48BhvwLEUf5oiLkvCCzzA2K8DKI+9w38P5PhRrxzL5yU
rAxQh5E40RjwVklw+UMkmKXaQwHXIJNBTfd2bi3p7G4sA1imGwBfPQcrXXrm
t+nFGUD5B/ySaIo5KsWYHole7aPhDRGj95KHoz6bj5jJQxSyxSeOROdLOsNr
lMv4PhYHeDMR0xBA4taDcc6XLyGr6xQEzh6sBkXPHg5jzUtLtASXR1lZGNkd
izB22WwEBx2FAwW2/GlxAyZ4eThWBVTq0ZHu/rCLkPPBxQKpwrgmfDG653kY
VvBXnfuVRXk45973kZ7MEtxMpOcn/awrU+HWKxHzeicziDXy3yoyrLPQ+6V5
8vdIxN0Sj9zLn0OwoQjDbjsCMQKhyOnr2jWMThuKkCCLL1sg1MJr2hA/fC1y
F/0Hxot3afG9o7MRCLV8hZEtyZpbi0kteVjS/MvR2bS5wIbvf03ip8YnJUCv
pMGXTrr63WXa4OBvT4YU3DD63EVmVT85Fydk11fPQNr2rrqmWgUJ2R3fUbQo
k8FfcSkS68vu6UMo7uD0vBjqF7TmglC0Ekzl0f+lI1am4gw2y3KSOjb0v7hQ
GR1jMsIcLVG6VrXqHdf79MgWXRp8YNxrUwQlkv5CV5udmRzE4nlJR2Tou1hD
unU2rEX9o0b57yT9NHffJlm5N+MeNVRMGq+Xu3FQikkN5rUjXI99Uxfew3xt
+JjeJv5KeyJOeOkxZeCmtaqQtZy5F+7CEmwRYxQRq2zUqAPPSvrnpXIWYhQm
Ueh/Hv1dPnLPqEN6OAcny4I48cQIHiJ2ITKlz0tLRr1QB3bpPzAQRcNIkjel
MN3vWC5J/MCJQBzd2OiUknqon8uEjNMAYPKDsI1Plh4gATRnAWPt/JsH7yW7
7igcPbsJgU6bsPDWH3Bly81+gtd0hR+j72PyhhEqgbdRZLoIedpY4kx96p99
FVZlaeIbkug+MmXP6nszUcT7psjXyINa2QZAD+rIseZTfBI/8Efl1lsa83Cb
AEq2U9u5s05VKbK2FWsSkMj+RXma8+S6rsHR9Bx9S12nCiTRsZlkfe3c9U0a
Iuswtx7HlzZr4a+btzaDHAFDnDgGDFX7JKGf8xSbYHiKl/ynynYfqpH3exoC
I9SsQYsPhi64wEgDb90K7yC70uhRkKNvpFXMuheY4tYnaRLc5rlNyqrLsi9z
orCyletzJVY6CTO+RO+euRdu5NyoeWI+d65+Js6IkTh2LEjge8UCuGEjdqAh
gI+FhuOHr4ARss2NGWc0CU4SfMJtb5mFnns3WfHjihYb5ZREAp37eq1B1pNr
kly2jyYrNGTH5+zGc2LXCkt3YFj1QkHB9yLWC2F0y0U4VM43t/Y5fFj/DdaH
2h0moLoCaZf8V6IdHTpnf7LpBcIKW1qib2I0iB4rHwf9Ra5ARpkEizqqP7lu
zG5GTmmawdIBYcBKnsMBdq3SHvJZEEHQN+EaH2Z/x6QSrTBBkS3e8CcIy7bG
2U4MEWW0vdtq7Ln2utnXeCdEKA/jYb95Om0NgZQ7E//PtezilnugmCR13fdM
6R0tAHqgrVLRRkm+HrOL9/S1IqEBn592kZqhzTJadLtmaYlIGL9dboTm/ar/
a7mRasuuWdqyHfHhZCQd2gveYjGOF5Qh+fnhCKQHcOHll2PCJWOQsE3O0n48
4ota4M2uRZepYlvDc5A86h25qyb0GWjmbeHfZa4XhnGw9wiO9NQDxiFjdiIp
Va5pQqpgozYVZRsiKPKgCeLDfVyNIV4dxuW1IW2p/D1uNVbIc1sYfhKZ8vmH
6rfioxeABPl52AnAm80b1Xw/LQ4Ked1k6axYB/Tp0i4/r4X3wxLE9mhG7FtL
EfSa0Xfat3pdx7/1ZyS+moeEnHpkhOReQndpkoA1Cq+/WY8AX9tdhqRhHyHl
45sEb7fBdMdlNjQUHW/cIE/qyf+aeGN/wet3rijHP3ZG4o0uWkpa8yWXwM5p
YG8NnWqFq01+cpwNaE69/w0EvzgQh2yZKntcvuxXYzXl+WcbU3r2WaOc8WHr
KvUFe6lX96QV7TCxUsb9uTa528uO4uspMVLL2k2nEEAnkSuNQZmP8JFZryeo
V0JTymXOaqnt4oIaokyZbO/l6t4aeiQZXt/IBRjp2xgL1QfJhuo4XZ5GRhPt
puteM/nmGsXpNXbYOO8nYYHABJvUVu+LHhvbPNLbetUW/5LJe6YY7DJNIvxy
VnuVbPqp7SnwWsWotMxB54NW6++y0VW8jgNl6x4lXsho29rSZKtInGU443Ix
DHSG5+++FHl3VCGh4zZMvapS6bl/Fw9n/PjIY6V7RCYGKxCIAxk0d8NOIOjk
Xq5vvwF/f3KbNjCkwtlnn8HJ9NKuxasiWFC/luayWMFwkbIvXAc8+QgyT38V
XucmFC/ejeDWDKVfk53hVIL52JwIKDEFrbWLz4vXZvVZ4rQptVNs5k7w1VeR
+n6GuSaEcxGzdjAqws/puVjSzUXT1uaLSQ+ZYHyAgeEi9F28UZ6j4Hn5ef7n
tFuLVT2WFzFUxvoumVV5vgPKbahC/m1aTjAEdrf4rMOuqkDqN8tV1+2DkHoX
+y+VyFLqR64SBRutc5GnzoXjsBmlNaPNMPTtUpzXEuGwtcgnCuRhlegjj8Rj
WAB/jmnbbCFIgmYxWCJowyDqYpCtxWyHwyHcH1mlQywimMR5/nwoXEsChm1k
o4MiiM5K98tSUMq5w4fuOhMwc0ykQeDP17m++ABfwAv+ZTJ1QQ48/2W6I4zU
VOjTTxvOWmqysciniwla8Zj5uXy5iczs3e6ERCqtn6037ysth3ZWZ4vgfb2G
qHYnPErFCi+ubdY04vna7uR19Gt5BMGcWhzWcg8OzW1FQe0LqKw0fUoY56+V
8xWVyY5RoO1K/FDFI4/AdXX3IyUE6vPVCemgK50Rbrf2WD9AwMYgKME8ebKO
Lc4YA5NTQKRyhY+OYJ8gm5EbinC6hBWjP/QouY7FSRlqP+IaghOvkDgl/pP/
GIgp6FvJJXpOHY9sCRup83EG/Q+WqCBqpjEolGjLrK1ghsEZGfLch6qlirOZ
pckYbCuku/iE9S4yS4ysvrGryVbOTMyIgRlBRbQsNKhRoB6K6Go22Dpod+yt
izHrd9HFuFl+M+XtahmefKQcBXT83wSMnCPoZY6H9LOfhrdZrjjo4ZbHb8Eh
hx+CwNNyb5tuRUzsTngbYhC/9iGkhEcgplBuZ2YpJk7fjT7yIMcedqU8Avne
ie9o6JRUADYeCQY2wet3Okb3a8Vjpm299gcsrd2G87oIKrm4BJMLB6sfVmJb
KsxrKMPYXRPQZ8gOzOmhSV89uEY531pq23DkzUaQ7NBMCnROgPd6vfxdK9dY
ih7XP4Sk51/UeZ3VO4SM7dkYPONheMVyzeHF6JilnWFU6DtYXC6v3Qpv6mt4
cce5thYxLaq/g7GEl30plq+lEL1/2H9ozjmZFLigAf/mGzfHO6upJJuLxZHs
FsxSIgpg1G76WiczZ9AwXyMvH5W7wlqGRBls6JMrky2jTM2eFeayECNFzRzj
HrRHNHecXvTI6BQTdtCm8XdLsdRXDuIGRhvXR9yKIkyT62q3199H16yrv3Gs
xx7yc09BErSHRvInX39HitwJ8nk6D6bY13jHLepXku6e5WeSXdL0B/zH6sJn
Cpo4T1z9Yr2nsG8Tuuri7LG7D5LfOBGJP/ZA/PuHC9r1lJjPEHxPuZ50cYeY
TePRYP3YOwUnxr5+DDoN/hH9j1uDSz6/RxDMwboumDyUMfWhGakXzGkxWsX6
oIjUZRyWVm1ExktzEPdjN1z5+YPKSDVp604K41ys1JEIGHSgazZp9UXa3YFb
VnzJdRi/LVefhdum+BxYmc6DKb0H8ICLsfBtLJB3IgEMMDt2F6nyFH1gW0Kn
YSwOeaL9NYvXhl2+XPHbIe2HInHyChKwzc10V5EXRiO+bCvB7JomjXDwYGvh
996DuvIkS/MYIEZ4sk7xGjVCSzUkYKbgea0FmL6oFsnLa3H6LLbgbtRAYJ1v
pPj4fpk/JK/7gpGsu2NoYft2+LqVTCFx4coiiZQoRhXQ+UX5EUmXCJMlDJuR
3fOz7n3pdrhC0ZFmWDGeFjuaCbopMAHDZ+tq7Rj0i+xxQSVq0JQzhi7z24U4
WDLHqcAMkcBMN5tctRv3C0LKG3CDF6vZ2BQNnhORcHviiiOsZHyUZ3dsdoZG
IszXJE3ps/85QRHrOilZ8eijwDaxVCWFZvc2O3W23r2KGVpEURtFr6ktNrSZ
fb3GXZwQmKGAGTgfWYIoEmqP0tE5jYiiYA3WhL91uR+nE8fc2WSTEvNcCYbL
bRMROxkzmd1OcJ9qFdz7mT6jrSAbmpCNLtHX+NrBNsaFrB6h5+q9afoI5Wni
KJfIckYHHSi6wfQwY0my1A+0F8PQIvnYnPDk2JGnLd6Bmy/8lY0m2gKDWH2q
/AYBI35rbkZMGTmNnmtk6zB7hwh6MBeTqovbaEEG5Pknqq2iV0Z8cICMqGtb
QhcwFalmG0rcQxuV4QpOQ47iSpk0suU4x/bn1W+n/y66Cn22VCDx5CrxxUu1
hUbikmsRrO8Pb6Mgge/HI26bmNPv49D17juRltYDsX8PwvvyOcR1bUTMyjjE
Lh+Ly5smwit/F90/6YXbKj7HvJkWBS9o0RYcVKhin5wHHwTS2Bh5xXMYXhTW
Oeja+VLOm0pEf3x5C2pW7lCK18vNptXZ5p/akblsHgasK8C9kfykku64gi9d
2YCMvqqFiNvEfC4qC+GY2s8ULSTWD0XCwQYBe/0asGoVcOBf7kPMa8cgGAxh
8hSDYigbyeBBMGUn4sZ/hO7nvejA7pdfmlphll0TJMsp9hltdilURpkvvRRR
szhVC+dYEn7NDWHc0nab32WL844RdaJZdsa75dZ2inVFyzszKE3fhBhc9n0f
EzBYxoBdUNV6EhQXuCayDM+S8EarIjjAlwDhgqGTy6SA2D/XoIKhQkIA8tps
70w5oe05Hiuo5VzVkcnFUBtL66iT9nzZJf8m/5Vq+5wCLeoh4iArEcDP8oOz
sVBl5ag7xFVxPirN7tdFAVL55ucw4NQPkVV9PLw2+YK2gC4qxlAul0XDzAzL
QH4Uk1Ha6mF4RTNi+q3H+S++qN72/bhKbMFknfqkaSYl2TruFKXZcPWQwHHr
qpcx5eh2bYJHFQY63eSaMPDMAkFT052hPgydD2JS7gE0a4GtaYi9+nbEd23G
rX/ahcbtm9Xa09wRz/A8fKTiPzqLQftEGBKZIUYGjqfMsHf0Fb6yxjxem6X8
9a+ySw+AShj985/aNMUMVDftCHTllYaCcuvGRxH4qje6r5ymaI8HUxcHmdZ8
OglJ/WCQi+CAp6at5105N2itPL8cmxh7ss2C41ic+loTHmtVm2QfeZo85Ggp
iv2zT8JqWjRF4e/5XHbDhpk1YV7rrEjHta/m4Zze/BLgDtnKyhuUmGac6JVW
LTbf6PVWWOxO88EOAUtLVJnWb3vLFguFyyPnDttz18tWWbvU/FxYFgnx89ZK
8mSLLDKvFeeY7ZSCeWyO9Ll8f478fnkFKITm5N4IAogJuXydth+TScThTviH
xFvuSNz1ZSJk2SvkrCYW5JQkoYAHAQFz8FyPtBDM5TkdBYbzOFWZmyOkHW9J
4jxYQMQlTUtCwsOP+HGQnU5r1ph+jpR4Jn+H80G8FmMQupsxt9QO/o8FYkvl
HvPlXtl4ZVPzNkzP34LTKurRO+9r9Aj1VStBME8EW1bzBSbbbhxFBVBqfXXj
HjrKfl0bG3gPHRp5JpyCzCpy1+euR5qIjIobN6ZFyCAhLy2qQoLwgYInHB8u
UeKBTDvLKB7FZUpSR7o9Tb1mevPU5REQ5lIhBCyk5RKV8OnQsroxYz0p0X83
jaNBl/C7eNetaAYeCV4QhR9I1La90H38wCfF5kSIwg+uOREi+CHNXmioRSw6
M/aNTdxSzKilqkHl8x8tc4OAki6JCfzGgs1dk7S0mBQsxqUTHKxwLxtQEVTI
yqiWZfC5oIStsd9jXe8NM36vIvsG21ZxlZijJxv/g9iK/ghekYDYz7rgxPrL
EffHTHgLzxO4IJtDWRDxX98vvth3CL7cEYHp5QiEhyOmMKyN07yYdhW0jA8a
s0qIwQDvhRfKVO9m5t7ND7YiY8fNON4z/77qKahGMs1hkX1tXNWfNaBHf2Hc
aIEQl7QJJL0cI2Ttjyho91N+J353EQLVdeg0vlk9NaYEq+Qzz9Q1mqDEZjE+
3k54F9+D1L88gl5yLV177kbKD30QmLBC+zZ07WpGmFAokP0dDq76I+G9m9hM
+pJgz8oCEhIZW4jWEmmxCgwuYbYvbZJvv41IPztlumhXiNFe+q1/fPoDXRDE
D7Jf+eFUblQ5u8YiduUheLGxxoUCmRbgmqNrS9QS6TLRQd1zhkW57mgVuKIZ
B+fexvc22xQaoQxlRIiyXacKB0tI8GJIlitDbKGTEOCy5R7lOGVc8k45hBCZ
lAzuuPQqnB/FRAxNIM3mNQIIdsAI1dM5kXXsRwa4iCl0y/cS6NNkmBHL0suh
S0FHc/x42aQeXKSRiWB7nN4eqQrknF0QKkTioiVIygzhxlvC6LtzsKqlEOHT
exT/w38yURqDnvPpKb86ec63gqU3odvfbsKT4Qpehys1cYxTjspqrDZQspNS
Y3j3HLDnPl6Hk2bsgld4F4ItGUhvzTRN8eQPvR6Gz1kvwpgr79II8Gh7AR1F
MaZuQAimnSo/wdx6rPdDJZxW3ETI8aCU7H//66RvslWk8vnnzfRiZdCIsTsx
5ZU7NWTC4tzFjzS6yL6GxKi486mg1IEmtaIuIIlDnHqjjSSjghjqYdLxZa7k
zTfh+gtHp50duKB8JvWQgEgikGkW1jIuWBAJXLDlT26x+dr2LcAc8VPGy8Ls
Pda81tLs3puCwlwo36qQEXcbti2Wn5e7EG6jAQZhf/XF6fO0w6sR/1qfbpyK
2lIBGEZ5UH9HKPVAcRuySp7D+todqG2J9IKSaRdvb5ABeFaQsHTDokhdiQI4
/WQ/BW+ixH5coIJxND4EPn951gEuFdmFuZCIK7iLq1SyGVrdzScojfUEbn5+
vZP8YQkK37oJm5yPE11RFMkV+VUjNhmQoK+t+yGsHF8W9ncbG8JFS0IU5bRK
1ym6lF6ViXpd8wMyPU/RKzQYYxoWNN8pc+MJTUZwifqVSlGxoY72uygDxhlD
FOBmMif8f/Aff6xIluCWT9Qt+MNhDRYEMErD5SZbtJtsLDbnjgV1CMxbGTZi
oIc7vrhbDk8QzDhYwuBCpCQnXgXWyY9mBIAETkL/JVjiDDnPRgcFcHr9scrC
IKJjwHKYfY2ntT1N/TEnf46rFfvAE43V2k+vcGkNH4sZpTTFncQTR/rJjiQN
tLp66DQrz0S3hiYkCQnWK0i1qQ7HlPPUZTIJ5bwoiuBeNdKESP9va6RtC0Ic
n7cbsZ8I8umShKwvsxQ9pkxPQYdHu8lYHSygIgbdNi3X2ELiRf9C5xPZi/wE
Afrt2rrikHmbcMRJcp7JZh2OOBxYfBFMGejROOo0Y5X6L9ysIjp9xHdJ7Wg2
7ECM+Qj78qYN+R5xm7qic4/dKsd33BnA1deF0W2wbCXLz8eT/2zFHXIub9BW
BN6rQ+b1T2NTrRFkoBl4vETsxqwqeK2Cp+YLvkjejZgbn8Dj73+um/vIP5cj
/t2JSukgG40tJLzknUrXyOjfiovFrE0TD/xx+S+J+hGCh/72NyMEHi0WUVFg
rpmyfyVO5kN+QdNXvtRg+pA1Z7y2Y88UfDVnD7EIz6lFOFoIu+FVFpvzXnSF
YB5ZNr2H7EJH7yf0Xr4CMwq/4zxxoZU5+e044RkjNs5pzES5U/+mP+UoT0yu
M3/IyCT/TUoUm564RiPk4PPzXPKcKwwa8uBqI6+Cn2H8nybE7KOZugfStPJ3
nCk0G4TrsRrBC6gZIkYiamaWj7aBpFK+nzb1DJzhuYITml4uGJot6rDRO+f7
xWvwEYeLRHLBEI2LIbG/y/Lfz/gMw97cKBMaBsLbHUT/3YM0N3p+zf3o1X83
jju1BVO/OluvjxiA98Xz0YkcjuG+aaDMXb0hNfljShPpSJA33mgQCZERwy+8
LoEce5A+XWkSx5A52yR7vQzLdProaATyXkC37u3aLbf3jsFK6iK466SV5UZb
mmNKc0vTxU2GEQge1GQT188mQBJ1G6CJ4zPMW30tTjlzi5pzNg+W+zD+XHcN
jHNj/8EwU3DmmWZnYVMipqiIOeO3ZeLoD6/WfzNqx/dSEt9VKzsS/91bHsbB
f31EHWOGg26/XZv+2mZ3sSqsyjxMZAhjMXWqEWD917/c7E9QMcxxFxo+B9H9
ENvK+Y/Xu5hPgqbrK9eZ1eMwBF9j8YV7ZCW5qsxu/2X/HzKfqWyCP939IoyW
yGpeJTtsVsmzMjkvwNn55vuX1lqQFFA6X5zGslzD26Va/3Wq51r2EQAScXMe
yOAYGNFXS80Y8TaFYmPVU+eyIOB2NbPkdPKYKUiVQe508UvP02gQ55/RspuM
W5X3THf+a4GwLkitVU6q07VUo0lukwgpba7S+QLAr+vZkqVnyitqbdmPYemV
6cUvlYsxyrbXh+vwULVr7xaHfmuq8OynpXLRpXIGsvRq7C6aohaEWJ5OIsEE
SZpc5dzPGEdjppIuUHQdCTWtY56Zicz2jppsIJR2AIRTkllBZiQFmCTbl/kV
DBARhIhD5spnyYsgODYW6+frklEKkp8dCqEd5GAS4jh7199OX8JH2gnaUPoF
nAfiqbh5xtyKQxIj7Gu8eZo7ipcPt6/xPUQdiEIhXHNkueHnKERzEwKUq8V9
DYXC7ttYnhEKm766qfb/NMJEIKZoYb6KwLquga7XO4PdxCR9MMRpCvPlrjav
zrfz3xyb8ThITpOj1KWgtX+/vag3WwvVujdVahA2d+tkBOICyGzM1MtJvCQR
XaecheSpp8KrCiKu4RbE9xRYkNyC5FemI7HhWsTFPYSk3PG4OnQjXn7Z9N9Y
sMDM3XeeFogvC2/lpzaDexSWiC1I/t90fN283fQ3bTH18H9+F1j/lZht7uT/
ORZ9bvyH0nXuvdf0p50sayPj2XnoXTUHndN1FqDDLV/Au6Ycsce9poFfRh4G
HyggZ3sSvGZZoa2yIktvwMh/3YRh1Wcrgsnq0op42XKSTnwDZ58tyKZDK7xX
nsCQgS3I7mn7hMjeOYSkU3HTdrTvu/Y/SvYUywoMXWm5/F1go7FVRUCR/Xm1
OGmsZSadwtb+O3+JusO5JeZtJfKrR1bJV/fjzNqMrG/vwSV1j6K1qQ050d2B
EzXXTQvMjY1LzXUbsTL7cXYtME/CHD8jCzRixBPi1ZvtOFkpSVxGnEbkFTl6
A+v1GRjgdvkBPnCdFYk2XHiE8QjORMbfiGq41dCi0kRyKQ3SyvUUdSMOwkG+
HCFhOb1020kuwKCkixNwR6VDw0gzUQJdj4/wkdmROmqCiCEHtZoy9Ide+j5i
dsXD+2gkBl3wBlJXHIMuod4amqDxYAUKo4g0QbxDbrzitrjFzPludB4jCQue
dvFiA3VZMMrUvbty5nadwKL4Tg4+/GS7/GUqBeQm7YBirrgTPvjAUDG97EZk
373YD1ExrEFHk5+l48mkOi0CKXl8VKy/4R5E88WDW9gf8IcUO06vvipzZupu
pHbbiqTbijGj+Vw+acO8TND4s4s68CCBiTWnK1c6S5aOUSd8jRO/OwcdWzsj
/cY7leXJLnJsa0jvNv79I3DWOW2I77ADI09do/LOgkh627E75BA48RGbIkxT
cRISOghaBFxg/XrTl2KIbBeJmSaw8plc2rEykxNkStX6hciJvgjbhyvN3y4B
wz4rAgCc0BGzHS4pShtWW2u945BB7hTdLsyTn4sMlTC6iDPPSC6aptTy+orq
rYLkV4n5nI8nar7wXKqDUJnRCMI5W+mo60Emt4XUQYXoXG3cC2S1GZfzAM1N
OePNqBPj6izbcQ3YmVvkMRZD9F0TxDK/imeUTFquO/ZSjfFdJehxMW6X34/E
4fKZatW9YW7bZF7q1aY7VldUfxg7LnuolnaLVi21RyiqSqzUZ7aY9q5Gxugv
8nPa5BYMD3k4tq5eU2pULV0qiIZf3KQRb819OWOyN4IglufyY26WC4RxOfFl
XPKBM47eP+c+EUHm9fdg9fqtDqURrStDWv7IEnFkL37KKYLQFInF8is1uOYZ
5RGAZ0tj43TNu65LDGkyzuBYFWzHwfYgRHpv4+1+dgIwH0PkQyzPKCvzz9wL
I0p+sZqI4oJnUsaBCNpZIiX+y4GIKBzqf5aVvYyUYG8Qwf+3oEw2mJxCce4K
8lAowDbcsEy1LvJLBDmWFsrfr4sXKoAwp0i80LCFtal6yRbX6JGl7Ydi1H1y
ei/EpOxLm46EoM2fjJQ1HSmFjVXzMxZDlRNY6kS3flsJrAEU3TWq2bGyBLc1
N6lEYFxaHAJfBXBJ+6VIyj8EsT1mIfbCl+E1psL7bAk6ycoNXPMwYr/gnTZj
7nkbkJjRhORTN6kxGDORZR9im14R48J8RhcnWTVYyb6fyYpOGLAdR5+9Gz3H
QSlpzXINJ00GTrhYPB4x9EMueR1Ddt3li0F+Ln4/v7fT6HakztiKuPEbULm2
HeeOpaHZhO7NU/HC9cYYDR7K1S1uyfuP6fV5D65A7xlrEGzJRO/DvtL3ZFzw
JLzqgxGIbUfMAwLJz37XXmO2VtYN7m/OFS973cwZQC/5eSSvz/ZtPVYeXKUY
UNrurwQFvWepS8zPVtqAE0Orng3rsvaDSIWHLWX322HXRKK/58hEzBAPp2wR
v6YeG2lJys1XFlZEqBx0Nkmhe/xxZ5M7KHbg2mXwizwLHoz+EW8zeUvsTT+W
PjLZVdy8uHEJ/rZeQLKeg9ieCV/GC5hRcBxpWkcGzmV9mdWdrnRC5lYMLyNB
YS6jhi4HzKVDk0LbSzo4wYcsS4d2+HHGcJ3GJQGDfJsjZ/FCaTcIY2griO55
ETyrICGnL0eEwpfpt/NgLCFlzrOCQH5EoPh6fPFdi1b1E51wcZEFQhDFe+GF
s7iUMN6BKQKA55/301/MqjGQT/RGP/2LLyI0Tg4NkzIccg4xQyd+0F3+MLjq
XJ6IOYrXJAAbqZNlQLzcb+eBzKa4zZ7RJZoHd9DgkaN3pbgzNAv8Ol45h5j6
SUSJYsVdQcHeJe2shP3HPwzPgREFEpDJf+S4cr0TDnIQPsbH1rJ11ozJvHnm
89/8ZOhSROzsIM3y+O1tphsz5RjvqfwUXd6bpi7o0OIncMGF7Rg0ajviB2zU
usLDmvL49L0+dvIyz+nKOp1yNgNLxDMkcB92mMnoENCVMB4p11wmeKb8jybc
cbMAE7b+IGKoq3C2JQFlNvIQHcko2yOS0V3TI3lGBs3nXmh2JOSnRvRgSoU8
DYdICHhy8sVOhQwfI7/cfBe5BXNLWpBadYFmFwUh+lUzhMUkYnD/4yPiQfRI
qCEzx4ET7k1cBVw0a7HWWOWe+mCNkH2sX6fM9Jmh7/XT3ZRHpkyUdJn+vQU1
k1NgWC4mqD1J28x5WuWSaMsSGXrYaHojyU3X2PLAZrfbRVh6Dinuq7ttRAHI
/Y7TLVIP0KKA5Pnvm/fRharJMvz4upO1StZdmyQEssm5C+8LjcjtDbFjy7cT
vXPhc2Ezf8LVSKD73/9ajBPU2CbXOafmm3jT5UoYjmB+jy8/i2ddtQnjI4Q3
xq6Yt9Zaj5yb6Ft4a6B9mc+WxoSXKpfV1y5sbuLEIPSYeDBAtQqrXHSBJ3Lw
wmVPaIrp8dAPcdCEKIcXgygYEv3aHjAk1TyP3Fx1zbWzsJerzcerxUH1igz+
rquswjeyI+WW1JjbTfNJxO6gDeCDcdLDRCH03wgx+HM2utuMS7yS+EzZa9Av
QRmCoX5wUNNwLXvcwL5f86X9bCFad81u0y95drkxYu/u+hDBXhnw3opB2mnr
Zct8CEkDD0aXx6chMSUJmUvLEeyyEYkf9YH3zFLEeGH8tep9dOklm2OwFUny
NZebxmxKDz5rnvv+GSicBKwNm4DnjRvexsjm6bZGxI7JBqCv/G7YcEPvHiFL
6umGD/YQBpwm2/qg0dswbvdhagIYIehRvBwDcBamjNiFLLE6caSDeJ8j8MxD
8GpORsLDyxGU6+zxnz9g7IpLNQaTe1Q7vP8Nw6AXL0P8S9P1te5iBidMBK4X
aJMSr3AXg0cBDzwA3CCm5+i5xkz27AocdwJw+OHGzHeXfwfEhMXIOWLl7x59
DftugvzXeYhJXlPd4+LLjczRPHmt7zHA2bLBDZTZ9Zxgkq8EQkxcZFh9HcX0
P8hMoBW+Zy7A1W7VV6sl9APD3GoOMcX5nmuFw0nPpcq8AFc1yUP0zyOyeka5
jBslvQhunJHoZLI6dNztuGBJxyJpg2ubUUxOVyaO5TXXTZjWgFbWtYzrYvth
0Y8/ReXAuujlMGZCW8p6rYgSVLSOvnHPXhY4RU+F5+NapRRmu1+2kqTUOgpr
u4Owy5XFcErQwzG32VnjmXPa8/HII2F0nRHCzDNblCwZ831XdHjrVIUvPCjG
zW2BrgzZ3hw2wjeuRAZqSZInf0Gmgt/e+UWZ5lS/Z4/b99+Ho6pzZJl1Z4yH
UVYxI/7t0qlicT/t2z2fvaG0CcKS++4zwIEH8YYMm09iZHSXsMYdvLQrtdd0
jgDAdDEUvfQyD9boJ12dDH+74obj2m/kaXa1BFfvLsX8f8hwXFgF4yvI5BoC
1/La6f1zVP+s9cwZ8uwY9S+KCrDzPUVy+qZf1Puf/4brB8CCrHxkXdbkl8Ff
vqsIvc42t8QkFHOqJ577rVhY2d9PeQ2nvP435LcbPgedST7VPnbSUxt/0CDY
52BmIWN9VHIjdqI0K5mzDLiG7eQKCxYpKjU/M9gya1YEzLMlGaMiTc7SuCJL
C2yU/vG5+EbLItIQLLWoC0eCNI7uUROFaah0Sr9EME2inR2kS7CuiouCayvS
uC7ot91irH82ZjuzzZIiUhMA+FwpeutcilwHcgpjzXtqHoKDzVXNKAPnRaaq
O8XqJkIvgwieuc2+Mg+JxFsFJBmqXp48lh2KhdcKiJqCheKvz1OEErKjskzf
5ymc8VV5423EJBJ6suqO5td99oFomlQ3vgpGCI5TqRGmLj1PAyiGbFil37in
uOM7+neZuCRrlXFerHraeTpIXLwGuV+pNbwswR9ux52NjriQuXoYCBDfy7eh
VEuqMKlvv+6HDpTmW+WPQHdHp6GrxwVKFLQGa1yBE00F2QhmxZq30lWh+SIo
FffEJWc4/LRKtFY0qMSwve040kIyPjvKKArrhYqxddfJfLPlbvn0Ui5TQiNC
fkcbod239XL+3s8ZsdGIDNoQz55tpiPiHVWaI4t8di/gk6dgR6NkOR5Kakwz
tgLTZVSvukVgfG5xdbL9mOsE5g4G4R3EdmCHTib/TuTebbjnXW2PqAj3fLT2
La3wvY0asVgFMgVKNG/YtJ/XDELP34ewR9Eewh6/JWU4+K06nPZRRNgj4Zmv
4d3fH94OD4lV56PXuhmIGR+Dq1qvQkxsDIaXPIru/b6B90M6vPc89HyqSf0n
CtHFDq3DiAPNxn7D/WYn2bEDzisttaENVsMUVbWjd8378tY2rZDhQSc5U6bf
a+vMv8linoqp5uPHaTltZnfVYdKtm2H5wpoGHF68RRZAPuIniZc5vAEFp/IK
NiLun7PhlZneOjMrPkNgUxbid6QjqdcPCo0Cl9wNb3eckhTzJpmrTpaJMXaY
+TlFpsdhv1TeXmesozL7ywz7dpHM4cfeN2KSf18AkoxxlLy/q7zntEJTbTNO
HLThk8weO6CLGnq/vD4Ya5gtgwXI5/RT+4dZZwDHyOI5VuDZoSeaYWJ5ByP0
DMlTdIRFlPL9vuUmL5nRDjojNCOMsdCUMFTrM9ENt4vWhguXDAZmXB27lvBh
ovbKHqSWh84RU+aEFAzRsDLerIdxigEMN9Xp8QWUgJUjZqWXDe4U4hpd1eIE
4GwcGcWZqtU+MxER0EZtapzLHgNi5xnIzbQb9jhZZ+3Ke41M+VliTnrJeVvx
P79TFKPnAtIFbc+QqWHIXffhE6Nl03YtAoseRyd/ypfi/PbZWtsWszUDaT+c
h4afIrJY3NmIGrmuyfCgl03rzJDU5JfvxKJbdxEqaS9MFgG89JLzRFIUZXIW
02bSvDqiI7NQI2/6F4Ib+mP4huPx8W5nuftrHozo1h2Efw4r8Xy85ufkGVwn
40SI+jecIU9opBIZUmSkaFAY9iUH+CHZD6l1Rzrjx+vDSiLPmFuJ3luWauup
Fs1CuC4ptJy0gyo/H7CXs1OsOXtLZdgWouTzRYr5968+nxoqRdUGoz6/oBiY
fW49Bn9aIV9hivlntYm/V9GMsjJTf9ZpSpiNkTSZRDVxomUafbr0Aix+qaMo
r935ha64gBWlp59u3kgPkV3+5Mlg9mz5iqNa0GGy4d+Q9CvvdadnUQnXE2nm
BoUlo9xyTpy7oshKXKelpVqZY2xDAdWbPH5zeaT43gxFhfkoU1UFDPyIGdnw
jSn6KamG40nQQeHUopcuG7sD5IynMtNKHHUkjnS3TEjAhImZouatjN0QiHPR
CrYyTIueWsHFecKdn9CKg8p9iq4If6ZnRRJqstIju4klYOioSENARHMHY5q8
2ge7BUd1kHfRD8i3Unwhq9xM7ynfCPk6/LQfaUfz6+yf9d1ptrzJap08xepN
/Jw36ba/GjFjV4rLdIjswQVyfRM1hEXtoMEySuSyMbzyJb7MsVdDB4aluUxi
EzYwotbsGq0aOtTdJvPnI1eaUIIVjtvreL2LNZmMI3MYiVQZVopIsMZq9twG
zr3u9v3MrTpPjpCKURqHm0hM4lfQlDALSWe2p71ickbI0mVUnMueCaQZmOFw
EzdA4j62XXC4idCLH+O/cqwFIvKNiEXCFyV0MmyGMa9ryqI848D+mqKp69bs
UnHV6ocZkbMY/f8eGKtEcFU5Wz6G65S6u+zLL1HHMo96QTJegVZk7YGxspR6
w4FxB+saeOVO0pJ3xuwD53aSNnE3TJmOlvLrCo9lrtugU7ot+A/rrC3yu53l
UDhrH68ZNfAGNJlBH6SC3jmIXt+/nlc9flceUubUahzhkDtDePjhMJ7bVYau
z8mGdm0Qp3x2tKI0r7unZNBAjwB6HvcQgoO+RMbuzvBeLUFwwWIkJnBMZV96
6R58tEF2/CUmmPPharvkcvycep01kNGlQDwowtBNHvKrxZGkOudD59o/4b/h
1UokzJBTHjgrogj476bNGFazBn2LX8dZP92A4JitGPjFNMyfxXP/iPi3KrQz
TGBbDh54+1PELbwHgeaO8JZcKbZzG5K2dEXfXYMQPO0ZHDTalDNdt9h8N6Uc
rr/e5kkyflbszwGkwayNlANhaV6Eb0PuTf7jhvLZ1GRHYbCj2+hBSo53MpAt
q7fPRJPZIUuBRZvUIGB5B5MZZHnecJ0piqTTzl2B8lRMJrCGWonQAfNz52nv
IuPZsxC7LR3d3pmJo5a8hvkL2nXzuub+BoxaNx2dt/XFTauWaZqGetZUTdm1
KyJJSn1nemGc32xPS4Uvh7tIAXGsVVbE8KDpIgZhGIf1fOa9HTVFlIwkLZvL
tJLbWbbnm6dM30FieoqUo5Mju8hswQXU9HMrmUGPpbDctQN04neQj1+HpxQp
MobbVaAHg9AmYvWJTy7jTsPX9m6FVKK+8ktiNA9SSaFSsVpd6t/HhA3jwIbn
TthniWwjZMDFh5IVMva7qF4V3XnQKTwLZ6lkgNwrL4MojOKKB1Seh+BJLyMz
e4fGCdvaLP8/XQ0ZE4Cd35kuaGIVuvfZpYX523fv1kHmYHPQaXV50HyKE+d2
JGpnp5ryUZVipe/GfMRFshtyANifeS5MnwL+CWrQOkl2y2wZVQaDCnDo3SFN
PDHa+t0Pyw1Hz461ZW2YvSLSQ3OxXA0TiowiTpATjZJ9ANi/Hvzx7VYPXsZ+
wqVNmHtHM865OuzLHiR+U6GxohkzZKraHprz62twQMj00DxCoKiR0jMNqut1
OpRG9dAc/LN+mY2K94rlG40Pavzjn/fQNHLMjrTqWrf+eg/Ns15ah0U7IjG1
4deFcfXGPBwh99J7TSH+0W6aIzQ0RPQJjjrKBJ6BiLAXvzYUaWBKXRTPL6+S
11ssAznZLjW6EoxNMHBF8ocRAmrSmcJgg8AjH2SSHWQjtH4FLlEF2cJ8v5zH
kToYe+ZM4s7EUjeWAXNl8ms4q5gyZSwmQXazUzBH/IITrGXIVOIXoytcWpNU
tM8Mm2sRsGfX+HWCmpbbMIGvLulz93+pfbxr3UFLRAkdpsJI0e2hakkZ6uUR
R/E61mHdaDvOHCHyBmmMGAChYyjrztWrkbZZVGQG2SFYriW+3QrqdrcvcxUy
eMUckty04yUwKM2dnRaxp30rk23k2vDa5K0ug8Z0PS+TwyteQg97ifRnWbVA
v5UWgxEi8SHdFzDSTlFF/stpz7P6nA/nR/xogVOO4cSZajV71Mlw8GFk6iNY
BiN2ZdjdBXhZXjERZNPM7bdJr7qY8+8jvbrccbMS/cVHg1ztRykb5c1a2rwX
RGuuXYYC2fAKCguQI5Aht2gZWlpqUJhXKA5aiWrAFyyt2xOidVCsS1fCCQ3x
b5cxcaWtXBtkbTi1cf5OXFwb/8r0FWJiLRXpSxkLEyitl/HI8/tpGHu4bB+v
1VibMFgpczn+b80Y/1qa+Yi2oZjwzjXiQhT6QjLf7gwh44RjENjsqef7ePuP
iImLwUG7D0Lw8ETEZjVqqdXA+16G94D8nCaGJshSq++R9FA1jjl3F3plG/C1
tC6aYzDCcAzkqLdu4d2lYcSVPINl7/ykW4eqd0dxDLhqR5E79MGFWuBcNGgv
eCPvW1ezC0mLHkXaNSsR6zUhu+VM9JoQki19J7wt+Yg9qBkx99Uj8eJnFcZ4
/5wJjzzatyfirLW3Yex1y+F9NgSXXdFmlb+VO4ru3ZVvHCHLRmsqQEUXfe5E
uSmY1xor6izw+gsWaOWIL17aVGNYm05TYWCOISsVHitgs9hmmwaSIKOIi+Rp
5hZodg9sHYa+uwdi4Te344X3mjRRxcKYe+4xFNbLLwfOPReYcOMbSN5wINLf
PQa9p6zVIaPIKKkmvB2GJJlbZJbquMs+Q+/aE9BhUz/Mfu6fmrF68knTLIZ0
axLAv/lGQ5h+pS3Vrph1YDKQTGeaCTI+6d7RzaPwtKMvkw/ktGo7i+1KsWWH
8TDKBXTtDBcvXXUZcvHzHjN5qDVfPdJvbTRLPzJKzblr+sGECINMQwVBMJb/
nuxsBI2Mvu+vtRGTIO8Jojta7Gdie7b4soPk0lKxFp/6Ykp/FJSn5QfbhiNQ
MxYHjQ8rY4epV8pk0poyQUNg2mfXAejw/UAknPMY+h39BXJCRqb7PbznOYxG
KQAC63792zHnoUp0C/fU8L+jXpGKSTfW9Tng3+JpOzoww5g0JpwVzCEyNkgA
eiZb5cmfMQaJadbnZcHRE2WLWtB+EWKfnIPg/3KR+uB3+Ot9bfJEm8RYFuuI
55j4l0+7qrTdf83aY7MtJxB7UNQQRkr/75M9nMXH3A7vUhWgX9atTyqrwqiw
XGX9W7L1ib96Twv63Spm/xmj1phcl4ebBPBQz+TSW6rFYpdqBHMmVsj8ukZg
9WiBzRnyvX/YX2dJe505VsAXCg1L947tGfKE0bkL2VvshF/rLPnpZzVICZWi
059MbO/yOwSXbTCdJVe2V2Lk6DBu3ZSDwTuqmQZ2cI2+5ahRJkhtiCtada2A
nDCUkSauFdKbZF34sIuEbNJ5gUihMmNiDGwzny8LwOXs+QA4ObgOnlDvIlV3
JzpSrvE1Y2Pc1UmxuRSXeq4lGefcYk0QTtH5HLJD5sIBezdEr0ehDSp02UNu
0+xKv9wR/Xl8q44dzQYDvURAvD4GiBn0sJBrrJ2PBKIEn0RlREEf4AMLYBM0
FcAyQR4cOY4Uw/1Ue+plR4vMRY4WfcBaZ01MLygCPv6rt30rGWPMqnAka1Dj
gBbxIdEUw7+CqLrbL3frnnCV482DO/4arPHTkLxPeopApCMi/TQSEh/H4z4C
i07bOaTGslXXKCpgTeoDGCH2wKpA2Q6mlXbUK2UylCHSZYyhm/UyKO1WKCOq
NMrV3v0eqrQlCtGqXasSzykxGo26aDDi1mTYRci62jsNkValZQuRpCU3D87e
T/CJn4robbcLTgWONGeyCeUGtLcnfzdQXneV7KZFAKUaM2UtJMncNjnCBp2J
pgw9rDsB5/qH+3iNg+Ar6djrGLIPnPXrye+FMqcomnoOopV0SjHs6ani8wUw
6uORqqTTuU9nMY1y1ZNzkNS9CCkXfYKhp38Gb1sSgn0/gbdoMdLTZ6L3E33/
P96+AzyqMnt/0huENELvvYUmIoJIBAFFiAUrKK4FxLJiNxZWYo2iGLFgjQ0V
sGEBdY3uBksEYwlKBANGugECDGWASfL+z3u+77szgVh2f/v8bx4luTNz596v
nPOe9h6cd81W5OSE8iHomR8nQGCz391rT3UHzfvBJF919R0QDPQxbrvHeJR4
zuY86PHuZ4KTdqVg6be/HelGErxS+SkQ32YX0nd2UkkyYf/5iPilAwYOFay1
uQV8vX+Ab+MkRPmT0eXkNWKNHEQU/Rs/dUFmZh06dpSl98VQ3LLqJQyx0WP+
W1hoaavi6nHa8PaYGk4H17ZtbmMYIjXGMShPSeGnj+6HKxYiXfe0+yuU/Ik+
DgoNQepuS3oGsrfVuuiWpPORKMY6tfVbeHVSmjBetWSJKTVmwf3FL3+CzI39
kbn2GIy87QtlA2Z1FQuP6GEkiGR2GP1nTGo5alAd+tz9Khpt7oIW352HSXO/
xPVzK9G34nRk7DkGN/+rCJ98Bk2C4RMzsdctei5yRtTTRXwbVvMoNSUyRNfT
gByhCao+W71xchjrtOnd7fzS4S2NPtWmX41lF5d7y5u8pRR8HW1VfAcBU8wZ
pWOGgdQ/amlEoqiOoqn6IV1dK2Mx3BJFfQB2Imgt1yCPcZstRyNm9s3K/vxp
4EuFR7zv/L2PYvQdnyMudR8mPvYJemw7DgkbumjWDOOHfG6KWjIaGedDP2VX
ZtIzk4Low3SbgIiUc0mtyhRVEcd6nux91AGxCvIaKXTkwfdRHFP4U08MEXxB
Y7OlqKNTlIXRJ3i3ULn4ewSvxtAH30Tj215B0o+v4Oot49Gh7jgt5+FYHcLP
KgiWon4SnHGOG2xiQ0EhCo36kCpEobECC2TK2qg7PwVjRPJnacu9+jz891UU
IL4iFxGBGehzXRBPbDYUGvFVBfhhCxRxZtlm3eS4pNPwM+1r1Ei/8RwcLb+3
0XSNppqf0WCbRz2KbKig2na/K3YtvxpqJ5CBhto7btgQwISDOegiYqvV6BJ0
qcnHhxuNO68qLMf59Q9LbYQ6F3lvamqX+yp6SWnKlJS4ME+CejBYP0jrm3SN
3MjbbIsLuprIMZ9mtzw3O7EHLXPR2y6Zl7DJpYjTpCC2JpxirJ+WCn3NXCs8
xyjTo3jUi5UxrMbSLl7yIA42xKVjBFyilmwQFZCKjhZEcw05pim44MwxxegX
/DJY3x6jyc1E9rwyw2eyau2lYtVOI2mBa9lEksBd2NXOilJ6I+jp4YNwk9G2
oMB4DI/52tvLExswZZQPxqIJZuS56JwrR+dX0/1MCo9m9tocb2Y00eSjncKD
g/IUnvKwDz/PKCHTUB32YZaUY8kLjVKIXai5fbSwtGZ7BEOczFEIj8A5hE35
5XLPney8Q/ZyV5lXG5mTGZwaBmvrd+HlchF1ERZVP5wwr/n/hJc3S1Z6dViX
XD7qUgXJuZFcAfJALIlcbF+0lzSjykZr2RHcyxZBZXo3W4XCqXLxvBIbkuys
xjbH2x1MinA1RinW+x1qJWP+n27pjU0CS4RXP5Epa2iGDKbBNSbs7dPNnacl
9sEGz7lWNDNC/ZW7HwGe/mrke6RYO3Nxpfo3B4oE6fhyFYo+exYRVRFinscr
Y1CHTiLYPo5Gz2f6CxDN1wzuxDYBRFzEwdqHiEXFyEipRnRfkxaV+6gptMv/
1JKQdoDz57g6u2aiXi6eKLcvqqmF/xQsnsLx5ns64BHRfcu/FFUvHz3qs1sw
ff52W2Mnl5tiODM/FJWenmAEwIfVG5CRF9CAYdTZW8Si34mI5xchQv5utuQz
RF74FRKeuwK+rj/BN+U5+GoiMbviTa2c6vf3fyN1Zwdce2NQmWP79tX6ZM+/
z9SWm8xG9MQSHUlMZqeJtH8/nNygnL3kw4WI7vgreh7qaxsLVrtKe2UPEsH6
Gj10OWaSmPnqM61FXILDXdk1GBe4UAXYi8HPMTlL/XbmKoNQILjyy0CdCMWF
SJPfW85/FD9V/4ZcG+FcWm78bHRyLXnc+AJvk/F+/JY6/T3m8k1oPDiA/lPX
oVvHWsQ++yESTt2AViPXKN+yo59mtkrkLstyVZOI+F3NFCDFBpqhSV0SOm28
CMeunYzMg+no4j+JrFeYtOs+bN0V0CJAkwJLh0mwgSZKI0UZXOZYrzxM/ZpY
ytxJ/bRgua8MQIZYJqkCk3b8JdqrizFOVU0GuuOfoq3oQb9E9G8j2ZEU5E32
tUDsSR8j6/SfNXg8/vElSGzmx9BJv2Bc5eV6f6ybbPe3Ik0BYASAMIlbg5Y0
rXmR9olWkDM5jtlZRKLMC6IPwkjNrmo1U0hQyFOAMxzGAIdLmGeGDNUVhQlf
t5xzKqIqZasfL4/GEhgOw/r1xg8Zm7oX/c8tR6Ovj8dyXK+PzhX2MZ5GZ31n
X7ygRY8lOvh5dsgrFXcVhCq5u+HPOhI4DUE9xqwpKgDOIdNf/HtrNf5JDiGa
EP37mxrEdTa9kkDbMXcy+eWsNTkq0Pv0EUH0bbmIG2KkTmrmstTzGVGvV2rb
9aFhvR8Tw3s/gvAu19qf+Tb4ZJ1o4dlaRyIl0/txnSimmzfL4tmyFGlpfq0I
uHYVF2p9H5rLnfbVlaLjWh86bDW9H8c/6qcX12lW1sxeeqmRCX3t7uZIMZ3O
ehaVmIoHvQ0t0dL1viZZP5EPnRuiGY1R31h1B6MUjHtxydBnkwjDPWh772iw
mD5YAm1ZWl4gjN/Mz3O5XI/rm9jhIxsY3akOEPHmHCBiHIv5WYK9hlixQ78A
UQ2/hTPNBXkAB1xI8svv9yH9lStd021H3ENXm0vR57JmGnlH+xoTnWj0cTQY
zWTozWEgYiYudd4QWYBZ/m7aM8bp5/jsdIk7vmbG32WbeNjmSquwANhmRJ10
i/F6lZobFgpTletfbvWYPlzV/3FUrdxLAl1nAQdjzibX2cScjRm4mDFpG4WK
l1eLrddjsiwxyqNChS02quY8+iwLGitCLzyyNl0mYqQ8Zq6uy3KE0rPLcTjG
WiQi8lhk/z7EavY/5yQu88Zqk8zKJv2/s7Qstqq/Mxv0UCn+NOFz63xsqdvD
zTujuQmqW+K85ELmG5vfo2SvtfI8V46PMc6mC/P3ZqJDbtXqQWMumRQtRgHh
7i7slM+pamMsltiJDyVnMYgqMtX40lro9mIkhMEdcikzHefXX39FbGYsorZG
qfRLSjoX3Z/rg/iv5U59hYhJ24Kz8r+D75MFWmgXWR2F0XfNR0TsbjSXYbnG
NLHTLOwQvWqvegWB5Hbn913UXSRt2UXIyzE1/jxIdHLpi8ZFMl9s0u9lVWdg
FB4J8zsxHECpfSMDW7bA/9retfBtTUL0vHXKzxzzxCvIuGUexhR/qjHJiI1N
RHGsQuywr9Bq7TAk1sp7e5fjnnsEK3wzClNLXkTbdpr+5DVJa4iEmcqMQTg6
ntw5pksxRvnkk66CPfGIfjSUcm9X/1sFZ+NgKpK7bsHs98rN21vrsJRYzVUq
cCe/0EAflk1XbzIxN3L75XL4SqgXvlLDtvuMPbi74juzlBt4H+9iW9VB3Bq4
R4XLBfMOoFfBHnPngwwfjG2WW5JvZuFgIKjM1qn+C3D80qfxA9biFLlcQsn5
nhOMThVy7HU82A1xdXGIrokTFNwVLap7ovWWgeiyagKy/nUlMioGo/nnp6HN
JmY5jUJc0RmI8KchYtYzaJJaizZv5CJ1eTmOfScXyRtKtDJ++vuyXw8KnHgo
F48/F9BunIvLF+HZcjreykRQDMfU2lma0NhP9Az9uZ0EQFC3h0idTVEUHT0U
+c7hQ4Ocw0YfYMr+FohquRW+jhXoPnIjJnw7U7We9cvrbsiweZZMPmMGMlOO
mX3K7FTqBZek5jJtPvzQVNnT4ffyywZSmd3WXuUPZT4/x2R2prtQD7CkmWCZ
MoA6kPY29SEdBzwYjTj16zvR8ZyvFK8QSvVYP1qlmOk/aeS/kxCMyhCXUIZ0
wiB8KgCrGJNdU4eCsAQmWKnwe40dHKFJtBVtc78rRuZlbyAyZTcGnroe7y2t
0TbWjDYzuarORhQYhR4zxvx+0RUV2nyqT10uYvPW44XabPX9naoo5jHRIXGi
qFcpT91MAbs5KGmodWWFYmXqnxmqUI5wmTH8Ut9lxi34wJp8ZOwqRON+m3DM
RvN8l9Q13LqS0jEPpnXlrKVBDJ4Xal3Z6gr1wnpbnukIBIk7dig3mkpdur6p
9JkZzcnkBHLbUwHIpnEQilVh3Eecc3m7YwR1LR+Y9EYIRZcMlzbVRVvDN6UZ
QFxymWp4N9XsJLpzWH9CfyzPr8EaK8ASNUOId8Qa0XHyQ9Oe16arJQxDDbOr
l4QJ9NooIaf8sJTFBRe5M9rWdEDcaxcQ/XS1p7npqLCYmbkcyzvZ0wzOEbRx
nb+H97qEneZypk/tdbxuEFOs3jZLQOjO5cGdKsjRgSW+ZBuzWrCUqvCA3lx3
lOm65byXWzoe07J7qTx9dVg6MgDXlzHMo3N4X8amYemb4byBBR6nsXl9syIa
xzlFWqjF+FIWJz9XpDDUBDdNBMyhJcZ06Ul0kTBmqHWT63QXZHue/P8R/N2u
u2y9enk9tBTAOXK2Ly5zCZr/n8iWXfwuEDYK7uvyzOg6dGRQcrJKWdckj9c8
XxNFfR6vATeGowjj5rG8B0ZSxXphPJ7m7yn6GGUu5cSvGZOchiI4HvbDztnp
TMThrYl8Hm8TUxpM/LnYZYk10z2VeUB28Yhv1aDmUSOyPJL3tt+Hdp0PYfr0
mzDy+jMR06FSgVFCy7WIarIHURubImlUlZxbiegBxXJ+DtJmf63avMQfKmJ2
VX9vXyNqpgNwx9+Nxr+6+n108u11tLBYMhOIaaIZOPZx2otiuxrn2r5YLIZm
5g57/4QzHt0/XM7f8W/4viuT65bD930WMm7Ybkp2FhQgYvkgNP7+WE18eqrs
SzQ+IDJorVj1xbvQ6ITViJH3JbetxVv3CkQo1BFU7sWphXAz8Gfc0iUFzicW
j6k8J0J7grxnwjSglQjPgSFeaeeZbYhWekauKNWsIC5Z8ykSfNXouPRznDBj
LWbOCVDLWIXfTF1LxWEdi/rKZ6NiTOoYuSfoqGI3JaWzlt9Zd0H5PLdkC+IK
HpElcSPmNvw+O/Kd1Rt8TsEB+PJekUX2gApzu/Jc17x6ZHstBUgl+Buhm9Z0
AikzvhB1/JVKd1q0lutVlz99KVzvHTXduZ+CFcJF+u9pllNiz8JVsljN/vsM
95hci76Cl+Zjyb8rcdneyTivohBDDk7FBc8H0XnGuzjmwnJtM3LcU2YHpPzK
oqwsRFTmaRAr9pszEVHrQ8w3k9Bk9SA02dgTY55dgFtvq9NkG/pKWDLNPg7k
cWTi/odV36DNoY5abkPuP2oM3iqxTfKyk5Fx9Fok9FoL39Ix6Hrjmxhbe7La
t1RSPMj9RC8d8VGkFSwMadAaIcZiHgptKL5fFIVXIMDQBhc7Cwpptch1bLJm
htrkzZQYtrEOHdONaXczc4N4yrVM/bzuCyxeDCQOX4H4NlU486EvbOfJoBUz
KbQHHcMGQzW7ZZUwA5leL7o2SvBvrn3rUk9GeFiC8eFnnjF9RNiDiVl4CzYX
6wzz881yn8UrC4N0J5knb6WLjXwGPEgm8vbGfNy4scr1z9InIZggZY7tRSjg
qRuGoeGenqacx2/ZDqErMd+aiCGJGPKgPS7vmy6WxgUXVCNBkPbI0cAL82nZ
wmXUsIiXhNmud63rO0NXs9OjRH986ueecy2949VfSKcQo2dUAQTfBNh0Ta7A
CkcGxKJaDg6x8C7sMjIyXUkOTWpxqmpTFgKSGCgBCZYHY7C+h7uGhYJEIsQ8
HGv6iVjqyyXFMJ/L7ObrzD5n/R8jaA5Luf4yTA9cj/XH2xXHO2M2H1cFPT4M
NRtMZHxOROzcyO/Uvav8/IcOwRE70jFE1kbXB5uZ3iI/HEZinSKHgV8sAM5h
JIYp+ax04H6Nr9PtBHDQyOPK1U2vFQ/eNsteHFCyDcf0r072HKN4HPTwRrih
zEfjXqz21gUHqb5rhjc/HuP/KPoVulyph5UCYVk+5vV1DTBWwZbgm3J8/FH0
K1FHf4pciNSSoYCbLDkZhSl4SzT+CNyBakf04YrQ3IMQ0BKt/nVG6CgYlq0i
b2iMv6Va75rBNzcqm+TW7JXqY6DGKoEI6ymdKH3I7hGpRdWGNayNpXThe3iL
LMszvAgh/idipEE4xjxZAhzfU7Xi2IDmLobqRXkuGHJhhMKlXn86dq1pdM/d
GLPxQkoxl0OW3L85fMt9eHvVl7jppkcRnzANyU9dJ7tY5EjULjR+6HZ0+fYh
RF6bhTYihCI7rZaPFWDUvomoKIR26vMud6JXdffNbpPMM9hW3eXL4O8K7lV8
Mbu0Gr/KsCeSBuBWc5uVZaYh3ycHlyNjBNB9Uh1ai3GXIrLi1WWi9eYLcLjU
1Kn9vS/QUYRk6pMrTVOuta9oEC1DwIVvmaCPL49G9G8t5fZrlM0pafkI+D4Y
jfSvTkJCooiu9qvQ9sFHlN2pfTPD7kQ4sebXv051zWP2eWKbpZhmY8WiKteI
XB0mz5w9ypyzSVNeWuXhXNdFvC63lDzDxdWv4cnylRpT60kMJovxp58cymmk
jchK7E3cM82M6Wib68jP5Nrr8n2lQTsdvXVdn5Ud1LBMetXrGJ1fomm69m1m
8cgjVzqOzXkEYgfRK287YrP2YFrJP1Hnr/NAjuW60YPD87Eoi9Pl3x5l0xFb
MQ/RgRhNS2YGpMudpEZnlIBAh2KXIIfvoaeGJillLNluRN+5InNarwQEfBuT
C3j4w2puKS17oZdR1h1VBTEPhM1dH1n7FiJ3N0GHnf1w7ooH0W7LYGRU9cAp
Ly7ARRfXaSUYactI90nVRl9PRHQNYhODGg/qeswONH3xWvh2J8P34LVo/OhN
yNwwADEfnIKIPmWIe/BmvPX+QUSXDNWFQpXItHr519x9kop46iiGPWiDU67T
jfTQ+z+ppqSCX7DAwBgT90jXSaFBxPocGlAUDAxfUXuSZCB6f2P4Hp+O1M7b
MXBQLWJfOx/danq6NsoKEihorsJV1vVkUjbotqIrjPrzB/zgc2lx339vmM6o
zZk0SCIluR+zVJvj3V3FiCo6EWl722DAU094gJdEOq+9ZtKrWERA2MN0Kybg
8aAXnEQ8rM+m/iTQ5rx/K7+79qOL4dHeFeqsFmq1/CL1wSwKCRMKs1LRklno
tyFXveOp23Jx4t4sjD1Qr/uoa63OZCam07uDYzxhApzzhhyc3PIELwOsUHV9
t+hSYUINTUBXZ27bSnvUhQyO8v22BN5ctq16N0wJQj+dMaIVanG+jWqbI084
wfdwaKj8eXDGObsEqXSBMIGYB90xDSEVbiPeIgOb8p5s+9AsWeZoU9sTSzF8
vwd7jC6L8yAW0x5diz7ykclWsX0w45U+gUEBHoT2rrOLLcJ3kTEuJ7qheDN8
C3mNXGSM40YXFr1bdHIwsuJugUYPX+OgcOPyIDciM54dhqEvwng1YSNxURpF
4XeRR9WJUOOAoRjYpJa8Ud7FMoyLtSjfYRg+RlNB/kvw9R+k8DRT6OEwEf0D
S2FADFNMXLFCnnpW6pNUlcpvPiUhN/Fc/+/Gl7jGrtVIYjh66SQTfiEu0rD3
FFR5PGVVlm3UwRf6Udil4K/wT6fZ52TMb54lHwiZM+UavXPusKA+iWYVORKo
zlZ6Ud5y+RPictXwaKqDabyVXI8M8IaYBI7XLtG2YFWkYIwFMD6txv4jOifD
bZOjpX5Otv+v6JzOlt8yPyrHVWum2bvppV7wu4sKEOHvAF+5D13WX4ikpHdE
Io9DyxXjZSw2y/OIJL56Cfpcsx0RA1chSkvZGNP6HgnHbsAZ44z2PW06cHGO
K/kahCEnm0TEVk3N671km2eK3Xv0YMFdx0M7j9H4jU80Soe02JEWHTE7OEIm
IHLkElOblaLYDFlyjWTZrUOPkjmgX0P2S2yaWM9nF2spm2/GJqR3OQDfTa/C
t7UpElcMR+KFCzSEl3bOh4j6qSeal49A0gMfyHf6kXKgOT7+fD/m3mG+N0a+
d/cOo8on5xmeA2VnKVDE42XOleWHQnVTBQEN72rSxEl1Tmly223GuOdh6bh9
rsNHuHeqwKKYIB2jMs7E/I6Pu8+JyjjgcguCleb0ZLmlWXK7EfJ772wT4iqw
t1K52PxemKMuIPuVvTyQxtKYYxevQ4vih3BzzgHPTbRosmHu00Upj5plWQPf
Kd4j37kZ/fwvY1jWDlZMa0Y8q/kqi+Bx3pTJLecKUrpiKhPFn9ZyEC4wR0oQ
b/PmUpWAKF6hDC05OhFordFtTgtNVIbPtUijOmD1NU1GWv6hdq1R+nnHpGKc
lQkqZfk+R+9JlxJBB99rCars5zsoa1DvvYOVh4sanAxDE24pQ9SheETWRqPr
zyfBtzcRWdd+BN8p7+jrUYO+RqduQQ13RIh1QyuXvzNtiCCGqaZnnWWWw8Rn
l6DVpkFI3dgLja8qRGSvH9H7mTn44KdfsHGjqZp0QIdNIhgf4MH6aeZMMDCQ
uLUDjr7tQ/gytiHq1HcwfNktClyIHjiGQWvQUCkRTTL11RFyEp0wLEDRRJHF
fI7wPusEBkzI51KdNQu8J9eihDGrE2XlXfLUV+j80zgdTlZYtu+xX+mP6Afu
ZhS2dlTLl53Ar6OEpOq1XOGaTy7C2kAv43kOp4ih92zmTJOezhHkXfz8swdN
wrudupIXUoqTt5dNWJ2zjMw8s2d7V9VgLMEn22wO1PdEazIzUSdTYUT1unwb
xp7Yd5UaWtaKSWVI0xAnkYrtM6FXpb3M5UvlQyRCaU/UMkAWbJos6QsxTb+B
U8fXT8EpDrGtx8/yFpPVwF1BxcFZOQy8jLKTU6VRhDy9KaIQ5pbJwk2198xM
YGav8WX5IjdarBcoMXrMYzokdxuRFAmIXMIjt7/jmhYM7bJ/+KWM5PK+aKeT
Sd7hGEa56XDlzuVAkp/I9ZWhx5NxMg6VY6ct0LjKVA/HcBkQOslq9XAMd6fN
ivb6zzD4M1U1fa4WLfpFF8/QMGSWRnDC/TE3CNYaibBOm0cGf4KiB/NtpSYJ
Ww31xFR9T56cNRFPk1VbP+JZol81X8M+ecqOhlDwx7UTJLKhR8gFgYjq6cnY
K9jsBoxTROXaBLmFTCqFVCUwxOHM1GZg7Jg3Un8afSEEy67ylZIsXctHTO08
KwMjNUummYkTJSvOcJjDMSHxMp3RQfbkBb/DbFQd8oZlm+iPHhoctAvn/P+K
2ajvwePQePK3aqdE3bIdMQkB+MSc9j1VhMicc+Bb0kgDeKlp34q6z0JMv+2y
HARpRlUg4oRP0H60WPv9lyM2dR2STvsAvuxHEHvZkxr3J5stJcYs0YU9r67G
XQ8ZecZsmEvaiiH3ODQHYZrPMPvPW/KbOkRyLqrTvEa2I6J9fMBGLWi9tReo
kvTWOeridRVd6qCwqprtjBItD2PEM5fBt+BcbY4d8Vs/dF4j+qJazM3770Xa
6mNUxrKsPOPXAeg/+yVErH4K/Ydvxql1EzH6n48ihdeR7+s5yFy7qiikw20e
it0ZbVBdbgJO7FJClxWzbnasNp0W0jNMkoFzFvGgJyNraoiiqaSqfkDMdXA/
nGp7oUxmugiajbvgGcwMPd36hCnYolKgpeiSq5basBTTdcoWm1AVj01F2r3A
idnb8gSN+fwY5T+bgs4577TrkkUZrv3zI8HlSMwqFxMvRxmzXesf4n16h7nu
ZVGb9Z5gKeNbar4sBTnXPD0FFGG2BYLPtfpwhNkUY6wMd8UvZAeeiIlmUw5X
c5QKj9YSEy75dpqdFOqHYQn9ONdQ09yn0Sj1kEYudlkmNUpMipoYJR6LVkdE
RF2kwtqEit74tvZ7fR/9LqQdpM+EypVCnM286FEg8yGbexNjND77fTT6aSAa
/dIb6R+dg8idaUh67AYkNN+lEJrwmZqUPhxekz4dcndzrzCqQvjL1OZ33jGc
oHR20DdUuPsNWZOnOSHc7IcTkPS3BWiUEkTXy/8J38+dVWHRaUsnAEeV8IMO
eB40sYdgSLJdLdQVHGTKKRZub8RGz59O2EBlzdXLBih8agHIZuAzdEMTDpA3
nglD9OKMP3Q6IrY2x3219+PpV/bqazxI7cNBYqSDCT48uDxosdtkU+cAIT3D
Qw+ZceE4ErAI5nOGIWsVTzIZit6Nclt99VVI0JHv69pr0cO+7FCXlRuujM3h
EfNn0K6tuRrreB8fEOh6NBeviqE/AacqKypdgsMECJO9ztbEmfyYlooFGQfq
KOL7U3yuep+inWtwh2gIAi6O9GBZryRlJADhmiM4IRY+WiZnjAwLtS81e4SS
gLVU6k96crbK/MjWrd9R4fDG5qFzmXYADi89stx/be0aYHdZBmqZrsNgF11s
jkmapeZE+9T/27HdQYQJEwz3HMLQCzNp6euEZ7KbHBtuTgJaAbsufsQ9y8JF
upuKUdzFfoYJ284csBlINkQap1ciTT8TpZlmxoMz0B3dvXopmieWX82Wg5m7
YlRaYJin3su8qI/O++Fhl9dEdnH3U/vz+CthF7efwteaDcF4Ao0z+J5cy4Zg
NE2cqNCGYBzjEmvzaWTxL8MLblOHDNkIxac7SCIQrSDCEFTzb1spbvOgowXH
hiCGZqiwhLyxTOuSPyDl4V8VcqvzlLvcp06loB3nW/8rUp4zZKqHbD5DZmgG
5u5+Dxlbs9DuzICYMVXosdPcXPyPTbB9+3bEZyWr9yVqVyoifpLXaiPQ4/Fb
9T4aLT9LtgQBShJ82314UCsueFQpXdlp3xXC558hUCCIFTtNE7HJM0sw6FAB
xglE2BkoV0jWaOVbODn7IPLfLscDNaHevAdrgVMeX6rGb/S372P895co6ny0
uhRTdssd7JyPqxcVafpBygfl8BU7GqcoNKrLUHgRd+BERPvT4FvLWuj2eGzF
V1rUc9W/XkfEV4Nx5qUBTezNPGUVop7+VX6vw+hTgY7/ATU1D7Y+ZScOsi62
ErE85xOEmgLY6xQcXvQ+IwQt/OWhRu5FYhMyDMbZmi/v6SjbevgZLqE4WvMC
SORLth2BSm6Du68joghWWsbcpt6V3P44R57wYr/pOkoThNZn0JbqsyArT+4s
W+50fonzpdTKuntAhSUXNQs1HbSglKDwsIQIZp3H6d6gBKPBx3grLTXbk8Dz
QXikwgiZo7+ItTcdV+lX8dZoWdk8Chu4MnT9Lt2Frm1CFu5DnmO7ROKM7gf7
4NxnvxR8V4fjL6rAkI1nMG/W6zrPHFrKdEpYKmhaCpTvD65fiIgPx6Dr1UvU
/XTuuapOzS330bAQ04hZHEeozIRtL1dVfuitZ8CCEoOXnVPzCDZVHdJCOaa8
MPWFKTBMhWFKDL1cZElm4TRpBYYNg5YHMd8jtrHgvsha5cQkfIxI2yEI61OM
PbkWw55+HrGyppN+zkLi/nQc9c0laPPjGAzaPgYtDrbD8fvGIqouCi/UvmST
DOJVD9FoZLrymMJXcdSQQ1roxkYaAumN5yNDwx3MjiH5AW+ZB2u8+05aqeog
YW8GTvz3nYrwHIkUExGdY5fqgrFpW7nrmoAS6NFpQnDF3uxEBawbY8Qq3S4I
5tnyjgRgeAuCgJCleK76/rPPzHvIYGDITYZ6paFM530d9WnjFllitzz5u0C5
CpZbmo7uuFImv7XJslD5OEnkYmtRAfz0Vi1ufogdm/W9L4oiNtun8H/iSzbE
c+XyDiexyK9r+t63E436hrwaq03SI9BIGYmaCIxpbP3jvbSQvr0yNPPu3lBL
tZN+9iWB/yqbZfiny/OWec/nfOU2JoaGG6j/77ql52nGaahbOouAdmoFTKhb
uqpPSyBNVw4xCzczmeB3YIdDPi7XmXlZb+ANl0MxbZrhy0AY8qF1QqohIERc
SeuFJkV4CZaDPzRH6GZlav96rHfpM8RaDLwRYH6Gz1xDRaIcYmayORC98+C9
c36qvLhEUL0mVQph5jFs6QAQET6/rEiQiCe1ZVhmaIqKRh+dr8kFbobjND5P
KFv19+I2pq+OQKkG4zbO6iTKWy5j6GI3fJCjRWTZ2I3DPXRVue4kFve4AaZf
mdhZdrrdpu30Mem8i1aunEgvQzdSQzcRdkGaM1GWwdARTQ/DH7HmbLb1ZMVy
tljPmbT8w1lzzv6vWHNuEdWVJHd2obx6hhiPUfsJZv6OKz4QoBU8B53Gd0dE
RQTefkfkVE4cOtbchZh/xCAjU2DLtn6IKR8BX00shpw1QrRUE5w6/TSkFabJ
Jhyp8T5TRVasyXt9XspDr+DHWFdTIU8q/9XMl2efgc9qqjF2bBATH6nEI3VP
a/YOS3A2HzR5d+yXTnE5alQAc+voYpsjJnd/z2eUvzkHyc/7cdZZAYw/mIOM
88t0RONyA2i+/BRRBALmfusA3yGZmyDHPgEzD81G7x/O1pDR7Afr4FvdFQ9/
8w0S+2xC451tcUbtRHWjEmCExHHyn3JIk/w5SZRVh27AFLG9b2CiTqnNY4hr
kPTHuoi8vCia7n2zjGZwKIN7nCY6PdOiq5xUoJ5hMJzZnWK8xtpvCfjNzTC9
jTFH4hzKE1odrqfSR4LrE+CSyJU808qpE9T7N0wWEysdTsQJYog7v6gh6s1V
okBH1Fut8jFf/j9VXvlQJvYs0SOpcpUMkc4EPn9WSLlArpaB+vSkt8l3dFds
3AqXL3/Rkk/JnR3qpckFCXLmPlGxM+xd8GCWomtEwhA5N1jTwEA0DTZH1L23
qBHPkt2HbLkDkQs5Hmmx87V33vHEFwNVUVaEvuZfqlKDDnu6iRhrEVFtsGgv
fffugwIYnp+DNr12aWP0++4Gxvw8FU0q+iteGrb6IqT+2hcdPpqKKXkVSPts
vLaGaVp0FnodtwNxXw1TrO577m9o1G674h/iIFaV09lBNw5buxAvMVpB/Pv6
6wZBEKQQXzFyQZRAjiO+l2Vh7U9ZiaR3zsGtNTM18cKAnKbqoiSuIgOUa5LK
gzzll5v6dwyZshqjNk5BSm0aEmffrviJUJbZmI5FlweTUkKJB3HqEuUz04VE
jE6uc96rnPfoNObMgaZSI8xvQocO0ZFOQNA8/8KF1m/Spl6s/0hmtjVWvhkW
SpbJEgkze3kXVqpjr9I6r6+3bU2+ECXmHNnbZdm2wBCBPi1sI+1w73Xmf+W9
NpzaZR6x2zZs8bhoh+EkWUuZZr+101Rp3tJQ2S98S0+5lbYCzpugI86VXXE2
JshfqapafNqnpocuyFbK+9TB0iswz9PndXQvVt/8pt/p8u51dPdyT/+blu5z
5PfRV/rxcG392p0GWro3s5NM1My4IuOTWjErP0HnsjIN1LnNGPIVK8spY3rq
ufQRBnP4NpuqZYVaNJvBa4JPd+V9+KcLTzEc4jhU6ZRli3cHc5hWR8OMSffr
sM4xDzNwZ8vNdGocAzGvbvqjVtq8lakKE6aLUGJjQW6ydvYOCcToyQLCk16Z
tOu3X27OfYwlAlvbK7VrqKWY1yDD4+whLKS95w6OnWw+9xEGdEhuhMMRS5xS
Z/HTRCcMsfJgmFJMNCv0W+F4QQLRFqlEWmTCZhcx+rtZt666+jwZ+99nqmFY
yPmlzJ7LUxegx1Tzu4jlr1LVnC7b4qRVFyOtIg9H1WUh463FGHJhKcbvORdt
14gq+S0CUUd/jeRT22Fk3XXoOK8zMtt3RUTeo+qqYU+Alke3VMP9/OfOx8yZ
M7XMzOUlnb7Mjw4dZI53ceHfrub9ZFvdpdWg5UU4xfICcqXQy79RvaFmo5CX
mHlx+/YZV9SHsopSqMLq7sAxrGr9KQfTK4wratCBHKReXaINrFpc8wMSxJxl
FkGH1dmCwMwsRKzvqS5I9odP6LJBsypTrylEzL9GqdgktCdWb1KTivROOzXK
4io9fp9TORY9jwESZf0c3cq4crRntXNBHkmnTLqdEnm9cKrSKTtH5/79Jg9g
2bIQYKEiYeoOkyG/+gou4Y+LjhuXSaqrsdqBEVa0cANyIzpXq9kx7cTc+Le2
XyFIoW0d6/XzjdJ12sy2pWA61cnyefKab1NtYNt4WMG2TlfPUrvOcj3t8S9B
Tv3EkOE1aIAdWcR4tVfEWCeio7kK2X8i3KF4CA8jdcudiD4gxnLweLmDDbKn
75Y93U3bZhwt8ohGk9NetCC6K63DSGXL6L6oyvB9v1GMKF81It+YiJQ2hqfn
7idEjcq/6a2Ma63U2ljVnJzJMhkFgkDnyVoMmMnSpCP578Gqd1VJtJu/R+b1
E9E51+O+3Bq95rylIWaXaut2y10kAnuVcfvFyjRGtwji+Mt3ajbPZPlvbH4V
Ukun6GfogydJNfUrDzawpmxwRGqUmEwdIDUy4UNu9f1YUXZA/SisGHrhBdNb
gfd57bXGdcgsGgZmCMS49whPNFIaYX7v0sVUhGdP+RUd//U3xO/JQPbSfNz1
4H7NQ2VqKiO2jIAxEka/DCGHCyOyJQvRPKNWsn9cuiKpm9irmIdtzIVnP1mH
Vu9fqo9EY5Xik/2xXEE7AygMU/Cgk4wUDQyWcbHTfUR0tnOnE9xRWllI1sqy
stC2pKeUao3Hgw9q8o+nEIIhJexFE/x+b8p8cWHvc+eMy799PboEQqYRwa81
6YpHfXY2Hqa7lluWrhcYtDUByXW/87zxLCpbrqyTTlwb7kHW4Dn23x/wg3m8
o/4rp7x5ndRuIaZ8Oiwi1QlkLOY46xLKRFe1t4khkmWldUUnkD2nm+yoh2S3
M7ciXS3uFDwigHWAaOgirNBsCMZ7TJnzGg06FNk7LNN81RL51iN6z/9f+szz
dTZRSQxm4fylm7CltuE+864BGEEM6QS5+kga+RW+spQ40VqjRbhB1+1CLHSq
nwuYC5B/uXolOqbpgqUsTbIfZ4CTgJG5wvK68wAxQ56uTWYtyVp3ATDmCjER
i7CJSVnENuYbUzSnjlikk/I3mZYhpLky3do3KRoot0NEv0w/kQxMnzJZXEHn
9XKRQBZb0bVVJXcio9bIPgNRF4Pzi7DIAjaTlOIwjPvWG3CDGwqGsPjoOBIF
8UrMsqZ5WGrXJrOLkpBkUVBzvYl0ZQSNUK3usq5ct3mXg0gNdKLlxTmMT8Z7
6lzvb7/Lf3YR3L/EKzMWly74J2JXDlAiklEnHUL0uA+wbt9WfPPNN+jRuyd8
fjGP59yHUZMH49jgdJz5+gWIjDseMVUtDG6oi0R0SrTSdp/xczb67mquy22x
4JGrD/iQUFqCVeuqVENmaWfqAo+Zvd2BAow4gTLU602swQ8CaLfUBwyC7alk
PE3s/dzjx+PltaPxoEz219bTdPPN1aKZs5F+QaUa+jGVcr/7MsEO2fFB6szr
EXEwFhGH4jCiLhtRBdcg9akb1TRt2e4QWgTbKP0k1wN1TIsdPdF78S0JdklQ
BpOejxXYtIh1yP3eKvKHdqsXe/nHP+DSATzrgYmI7dsb9/orr6C53QaOu5ii
iNuA+XDuI3QeUgRR0X6CT4yYYAx1lQpQxkK5qbrJnqMDI16bCCbaRnI+jFY3
i2OELbIUZFWW/bVEc+lzrVM1jJLDJVwRUhASHYf+6qYNpeEPqteUgTwH3ZVI
qT6T5oDdJQJ/hotwnKbS5gbcJJ/YL886Rm+viZEHnvHD6DU3CDdE2/w96FNy
qzpDJpf+iCH3Vai6jrzzZvQ/aas2kNWj2sAUSkWG5orsZOQzuliN0OTY9+1n
Ywl/EbpXGXaL1PJSga8/iKj+1U5eK9wpsHXiNIFFMsOpAm2XrdyNtupoq0PZ
UhPry8mrQXReoYbN+WxEnS7Xg7qK08AkHJoXNI3oImCXZXb0oQOSSRBiYNXL
ZHD5pOZcf/z4YxDT7wxoGOjkkw20YbyGCbr0wjBWQ3jOfJTbX/4JvVediSR/
cxw7/1Gccc4hTYhi4i/TV0nTxOQeRrqYaMK/6e0jHGp6uh+XTjPR1ebNg7ju
/mrMedQkHX/+uWEsuPTmINbs36COaQo4Vu4yiYMag89WUnpIk3kIygcMCOKO
Nyqxakv9TA1b/+iV59x7r+lxaqW0W3bHnOnH+8vMY/LRRTrZqUk21gZRqOyl
2czzFnPPb7OzyFalJKCTTYh1kXWoFGTbSG20pqipTBRAO2Op/cYBCNqrVshd
lM03v8+YF8pY44zni3GSnWvO5WUZDy3b7WXLt61c/isa5ezCUsG4VxVuRjiF
WkCxhus3ZsI+rkeXYYtL0SSIhrnr4W0qbjVulCfwoHwiTfTgNRplNWJd0ZB5
nIH4K455kw1hEFuIhO0k7UFKMdBX/o63HtwOghKopOls4N58U0xWmkYniVkS
0Ef70dLQHquN92xHErvtTH/6+WJmhcx2dwcmu/WwDvYIa1fvlf38X/rVP3HI
h6bfF6Hjp/X71fu1QrjSl2EXHq1HkuFwamjyMiju1iprbIhdWQL5G35zZbvM
beTWRBgyYiIatz3/amQvzfiaa1Tt2uw4eLRMfuj3ZbXVt/jWwSMSTTP3hxKR
4R8WhsdZyUDDiIVZvFsWYlKq8D2ES3Tb3GE55duBSrAXBmGUvLOn+uzmaWhr
qT59iJww+D9tiLfYe91Ei8eIpHhSrJvJ2hxEfepe51WWUFBiIsz5Rl8wpUxI
GkYpyHjUNBf0LBQmFdkeqz6VvT6b+52gSZs5PhNILpYNyy6tJetWyj5me7BF
urjMLcSrL5fCmxiAM8QZ5EE7WpCYZikLDrA1VF7wjX83RmOXe5RqMVwsDqO/
eRNTZPQd/c0mjW3cL09yrqVt/I/pb4zv4mTcdx/QqXMdmh9qg15XfYkLLhec
XjNVMzu2bN+AyBxBmNUROPrnwZi4rBdYINBu5f3wFdPPZlCC+jqu9+G+qvtw
yuZxGLikrdosBDppRcYflat4e7HXqG+xnDnnpWJkBAqwQV37Xn9kXYpE7zd/
MEfw471Yaf0JWw4tRr+DU9H4NFGuP1yvOJshYfrezqkoQJOAfFNNoYKslp+e
j0h/G5xdOwFxL36roYvoqmsQubsp4va3ENwZgbgz3pFnS0V6m32a9kGmc25O
HvQCJ2xpj9hgAt28LnIQXuDxS3Ulhv49oPrq+uvhcx5i0gbSzl6/QbVSffXs
D1uQ0epdoNeA/LS33WYoseQ0EQHTIi1rjPNYceHTNmLQaxVWGYU2TgyNap2C
RM1OaIousvwYQOwku4VeLBoLrNXja1lKROb84I5otEAdvga8Oelo+BnCw7h0
KtO/8JzAa+rwkThT3WLu3a47xN1gDWAGfsKC36XsfFuUUIriN4LtnrIvZ4o8
GkrqA5WRlEBUVXThcFvF5ftxbMls9K6VJ5ifi5ay0BO67MMp5dersUM2D04Z
b4GJ5FWVxqXonkajmqVu4O/y3uf8DMRZ9Ex3L1upDEpJwUaaifPBsr0aBUoS
3HzBDbJIPzKZYBpgZ81b6V69iIIG30ZEVUcrHqWnO1mbvWhZi8xBgo7KnSKp
YmTzXSXPO0pHgPK1tYoLdonswQ4ZgnY/x4sqOZkNc3ttAfLeC2LoWWWa6dJn
Uz6uPVCglF9m4/yx1KV7cpBoAI72LMGPLx8mdS+uKcGy3UbqnrFoHUbusFK3
ZjIuerkKkYEsHP3ZYnTYlosm5xuGhyTbVjXmjQ91ayX9YzNif8vUz8UtegoR
nSo0cD3ouQJ0/KVUWQMf+bwIF/pzMGFnEVbIouA+Wb3/yFrQ/6UWaXL/Osw+
GNIiJBP8oiYHUWWLML9mBo56pZqGVrQTtCWhGgKunVxBZwVTgTMetqc8ltMk
7fKnXGRy3zME2VUGzWcWO6fuJoPswhurVVZ6T6XJiWVBh0szlGUhv9Rcg69x
6b6bV4c++QHML3tLJGEOHijeL8vsFxENIcq4r21wex6mWkeNX8DUzUalpItV
dZxG0hui5jdHqEOHuTOO5zQRqxer/CEXkgWHPocO/5NO9Y50jl66OVhpU09I
dT5MU7p9Kqu6aOBnoBjb1IhvieQweVa9RUYVYZLmUEVo9HyYYJEBWK5hnWxv
Xk1FU349VxlfLbHhnyx1G0z2GDE9ZXMEOgyxq/z1Z3TVVaftyUFSSQkuzC3F
1TV5OiUFqLJF8YZEiJUbzD+kZCNuCSDgACJ9RkxGoKAWAeicAyzg7K/EkyGA
SDVlwsChVrz0KTHj26ZauNAixSi/iCCQuZRiOdhk766qj+gjo8YlaQBrRpmY
RYjO99O5R48KH5xA0TTRzqrXeYu51Ay086GY10mtzNu4GCcKhBwta3WaTMxc
zf1cgrG2kt+1BPSHNSAD/rQ5Xzr+rDmfe924jHKtfjLN+VYoX2PQhuZLPOYc
DgO9cqWyxrvYcySmdEyU7n7o2HH58g4/shqDlRkI4ccU+wZ/qQDlAlkEYgwW
lpunLiuQzVbqt6g+VTPmCMMZo+NIspiCx2r5iVL/jMnE4rZpZWvjBooRZbZN
EzTSRoHc6sPUYUDes3i5jktQd6kvpDelf7kKQXsuTxbixUo5aba9sTb/LGmS
nTf//jtJhde/WaR+yWlbytFk9WC7ObNwowig1sy92vswfEXylDvERFwWi9vu
vgpZW8chJXWjCMBIxMXHo3mwuX4q+rxoXLbxDPQ6MAAtWzaT9ZSFJqcDyz6v
0Cy8vFAW3t0PVCCT0K9Oe1aa06PB1s9tNgxDy8LTZHQ4Qnl4+PtCNJ3rV5Xu
2oYxN5ntDugOIpSjjGbrU9/ArxGxPQPxXX9lWERdINHVTZH6roiOUR8hsi4K
TX4RgF2drBUDEbvPxAJRLeNlLzEVgtXhl9aWotGA1Yiri5eRG+0tXJd8n6cc
tzPw7MogWl1XhlHrZsh3FODb3U44/3mq51/le8+sXIyr351vFkvS79C9m7JD
ctXQ9ciAFwO1ro8iu9o4gp9v8I1xMd6nciu8u7yrAwlapROr1dzMOPeJQumm
cZCBOFUvZYqv2snqYC5DIzGZp4nB6lNS1FxdX0GNtzgfY8DzMQZcTw4FY3SQ
lYnaoFk7HYYAezrOEZh1kho+IXbULAXIf8aO+h4+UJLdNpqTEK+mNANMfHTG
RSlJuV9HzNmL+DsFkHbdIytmq/p9cvKMM5GS9W/B+5AyrwKdSXaQW4M9tiKR
FYsMXvP3UpPpi6XzjObPyjVBMyb8l1nEsFvJEw6h8ay1iOgaRMSw5Tjr8a+Q
P9wQYYZXcXYQYDq9dIXyq2fJNfv556BZ5URd6UwyISilacx5YqRqqMBRRkWu
EEjPtr7HwzChFMsoEPC3FsnzjPx7Am6X0WiNE9ZciSlX70T6+UVotnM+Fr4d
xM4aByjYlsmt1z+R5mN1OgfgWZ229tpE4kFB4ofqSXO2Wi3+1Ujz2x4z0vzW
XYvQ/j3TfXJMjQ/DPjAiqv1PObhiY7UqsmFV2Th+ewFit4k4Kfkeza5/FZHl
AzBw/VmY9sMVyNxZiAvuDWjIetw4GaYfsxG/tlgTBRjOpRmZXJaN2Ipi1b/Z
l1ZhzMyAJnrSbXfHHQGcJd896bOAVhl8+inw7felOFHw+oadwHd1DWun7gcL
cHbhkdppXmURBh0TxOydWfKdJYyTemanLUA5eNCUBZ6XbVZO/6NCLREdyazu
vErDoREI1b7lZ8PxzHohBr7OBVdU5c4lhRhN/SHC19cLahCb/5QsgkcwbrL5
6vllLiwRrx4H+nR/FARCu5U0F0e0L4jWBbBJVlaWgVkuh4PL5AFZA3RgHSWC
oCvesiOlkSYDbzqodCHsYXSHWKOVyJJ4m2kRo3s0Ea/IDXaRrz0ZD8s3HVIp
QBe9afvueHBK1SVS5pX4GU71qVbCLLVSxeRYGO1YphKo2g5SnOoWAyQLVH4Y
6M8kfb8twIvRhEW6s5kU+9hj4cRfMZqJwz63DNjQVGSueXM7SswYIzgkebbs
0MZ2rljmaVvVeCQDjPswcsCWbY4+gR5ICihilZ/xs0OBrLRkdSVHkaEipteb
S3duEAXSAJ+nVka+OjIdCuTdhqNAfj2xiSO06qmpgUMUEtE3Q84F5v9S5pAa
jbFQxnhZXssoN/ODWdXJeyMdp0crkazDz1sxKecc8EXaEiUUva72Jidbp1PT
L106wpFNdggej2xHGMqEhPf6ehzZjjBEYKmdWDzwSDeBy6Fz4JFPR18swsAj
n77MBFE98Mgnp+sCh4NH4y6aL5szKz/EPVmaL5ChpNqOj9kWtNE46DwIJon+
OTEudT9RSx3jNCfWOOsivQJHx57Qytphppf2agVYhimnWpXmUqxt4JxZ9KEk
1L7/URLqqE/8AqkCmFmbg6YXkOyWPeDTZWHul+0wD5mrRyLi1INo9So9RClI
fU8U+kM3Izb2QiQn1yAiKgLNezTH6O9GI1J0TNw9cTh38SgVBZqKUf0yXnrN
eesq1Mi42P8slgX9ePRRU0r+y45CZ/N5UclgoBrXfScwd99YtKnLhC+Yg9bv
jEb04tPw6Bee/1QPbtWmB1ojvVkQ35nGHLj8xj2IXNcJyec/j8HHaKMQbXUR
/eaZiNqSgMjmvyDykJhOK/vAt7GZNomJ29BRtN4O7VLAuk+fbLCPiwMy9xWy
EGeriDtKrOAS5fw05Qo85nyeh+hfizUrnFlCtywtUGjsnKz1M2ijwjNoPbv3
z9jvn9+Rg5SnNuPJuj9mvz/vXlOQxowh1t7t2webZmpaTJIMjjkhBIjbsd1r
3cG6++vkh6Ka8GsfdouIaqxrgc/NeATNShYDU6ZR4FyIC7QVIYP4bUTgpyu0
bKSeN2gRcYn1IhlfTJVJrPNCgCxQvgR3ytmJ3jMzwXqEjC3v4w69j336WbIo
ECx5HbBa6uMwU4T2Fnc1pTkPdhnNqumPiOeeRBTzwtL34MR5KxAnajQmdxme
zq1DTkEor+17fyV6ZO9FZlVbvBgsxiSb30he9cVlVm32RZChQ5b8WTd4BZvy
TTVx6Xuv1QHG0OPqcH3RD6qZEzdNRZNsP+71FynH+uRCeW8lWz/X4LyyQm0R
PVXOx0zdhKFV4zV/jLNDgiqONKut4pSitkDFNovo2XS7C57X7y+3vDLMBW/P
nXZoKnrO3ofGLfYg/rYHcNHG82VQ7gjbVRz3pWruVyO86efhAnpsvRT6eegr
JkEPmee+smaGeAJ6XJ0V0NsWYcEyI6AffyWIsxYY46fJ1kV4ar62O0RseQ5O
W16NrmPXIjY5gJzveO998EuNH9fIihKzSJ+5g5rWru3tEZXcem6B2JdzD5hz
c38Kak4djUZ2oGe9xsyZfgwXPDhwYbXW+7Mzcd9JJUgM5iNZNH+kYMmo8lK0
bRtAy0AO+p8DTLi4BBny+uR35Hl2LsKs56vw4OJqvPxuEFP+UapghgrngSVK
oO4gE4sinrsHyMwyIfahxxrS3TTZcRfN8DCf4+UtD4ZmgjQsth7akwGMZec5
oRbULECzSG3CJlcLXZw5YphsCtZnvc+xXnZeo1P+WgwrWQdf1jd4Ucbt61LX
oidZZ7sVnCe2t8AJY60c2dqhSn6b4eRyqD+MC2vdLHqVF4rXHj0+QXphYS3n
VmF8jSmeTPvk+jY85O21Aw11XrR3J6MUyJEtgajpXDEZSZK4yCtETha5ONV7
d6Fhr1Ojfb6t0/TbdckCwflyk5Pl33J35wnKEemr13JnhjoRS0J3bZFYtKZk
DB9umOGXL4cL/bLQkWDKtQ1ai7UeXKTxTUhMM/olvNTETnM4676Di4wSu/a4
afbS/PgDtnCcOI/cV+b9HRUXkoGOSIaDyKjzH+HC4Zp8+ddxIeEKs/eY1MKc
arrSwnEhQ7hi28eH3SqbBfBWSRu6Azu8QBpjU8yJYTxKbjXSLgMODHF2iYan
uKRd0Qls2UkFXJe5PO2AEhI/tmdjmAhrCE96rOpaU2AUjsmlm+dxiTbQtFG+
vUQBl2naWCrLzaUHMt+PSmgLtliy1iiN/NGnGtq0UTqyGvIKw5NUkCZD/Ahn
ZKB8vrrBcvIWe84kiyetWZKk0UJD8bVXdTUdBswdi7ZmVqzunRhOvHU6psEV
XsRYvMnZ6aRRveEyXC/pwIenh+Xh7QbO2fTVi/9yVu4V63OQ8YIfW7b4cXxt
T0z6brZm5Q6Sjf60mJ+vfhxARPI6NN9nQHDjAh+ij09G46FtEBF5LF55jnns
PiQNzMT4C9rIo8hqvSQSmae2Q7MNA5B0/reYPHQc8goLRfTNQEnVHiyaykc+
HTmTb0CTtDITzQmWi4j0YX5FAMFNi5Elv487rxApjXMw8KJXNQc87ai1eOKR
EkwYUWDLktbjJV5r6jwsfHMpIuUz/e/KQ3mxPJ8AgAGzC9BtRE8kZxZgaP+p
OGpkOe69N4DIEwYi8pxWiDjjKCTc1hu+MpGDl8vQB7trPQYLhYwf9ziBT2m4
8uEPZCfWrwuZKhiFBfh3H/QrpUHvxwrUcfp9hR/JRfMw52ChlVebQondocQZ
u/oy/yeNAPqtKFNaP5aTMvl8wwZ0tHud5iqLk8IYia0maaGiwbHeMHWR6IzJ
r3wvxQ9lPX0JjL8ynHKTYD32UfkCtXgZj2uZS5zohmbyuYe0hUK4k9wYdw4p
GqUzVt4fq1AvvJT7YUUSZ2jkgPFbuiHpFpyFWcY2PFXzjqmGCKP+UZOHJ18I
oG3HIKJGFCMifw2ii6fpPqakZHIKCxXtvsAiG8naRLiXt1bJxLsv3izKdXso
Pf6I95nfyf92/fUm9+3skw0I0E1fZX6/YdO7SBWIGOdPgOl3bGaNcSI6cHiw
NymHmFKank4ySFAg8HUCdpb6HSVAnJa7X6Q3Z3S8iGEjXDbh1gMCH695Ho3K
JqDri6a3XzBYJRD9JtXfUTI9D4g4PyjwcqkmWvk8s/JP++X2Ccv+ConeN2UG
GefuLENVLKsmXPTO32ZF7y+fau4ol3PHu0uR96yhfYssy0GPlwM49tVH8PT+
+zUjlVWPdABRad2HM8XuyJMHd8vd30DZ+/oGS+H/XJV0qKdKvuTz1CwVAeNX
JMT+v29/WCxrPR93v26eZ+LiYvRn8dXPpWhcIcNZWoakU8uRfItfPZdMTCY0
JJ0fgYDS8cl/x44VzCZwkQBCqf56A68Iulxwryu6isOjy3QOEHCWig1XVwRD
1ZjUoay60pdt8qMLh9vQth5sGz5jaQgzEpNmieCpDpiEyMmFZhmfM3Un2uVX
oVXx1UxmdOnLLJZmfOxxGbBLMM0hW9v7Qv9yRGi01JjtxlAARaHNCTUgqoki
F8Y0GXWgfuU6prLiGucE05qjM4Vl6DxGyQ+NToEcHkkFHBcazJOKRAs5U8OI
xFxiWnhLDhemZTk3HXnk0N2xw7I5GEp3xtpphZF/i2SjAsBa2E+xmIfVAcz9
2YzNrmsJxeYm44nUNcRzlHmOF8LlJMlHlP6FDytY14CCjv+x548Ij3fxewiP
ENqNI1FeQwiPiPIwhGfynlprzTaRHafFOinVZcZL0+jmpS3kwcfyQ0kfVGsh
1wZuGNaptCXNOTY/YJ6uy3BoV6+ZZMPIrkzfzpDYJkutmqMsZH/WTLJEs7xC
zSSLESL3ZU0L8+r4l2scRHJGdqV2B4dARtZ9hKjeuhfqZyfGI1hdilw6CHNl
2eRmI6fApL5aUOcwHVvocDo4nZw+Iuhxtvm8yaBPUK+gWEq2GU26xXv0umVi
pmwNyjsDasNTirNlnd1xxLm8Bqk/pv4l6o+b7gLaVWRhbMBk305BP5HlPRQu
XEi3f01j/b6TX/8HWCR72vnHI/nJjohblIroV/ojIS4NhQUytyltEHdNHE6f
lqNrJvW7VER2Fh3e4WecM+UU+Cytub8kT4avGAF/NRa+bbbl42flYPEmo4Sq
KtV/hupiudMZlRoevvnmcsSIsOvw0jW4KnADKhfPUFy9dJPZ6GXzstFjVhla
tw7ihP7HoJt/oFxK4FB2gWYPDm8qekZOPfFENdIF7F15y1L5/Dj4Ph+CKH8T
dJHx982+DFGPRyH24HEYsHGCbrEX0EsX4Rkyn00XXIF3KkOFMDkKigN4qEbm
7JsSTJpWhbl1pmBmwg+yVA8WqGVkimiM4W6zo90eOBLjNf0/90mYeGMQ/eaX
4ZMSU7hYUgKvqJ0Sh4qUyX1i8yXY1coqK1e8RFxHDzWFDXMCeZ64jgkqYgz5
nDOEUZCHZVXz/bRemLRCr6LfCGNX187TlsHZo6l0BRPEPyfID0swCDdp/BzA
AaNZTsB5wQsw9rVCJL1/JuKqWuN2saV4Z/QucG6IQpWaTH4oqxj/0v0wz1Qk
a2mBdYtTBHZeuhIp2duQV1ShMxj+vjsWmsYqzCBl4SmLQRflmtfy8o2/RXY8
1tvg8e3+l1WtEaJRZbECxlWRMCmZ51gTRElCmleaxBzB4aJnohSGxYtGeF+e
hC6VVtqzd+DmYhw3XODjrW8ibu21eHcvTYhql/lGOMOt+5QsIWYFMcL2Kh7R
cy75zYpYn6uPOLxhb3jnUhwmY/sIhL5UtA2THcl5sWz/V4gtKpCzRsb2vT6I
G3/ORd8fZUH/VoDBw4BJl1ZoY1Va9+3RVXQ4u1CfjqPVhTZPBqilLPl/o638
/SyutkGJhngAPmqQG+BPVcax/7XK+LwmiISC+dpK6cK9M3C+rIbevU3gkOR2
jFYwlfrtF4Dx55u/77rLZGew/mbiRINgB8hnGqUZwmQSM7NOp7EgkS7dgcED
zGoZcyowUhDgDTdBa2fGix568GVgiSDAL74AVq0CNq8HhvtCraKI4Ng4wbaB
csiMfgbGKenVEZ3uOo65LoAM8omeSbOn6cJiCRqLfn7Ejw6UMQXBlJs11pxi
uqK4s4jh6OliEJQRLdpyjGBxFdNfK1/I9F4FZSzvI5sM65FY1xyiFjCYkACE
GpAbnHdVi1qHqig6XJ/u5/G8Y7ljtP9r04DKQ1XEZa4dg0nY66Q9mmgVcgi4
r/8TCMVN8986yXgfZDkLg1DWq268ZExn4iNR97Mk1gjdRmqO0kXEmArnyNGG
0MdTbGNKjHtwRkSfOEd9KEQU8j6FtQb2uTKF8D6TJtHDUNEVek7SoK+F/Twf
gYKdVSzd7GRRNDEi6g6G12SoHJs8a4CbWZoWM/e26DhKs+rqB0Ybqb3K0j9O
EGutyW99siXeMw24lVJKpMZA/hZlsQ9fStAUulixAY+3gqK4ns9qngqF9xs4
1xCJSO8/JRFpLq8mV01Gz7rwtKTnRFh1EHF0H645eDt8dTHIfGUlampKZf0f
i06VaUh6pTt8n8TCtz0BcbGC3nzZGDr2FDS7uxl6DemlOynulzRZ6Z3RdPLz
mDLZx+RDvYeAbGdf1jy8V2SUMzvnlgl0zC22iXWD8carVRq4aNs2iKH9chXm
vFRVgQyxnv7OnMaiRcifZx7r8/uyEZdZioceCuBh0WVtA13x78AToq7ydYl2
SpFznclbGUBcpA/pzQUrRN8P37YMnPjzJYjpIKqo4GR0XJ6kLsXL93+gnBqE
eUz7PRoT4fOnYFNwk9aOFCsxYgFefVdU5WE1Jl9V+JEkpnHefr+niwzsOTzt
t8URab//l6YKtbUC736bgU7f5eG8/cVaqfvyy44E09RvECrQeSWg3qzrRPUZ
uRRPzhg1ObEMdyHlH6WICNoYu0tYB0aBwHw5ikx65WUTO5hDmcT03RBBSbRX
nEQEJZah+eJ0bTbCuvwW7Q4i9sR/4ZPPDnqVZDQBuIN4U5TdBFa8d4otiitX
Uc/gpD/gBG6iOsGelXFrXnmd3PrpKK/7CW8tAIYdZxhYSA0mAtvcQlf9OAGY
ayVGw9wRFFJ20wok0wATLCjRCOKYSMxUEfrdkmUQsjFdbyV/9Vvodu17qjfZ
qIaxuanBy0V+GjbRApv2schGsTfpYijRc3coAQB7udFz/Wyo/eYfS7QgHG9S
JxW8XKkZB1si+aMzsHjlWi2HJTsIWT1Y/p2VZVYZWeJnluYLXNyoc8gSWEo/
5oJwt3CE6QJtJAM1Hq7zb0P1+usbquH/jySyq2AjKRrDmOz5w9IN9l3OzTW5
sKJSXYiBnGlPmto2r+as0OaE8b/lMsgr32K02fydPQ146RV5/ONsCW1LHC0A
ZOxY092ZVHTpKeatkWyUJd/TWEBD336yXpgLORK45BLjzSToIfhhsTKrJtmt
gpz79Hbu3lOr7hO6Tgh5xZBw7OXUvtSeVp0YJW/y4ml9021MfyaL5l2TZ/ox
nIFMhRsHw5dM1wqXI1mAuKkIR6hMqUjl8/3ssJPIhQ/Hdh38nZQejoCG/8rf
Plfrxde44ajzN2FThh1mJiRasj+Pmt1R2jF3y0zHf+/B0cJ1+eFGc0zQFD4E
Shy/vwI/GKmy8KOZHVS27+MTcm8yRYJSyNFiMD2CypiDydtkJohc1iEKghBS
2IQWluneN7UezI4CQuwDvlB0uFRlfHiUNVfLeOv1jGxmL8Gp525fiIVWOMeG
14bqQXgr0teBD/5J9IAQ+HBTFawq0RT/fC+S1kjtWFezz6oPzjJtWBdJi1b4
EakARcbDOF6a6LDx5Zbeni+3GssILJOEtbKBc0HPpv0T4g43jCw95Ob77TeX
kXGmuj7/FrxUc6Ninr8Et+8xDWbpO0ianYbImL7wVUZgQNVgJGRFwtfzJIw+
+yJkP5yNmMQYNP86E5HN+8mjtEazX9vg2PPE4plXgkCwCvNyfOh8bSnSzq9G
0TKSOplg2fy1O9WlWllWjofnGculXZsynJ/lU8CRt9gomhHFneATYULIvig3
H6tFbfRtnwXfQBtylfdOKpuLCf6hct18bK/1IzYyCzFxQTwy9wNEiuyNjy+S
awqQ2ZGGqxeJQJRxiFiXiXuuGgHfvkg8LCuWi51uAG6UZ1/dhw7vX6EhZI7C
LE7TwXloIZv3qxVeIYLeH/kvL/mN5qfLB+AUlvucKvmDlFEjiD23caxyX9IH
QLKp7buDyjl+yy0myc+SBdKU5/615PBWCyXpeS46oxyTLdKNUilFwlHmf9dv
HBOj4V66Xbk4qWRlrXtsgJQV3LhAiKqZ24cuBb6fUWn2sTFLKEMxBbu6kB50
zBhjVHLfsOyJB924BPFpWqTqU2OONiFFI/cY5TcFBGWNh2pisTMQwOlf3o/I
HSKu35iKx9/aTGq7ZLsfiTroDovU1I5oBTuUWLw64RSzHli8wD502q/mYCLm
vbIbI0YAic38GJH7BdatMxuf+Ioju0EmfD5C7Dkl2nXCuJQLGziXIiPO+B2N
Mtgd93syyXbvdEKcPp6J5xxCfOsqRLbZiK7XvIum/QyNInl1LzE1QboOPvkE
XoowD6ZE05ajUGaIkFWsbLwWAr2uXrwAhaoGjJu4gXOhEvK/JE0dbzy7XrMd
MFlUCRzoRWX0iZ2sXZIs38PX/H7HFxZzRISJMNL4BTpoortIJqxebTrVfLgE
eOElA1fvv99UqZAFlruEqpJUhqxaITEOuegZAUttGkRG7lOI2doaGZ/lYOTV
KzV3nw1yRsz6BGMK3sfcF3aj8duTtcM4MzgZ0ic/Cn0IJkgSrUnAxJ+U56Ja
zSMlq8IwvF8RqreSFYwmKH8THWwO1xFfcF1wF76BN/q7PV5Xiyuf/QYxmdVI
vOoZ3Lb7fiJeBwu4orm3uR9FkTpWWq4Eh75a2NVDAtDfgwDEy6xi+zMI8N96
IAgBCEvkdl2NK2E7q9iIJGh3U9I4ngr6WblIB2iJ8+eOp4IPS5uFQoDfPgmT
PHXPb88zuWJhobaARz3aEPtNQgPnnO53TYn5l9P9DMwwA8wddBMLzHO6n6jc
+iUOdzyQ4M5vqyqc44Hzwcl2td/7bSMjjjFFs2sUyr8FdplEmhQPb7q+olky
824D+zVBoUDjSq5i77BzrvPqX+F/uKjAmCSyw9xm3Fi7GdF7UhCbuhfP/PgF
VaAd2glI6iLqUbay7zEfxt/fXe+u2d6TkPlTMpr+MAFxZ8cZBtYVJyGiNFKd
ymlb4uAr8uGm/HxccdOLaFSVg/PWXo42fua9WFggt9Qr+BLaiOqOiAjimhs/
FOkvrz84E6VVlAwr8UzdaP2+uH+1VzvmrUVDtMaw5WcidUuYftoSHV+6DJP3
yrt+82HkB7NwipxNXCp3QcigP50QuWgT+j0zAb696Yj9pCWifhgjvyfh6kmj
0eTZCerx3y4/xMFc+M1XjkLeq6tVT63dthvZD4ncCxbg521ukZiU8rP3zUfK
tX5U7yvSeSjUtISCEEfpHyUABr12AIlWlpKu9cwzjXlEnkTSTrJYkfKot91E
h1GqmxlMks1ZoNYB75jantY6N5QprB6oVEsUYeux3sPNYf1dPDm8XexOVjFy
PdIOKkOZcwQyPYQeCcDV/iSqqmXUnWKOIvE3efQdhwJa8kJpfNJJQXz6vd9l
5DG/jwLJEXYxhMu6Om4QCiKufooACh4elBYttGqwmwb12bfTWbdUELffbhzl
TLh977Odikusm0N7lRtAbsjWTT/JSN2EHBUaI9yEFGA/rjkE3/UPIKbpTnWm
swXMCYfGUJh6Iobp5a7RlEeEiSM75Lhz3PiuIR8tzJ3Y6eGq8NaYZjaaMxsA
Tzxh1DxdciTWYunA7jo/zvrxDsTsTtchnnzDZrWDeTiK9Oflh9k5PBzjIQU2
jSw6mESkheddV9fjCat/LtE7F5KejiCBLO7sikPWdzKn0xvApntEMIw33HFH
KPmBBLuTJ5uhMeHuDopsiQVIF/hF6QFMXz0HyYFMDK44D7nP/oyTbl+B3ld9
omg6YsI7GDa8Vp0mbdua76NeZ1YLe+SyyoA51jk5wAUXGN589tejE4N9bOj/
YY52aakp9uXwMh3W5YySGY9WIFNMBBiaBZ2iZfUu3ZerlXqdi5xIl451qkgq
C+I+BvqYNMkVzdEXa7iP3R00zKlHCGhJfPzkjkWivWsVHb30ksdMzEYI/iDq
TYZrpCO6pcFzLgJDMlTubK5JAQDeW8O4WSPDvsZpTFdRxq3DzkKh3WywBPMN
/q/uhN/DEkSt/NyfYAlHJkqydQZeKAXkLZ3taceIziGXu+1sH4FfwBAsT1MB
E7QQKLBkfxRGZdnnDq/2dy0PWdJmozt6EMTJZDsEwDlm6AghBNDVfikNGn6Z
s/R5UMwSCmr7OHnRBBf0S31qdJr/0/iPNMQ8XjAb2CzDsAehI2jzivgkQbe3
bnnYjx49jfXuqJwuvVR0zrs5mPT5ozrXFJlc4w89FkDc6YsQmRyDxN+ScMVH
ExEdTMDLb78tWHIOhonVGlHWGb4996DJgXREZMutvt0ekcFInFnpw4mfb0ZT
uth3FmsrtL8tPAFdD32AAzV0x1UiPjgDcfGGWxD+z9EzdzS+tre+KDcP32qT
lMe1dQGX7PTpAfQI5GDZwSOrwkaIpX2ZiKtzDo1Ho/NO0dziTrMCuPvuIBqV
zUPrZ4uQsOAq9Ph6rLxyCyIOxaD/ef0x6tbVOpT0OVHc3VF3B+LePgsj95+C
sctvR5M2u9WZKfvfBcrOnbkJNz3n9orJ5XKUG+Hc9mYNxKllS1HDJmDOV0rR
xD7nfe3CdMWXXPJrsCbSzgy0pbXCGDU/GdbuJW9rqed6artKnu8qC2I6TviD
TiamXmKyRpIX4TP8jKMEShM4spMJvW/h1A3xAge+1+ynEEVAdT3qBtPJ5FJZ
60fp4rwZkw5N8aojGu+cgyVlR3IE8KBpbdoMQNEIPfJ8dJo+3AuEIpQIjEdw
+VIi0L/ErcyVef+qd3HRxXXaaYyu8TVr4IinKYDoRKR3lfuZ/g0jtJLURcd9
TrhBv4I602pjEfXxaCW2Ts8UCX/TfZhd8ZbXtoPX2WSdLzy4m0WEuBaUjEG7
S1Jih9yrrbSG6NVXzaRT/5Brkq5nLgbXx5XHrbcCN9y3Xa2VqN2pOHfDDfim
coeGPJw8ofx0TRto8fA7+TgEaj/hJ2vPxWvpBjkzb7rJeOiYdXTZZSZGLwvP
iXTWFpOOc/PmkMplQxKWofOvXvZy/EpKQlqSZHM/CaYbLOFjBSrMoPfTb925
07QHos+al2HHUlr21OTUFKx6Z50hLX0ONuPkJEJnrgo1M8EIn5jZC0OH16D3
E48i1p+Ofv+8HjfM2qPIgX31Foqp9dFHWuLCecfH2wxBGyeTth4jX8xWpHLj
qBFz8tYJwKh9GBWirGWGAGWtaCnjG0tTVyUTx4l8qXQYu7KySEm6OsvDd2wp
60Tk94/LDQnY1ELBe1OhMQjW3uUvsoPcFuVL7elFIS6xI84FTZUUmUFJec/s
1xEz6nBdtalVoevLVWKRUHST/TwL9Nmtkk2x2bA6X96TL7dRUg3nGHLqmGIz
XB2f+695GPzGX1fHHKT/g2nvYj9UYGxUzb/a2N0TXttJcMqqHFd0zlwCOiQd
ZSW7O5kM/wTN9OCuYD4nLWLa4NwJtDEIykXt2YzHKPW/EsDzL6exKUPoznMH
4dkiLHIa21bQ6F/1NHacphNTOlH9clB5sE+c3IWnmhmFTTOJAvbcFTqIvDNG
Jxui13GGeaj7HqVmpV19hfgzep3r31iqjHDT9v9+z76B1CFLyzG4PAeOXme8
LIIJe4Yg0l+Abv+6U8xiH1qtbYVzXx+NiJpIzJp7P9555x10vpuMnj2Qcrbo
eEbiuso+m5uoI/vQgY6Inz8MvXf58Pedm/V+Viw71rT3YLZjbz+SK3Iwvczt
Aj8W5+YgJ1f25wy5l+x5AlyMLr8ZM3HMiisFn1cjv65h5vmZsrga1yYjPZAF
31UD0UxGL3FaFS5/qgpxpwZEsFUhkt1jZRE3nSva4/ueWq4z49XNoj+GqplO
cJh2qBm69t2HrCceR0zGLiQvnqy9c0JwKoCyNcZEDJFse4naTe2SoD4/6cwA
JkwNqmhnd81mzYIo3+z39beqwJWfOa75PYrSqnGl3E6KqA4KrzZyu620uiFT
xNXpIsImqlpJV2bPaFnuzzTY+cMryNISABe/7S928eta5OL69e0WOEe7Y5Jc
yQQlEJadY+hV8m2NjeE5OCSLtgm6bHsXmaUyTVsXYszXt8k2TsWZArQ+EpvU
FXC7Fgv0whNz86Afj+KLHnpuG9pBtNCZuUM1xjAXbSR69Bf+sxqDTtqmDs30
O+dg3vZFaq27qAE3K0v0uMlprfI1F291phhtrasqHsagmz5G5N/nwrelGVK2
dsOQoGlfa2vbdGeLaHWqkMqdAp/yxXltKTKp6mgMCzZxzB20ozi7NEyp0Olo
YUY+m5Wa96SrYWnTv9S5TDVI9RjfYTMuOTQdjQ6mocvLd6ghQbXESDCjC7a2
UqUsPZ8yStbtGK9AggCZDh0mqhE5sl8UW6PV1cHZ5gxnExGJfespdd4KtSx9
QFlW+jG/lRqSbgxqQZsTZ0KSHXWpk16RhbzFxSaS/NjCKgxedSEa726FcS++
pt0YmDo4apThH+0sZlSTjEPwVTeBb1djxLx5pnrI2s+ei5hdGej5+u3otuxi
JOxpirvm7Ea7rYPxj4+LdTSZI/BC5b/QOtheA4jsJOZ3HrDY8B1nZUelzFjA
lLAm4PB26x/JeI61fVroxxENaOemsWFHlFHYUWfgyunHmmCD6GrdRWGGLhZP
1bbOnhGcL58rsc5ac65f+Dk9SBzq5MQsea1d2RmaOGgbNhhln22+oyQf0Exy
8in4grjT/z6uWfqx7LtXcYJ89uiSe/+SZmZgOFwzj/5lKjq98Zc0s/NqszyE
+ox/tbcbjmuEYT3CX9rv3HDOEc/iLrYz4kYWrdnBzgRz5JjRy4N3KjaMZgQR
iHG/i3ll3ZBR6oakLNyMzb6edqK5CXln7uDnREw7/MBvpTOPfxmTyXMMcTFT
snEhM5LHg/upv9I8uE5K8Wom9RTk6rPe8ljLQUzFnCEPyrN95D4bpjFxa6xE
fbShaQ+nMbm5XtScwL5PnwAeqPv9RnNvvikGdmAcsq74TrN10uQRf5AJeakm
HxH7BGqcsQ+r9jA3PgZNS5ph4Es9RIY0xfgbTsWNN36O6N8S4KvtjCazM2T3
+TB2zlhELYzE9JpjVcFf/OYePF/rw+kH/o0fKqqQtVeeeyVJVYNo2lSM7BXz
PHopl9q/ZWe18SsFg57yvXfhBkTuSsXaLZW/S3x+7G9lSHj5fBGaHTD0utUg
i1/zN0vQbV2WXiOyUJ6j5iZkru+Plk9VYsaXr8IXiMJ5IJXt35R9kJHmjquP
VTMydfkKDPv5QpX6D4vWCjHgGX2VsrUI99zj5uHIBsj/Swa842sXY+jTlgEv
FuP3FCPj9BLZmPWsW6Pvm3okzNyhL+NJ0bYnqElL46SV6DtCtY4YhtEYZQ15
n7LcMQs9UV4fIlfqIhcN65YRIvLxqmed1mmhepYSIVZWCavt52Olbl3Go8Nb
ZZi0c5U/3mjOEkXXaNN9eMHPXEXTmegT0csjcaJcqYne2wyUedW7BO3U44xb
UsIy0kjJQ8caXSjcZdzHlFhJdUk4bs1FSM/+Hkm9fsEzz9ZpeNYVYPE6zLzy
ovXGszpMmVp70flmHMrx2HVoH6IWnIvkkcsVrE28cS2mVOQpehAZ60jQHQXm
B/Kjp80o0XlAbzbg2AsS1N9CTML7ePbLH7VRO7Urk69IOVxV5cLNGdpKNbyR
KIMTNHbLyw0ZEI+rH16H3qUXqDHDeaak5bxY40Pnh/chtpNRtXEahGDWOQMQ
jHAzZ4ONw+TS1osQrV9Npz6j1WI/O8XOLEDbYMuKw1hFSRTkVOp0o9D0FUHe
0l6J9gonxVCT2aDfIC9HrVVta8TVxqsx/cw3KxAtplt2xSXo8etoHPfVxYbS
vy4GQ9adgsyvKzB4SjHYTTn+K8FbjMzJvSWuuwQZn5Rp24/Rl5Wiy4GpOL40
H523LcKsu4GH3irD5VtnICtQgAUlpo3Ixk3lGnX7X7Qkn1lTjtW7XEvyVPTY
9gBalY5AdGAMhq28AkNWfaXp/gwReDQrMnztBQHERBlHBCeidXNjZscnhjjy
ypzGtkdBtrInuriy/VP/clECBqoe4NYUhT6++G2HEZUez/YsDKdDaeY7gFH+
szGl9Hv99uYzvlf22z/Q4V5MiIkOR5l+5V6HThY90MIHHI9HtJZE0mFN/fgl
vnRecV6aa4PxDMED5gpJCoRpLPPgarINOFUGMNOPmJtpAoJwrB6PUmhA9AHP
4DYdraLsULk9SYRmnI6h/qG8PhFPaFXbDMB2ikhouZFon+l+NGl40K9wjlZc
+zTpO1bUCM2pgSY1H6ZOMcX+FqG3PFrJX7J/h2PCeSk9ujd7ewO8XHxmkBCE
b9v2+/3RrljnF8vRjyG13WRAzlKCiWm4DhfjUuRcE0DkkhMx4ZCxwls/3gPR
70cjbRXrKVOQ9F13pC27SiHKbYHb9M5JGXvdF9fBd0ITtHo/F+23mtr97w6a
BPaE8nyMrlyM4lXG60diBFZVz9DW6zy8BHZXV+VuuakgwRP2TJCBveoI2upJ
ciazZjKalBQgu4ZflIzWXQ/ghqWL0P/XPEQFctD0BRGVOaWYHrwVEbViVszf
iudf34OImijRIKMEzx+QKUhGguCW6DJaBjdgx76ArOIfBY/10lz04/F3pSjT
/V9eicTgDHyv0jbYYOPfMIqy32coS/9ThjK+3vXFzTj2gA9X11VofLHNu/Nw
zYr6DGXsPTXQXpNuwQFsPSkzxYwM+ukS1TMfLX8nqOhN17Z96SqSCbCWy2Yl
js5QtjH+zOJD2PtsH67U9fBqYGGSyq6WTWaqS5J0Q1LRhvdNyFfhuAmmLM30
TdggA0Wql+U4A+Fddv4fbecBX3WVtP9LCkkgQAgdRLo0iYqIYI8F22rsFdsq
2FbFbnRtUZeNuq7R1zWurrFlXzWuGhurayyxRSWWWKKCGEtwjRIxgBe4IfOf
75xzfveGJu67/x+fXeHm5t5fOWfmmZlnnilV3xjTvT5W/7W1/u85edWdRi9L
xhFJkCRFpohsKOq8VITZfGf+eJlcPPdHiY1eIIMfOkeRaG9DZ6VSGgsZ+PX4
9qiZgGoajh0LpLfRvZxnFV0y1jYlavdXZPKDpdJtdS/L7xGFsGfP0D9AmyBq
TUoS46anGRYA3+hztt7Ld7VZmZf9vkP6jlBTPe4zmXTNQ/LK580u1dfXOFtD
hrh7zoTxXr3c38nbU5/mIGPN+E1sJM8WUEdSgywkgQxJG8oCj8qjrrU+y1rh
mI7CuAM+knR/ZaUbm9nN34uKCjceiza9vyEI5y6CdJJNAPmKEFMM/ECLYpVx
kHolxcK/MbPLZbkLig60wgAxHz8iO7vM1wJBIaRJOfHNTY4tZmwq7hdPgie7
QBfHdnKRvjJeXGqyWJyai/PL1LiqVj8jk1dtL9euniE3fBiXa1fEZM/GZiOV
ndZSINNfb7ZyDFBlxv3OmG4xgXmkCel2aZNJScBNADFNvtlt1qJDXF7jvPPi
csCqIjnvToVEr+rvrimTF14WeeQnfW1Jmyxd6gZyZxa2SW48JlnPviUZU96V
/H9eJmNfekAO1ljrtH+5gdxzy9wM1khY912RRYrU9lMYtWKN4zxMHeHSB3e9
HHlwRsUWuFx85KTW9eoDU1+z46WGZpmSmKae8xS5Tn9WMFtd+hz9b6GTak51
974P0g5y/XVtrkeyTDdsm+6CpriEEjs5GL80I49OxijUkoPrZo/xZMGZ6k9D
/pzFQEsJcBSRAHQTQ94diwLk4z20JVwhV0QFL+gJ5L5oKSHZQJlAF9JYfwb0
TrGGSJeFyJ0qgw/N7SB1n22UjigDf7UYVu3s1NOthIXzrrP4ZryM18VOFYYN
TzMomY5uZmSdsvs02cpBu742HSzTq5H20S//o8KGDWkNdPbpZeuzs0EwERff
v6neu3deXP+gryfiBZJV3yDPPNOqTn26PrVe1gb9B3lcUTRp/z/JIe8DS7Yw
esyuD+wlox4cJV2e6CI7tp6gT2GqNDSs0T2RLu2o841Il+4ru8tMXe+xoudl
9EUVRsG78O9qFrddKFti4Jcvkk++gB/dKud8Mc/r8beoAS+yzp21FYbfWuDo
4q/pgntUztOofGv/nrEWelCGI+T47jt3M/Zcva90Pe1vJmp96R/bpM9kR8wh
1/mT+uvYl8Nl1D6fySWX6D5eginOks8Vh+7z5WzJrDpE4Mptvmacmsm7jdd8
jC6hPU2SNBYNacHanbE4xJ4t65tQuxHtqPxN0o4a9/AiXQ4Fcl+iWaZf3ixz
yjprR2kUsZ3/itVeZj5mIl4xY2fiw/P10oZpEI5p3Fkv6zQ1oRXGdeZoNJn5
ybKfQZdjdH0nR+Gl+vFIZt6f/gR7B1XsqRpcOypZui7zbeQvauGTMvPrzgop
VNtSrCggVWa+Rb+HzMPNurfQ02BbkiTHWUMexijgIfg0gnT2YcPnyyX9d3+R
LnlL5dATlslFDfcb5qcyh2ANG07DhsBzSPXlcJvw5e7pbGbBDV1+kGko4oeu
PmogMODIDdNiTvcVhVoylTyxbVyWxHIGbGDyfmAIspxQfPguoA45RMo0JAQU
8jjX2t3GMtIISP0YnEspm/5TjA4NCnxcGOfr8EVfG5zNQuegdgx1nwPMcc01
7u8jR7rB2j5zYBP3sH/EF0AhiFJeNs9Z6GwjpJEh5xSYxEXfAnE5X6F3ISgw
4m5gbsElo8K9YEGSJwfO2MtYgcHbd4tYQVhnzya2qclQk7DmADK14IP8xRFD
kWviOUDmp1iaaYFQVytgsHy4KC6AnCvZYgzhNhqWHOmDKFdiNFAclCsZIsK3
vS8bHiWNa6s1XBsJv7lfn2i1EuwnpL+XP3f7+P5HXLrjxhtbZYb6+kNKRI56
oMy4sTvuLDL6kyLJu6dN7U2bdInvqiHRodaB0uPV38o2178m+13UJsed0CJ7
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
UI3Rtf13fKmhwJCfVJu9MfTl1kJ/A3UYGrhmYYgQfhKhErJV2Eq2ygneFjyo
4BPCwMj2a+W0JYXS/+NaI3gdfeujkv79jvJyx5HJwKS7LrMPFUluqb8ywO77
+/pU5lg1cWYUN3qwEim1pqAVv0haPE0ba/PLaGWP9y6SPiuHKezrLf1vqJZH
Wovl1LZy6dVSZsuOAuFJ3x4u+7z0rXSZ/I70zu+QCce/LZmPHCWfL3PyGq8q
kGNQWkuKzt0mzueMKkGbMJI3zC8jbTnX1SZiYTwNwIneha/fcqt9pkY5N7ID
EK71u6PiLdfNxo4qKXYEH46ywmgGL9X6Zn17oW7MqkrH++G+Jha6j9AgVho8
DJmjG6k1qd1rCZnCYvcaQRO0Ik61UL/uMzT19efzqnQDVkjAYn/RP1SOOLxS
eyxoKwAjGMRLYMJiaJRGXwLsYWw1sBmvZxm9MMd2naetmPIN/UiU+8nUJEdR
ptvPsJf8q1fKmifRw6aGbqKf72FJhpl0bCJjlxYsiJJdKP+yK4GKemph2Eyi
SSLC1JuvO7A0pzKyfu5xjzTsVeTZsGbIfFAa7vOL63mt9b9vAMOAEmR+AKnw
DR6VR0ORkBw8lCqsBIiOiRsBr5IaRAfYz6UOxg4YGzT5w1PG05DWwFgh1UmH
kEucuXo7FsQ1poZiccyyEhXW6Vat/y7WPTFHQk92wCvlah62snRwU5q3lSmA
zX/cfz63fa3uMW9prJsklAm9kLH/qoQhpN3ktUC0c1meouhsuF8adjjuZRKi
NStUjM2RmuoyKa9zVqxeN1NJXauHaLmdSqNYl/6W5+qmW+Yk04IsUzQxUT1W
po0oyHNltu4WnLvYJT367xw9w9RuXq+SFNHfU6Ea23fKlBa5umP9ssCB6nS+
/k7fE5qsAyapRlcmiw37lkvTD60y8K9Ncts3M03FJnw31Jy9Kqtlx6u+kp6r
+8rb7dWyNZYobXMZfu5w6bKiq2R1P900/rOv7CXbbOM40Xe/r9/0fRfJOOhx
ST/yD3LaTidKRaU+6DlOHriurAiLFlM0PLvqE7VIdTJFP6J3/7h8/pYbMFxc
ViFHzCiSzJwq+ZtP70i8TooKy3wG7yspBzjPzpGahodslPNsDYsaa9XbxIpk
n6MWS05XtZwZZZLeR9FeZS/pN2yJdM+ZKWkZ5TLrmDmSf9xpcm7bSVJ6TMy4
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
GyLHzGpf2p/xHKD/pgsRdfQ1xTGcW5+Be/5Ti5/qW+5ClGIvgYNy+WniL0w2
yBhOmDjIHiuD/GqOjGWlX4/Q9Jhfu5m0nFpGLztnsiVh5qZCPrbECghuVXIE
8NVQ/TdFNSplGePQtBRvwS2ePKPgYCYEzdXrSf/3Kbp8O1Ep9/1m3EFMvHMv
wmKusqvnMAzGsJDTsUeLBjCWUEvFkK828msLsIUCyaz/GgMfJJndJJfcV0bo
qMRU9Hj6RvQURXPsDR9hp9M6yfo9zMMy15VGMH3uAjzwwJ8wN/M2pNSnYFh6
y7jl4twM04Ix389q/S+wzNeNy0Cbtkncc0sZ2ok7+9eyUuUyrpGNtEt8lPzd
H8edI/ZgxyxkHBhDRYUfDmPzMlKbUv63Kd8ToaUHYfKD92LZMuPGit3GaQtx
Y0ZNKTayM4wcIbdbrV2vDL0VFhk8cxx+WXRdhZEZPB6WhSl2AsprDZAsI89m
qlI1G0mMIvUI2b6J5xL9sqddcHRMaCUO8TpIdW6VH85wkOSoi1qKWo83YFvI
4RzggiQwVGUkgFmCJelWZpAkNdgFfvbsxl3gTz21WRd4fTDLzCwKFSlR2ESR
8cF8Des+v8SXXjUqtx23JgUlk598sDKz1ruVTuqcbES96ngGq84XX5WkGk6W
JdUGS7oBduk0Eswwnk5F/DE+dpFTxmNpbjO/Ttglb5ohTPGGQ677mEtEUw2f
irleu5vDZYgZKuPnWWN6jerzsIIzqxXRVi1bkrRNUW0qYTR+vkWuVWmLZdvu
JhCib9rvpi9ca411MiCv/ZaJkWsr8dRTSczdmIWsa0gqWYGOCbmifNPvpoMs
0767VWPg5yXY67VSnH1BEpf8OwOj4uUaWGabgOxsTxIXM/MnXykQr6UwbP4u
LrSrXD5eVeR2wkQU+I4f8nIMdigrDx5yuMIaekVZRjO6/K7ecsILNJvvM9db
4mtRammikQnqYs43O2p+l7unIN+PkHJ9MkvvkLLUrCQpIpShiWYdb9cM1xrR
DMTDu9F8QdbhvrIYXKOSYh9MG2i14+VbmrbfCapMt/Aak2f/b3vtuAKj116T
yZY1EtHu4WecAdf2hY6nI7OMWi0px8xMpnqHdGKqzazHXN634xbFV4DGMuQU
LCNExH/y1RC7r4j1ZJSIlD4dZHKY7uGuYbDCr0SukeFUoFRouD1G6AW7CMJX
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
Wp0CYvJkE71Yvlzny01SuS6c4K5Oaaknu1c2UhLAunD6idxmioqpNNfjgOx8
NDg/kCcDz0bAtE6hUoJvcTHOU5IgLrKrsc8WKVTWO5dTf8W4F6YSfSsY/X7b
RKEyaU0FTv1S9tRPxZi6h6yHK0vQrqwY/f8cx6xLS8XIzsCpt5um8SSYJhb7
t99gsV4pav8wxMQ4OkNTN+JGOwQdNL40Xp68bZp2lLlMzD+LZz1SZx/f5NlK
Xv+1xhyWjUqCQ35N8DaVSqfYIWFck5EPbjtm5Z94wmwDZuqJBKTVStaUQw81
jRKodZjVZ991powGs+XvAANbI4vK0fsYi/i+x/18QER2eamNrrhb0WOrjOB0
3kXEVJ16ZR/cVny/tM4d6+UXF8VNJSun7a1IPfrll4hMvQXjs3l+2XiV2ToN
FGtckUymEi/JSmy2HiZzy55WELHAihkd/6GizCHlmtZryf73JGtQojnWNPYC
ojPHsnt95xJ9wyvaQ1J8eFPh6/3OQ/IkDglwoIuOrZZ4RPEResJhfnZrpcSj
ZbTcjizzuDr5qhLXmmc3tP/+fZz06oVKvL//5nMxfqO5iyPXsTj6Mjz5oozP
wlLMqTffGilG20dyyv3n3YbQV/3sPQ3H/2vvyuOjLK/1WJaAoUgU2WQVxA2i
VmvdQMdqrbIMKt5KTa0IRqoWgxYxeq0SrTitVVKtRG81Fo1FY9FUan5VIzZu
cYnVURrFiFEbxBEGGZERh+S55znv+y2zJJkA7f3nzvcTkzfffMu7nPcsz3nO
fe0cXA/4Y3a88zEFHoZpoiZk3oMx0nKO7zl/u6YRP94q14lV4aSldcrv0qNW
dokXPPXqR42tqH23HAe3pWKYjpOpsm9zGf66JWmFYr6NCPuOL/+I599mimZA
TYHAtnOQt52JN8MsKCgTMdrxjp10vWiOv5ZLkkuRQUouM3pt6DD46CN/mqvh
OSCVnSO8sxQCd/ePV0QWzZKZxGRcFqUhEIWBAaIfRAKRld8W181DZjljMw6e
Eb+XSjECbKPqfsxOLlKPrNT6u0wuMn5DAy77JIjvN0fw5FutiGyI4atUSucT
9HI9lU+JqYbM8zobZ4+ya5U6CylZ2RuMmZp8ByhXEY21E+V4G2/3cx80G2Wi
lxPrUG8zR5kCgFHjl1825c9JFF9ensTVSxOK/aYHmwhrZncz6kx0teqtA4z3
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
eQ1ei9fktXkPuZdbeS+z7G0PP0ukKxD8JW6zteVa9jYJBwyz+8hVsrV1qdHv
g+6SqzgcDAG5RYM+akQfjgXtPDGcnVqrxk31zMahle9v029G4WeaMBhiC/tw
s7L+HcRaFveRVR53gr5xcbrMvztcS/Z0jL7Jzo/jom8CTih3Z+E3XeFa/o63
NYRCX9BWbHXcn47xXSpW7kuWn+CqWzZgQGAz6uU+iSYry1KNb794Tljsankl
NMG91QycqsLVa2MaD9pF49sJ2TN+Q+gugWqEYnPtM9fhww89mCcpmOhWF4Pc
uul7prDzxGKudh7zoFEuLi3uTSwbFB6EzpIRzUuZOu2kU7pZhHbH9dzNx/DL
Jp23srmIvk96MuIBOSUjTt7RiKe3imK4rQarRK198NlanPNuDWY/HseC35lk
xBMuM+ow1WKqx1STqS5Tbab6TDWa6jTVaqrXVLOpblPtpvpNNZzqOLlFTKL4
XsiNxzBrmy+7u2siw73cgeoGIUn/jghJOmzrkpFkn51iJHFUcYeRJCy/17u6
bEGHFFEOZ0N2OqiUNjdf0uwEZT5AtAsZyRCku4sjyocZSRGkE91R6xq8445a
Z7SB2UctE70zahdoA7uGxTAgySpkJJRgmpJ9CIRLVAd0h2Lt2rUYO3as+Xuq
hW7PGagFW4sDHu9pxOd/jZT5HA9iizMdKRAow80dm+pOWjct9U8+Ae6807ge
KTGnTzfkdBs3WilokBaOSs1kKLGSXWHqR3S7DgAntz3hgfUy4do9/HBtW/tt
nBpjrBb5iRzvycHkWibGPCUHg/sEjTC7laRLJGMijfcCOS7GBfguRoi9c5Zm
Tk3CkepjGiQmB4mamD+yp61Bt1ps2E7Kl9uZwD014iVHpifHDM4psXDghw0Y
2hTEwOcimHx1K2ZcE0PxAmDOP81U+sF7EXUG0ylM5zCdxEyVmGw7tDMeP787
M7M+qcft51Dy5Ma5YQoSWM6NlCIFTpuDZcqFb+Ma93k8NqJe7lNlsg5la2PZ
MsczWWypKHKhItLmm/REq6xlB9awD/bHNAzGENcnkAas6bgbugTVmCLivXU1
OG/EictE/bfxtgPNSYha4eBiEgkCn/PwzbYtinCKVFpIZz7uaTCnNdUZrcsR
CHxIxrSrxKY5b2oMr3yacHdOLse1VZU4KNDSkRlp+yIPb7wawy8Xm5xRpjex
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"staplePack", "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7073293861140413`*^9, 3.707329405728915*^9}}],

Cell[BoxData[
 RowBox[{"Output", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
   "Energy", ",", "fak", ",", "fbk", ",", "fck", ",", "fdk", ",", "fxk", ",", 
    "fyk", ",", "fzk", ",", "fal", ",", "fbl", ",", "fcl", ",", "fdl", ",", 
    "fxl", ",", "fyl", ",", "fzl"}], "}"}]}]], "Output",
 CellChangeTimes->{{3.7073293904222727`*^9, 3.7073294061609488`*^9}, 
   3.707330307176776*^9, 3.707330840369972*^9, 3.707340967540016*^9, 
   3.70734260112144*^9, 3.7073879855888453`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nonbond rigid-body energy term", "Title",
 CellChangeTimes->{{3.702666046819551*^9, 3.702666055636635*^9}, 
   3.702667845434409*^9, {3.707145989570416*^9, 3.707145992887137*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"pm", ",", "pxm", ",", "pym", ",", "pzm"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"pn", ",", "pxn", ",", "pyn", ",", "pzn"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"evdw", ",", " ", "eeel", ",", "nonbondRBEquation"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7026651212890797`*^9, 3.702665129345278*^9}, {
   3.707146129988819*^9, 3.707146130257345*^9}, {3.707146172218062*^9, 
   3.7071461815378304`*^9}, 3.70714659797876*^9, {3.707400124575437*^9, 
   3.7074002029480124`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pm", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{"pxm", ",", "pym", ",", "pzm"}], " ", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pn", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{"pxn", ",", "pyn", ",", "pzn"}], " ", "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.702665060868902*^9, 3.702665086478999*^9}, {
  3.7026651779582376`*^9, 3.702665179746352*^9}, {3.702894426628853*^9, 
  3.702894442471896*^9}, {3.70740021463619*^9, 3.707400216121002*^9}, {
  3.707400269377879*^9, 3.7074002869019833`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plabm", " ", "=", " ", 
  RowBox[{"quatmultrans", "[", 
   RowBox[{
    RowBox[{"quat", "[", 
     RowBox[{"am", ",", "bm", ",", "cm", ",", "dm"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"xm", ",", "ym", ",", "zm"}], "}"}], ",", "pm"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.707400369645995*^9, 3.7074004478465776`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pxm", "+", 
    FractionBox[
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["cm", "2"]}], " ", "pxm"}], "-", 
        RowBox[{
         SuperscriptBox["dm", "2"], " ", "pxm"}], "+", 
        RowBox[{"bm", " ", "cm", " ", "pym"}], "-", 
        RowBox[{"am", " ", "dm", " ", "pym"}], "+", 
        RowBox[{"am", " ", "cm", " ", "pzm"}], "+", 
        RowBox[{"bm", " ", "dm", " ", "pzm"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["am", "2"], "+", 
      SuperscriptBox["bm", "2"], "+", 
      SuperscriptBox["cm", "2"], "+", 
      SuperscriptBox["dm", "2"]}]], "+", "xm"}], ",", 
   RowBox[{"pym", "+", 
    FractionBox[
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bm", " ", "cm", " ", "pxm"}], "+", 
        RowBox[{"am", " ", "dm", " ", "pxm"}], "-", 
        RowBox[{
         SuperscriptBox["bm", "2"], " ", "pym"}], "-", 
        RowBox[{
         SuperscriptBox["dm", "2"], " ", "pym"}], "-", 
        RowBox[{"am", " ", "bm", " ", "pzm"}], "+", 
        RowBox[{"cm", " ", "dm", " ", "pzm"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["am", "2"], "+", 
      SuperscriptBox["bm", "2"], "+", 
      SuperscriptBox["cm", "2"], "+", 
      SuperscriptBox["dm", "2"]}]], "+", "ym"}], ",", 
   RowBox[{"pzm", "+", 
    FractionBox[
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "am"}], " ", "cm", " ", "pxm"}], "+", 
        RowBox[{"bm", " ", "dm", " ", "pxm"}], "+", 
        RowBox[{"am", " ", "bm", " ", "pym"}], "+", 
        RowBox[{"cm", " ", "dm", " ", "pym"}], "-", 
        RowBox[{
         SuperscriptBox["bm", "2"], " ", "pzm"}], "-", 
        RowBox[{
         SuperscriptBox["cm", "2"], " ", "pzm"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["am", "2"], "+", 
      SuperscriptBox["bm", "2"], "+", 
      SuperscriptBox["cm", "2"], "+", 
      SuperscriptBox["dm", "2"]}]], "+", "zm"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.707400422376809*^9, 3.707400450582201*^9}, 
   3.707400581781871*^9, 3.707400825622944*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plabn", " ", "=", " ", 
  RowBox[{"quatmultrans", "[", 
   RowBox[{
    RowBox[{"quat", "[", 
     RowBox[{"an", ",", "bn", ",", "cn", ",", "dn"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"xn", ",", "yn", ",", "zn"}], "}"}], ",", "pn"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7074004312963457`*^9, 3.707400438008939*^9}, {
  3.707400477287383*^9, 3.707400489926196*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pxn", "+", 
    FractionBox[
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["cn", "2"]}], " ", "pxn"}], "-", 
        RowBox[{
         SuperscriptBox["dn", "2"], " ", "pxn"}], "+", 
        RowBox[{"bn", " ", "cn", " ", "pyn"}], "-", 
        RowBox[{"an", " ", "dn", " ", "pyn"}], "+", 
        RowBox[{"an", " ", "cn", " ", "pzn"}], "+", 
        RowBox[{"bn", " ", "dn", " ", "pzn"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["an", "2"], "+", 
      SuperscriptBox["bn", "2"], "+", 
      SuperscriptBox["cn", "2"], "+", 
      SuperscriptBox["dn", "2"]}]], "+", "xn"}], ",", 
   RowBox[{"pyn", "+", 
    FractionBox[
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bn", " ", "cn", " ", "pxn"}], "+", 
        RowBox[{"an", " ", "dn", " ", "pxn"}], "-", 
        RowBox[{
         SuperscriptBox["bn", "2"], " ", "pyn"}], "-", 
        RowBox[{
         SuperscriptBox["dn", "2"], " ", "pyn"}], "-", 
        RowBox[{"an", " ", "bn", " ", "pzn"}], "+", 
        RowBox[{"cn", " ", "dn", " ", "pzn"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["an", "2"], "+", 
      SuperscriptBox["bn", "2"], "+", 
      SuperscriptBox["cn", "2"], "+", 
      SuperscriptBox["dn", "2"]}]], "+", "yn"}], ",", 
   RowBox[{"pzn", "+", 
    FractionBox[
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "an"}], " ", "cn", " ", "pxn"}], "+", 
        RowBox[{"bn", " ", "dn", " ", "pxn"}], "+", 
        RowBox[{"an", " ", "bn", " ", "pyn"}], "+", 
        RowBox[{"cn", " ", "dn", " ", "pyn"}], "-", 
        RowBox[{
         SuperscriptBox["bn", "2"], " ", "pzn"}], "-", 
        RowBox[{
         SuperscriptBox["cn", "2"], " ", "pzn"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["an", "2"], "+", 
      SuperscriptBox["bn", "2"], "+", 
      SuperscriptBox["cn", "2"], "+", 
      SuperscriptBox["dn", "2"]}]], "+", "zn"}]}], "}"}]], "Output",
 CellChangeTimes->{3.707400495850567*^9, 3.707400584881618*^9, 
  3.707400825715383*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nonbondRBDistance", " ", "=", " ", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"plabm", "-", "plabn"}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"plabm", "-", "plabn"}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.411175191371356*^9, 3.4111752070248013`*^9}, {
   3.411197578518401*^9, 3.411197589788989*^9}, {3.707146083954568*^9, 
   3.707146107438168*^9}, {3.707146230475306*^9, 3.7071462420652227`*^9}, 
   3.707146598026679*^9, {3.7071486245449133`*^9, 3.707148629798176*^9}, {
   3.707400520684037*^9, 3.707400535376216*^9}, 3.7074005925109158`*^9}],

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"pxm", "-", "pxn", "+", 
       FractionBox[
        RowBox[{"2.`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["cm", "2"]}], " ", "pxm"}], "-", 
           RowBox[{
            SuperscriptBox["dm", "2"], " ", "pxm"}], "+", 
           RowBox[{"bm", " ", "cm", " ", "pym"}], "-", 
           RowBox[{"am", " ", "dm", " ", "pym"}], "+", 
           RowBox[{"am", " ", "cm", " ", "pzm"}], "+", 
           RowBox[{"bm", " ", "dm", " ", "pzm"}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox["am", "2"], "+", 
         SuperscriptBox["bm", "2"], "+", 
         SuperscriptBox["cm", "2"], "+", 
         SuperscriptBox["dm", "2"]}]], "-", 
       FractionBox[
        RowBox[{"2.`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["cn", "2"]}], " ", "pxn"}], "-", 
           RowBox[{
            SuperscriptBox["dn", "2"], " ", "pxn"}], "+", 
           RowBox[{"bn", " ", "cn", " ", "pyn"}], "-", 
           RowBox[{"an", " ", "dn", " ", "pyn"}], "+", 
           RowBox[{"an", " ", "cn", " ", "pzn"}], "+", 
           RowBox[{"bn", " ", "dn", " ", "pzn"}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox["an", "2"], "+", 
         SuperscriptBox["bn", "2"], "+", 
         SuperscriptBox["cn", "2"], "+", 
         SuperscriptBox["dn", "2"]}]], "+", "xm", "-", "xn"}], ")"}], "2"], 
    "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"pym", "-", "pyn", "+", 
       FractionBox[
        RowBox[{"2.`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"bm", " ", "cm", " ", "pxm"}], "+", 
           RowBox[{"am", " ", "dm", " ", "pxm"}], "-", 
           RowBox[{
            SuperscriptBox["bm", "2"], " ", "pym"}], "-", 
           RowBox[{
            SuperscriptBox["dm", "2"], " ", "pym"}], "-", 
           RowBox[{"am", " ", "bm", " ", "pzm"}], "+", 
           RowBox[{"cm", " ", "dm", " ", "pzm"}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox["am", "2"], "+", 
         SuperscriptBox["bm", "2"], "+", 
         SuperscriptBox["cm", "2"], "+", 
         SuperscriptBox["dm", "2"]}]], "-", 
       FractionBox[
        RowBox[{"2.`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"bn", " ", "cn", " ", "pxn"}], "+", 
           RowBox[{"an", " ", "dn", " ", "pxn"}], "-", 
           RowBox[{
            SuperscriptBox["bn", "2"], " ", "pyn"}], "-", 
           RowBox[{
            SuperscriptBox["dn", "2"], " ", "pyn"}], "-", 
           RowBox[{"an", " ", "bn", " ", "pzn"}], "+", 
           RowBox[{"cn", " ", "dn", " ", "pzn"}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox["an", "2"], "+", 
         SuperscriptBox["bn", "2"], "+", 
         SuperscriptBox["cn", "2"], "+", 
         SuperscriptBox["dn", "2"]}]], "+", "ym", "-", "yn"}], ")"}], "2"], 
    "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"pzm", "+", 
       FractionBox[
        RowBox[{"2.`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "am"}], " ", "cm", " ", "pxm"}], "+", 
           RowBox[{"bm", " ", "dm", " ", "pxm"}], "+", 
           RowBox[{"am", " ", "bm", " ", "pym"}], "+", 
           RowBox[{"cm", " ", "dm", " ", "pym"}], "-", 
           RowBox[{
            SuperscriptBox["bm", "2"], " ", "pzm"}], "-", 
           RowBox[{
            SuperscriptBox["cm", "2"], " ", "pzm"}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox["am", "2"], "+", 
         SuperscriptBox["bm", "2"], "+", 
         SuperscriptBox["cm", "2"], "+", 
         SuperscriptBox["dm", "2"]}]], "-", "pzn", "-", 
       FractionBox[
        RowBox[{"2.`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "an"}], " ", "cn", " ", "pxn"}], "+", 
           RowBox[{"bn", " ", "dn", " ", "pxn"}], "+", 
           RowBox[{"an", " ", "bn", " ", "pyn"}], "+", 
           RowBox[{"cn", " ", "dn", " ", "pyn"}], "-", 
           RowBox[{
            SuperscriptBox["bn", "2"], " ", "pzn"}], "-", 
           RowBox[{
            SuperscriptBox["cn", "2"], " ", "pzn"}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox["an", "2"], "+", 
         SuperscriptBox["bn", "2"], "+", 
         SuperscriptBox["cn", "2"], "+", 
         SuperscriptBox["dn", "2"]}]], "+", "zm", "-", "zn"}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.7074005930840883`*^9, 3.707400825812903*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"evdwEquation", " ", "=", " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox["dA", 
     SuperscriptBox["nonbondRBDistance", "12"]], "-", 
    FractionBox["dC", 
     SuperscriptBox["nonbondRBDistance", "6"]]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.402740997525921*^9, 3.402741044800063*^9}, {
   3.407556720442287*^9, 3.407556726625795*^9}, {3.407557014452285*^9, 
   3.407557034497266*^9}, {3.408662107718624*^9, 3.4086621120938663`*^9}, 
   3.411081883431032*^9, {3.411175212266877*^9, 3.41117523978631*^9}, {
   3.411197604900622*^9, 3.411197623162916*^9}, 3.416871995722517*^9, {
   3.7071465980505657`*^9, 3.707146598062868*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dA", "/", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pxm", "-", "pxn", "+", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["cm", "2"]}], " ", "pxm"}], "-", 
             RowBox[{
              SuperscriptBox["dm", "2"], " ", "pxm"}], "+", 
             RowBox[{"bm", " ", "cm", " ", "pym"}], "-", 
             RowBox[{"am", " ", "dm", " ", "pym"}], "+", 
             RowBox[{"am", " ", "cm", " ", "pzm"}], "+", 
             RowBox[{"bm", " ", "dm", " ", "pzm"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["am", "2"], "+", 
           SuperscriptBox["bm", "2"], "+", 
           SuperscriptBox["cm", "2"], "+", 
           SuperscriptBox["dm", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["cn", "2"]}], " ", "pxn"}], "-", 
             RowBox[{
              SuperscriptBox["dn", "2"], " ", "pxn"}], "+", 
             RowBox[{"bn", " ", "cn", " ", "pyn"}], "-", 
             RowBox[{"an", " ", "dn", " ", "pyn"}], "+", 
             RowBox[{"an", " ", "cn", " ", "pzn"}], "+", 
             RowBox[{"bn", " ", "dn", " ", "pzn"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["an", "2"], "+", 
           SuperscriptBox["bn", "2"], "+", 
           SuperscriptBox["cn", "2"], "+", 
           SuperscriptBox["dn", "2"]}]], "+", "xm", "-", "xn"}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pym", "-", "pyn", "+", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"bm", " ", "cm", " ", "pxm"}], "+", 
             RowBox[{"am", " ", "dm", " ", "pxm"}], "-", 
             RowBox[{
              SuperscriptBox["bm", "2"], " ", "pym"}], "-", 
             RowBox[{
              SuperscriptBox["dm", "2"], " ", "pym"}], "-", 
             RowBox[{"am", " ", "bm", " ", "pzm"}], "+", 
             RowBox[{"cm", " ", "dm", " ", "pzm"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["am", "2"], "+", 
           SuperscriptBox["bm", "2"], "+", 
           SuperscriptBox["cm", "2"], "+", 
           SuperscriptBox["dm", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"bn", " ", "cn", " ", "pxn"}], "+", 
             RowBox[{"an", " ", "dn", " ", "pxn"}], "-", 
             RowBox[{
              SuperscriptBox["bn", "2"], " ", "pyn"}], "-", 
             RowBox[{
              SuperscriptBox["dn", "2"], " ", "pyn"}], "-", 
             RowBox[{"an", " ", "bn", " ", "pzn"}], "+", 
             RowBox[{"cn", " ", "dn", " ", "pzn"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["an", "2"], "+", 
           SuperscriptBox["bn", "2"], "+", 
           SuperscriptBox["cn", "2"], "+", 
           SuperscriptBox["dn", "2"]}]], "+", "ym", "-", "yn"}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pzm", "+", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "am"}], " ", "cm", " ", "pxm"}], "+", 
             RowBox[{"bm", " ", "dm", " ", "pxm"}], "+", 
             RowBox[{"am", " ", "bm", " ", "pym"}], "+", 
             RowBox[{"cm", " ", "dm", " ", "pym"}], "-", 
             RowBox[{
              SuperscriptBox["bm", "2"], " ", "pzm"}], "-", 
             RowBox[{
              SuperscriptBox["cm", "2"], " ", "pzm"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["am", "2"], "+", 
           SuperscriptBox["bm", "2"], "+", 
           SuperscriptBox["cm", "2"], "+", 
           SuperscriptBox["dm", "2"]}]], "-", "pzn", "-", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "an"}], " ", "cn", " ", "pxn"}], "+", 
             RowBox[{"bn", " ", "dn", " ", "pxn"}], "+", 
             RowBox[{"an", " ", "bn", " ", "pyn"}], "+", 
             RowBox[{"cn", " ", "dn", " ", "pyn"}], "-", 
             RowBox[{
              SuperscriptBox["bn", "2"], " ", "pzn"}], "-", 
             RowBox[{
              SuperscriptBox["cn", "2"], " ", "pzn"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["an", "2"], "+", 
           SuperscriptBox["bn", "2"], "+", 
           SuperscriptBox["cn", "2"], "+", 
           SuperscriptBox["dn", "2"]}]], "+", "zm", "-", "zn"}], ")"}], 
       "2"]}], ")"}], "6"]}], "-", 
  RowBox[{"dC", "/", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pxm", "-", "pxn", "+", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["cm", "2"]}], " ", "pxm"}], "-", 
             RowBox[{
              SuperscriptBox["dm", "2"], " ", "pxm"}], "+", 
             RowBox[{"bm", " ", "cm", " ", "pym"}], "-", 
             RowBox[{"am", " ", "dm", " ", "pym"}], "+", 
             RowBox[{"am", " ", "cm", " ", "pzm"}], "+", 
             RowBox[{"bm", " ", "dm", " ", "pzm"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["am", "2"], "+", 
           SuperscriptBox["bm", "2"], "+", 
           SuperscriptBox["cm", "2"], "+", 
           SuperscriptBox["dm", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["cn", "2"]}], " ", "pxn"}], "-", 
             RowBox[{
              SuperscriptBox["dn", "2"], " ", "pxn"}], "+", 
             RowBox[{"bn", " ", "cn", " ", "pyn"}], "-", 
             RowBox[{"an", " ", "dn", " ", "pyn"}], "+", 
             RowBox[{"an", " ", "cn", " ", "pzn"}], "+", 
             RowBox[{"bn", " ", "dn", " ", "pzn"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["an", "2"], "+", 
           SuperscriptBox["bn", "2"], "+", 
           SuperscriptBox["cn", "2"], "+", 
           SuperscriptBox["dn", "2"]}]], "+", "xm", "-", "xn"}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pym", "-", "pyn", "+", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"bm", " ", "cm", " ", "pxm"}], "+", 
             RowBox[{"am", " ", "dm", " ", "pxm"}], "-", 
             RowBox[{
              SuperscriptBox["bm", "2"], " ", "pym"}], "-", 
             RowBox[{
              SuperscriptBox["dm", "2"], " ", "pym"}], "-", 
             RowBox[{"am", " ", "bm", " ", "pzm"}], "+", 
             RowBox[{"cm", " ", "dm", " ", "pzm"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["am", "2"], "+", 
           SuperscriptBox["bm", "2"], "+", 
           SuperscriptBox["cm", "2"], "+", 
           SuperscriptBox["dm", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"bn", " ", "cn", " ", "pxn"}], "+", 
             RowBox[{"an", " ", "dn", " ", "pxn"}], "-", 
             RowBox[{
              SuperscriptBox["bn", "2"], " ", "pyn"}], "-", 
             RowBox[{
              SuperscriptBox["dn", "2"], " ", "pyn"}], "-", 
             RowBox[{"an", " ", "bn", " ", "pzn"}], "+", 
             RowBox[{"cn", " ", "dn", " ", "pzn"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["an", "2"], "+", 
           SuperscriptBox["bn", "2"], "+", 
           SuperscriptBox["cn", "2"], "+", 
           SuperscriptBox["dn", "2"]}]], "+", "ym", "-", "yn"}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pzm", "+", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "am"}], " ", "cm", " ", "pxm"}], "+", 
             RowBox[{"bm", " ", "dm", " ", "pxm"}], "+", 
             RowBox[{"am", " ", "bm", " ", "pym"}], "+", 
             RowBox[{"cm", " ", "dm", " ", "pym"}], "-", 
             RowBox[{
              SuperscriptBox["bm", "2"], " ", "pzm"}], "-", 
             RowBox[{
              SuperscriptBox["cm", "2"], " ", "pzm"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["am", "2"], "+", 
           SuperscriptBox["bm", "2"], "+", 
           SuperscriptBox["cm", "2"], "+", 
           SuperscriptBox["dm", "2"]}]], "-", "pzn", "-", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "an"}], " ", "cn", " ", "pxn"}], "+", 
             RowBox[{"bn", " ", "dn", " ", "pxn"}], "+", 
             RowBox[{"an", " ", "bn", " ", "pyn"}], "+", 
             RowBox[{"cn", " ", "dn", " ", "pyn"}], "-", 
             RowBox[{
              SuperscriptBox["bn", "2"], " ", "pzn"}], "-", 
             RowBox[{
              SuperscriptBox["cn", "2"], " ", "pzn"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["an", "2"], "+", 
           SuperscriptBox["bn", "2"], "+", 
           SuperscriptBox["cn", "2"], "+", 
           SuperscriptBox["dn", "2"]}]], "+", "zm", "-", "zn"}], ")"}], 
       "2"]}], ")"}], "3"]}]}]], "Output",
 CellChangeTimes->{
  3.6195575788781567`*^9, 3.702654219876251*^9, 3.707146262532913*^9, 
   3.707146553186502*^9, 3.707146629797101*^9, 3.707147965643334*^9, 
   3.707148148659349*^9, 3.7071486772178593`*^9, 3.707148895768118*^9, {
   3.707400539217197*^9, 3.707400561534062*^9}, 3.707400597197294*^9, 
   3.707400825914969*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eeelEquation", " ", "=", " ", 
  RowBox[{"(", 
   FractionBox["dQ1Q2", "nonbondRBDistance"], ")"}]}]], "Input",
 CellChangeTimes->{{3.4026534322622623`*^9, 3.402653496407857*^9}, {
   3.4026535524322023`*^9, 3.402653641591628*^9}, {3.4026779483394947`*^9, 
   3.402677953362184*^9}, {3.4026781314714537`*^9, 3.4026781348802843`*^9}, {
   3.40274101413416*^9, 3.402741050316153*^9}, {3.407556736609376*^9, 
   3.4075567425681257`*^9}, {3.407557208386277*^9, 3.407557225106896*^9}, {
   3.408662115934063*^9, 3.408662119317389*^9}, 3.411081885331176*^9, {
   3.411197627982712*^9, 3.411197630382259*^9}, 3.416871999453731*^9, 
   3.707146598063774*^9}],

Cell[BoxData[
 RowBox[{"dQ1Q2", "/", 
  RowBox[{"(", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pxm", "-", "pxn", "+", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["cm", "2"]}], " ", "pxm"}], "-", 
             RowBox[{
              SuperscriptBox["dm", "2"], " ", "pxm"}], "+", 
             RowBox[{"bm", " ", "cm", " ", "pym"}], "-", 
             RowBox[{"am", " ", "dm", " ", "pym"}], "+", 
             RowBox[{"am", " ", "cm", " ", "pzm"}], "+", 
             RowBox[{"bm", " ", "dm", " ", "pzm"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["am", "2"], "+", 
           SuperscriptBox["bm", "2"], "+", 
           SuperscriptBox["cm", "2"], "+", 
           SuperscriptBox["dm", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["cn", "2"]}], " ", "pxn"}], "-", 
             RowBox[{
              SuperscriptBox["dn", "2"], " ", "pxn"}], "+", 
             RowBox[{"bn", " ", "cn", " ", "pyn"}], "-", 
             RowBox[{"an", " ", "dn", " ", "pyn"}], "+", 
             RowBox[{"an", " ", "cn", " ", "pzn"}], "+", 
             RowBox[{"bn", " ", "dn", " ", "pzn"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["an", "2"], "+", 
           SuperscriptBox["bn", "2"], "+", 
           SuperscriptBox["cn", "2"], "+", 
           SuperscriptBox["dn", "2"]}]], "+", "xm", "-", "xn"}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pym", "-", "pyn", "+", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"bm", " ", "cm", " ", "pxm"}], "+", 
             RowBox[{"am", " ", "dm", " ", "pxm"}], "-", 
             RowBox[{
              SuperscriptBox["bm", "2"], " ", "pym"}], "-", 
             RowBox[{
              SuperscriptBox["dm", "2"], " ", "pym"}], "-", 
             RowBox[{"am", " ", "bm", " ", "pzm"}], "+", 
             RowBox[{"cm", " ", "dm", " ", "pzm"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["am", "2"], "+", 
           SuperscriptBox["bm", "2"], "+", 
           SuperscriptBox["cm", "2"], "+", 
           SuperscriptBox["dm", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"bn", " ", "cn", " ", "pxn"}], "+", 
             RowBox[{"an", " ", "dn", " ", "pxn"}], "-", 
             RowBox[{
              SuperscriptBox["bn", "2"], " ", "pyn"}], "-", 
             RowBox[{
              SuperscriptBox["dn", "2"], " ", "pyn"}], "-", 
             RowBox[{"an", " ", "bn", " ", "pzn"}], "+", 
             RowBox[{"cn", " ", "dn", " ", "pzn"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["an", "2"], "+", 
           SuperscriptBox["bn", "2"], "+", 
           SuperscriptBox["cn", "2"], "+", 
           SuperscriptBox["dn", "2"]}]], "+", "ym", "-", "yn"}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pzm", "+", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "am"}], " ", "cm", " ", "pxm"}], "+", 
             RowBox[{"bm", " ", "dm", " ", "pxm"}], "+", 
             RowBox[{"am", " ", "bm", " ", "pym"}], "+", 
             RowBox[{"cm", " ", "dm", " ", "pym"}], "-", 
             RowBox[{
              SuperscriptBox["bm", "2"], " ", "pzm"}], "-", 
             RowBox[{
              SuperscriptBox["cm", "2"], " ", "pzm"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["am", "2"], "+", 
           SuperscriptBox["bm", "2"], "+", 
           SuperscriptBox["cm", "2"], "+", 
           SuperscriptBox["dm", "2"]}]], "-", "pzn", "-", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "an"}], " ", "cn", " ", "pxn"}], "+", 
             RowBox[{"bn", " ", "dn", " ", "pxn"}], "+", 
             RowBox[{"an", " ", "bn", " ", "pyn"}], "+", 
             RowBox[{"cn", " ", "dn", " ", "pyn"}], "-", 
             RowBox[{
              SuperscriptBox["bn", "2"], " ", "pzn"}], "-", 
             RowBox[{
              SuperscriptBox["cn", "2"], " ", "pzn"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["an", "2"], "+", 
           SuperscriptBox["bn", "2"], "+", 
           SuperscriptBox["cn", "2"], "+", 
           SuperscriptBox["dn", "2"]}]], "+", "zm", "-", "zn"}], ")"}], 
       "2"]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.619557578944563*^9, 3.70265421993542*^9, 
  3.707146275563727*^9, 3.707146553254394*^9, 3.707146629871875*^9, 
  3.707147965716708*^9, 3.70714814874981*^9, 3.7071486772921753`*^9, 
  3.707148895821151*^9, 3.707400603487273*^9, 3.7074008260709467`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nonbondRBEnergyFn", " ", "=", " ", 
  RowBox[{"evdwEquation", " ", "+", " ", "eeelEquation"}]}]], "Input",
 CellChangeTimes->{{3.4027412120076227`*^9, 3.402741220906414*^9}, {
   3.4086620876703787`*^9, 3.408662102195766*^9}, 3.7071465980787697`*^9, 
   3.707148142545409*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dA", "/", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pxm", "-", "pxn", "+", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["cm", "2"]}], " ", "pxm"}], "-", 
             RowBox[{
              SuperscriptBox["dm", "2"], " ", "pxm"}], "+", 
             RowBox[{"bm", " ", "cm", " ", "pym"}], "-", 
             RowBox[{"am", " ", "dm", " ", "pym"}], "+", 
             RowBox[{"am", " ", "cm", " ", "pzm"}], "+", 
             RowBox[{"bm", " ", "dm", " ", "pzm"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["am", "2"], "+", 
           SuperscriptBox["bm", "2"], "+", 
           SuperscriptBox["cm", "2"], "+", 
           SuperscriptBox["dm", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["cn", "2"]}], " ", "pxn"}], "-", 
             RowBox[{
              SuperscriptBox["dn", "2"], " ", "pxn"}], "+", 
             RowBox[{"bn", " ", "cn", " ", "pyn"}], "-", 
             RowBox[{"an", " ", "dn", " ", "pyn"}], "+", 
             RowBox[{"an", " ", "cn", " ", "pzn"}], "+", 
             RowBox[{"bn", " ", "dn", " ", "pzn"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["an", "2"], "+", 
           SuperscriptBox["bn", "2"], "+", 
           SuperscriptBox["cn", "2"], "+", 
           SuperscriptBox["dn", "2"]}]], "+", "xm", "-", "xn"}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pym", "-", "pyn", "+", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"bm", " ", "cm", " ", "pxm"}], "+", 
             RowBox[{"am", " ", "dm", " ", "pxm"}], "-", 
             RowBox[{
              SuperscriptBox["bm", "2"], " ", "pym"}], "-", 
             RowBox[{
              SuperscriptBox["dm", "2"], " ", "pym"}], "-", 
             RowBox[{"am", " ", "bm", " ", "pzm"}], "+", 
             RowBox[{"cm", " ", "dm", " ", "pzm"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["am", "2"], "+", 
           SuperscriptBox["bm", "2"], "+", 
           SuperscriptBox["cm", "2"], "+", 
           SuperscriptBox["dm", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"bn", " ", "cn", " ", "pxn"}], "+", 
             RowBox[{"an", " ", "dn", " ", "pxn"}], "-", 
             RowBox[{
              SuperscriptBox["bn", "2"], " ", "pyn"}], "-", 
             RowBox[{
              SuperscriptBox["dn", "2"], " ", "pyn"}], "-", 
             RowBox[{"an", " ", "bn", " ", "pzn"}], "+", 
             RowBox[{"cn", " ", "dn", " ", "pzn"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["an", "2"], "+", 
           SuperscriptBox["bn", "2"], "+", 
           SuperscriptBox["cn", "2"], "+", 
           SuperscriptBox["dn", "2"]}]], "+", "ym", "-", "yn"}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pzm", "+", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "am"}], " ", "cm", " ", "pxm"}], "+", 
             RowBox[{"bm", " ", "dm", " ", "pxm"}], "+", 
             RowBox[{"am", " ", "bm", " ", "pym"}], "+", 
             RowBox[{"cm", " ", "dm", " ", "pym"}], "-", 
             RowBox[{
              SuperscriptBox["bm", "2"], " ", "pzm"}], "-", 
             RowBox[{
              SuperscriptBox["cm", "2"], " ", "pzm"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["am", "2"], "+", 
           SuperscriptBox["bm", "2"], "+", 
           SuperscriptBox["cm", "2"], "+", 
           SuperscriptBox["dm", "2"]}]], "-", "pzn", "-", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "an"}], " ", "cn", " ", "pxn"}], "+", 
             RowBox[{"bn", " ", "dn", " ", "pxn"}], "+", 
             RowBox[{"an", " ", "bn", " ", "pyn"}], "+", 
             RowBox[{"cn", " ", "dn", " ", "pyn"}], "-", 
             RowBox[{
              SuperscriptBox["bn", "2"], " ", "pzn"}], "-", 
             RowBox[{
              SuperscriptBox["cn", "2"], " ", "pzn"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["an", "2"], "+", 
           SuperscriptBox["bn", "2"], "+", 
           SuperscriptBox["cn", "2"], "+", 
           SuperscriptBox["dn", "2"]}]], "+", "zm", "-", "zn"}], ")"}], 
       "2"]}], ")"}], "6"]}], "-", 
  RowBox[{"dC", "/", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pxm", "-", "pxn", "+", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["cm", "2"]}], " ", "pxm"}], "-", 
             RowBox[{
              SuperscriptBox["dm", "2"], " ", "pxm"}], "+", 
             RowBox[{"bm", " ", "cm", " ", "pym"}], "-", 
             RowBox[{"am", " ", "dm", " ", "pym"}], "+", 
             RowBox[{"am", " ", "cm", " ", "pzm"}], "+", 
             RowBox[{"bm", " ", "dm", " ", "pzm"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["am", "2"], "+", 
           SuperscriptBox["bm", "2"], "+", 
           SuperscriptBox["cm", "2"], "+", 
           SuperscriptBox["dm", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["cn", "2"]}], " ", "pxn"}], "-", 
             RowBox[{
              SuperscriptBox["dn", "2"], " ", "pxn"}], "+", 
             RowBox[{"bn", " ", "cn", " ", "pyn"}], "-", 
             RowBox[{"an", " ", "dn", " ", "pyn"}], "+", 
             RowBox[{"an", " ", "cn", " ", "pzn"}], "+", 
             RowBox[{"bn", " ", "dn", " ", "pzn"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["an", "2"], "+", 
           SuperscriptBox["bn", "2"], "+", 
           SuperscriptBox["cn", "2"], "+", 
           SuperscriptBox["dn", "2"]}]], "+", "xm", "-", "xn"}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pym", "-", "pyn", "+", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"bm", " ", "cm", " ", "pxm"}], "+", 
             RowBox[{"am", " ", "dm", " ", "pxm"}], "-", 
             RowBox[{
              SuperscriptBox["bm", "2"], " ", "pym"}], "-", 
             RowBox[{
              SuperscriptBox["dm", "2"], " ", "pym"}], "-", 
             RowBox[{"am", " ", "bm", " ", "pzm"}], "+", 
             RowBox[{"cm", " ", "dm", " ", "pzm"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["am", "2"], "+", 
           SuperscriptBox["bm", "2"], "+", 
           SuperscriptBox["cm", "2"], "+", 
           SuperscriptBox["dm", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"bn", " ", "cn", " ", "pxn"}], "+", 
             RowBox[{"an", " ", "dn", " ", "pxn"}], "-", 
             RowBox[{
              SuperscriptBox["bn", "2"], " ", "pyn"}], "-", 
             RowBox[{
              SuperscriptBox["dn", "2"], " ", "pyn"}], "-", 
             RowBox[{"an", " ", "bn", " ", "pzn"}], "+", 
             RowBox[{"cn", " ", "dn", " ", "pzn"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["an", "2"], "+", 
           SuperscriptBox["bn", "2"], "+", 
           SuperscriptBox["cn", "2"], "+", 
           SuperscriptBox["dn", "2"]}]], "+", "ym", "-", "yn"}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pzm", "+", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "am"}], " ", "cm", " ", "pxm"}], "+", 
             RowBox[{"bm", " ", "dm", " ", "pxm"}], "+", 
             RowBox[{"am", " ", "bm", " ", "pym"}], "+", 
             RowBox[{"cm", " ", "dm", " ", "pym"}], "-", 
             RowBox[{
              SuperscriptBox["bm", "2"], " ", "pzm"}], "-", 
             RowBox[{
              SuperscriptBox["cm", "2"], " ", "pzm"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["am", "2"], "+", 
           SuperscriptBox["bm", "2"], "+", 
           SuperscriptBox["cm", "2"], "+", 
           SuperscriptBox["dm", "2"]}]], "-", "pzn", "-", 
         FractionBox[
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "an"}], " ", "cn", " ", "pxn"}], "+", 
             RowBox[{"bn", " ", "dn", " ", "pxn"}], "+", 
             RowBox[{"an", " ", "bn", " ", "pyn"}], "+", 
             RowBox[{"cn", " ", "dn", " ", "pyn"}], "-", 
             RowBox[{
              SuperscriptBox["bn", "2"], " ", "pzn"}], "-", 
             RowBox[{
              SuperscriptBox["cn", "2"], " ", "pzn"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["an", "2"], "+", 
           SuperscriptBox["bn", "2"], "+", 
           SuperscriptBox["cn", "2"], "+", 
           SuperscriptBox["dn", "2"]}]], "+", "zm", "-", "zn"}], ")"}], 
       "2"]}], ")"}], "3"]}], "+", 
  RowBox[{"dQ1Q2", "/", 
   RowBox[{"(", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"pxm", "-", "pxn", "+", 
          FractionBox[
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["cm", "2"]}], " ", "pxm"}], "-", 
              RowBox[{
               SuperscriptBox["dm", "2"], " ", "pxm"}], "+", 
              RowBox[{"bm", " ", "cm", " ", "pym"}], "-", 
              RowBox[{"am", " ", "dm", " ", "pym"}], "+", 
              RowBox[{"am", " ", "cm", " ", "pzm"}], "+", 
              RowBox[{"bm", " ", "dm", " ", "pzm"}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["am", "2"], "+", 
            SuperscriptBox["bm", "2"], "+", 
            SuperscriptBox["cm", "2"], "+", 
            SuperscriptBox["dm", "2"]}]], "-", 
          FractionBox[
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["cn", "2"]}], " ", "pxn"}], "-", 
              RowBox[{
               SuperscriptBox["dn", "2"], " ", "pxn"}], "+", 
              RowBox[{"bn", " ", "cn", " ", "pyn"}], "-", 
              RowBox[{"an", " ", "dn", " ", "pyn"}], "+", 
              RowBox[{"an", " ", "cn", " ", "pzn"}], "+", 
              RowBox[{"bn", " ", "dn", " ", "pzn"}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["an", "2"], "+", 
            SuperscriptBox["bn", "2"], "+", 
            SuperscriptBox["cn", "2"], "+", 
            SuperscriptBox["dn", "2"]}]], "+", "xm", "-", "xn"}], ")"}], "2"],
        "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"pym", "-", "pyn", "+", 
          FractionBox[
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"bm", " ", "cm", " ", "pxm"}], "+", 
              RowBox[{"am", " ", "dm", " ", "pxm"}], "-", 
              RowBox[{
               SuperscriptBox["bm", "2"], " ", "pym"}], "-", 
              RowBox[{
               SuperscriptBox["dm", "2"], " ", "pym"}], "-", 
              RowBox[{"am", " ", "bm", " ", "pzm"}], "+", 
              RowBox[{"cm", " ", "dm", " ", "pzm"}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["am", "2"], "+", 
            SuperscriptBox["bm", "2"], "+", 
            SuperscriptBox["cm", "2"], "+", 
            SuperscriptBox["dm", "2"]}]], "-", 
          FractionBox[
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"bn", " ", "cn", " ", "pxn"}], "+", 
              RowBox[{"an", " ", "dn", " ", "pxn"}], "-", 
              RowBox[{
               SuperscriptBox["bn", "2"], " ", "pyn"}], "-", 
              RowBox[{
               SuperscriptBox["dn", "2"], " ", "pyn"}], "-", 
              RowBox[{"an", " ", "bn", " ", "pzn"}], "+", 
              RowBox[{"cn", " ", "dn", " ", "pzn"}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["an", "2"], "+", 
            SuperscriptBox["bn", "2"], "+", 
            SuperscriptBox["cn", "2"], "+", 
            SuperscriptBox["dn", "2"]}]], "+", "ym", "-", "yn"}], ")"}], "2"],
        "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"pzm", "+", 
          FractionBox[
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "am"}], " ", "cm", " ", "pxm"}], "+", 
              RowBox[{"bm", " ", "dm", " ", "pxm"}], "+", 
              RowBox[{"am", " ", "bm", " ", "pym"}], "+", 
              RowBox[{"cm", " ", "dm", " ", "pym"}], "-", 
              RowBox[{
               SuperscriptBox["bm", "2"], " ", "pzm"}], "-", 
              RowBox[{
               SuperscriptBox["cm", "2"], " ", "pzm"}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["am", "2"], "+", 
            SuperscriptBox["bm", "2"], "+", 
            SuperscriptBox["cm", "2"], "+", 
            SuperscriptBox["dm", "2"]}]], "-", "pzn", "-", 
          FractionBox[
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "an"}], " ", "cn", " ", "pxn"}], "+", 
              RowBox[{"bn", " ", "dn", " ", "pxn"}], "+", 
              RowBox[{"an", " ", "bn", " ", "pyn"}], "+", 
              RowBox[{"cn", " ", "dn", " ", "pyn"}], "-", 
              RowBox[{
               SuperscriptBox["bn", "2"], " ", "pzn"}], "-", 
              RowBox[{
               SuperscriptBox["cn", "2"], " ", "pzn"}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["an", "2"], "+", 
            SuperscriptBox["bn", "2"], "+", 
            SuperscriptBox["cn", "2"], "+", 
            SuperscriptBox["dn", "2"]}]], "+", "zm", "-", "zn"}], ")"}], 
        "2"]}], ")"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.619557579005105*^9, 3.7026542201230917`*^9, 3.707146280966736*^9, 
   3.707146553344512*^9, 3.707146629958291*^9, 3.707147965799642*^9, {
   3.707148144158057*^9, 3.707148148852717*^9}, 3.7071486773785133`*^9, 
   3.707148895890641*^9, 3.7074006055364933`*^9, 3.7074008262231417`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonbondRBVarNames", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"am", ",", "a", ",", "I1", ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"bm", ",", "b", ",", "I1", ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"cm", ",", "c", ",", "I1", ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"dm", ",", "d", ",", "I1", ",", "3"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xm", ",", "x", ",", "I1", ",", "4"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"ym", ",", "y", ",", "I1", ",", "5"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"zm", ",", "z", ",", "I1", ",", "6"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"an", ",", "a", ",", "I2", ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"bn", ",", "b", ",", "I2", ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"cn", ",", "c", ",", "I2", ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"dn", ",", "d", ",", "I2", ",", "3"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xn", ",", "x", ",", "I2", ",", "4"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"yn", ",", "y", ",", "I2", ",", "5"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"zn", ",", "z", ",", "I2", ",", "6"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.702665250051643*^9, 3.7026653039744596`*^9}, {
   3.702665895595372*^9, 3.7026660256467524`*^9}, 3.70266610473518*^9, 
   3.7026678793568573`*^9, {3.707146623318904*^9, 3.7071466260237703`*^9}, {
   3.707400615279064*^9, 3.707400632602601*^9}, {3.707400675641724*^9, 
   3.707400675967519*^9}, {3.707400723328514*^9, 3.7074007382948437`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nonbondRBSetupRules", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", 
    RowBox[{"CCode", "[", "\"\<NONBONDRB_SET_PARAMETER(I1);\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", 
    RowBox[{"CCode", "[", "\"\<NONBONDRB_SET_PARAMETER(I2);\>\"", "]"}]}], 
   "]"}], ";", 
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", 
    RowBox[{"CCode", "[", "\"\<NONBONDRB_SET_PARAMETER(dQ1Q2);\>\"", "]"}]}], 
   "]"}], ";", 
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", 
    RowBox[{"CCode", "[", "\"\<NONBONDRB_SET_PARAMETER(dA);\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", 
    RowBox[{"CCode", "[", "\"\<NONBONDRB_SET_PARAMETER(dC);\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.410177124188498*^9, 3.410177277864727*^9}, {
  3.4101777777433367`*^9, 3.410177805652183*^9}, {3.410177935376103*^9, 
  3.410177953524826*^9}, {3.4101782531152697`*^9, 3.410178268853266*^9}, {
  3.487025950138463*^9, 3.487025960189999*^9}, {3.487026052805409*^9, 
  3.487026058323876*^9}, {3.487032089923287*^9, 3.487032096633906*^9}, {
  3.707146598096616*^9, 3.707146611234211*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "nonbondRBVarNames", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"str", " ", "=", " ", 
      RowBox[{"\"\<NONBONDRB_SET_POSITION(\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"nonbondRBVarNames", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"nonbondRBVarNames", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"nonbondRBVarNames", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], "]"}], "<>", "\"\<);\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "str", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"nonbondRBSetupRules", ",", 
       RowBox[{"CCode", "[", "str", "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7026653697729197`*^9, 3.702665399017919*^9}, {
   3.702667865332658*^9, 3.70266787995826*^9}, {3.702889668272381*^9, 
   3.7028896775365877`*^9}, {3.707146392547522*^9, 3.7071463956023283`*^9}, 
   3.7071464796711693`*^9, {3.707146598118466*^9, 3.7071466112672*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<NONBONDRB_SET_POINT(xm,pointA,getX());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<NONBONDRB_SET_POINT(ym,pointA,getY());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<NONBONDRB_SET_POINT(zm,pointA,getZ());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<NONBONDRB_SET_POINT(xn,pointB,getX());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<NONBONDRB_SET_POINT(yn,pointB,getY());\>\"", "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBSetupRules", ",", " ", 
    RowBox[{
    "CCode", "[", "\"\<NONBONDRB_SET_POINT(zn,pointB,getZ());\>\"", "]"}]}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.702889717438642*^9, 3.702889744132216*^9}, {
   3.702889799017868*^9, 3.702889838930481*^9}, {3.7028898927791853`*^9, 
   3.702889938491302*^9}, {3.702894463739758*^9, 3.702894468534267*^9}, {
   3.7069249208588142`*^9, 3.706924965222961*^9}, {3.707146396065494*^9, 
   3.707146398196075*^9}, {3.7071464802256403`*^9, 3.707146482783434*^9}, {
   3.707146598133422*^9, 3.707146611273819*^9}, 3.707148868215211*^9, {
   3.7074007639782963`*^9, 3.707400779827385*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nonbondRBSetupRules", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.702665439946115*^9, 3.702665444877211*^9}, 
   3.702667880041853*^9, 3.7071463995801477`*^9, 3.707146598161034*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"CCode", "[", "\<\"NONBONDRB_SET_PARAMETER(I1);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"NONBONDRB_SET_PARAMETER(I2);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"NONBONDRB_SET_PARAMETER(dQ1Q2);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"NONBONDRB_SET_PARAMETER(dA);\"\>", "]"}]},
      {
       RowBox[{"CCode", "[", "\<\"NONBONDRB_SET_PARAMETER(dC);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(am,I1,0);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(bm,I1,1);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(cm,I1,2);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(dm,I1,3);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(xm,I1,4);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(ym,I1,5);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(zm,I1,6);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(an,I2,0);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(bn,I2,1);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(cn,I2,2);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(dn,I2,3);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(xn,I2,4);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(yn,I2,5);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POSITION(zn,I2,6);\"\>", "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POINT(xm,pointA,getX());\"\>", 
        "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POINT(ym,pointA,getY());\"\>", 
        "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POINT(zm,pointA,getZ());\"\>", 
        "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POINT(xn,pointB,getX());\"\>", 
        "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POINT(yn,pointB,getY());\"\>", 
        "]"}]},
      {
       RowBox[{
       "CCode", "[", "\<\"NONBONDRB_SET_POINT(zn,pointB,getZ());\"\>", "]"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7071466905955544`*^9, 3.707147966038775*^9, 
  3.7071481491042023`*^9, 3.707148677824615*^9, 3.707148896112453*^9, 
  3.707400826694497*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nonbondRBEnergyRules", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonbondRBOutputs", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBEnergyRules", ",", 
    RowBox[{"Assign", "[", 
     RowBox[{"Energy", ",", "nonbondRBEnergyFn"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBEnergyRules", ",", 
    RowBox[{"EnergyAccumulate", "[", 
     RowBox[{"\"\<NONBONDRB\>\"", ",", "Energy"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBOutputs", ",", "Energy"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7026655052521257`*^9, 3.7026655279230843`*^9}, 
   3.702665559899187*^9, 3.7026669034970493`*^9, {3.7026678801394444`*^9, 
   3.702667880549102*^9}, {3.702894354420628*^9, 3.702894355431469*^9}, {
   3.7071464007719297`*^9, 3.70714640422033*^9}, 3.707146496671811*^9, {
   3.707146598194975*^9, 3.707146611469555*^9}}],

Cell[CellGroupData[{

Cell["Append the Gradient rules", "Subtitle",
 CellChangeTimes->{{3.702665585411888*^9, 3.7026655955445013`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonbondRBForceRules", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7026663167169523`*^9, 3.702666324249215*^9}, 
   3.702667880730946*^9, 3.707146406790341*^9, 3.707146598289545*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AppendGradientAndForce", "[", 
   RowBox[{
   "\"\<NONBONDRB\>\"", ",", "nonbondRBEnergyRules", ",", "nonbondRBOutputs", 
    ",", "nonbondRBEnergyFn", ",", "nonbondRBVarNames"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.702665662227541*^9, 3.702665675042551*^9}, {
   3.702665719248609*^9, 3.702665779138154*^9}, {3.702667866125484*^9, 
   3.702667880997301*^9}, {3.707146407972838*^9, 3.7071464111507807`*^9}, 
   3.7071464976561737`*^9, {3.707146598313425*^9, 3.707146611470274*^9}}],

Cell[CellGroupData[{

Cell[BoxData["nonbondRBOutputs"], "Input",
 CellChangeTimes->{{3.702665807907201*^9, 3.7026658098882017`*^9}, 
   3.702667881086121*^9, 3.707146412139628*^9, 3.707146598330749*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Energy", ",", "fam", ",", "fbm", ",", "fcm", ",", "fdm", ",", "fxm", ",", 
   "fym", ",", "fzm", ",", "fan", ",", "fbn", ",", "fcn", ",", "fdn", ",", 
   "fxn", ",", "fyn", ",", "fzn"}], "}"}]], "Output",
 CellChangeTimes->{
  3.702666639803829*^9, 3.702667223135886*^9, 3.70266791275457*^9, 
   3.702889684791482*^9, 3.7028899663778057`*^9, 3.7028911847000313`*^9, 
   3.7028914164493027`*^9, 3.7028943752038813`*^9, {3.7028944569410877`*^9, 
   3.7028944826912527`*^9}, 3.707146554232813*^9, 3.707146633481021*^9, 
   3.707146716631585*^9, 3.707147967555634*^9, 3.707148151278924*^9, 
   3.7071486825196533`*^9, 3.707148897296343*^9, 3.7074008305421343`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Collect terms and convert to C code", "Subsection",
 CellChangeTimes->{{3.401714376596349*^9, 3.401714390085981*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonbondRBAllRules", " ", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "nonbondRBSetupRules", ",", "\[IndentingNewLine]", 
     "nonbondRBEnergyRules"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.410177622861577*^9, 3.410177650326877*^9}, {
   3.410957497343137*^9, 3.410957525179797*^9}, 3.410958727655569*^9, {
   3.702666212925044*^9, 3.70266621369392*^9}, 3.702666368288919*^9, {
   3.702667881180406*^9, 3.702667881299728*^9}, {3.7071464132728*^9, 
   3.7071464145021143`*^9}, {3.707146598344638*^9, 3.70714659836265*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonbondRBRules", " ", "=", " ", 
   RowBox[{"Flatten", "[", "nonbondRBAllRules", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4109587363528433`*^9, 3.410958744314476*^9}, {
  3.702666213960264*^9, 3.7026662163072977`*^9}, {3.7026678814059973`*^9, 
  3.702667881458247*^9}, {3.707146415352501*^9, 3.707146415899765*^9}, {
  3.7071465983636627`*^9, 3.707146598378392*^9}}],

Cell[CellGroupData[{

Cell[BoxData["nonbondRBRules"], "Input",
 CellChangeTimes->{{3.411210896309596*^9, 3.411210898002816*^9}, 
   3.702666216845126*^9, 3.702667881574181*^9, 3.707146416619336*^9, 
   3.707146598379375*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{278., {2., 8.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "CCode", "[", "\<\"NONBONDRB_SET_PARAMETER(I1);\"\>", "]"}], ",", 
           RowBox[{
           "CCode", "[", "\<\"NONBONDRB_SET_PARAMETER(I2);\"\>", "]"}], ",", 
           RowBox[{
           "CCode", "[", "\<\"NONBONDRB_SET_PARAMETER(dQ1Q2);\"\>", "]"}], 
           ",", 
           RowBox[{"\[LeftSkeleton]", "64", "\[RightSkeleton]"}], ",", 
           RowBox[{
            RowBox[{"-", "gzn"}], "\[Rule]", "fzn"}], ",", 
           RowBox[{
           "CCode", "[", "\<\"NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzn );\"\>", 
            "]"}]}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{49., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 712, 29633612386619664538, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{52., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 712, 29633612386619664538, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{82., {2., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 712, 29633612386619664538, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{74., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[712]]], "Output",
 CellChangeTimes->{3.707146633662825*^9, 3.707146716844968*^9, 
  3.7071479677556973`*^9, 3.707148152613268*^9, 3.707148682858508*^9, 
  3.707148897519106*^9, 3.7074008307461157`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonbondRBInput", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{
    "ak", ",", "bk", ",", "ck", ",", "dk", ",", "xk", ",", "yk", ",", "zk", 
     ",", " ", "al", ",", "bl", ",", "cl", ",", "dl", ",", "xl", ",", "yl", 
     ",", "zl"}], " ", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4055952302564087`*^9, 3.405595267347364*^9}, {
   3.408556502824588*^9, 3.4085565040993557`*^9}, {3.702666505031909*^9, 
   3.702666531507627*^9}, 3.702667881776746*^9, 3.707146417965774*^9, 
   3.707146598482942*^9, {3.7071467577878447`*^9, 3.7071467722715282`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"nonbondRBOutputs", ",", "nonbondRBDeviation"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.411152051138565*^9, 3.411152052756624*^9}, {
  3.702666532511979*^9, 3.7026665335664177`*^9}, {3.702667881858635*^9, 
  3.702667881917015*^9}, {3.707146419199607*^9, 3.707146420036663*^9}, {
  3.7071465984957933`*^9, 3.707146598512059*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Assemble the rules, the name of the energy term, the independant variable \
names, etc. into what passes for a structure in Mathematica (I call it a Pack)\
\>", "Subsection",
 CellChangeTimes->{{3.494843911918105*^9, 3.494844017248684*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonbondRBPack0", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Name", "\[Rule]", "\"\<NONBONDRB\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AdditionalCDeclares", "\[Rule]", "\"\<\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"DerivativeVariables", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{
       "ak", ",", "bk", ",", "ck", ",", "dk", ",", "xk", ",", "yk", ",", "zk",
         ",", " ", "al", ",", "bl", ",", "cl", ",", "dl", ",", "xl", ",", 
        "yl", ",", "zl"}], " ", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Rules", "\[Rule]", "nonbondRBRules"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Input", "\[Rule]", "nonbondRBInput"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Output", "\[Rule]", "nonbondRBOutputs"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.402876557641659*^9, 3.402876568596249*^9}, 
   3.402876852017213*^9, {3.40559527044873*^9, 3.405595281200487*^9}, {
   3.405607646467461*^9, 3.405607646567194*^9}, {3.4056349375263166`*^9, 
   3.405634963865233*^9}, {3.405635515351774*^9, 3.4056355177092333`*^9}, {
   3.407679881947057*^9, 3.4076798872149277`*^9}, {3.407763146777285*^9, 
   3.407763148181219*^9}, {3.40855652062083*^9, 3.408556522452385*^9}, {
   3.408564819262188*^9, 3.408564828757545*^9}, {3.409333145287333*^9, 
   3.40933315235924*^9}, {3.4101776186718473`*^9, 3.410177620470078*^9}, {
   3.411066451212819*^9, 3.411066462017312*^9}, {3.4110669305802307`*^9, 
   3.4110669315625343`*^9}, {3.411072159484359*^9, 3.411072166176531*^9}, {
   3.411072206442031*^9, 3.41107221385695*^9}, {3.411075684409318*^9, 
   3.4110757253172703`*^9}, {3.4110759780540733`*^9, 3.411075995800424*^9}, 
   3.4110793661329203`*^9, {3.702666534898035*^9, 3.702666566906396*^9}, 
   3.702666629707164*^9, {3.702667866896305*^9, 3.702667882200088*^9}, {
   3.707146421913271*^9, 3.707146423966762*^9}, 3.707146521366686*^9, {
   3.707146598513423*^9, 3.707146611509274*^9}, 3.7071467898539743`*^9, {
   3.70714690827442*^9, 3.707146910803536*^9}, {3.7071487417012367`*^9, 
   3.707148749346298*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"writeOutputVariablesForDebugging", "[", "nonbondRBPack0", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.408752301954282*^9, 3.408752370230307*^9}, {
   3.408821026441674*^9, 3.408821031596847*^9}, 3.4110670621890917`*^9, 
   3.7026665401661*^9, 3.702667882303001*^9, 3.707146424991373*^9, 
   3.707146598531271*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing finite difference debug code to: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBONDRB_debugFiniteDifference.cc\"\>"}],
  SequenceForm[
  "Writing finite difference debug code to: ", 
   "_NONBONDRB_debugFiniteDifference.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707146554833856*^9, 3.707146633962528*^9, 
  3.7071467171447773`*^9, 3.70714796795452*^9, 3.7071481528408737`*^9, 
  3.707148683052206*^9, 3.707148897711896*^9, 3.7074008309892178`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing debug variable declares to: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBONDRB_debugEvalDeclares.cc\"\>"}],
  SequenceForm[
  "Writing debug variable declares to: ", "_NONBONDRB_debugEvalDeclares.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707146554833856*^9, 3.707146633962528*^9, 
  3.7071467171447773`*^9, 3.70714796795452*^9, 3.7071481528408737`*^9, 
  3.707148683052206*^9, 3.707148897711896*^9, 3.707400830990718*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing xml output debug code to: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBONDRB_debugEvalSerialize.cc\"\>"}],
  SequenceForm[
  "Writing xml output debug code to: ", "_NONBONDRB_debugEvalSerialize.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707146554833856*^9, 3.707146633962528*^9, 
  3.7071467171447773`*^9, 3.70714796795452*^9, 3.7071481528408737`*^9, 
  3.707148683052206*^9, 3.707148897711896*^9, 3.707400830992236*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing set variables debug code to: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBONDRB_debugEvalSet.cc\"\>"}],
  SequenceForm[
  "Writing set variables debug code to: ", "_NONBONDRB_debugEvalSet.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707146554833856*^9, 3.707146633962528*^9, 
  3.7071467171447773`*^9, 3.70714796795452*^9, 3.7071481528408737`*^9, 
  3.707148683052206*^9, 3.707148897711896*^9, 3.707400830993752*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Put the pedal to the metal and generate \"C\" code.", "Subsection",
 CellChangeTimes->{{3.494844094666773*^9, 3.494844119787055*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"nonbondRBPack", " ", "=", " ", 
   RowBox[{"packOptimize", "[", "nonbondRBPack0", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.405593154617752*^9, 3.405593181273087*^9}, {
   3.405594926006316*^9, 3.4055949283713083`*^9}, {3.40560847035536*^9, 
   3.405608470488098*^9}, {3.407559202182371*^9, 3.407559202626436*^9}, {
   3.408564854380271*^9, 3.408564873627013*^9}, 3.41106665985861*^9, {
   3.411072816696417*^9, 3.4110728451363277`*^9}, {3.411073752072069*^9, 
   3.4110737531085377`*^9}, {3.702666542649117*^9, 3.702666543244851*^9}, {
   3.702667882654457*^9, 3.702667882764448*^9}, {3.7071464283508587`*^9, 
   3.707146428815312*^9}, {3.707146598545204*^9, 3.707146598562158*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148944365653*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148944367898*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148944370047*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148944372944*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148945064639*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148945066669*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489450685863`*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148945070593*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489452806377`*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tx440 -> tx433, tx289 -> tx436, \
tx292 -> tx437}\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489452826767`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489452846813`*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tx440 -> tx433\\n\\ntx289 \
-> tx436\\n\\ntx292 -> tx437\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148945286685*^9}],

Cell[BoxData["\<\"After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(I2);]\\\
n\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(\
dA);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(ak,I1,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bk,I1,1);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(ck,I1,2);]\\n\\nCCode[NONBONDRB_SET_POSITION(dk,I1,3);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(xk,I1,4);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(yk,I1,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zk,I1,6);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(al,I2,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bl,I2,1);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(cl,I2,2);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(dl,I2,3);]\\n\\nCCode[NONBONDRB_SET_POSITION(xl,I2,4);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(yl,I2,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zl,I2,6);]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ());]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh2,pointB,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh2,pointB,getZ());]\
\\n\\npower2[bk] -> tx216\\n\\npower2[bl] -> tx217\\n\\npower2[ck] -> \
tx218\\n\\npower2[cl] -> tx219\\n\\npower2[dk] -> tx220\\n\\npower2[dl] -> \
tx221\\n\\npower2[ak] -> tx222\\n\\npower2[al] -> tx223\\n\\n-2. ak bk -> \
tx224\\n\\n-2. al bl -> tx225\\n\\n-2. ak ck -> tx226\\n\\n2. ak ck -> \
tx227\\n\\n2. bk ck -> tx228\\n\\n-2. al cl -> tx229\\n\\n2. al cl -> \
tx230\\n\\n2. bl cl -> tx231\\n\\n-2. ak dk -> tx232\\n\\n2. ak dk -> \
tx233\\n\\n2. bk dk -> tx234\\n\\n2. ck dk -> tx235\\n\\n-2. al dl -> \
tx236\\n\\n2. al dl -> tx237\\n\\n2. bl dl -> tx238\\n\\n2. cl dl -> tx239\\n\
\\n-tx216 -> tx240\\n\\n-tx217 -> tx241\\n\\n-tx218 -> tx242\\n\\n-tx219 -> \
tx243\\n\\n-tx220 -> tx244\\n\\n-tx221 -> tx245\\n\\ntx216 + tx218 + tx220 + \
tx222 -> tx246\\n\\ntx217 + tx219 + tx221 + tx223 -> tx247\\n\\ntx228 + tx232 \
-> tx248\\n\\ntx228 + tx233 -> tx249\\n\\ntx226 + tx234 -> tx250\\n\\ntx227 + \
tx234 -> tx251\\n\\ntx224 + tx235 -> tx252\\n\\ntx231 + tx236 -> \
tx253\\n\\ntx231 + tx237 -> tx254\\n\\ntx229 + tx238 -> tx255\\n\\ntx230 + \
tx238 -> tx256\\n\\ntx225 + tx239 -> tx257\\n\\ntx220 + tx222 + tx240 + tx242 \
-> tx258\\n\\ntx221 + tx223 + tx241 + tx243 -> tx259\\n\\ntx218 + tx222 + \
tx240 + tx244 -> tx260\\n\\ntx219 + tx223 + tx241 + tx245 -> tx261\\n\\ntx246 \
xh1 -> tx262\\n\\ntx249 xh1 -> tx263\\n\\ntx250 xh1 -> tx264\\n\\n-(tx247 \
xh2) -> tx265\\n\\n-(tx254 xh2) -> tx266\\n\\n-(tx255 xh2) -> tx267\\n\\n-xl \
-> tx268\\n\\ntx248 yh1 -> tx269\\n\\ntx252 yh1 -> tx270\\n\\ntx260 yh1 -> \
tx271\\n\\n-(tx253 yh2) -> tx272\\n\\n-(tx257 yh2) -> tx273\\n\\n-(tx261 yh2) \
-> tx274\\n\\n-yl -> tx275\\n\\ntx251 zh1 -> tx276\\n\\ntx252 zh1 -> tx277\\n\
\\ntx258 zh1 -> tx278\\n\\n-(tx256 zh2) -> tx279\\n\\n-(tx257 zh2) -> \
tx280\\n\\n-(tx259 zh2) -> tx281\\n\\n-zl -> tx282\\n\\ntx262 + tx265 + tx268 \
+ tx269 + tx272 + tx276 + tx279 + xk -> tx283\\n\\ntx263 + tx266 + tx271 + \
tx274 + tx275 + tx277 + tx280 + yk -> tx284\\n\\ntx264 + tx267 + tx270 + \
tx273 + tx278 + tx281 + tx282 + zk -> tx285\\n\\npower2[tx283] -> \
tx286\\n\\npower2[tx284] -> tx287\\n\\npower2[tx285] -> tx288\\n\\ntx286 + \
tx287 + tx288 -> tx289\\n\\npowern2[tx289] -> tx439\\n\\nreciprocal[tx289] -> \
tx440\\n\\ntx439 tx440 -> tx431\\n\\npower2[tx431] -> \
tx290\\n\\npower2[tx440] -> tx432\\n\\ntx440 -> tx433\\n\\ntx432 tx433 -> \
tx291\\n\\nmysqrt[tx289] -> tx434\\n\\nreciprocal[tx434] -> tx292\\n\\ndA \
tx290 -> tx293\\n\\n-(dC tx291) -> tx294\\n\\ndQ1Q2 tx292 -> tx295\\n\\ntx293 \
+ tx294 + tx295 -> Energy\\n\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\\n\
\\n2. ak xh1 -> tx296\\n\\n-2. ck xh1 -> tx297\\n\\n2. dk xh1 -> \
tx298\\n\\n2. ak yh1 -> tx299\\n\\n-2. bk yh1 -> tx300\\n\\n-2. dk yh1 -> \
tx301\\n\\n2. ak zh1 -> tx302\\n\\n-2. bk zh1 -> tx303\\n\\n2. ck zh1 -> \
tx304\\n\\ntx297 + tx300 + tx302 -> tx305\\n\\ntx298 + tx299 + tx303 -> tx306\
\\n\\ntx296 + tx301 + tx304 -> tx307\\n\\n2. tx285 tx305 -> tx308\\n\\n2. \
tx284 tx306 -> tx309\\n\\n2. tx283 tx307 -> tx310\\n\\npower2[tx439] -> tx435\
\\n\\ntx431 tx435 -> tx311\\n\\npower2[tx432] -> tx312\\n\\ntx289 -> tx436\\n\
\\ntx292 -> tx437\\n\\nreciprocal[tx436] -> tx438\\n\\ntx437 tx438 -> \
tx313\\n\\ntx308 + tx309 + tx310 -> tx314\\n\\n-6. dA tx311 tx314 -> tx315\\n\
\\n3 dC tx312 tx314 -> tx316\\n\\n-0.5 dQ1Q2 tx313 tx314 -> tx317\\n\\ntx315 \
+ tx316 + tx317 -> gak\\n\\n-gak -> \
fak\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 0, fak );]\\n\\n2. bk xh1 -> \
tx318\\n\\n2. ck xh1 -> tx319\\n\\n-2. ak yh1 -> tx320\\n\\n2. ck yh1 -> \
tx321\\n\\n-2. ak zh1 -> tx322\\n\\n2. dk zh1 -> tx323\\n\\ntx298 + tx303 + \
tx320 -> tx324\\n\\ntx300 + tx319 + tx322 -> tx325\\n\\ntx318 + tx321 + tx323 \
-> tx326\\n\\n2. tx285 tx324 -> tx327\\n\\n2. tx284 tx325 -> tx328\\n\\n2. \
tx283 tx326 -> tx329\\n\\ntx327 + tx328 + tx329 -> tx330\\n\\n-6. dA tx311 \
tx330 -> tx331\\n\\n3 dC tx312 tx330 -> tx332\\n\\n-0.5 dQ1Q2 tx313 tx330 -> \
tx333\\n\\ntx331 + tx332 + tx333 -> gbk\\n\\n-gbk -> \
fbk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 1, fbk );]\\n\\n-2. ak xh1 -> \
tx334\\n\\n2. bk yh1 -> tx335\\n\\n2. dk yh1 -> tx336\\n\\n-2. ck zh1 -> \
tx337\\n\\ntx302 + tx319 + tx335 -> tx338\\n\\ntx334 + tx336 + tx337 -> tx339\
\\n\\n2. tx284 tx326 -> tx340\\n\\n2. tx283 tx338 -> tx341\\n\\n2. tx285 \
tx339 -> tx342\\n\\ntx340 + tx341 + tx342 -> tx343\\n\\n-6. dA tx311 tx343 -> \
tx344\\n\\n3 dC tx312 tx343 -> tx345\\n\\n-0.5 dQ1Q2 tx313 tx343 -> \
tx346\\n\\ntx344 + tx345 + tx346 -> gck\\n\\n-gck -> \
fck\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 2, fck );]\\n\\n2. bk zh1 -> \
tx347\\n\\ntx298 + tx320 + tx347 -> tx348\\n\\n2. tx284 tx307 -> \
tx349\\n\\n2. tx285 tx326 -> tx350\\n\\n2. tx283 tx348 -> tx351\\n\\ntx349 + \
tx350 + tx351 -> tx352\\n\\n-6. dA tx311 tx352 -> tx353\\n\\n3 dC tx312 tx352 \
-> tx354\\n\\n-0.5 dQ1Q2 tx313 tx352 -> tx355\\n\\ntx353 + tx354 + tx355 -> \
gdk\\n\\n-gdk -> fdk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 3, fdk \
);]\\n\\n-12. dA tx283 tx311 -> tx356\\n\\n6. dC tx283 tx312 -> \
tx357\\n\\n-(dQ1Q2 tx283 tx313) -> tx358\\n\\ntx356 + tx357 + tx358 -> gxk\\n\
\\n-gxk -> fxk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 4, fxk );]\\n\\n-12. \
dA tx284 tx311 -> tx359\\n\\n6. dC tx284 tx312 -> tx360\\n\\n-(dQ1Q2 tx284 \
tx313) -> tx361\\n\\ntx359 + tx360 + tx361 -> gyk\\n\\n-gyk -> \
fyk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 5, fyk );]\\n\\n-12. dA tx285 \
tx311 -> tx362\\n\\n6. dC tx285 tx312 -> tx363\\n\\n-(dQ1Q2 tx285 tx313) -> \
tx364\\n\\ntx362 + tx363 + tx364 -> gzk\\n\\n-gzk -> \
fzk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 6, fzk );]\\n\\n-2. al xh2 -> \
tx365\\n\\n2. cl xh2 -> tx366\\n\\n-2. dl xh2 -> tx367\\n\\n-2. al yh2 -> \
tx368\\n\\n2. bl yh2 -> tx369\\n\\n2. dl yh2 -> tx370\\n\\n-2. al zh2 -> \
tx371\\n\\n2. bl zh2 -> tx372\\n\\n-2. cl zh2 -> tx373\\n\\ntx366 + tx369 + \
tx371 -> tx374\\n\\ntx367 + tx368 + tx372 -> tx375\\n\\ntx365 + tx370 + tx373 \
-> tx376\\n\\n2. tx285 tx374 -> tx377\\n\\n2. tx284 tx375 -> tx378\\n\\n2. \
tx283 tx376 -> tx379\\n\\ntx377 + tx378 + tx379 -> tx380\\n\\n-6. dA tx311 \
tx380 -> tx381\\n\\n3 dC tx312 tx380 -> tx382\\n\\n-0.5 dQ1Q2 tx313 tx380 -> \
tx383\\n\\ntx381 + tx382 + tx383 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\n-2. bl xh2 -> \
tx384\\n\\n-2. cl xh2 -> tx385\\n\\n2. al yh2 -> tx386\\n\\n-2. cl yh2 -> \
tx387\\n\\n2. al zh2 -> tx388\\n\\n-2. dl zh2 -> tx389\\n\\ntx367 + tx372 + \
tx386 -> tx390\\n\\ntx369 + tx385 + tx388 -> tx391\\n\\ntx384 + tx387 + tx389 \
-> tx392\\n\\n2. tx285 tx390 -> tx393\\n\\n2. tx284 tx391 -> tx394\\n\\n2. \
tx283 tx392 -> tx395\\n\\ntx393 + tx394 + tx395 -> tx396\\n\\n-6. dA tx311 \
tx396 -> tx397\\n\\n3 dC tx312 tx396 -> tx398\\n\\n-0.5 dQ1Q2 tx313 tx396 -> \
tx399\\n\\ntx397 + tx398 + tx399 -> gbl\\n\\n-gbl -> \
fbl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 1, fbl );]\\n\\n2. al xh2 -> \
tx400\\n\\n-2. bl yh2 -> tx401\\n\\n-2. dl yh2 -> tx402\\n\\n2. cl zh2 -> \
tx403\\n\\ntx371 + tx385 + tx401 -> tx404\\n\\ntx400 + tx402 + tx403 -> tx405\
\\n\\n2. tx284 tx392 -> tx406\\n\\n2. tx283 tx404 -> tx407\\n\\n2. tx285 \
tx405 -> tx408\\n\\ntx406 + tx407 + tx408 -> tx409\\n\\n-6. dA tx311 tx409 -> \
tx410\\n\\n3 dC tx312 tx409 -> tx411\\n\\n-0.5 dQ1Q2 tx313 tx409 -> \
tx412\\n\\ntx410 + tx411 + tx412 -> gcl\\n\\n-gcl -> \
fcl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 2, fcl );]\\n\\n-2. bl zh2 -> \
tx413\\n\\ntx367 + tx386 + tx413 -> tx414\\n\\n2. tx284 tx376 -> \
tx415\\n\\n2. tx285 tx392 -> tx416\\n\\n2. tx283 tx414 -> tx417\\n\\ntx415 + \
tx416 + tx417 -> tx418\\n\\n-6. dA tx311 tx418 -> tx419\\n\\n3 dC tx312 tx418 \
-> tx420\\n\\n-0.5 dQ1Q2 tx313 tx418 -> tx421\\n\\ntx419 + tx420 + tx421 -> \
gdl\\n\\n-gdl -> fdl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 3, fdl \
);]\\n\\n12. dA tx283 tx311 -> tx422\\n\\n-6. dC tx283 tx312 -> \
tx423\\n\\ndQ1Q2 tx283 tx313 -> tx424\\n\\ntx422 + tx423 + tx424 -> \
gxl\\n\\n-gxl -> fxl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\n\\n12. dA tx284 tx311 -> tx425\\n\\n-6. dC tx284 tx312 -> \
tx426\\n\\ndQ1Q2 tx284 tx313 -> tx427\\n\\ntx425 + tx426 + tx427 -> \
gyl\\n\\n-gyl -> fyl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 5, fyl \
);]\\n\\n12. dA tx285 tx311 -> tx428\\n\\n-6. dC tx285 tx312 -> \
tx429\\n\\ndQ1Q2 tx285 tx313 -> tx430\\n\\ntx428 + tx429 + tx430 -> \
gzl\\n\\n-gzl -> fzl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzl \
);]\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148945288711*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tx440 -> tx433, tx289 -> tx436, \
tx292 -> tx437}\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489472319736`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489472347097`*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tx440 -> tx433\\n\\ntx289 \
-> tx436\\n\\ntx292 -> tx437\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489472371197`*^9}],

Cell[BoxData["\<\"After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(I2);]\\\
n\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(\
dA);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(ak,I1,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bk,I1,1);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(ck,I1,2);]\\n\\nCCode[NONBONDRB_SET_POSITION(dk,I1,3);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(xk,I1,4);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(yk,I1,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zk,I1,6);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(al,I2,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bl,I2,1);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(cl,I2,2);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(dl,I2,3);]\\n\\nCCode[NONBONDRB_SET_POSITION(xl,I2,4);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(yl,I2,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zl,I2,6);]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ());]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh2,pointB,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh2,pointB,getZ());]\
\\n\\npower2[bk] -> tx216\\n\\npower2[bl] -> tx217\\n\\npower2[ck] -> \
tx218\\n\\npower2[cl] -> tx219\\n\\npower2[dk] -> tx220\\n\\npower2[dl] -> \
tx221\\n\\npower2[ak] -> tx222\\n\\npower2[al] -> tx223\\n\\n-2. ak -> tzz452\
\\n\\nbk tzz452 -> tx224\\n\\n-2. al -> tzz451\\n\\nbl tzz451 -> \
tx225\\n\\nck tzz452 -> tx226\\n\\n2. ck -> tzz454\\n\\nak tzz454 -> tx227\\n\
\\nbk tzz454 -> tx228\\n\\ncl tzz451 -> tx229\\n\\n2. cl -> tzz453\\n\\nal \
tzz453 -> tx230\\n\\nbl tzz453 -> tx231\\n\\ndk tzz452 -> tx232\\n\\n2. dk -> \
tzz450\\n\\nak tzz450 -> tx233\\n\\nbk tzz450 -> tx234\\n\\nck tzz450 -> \
tx235\\n\\ndl tzz451 -> tx236\\n\\n2. al -> tzz455\\n\\ndl tzz455 -> tx237\\n\
\\n2. bl -> tzz458\\n\\ndl tzz458 -> tx238\\n\\ndl tzz453 -> \
tx239\\n\\n-tx216 -> tx240\\n\\n-tx217 -> tx241\\n\\n-tx218 -> \
tx242\\n\\n-tx219 -> tx243\\n\\n-tx220 -> tx244\\n\\n-tx221 -> \
tx245\\n\\ntx216 + tx218 + tx220 + tx222 -> tx246\\n\\ntx217 + tx219 + tx221 \
+ tx223 -> tx247\\n\\ntx228 + tx232 -> tx248\\n\\ntx228 + tx233 -> \
tx249\\n\\ntx226 + tx234 -> tx250\\n\\ntx227 + tx234 -> tx251\\n\\ntx224 + \
tx235 -> tx252\\n\\ntx231 + tx236 -> tx253\\n\\ntx231 + tx237 -> \
tx254\\n\\ntx229 + tx238 -> tx255\\n\\ntx230 + tx238 -> tx256\\n\\ntx225 + \
tx239 -> tx257\\n\\ntx220 + tx222 + tx240 + tx242 -> tx258\\n\\ntx221 + tx223 \
+ tx241 + tx243 -> tx259\\n\\ntx218 + tx222 + tx240 + tx244 -> \
tx260\\n\\ntx219 + tx223 + tx241 + tx245 -> tx261\\n\\ntx246 xh1 -> \
tx262\\n\\ntx249 xh1 -> tx263\\n\\ntx250 xh1 -> tx264\\n\\n-xh2 -> \
tzz463\\n\\ntx247 tzz463 -> tx265\\n\\ntx254 tzz463 -> tx266\\n\\ntx255 \
tzz463 -> tx267\\n\\n-xl -> tx268\\n\\ntx248 yh1 -> tx269\\n\\ntx252 yh1 -> \
tx270\\n\\ntx260 yh1 -> tx271\\n\\n-yh2 -> tzz462\\n\\ntx253 tzz462 -> \
tx272\\n\\ntx257 tzz462 -> tx273\\n\\ntx261 tzz462 -> tx274\\n\\n-yl -> tx275\
\\n\\ntx251 zh1 -> tx276\\n\\ntx252 zh1 -> tx277\\n\\ntx258 zh1 -> \
tx278\\n\\n-zh2 -> tzz461\\n\\ntx256 tzz461 -> tx279\\n\\ntx257 tzz461 -> \
tx280\\n\\ntx259 tzz461 -> tx281\\n\\n-zl -> tx282\\n\\ntx262 + tx265 + tx268 \
+ tx269 + tx272 + tx276 + tx279 + xk -> tx283\\n\\ntx263 + tx266 + tx271 + \
tx274 + tx275 + tx277 + tx280 + yk -> tx284\\n\\ntx264 + tx267 + tx270 + \
tx273 + tx278 + tx281 + tx282 + zk -> tx285\\n\\npower2[tx283] -> \
tx286\\n\\npower2[tx284] -> tx287\\n\\npower2[tx285] -> tx288\\n\\ntx286 + \
tx287 + tx288 -> tx289\\n\\npower2[reciprocal[tx289]] -> \
tx439\\n\\nreciprocal[tx289] -> tx440\\n\\ntx439 tx440 -> \
tx431\\n\\npower2[tx431] -> tx290\\n\\npower2[tx440] -> tx432\\n\\ntx440 -> \
tx433\\n\\ntx432 tx433 -> tx291\\n\\nmysqrt[tx289] -> \
tx434\\n\\nreciprocal[tx434] -> tx292\\n\\ndA tx290 -> tx293\\n\\n-(dC tx291) \
-> tx294\\n\\ndQ1Q2 tx292 -> tx295\\n\\ntx293 + tx294 + tx295 -> \
Energy\\n\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\\n\\n2. ak -> \
tzz460\\n\\ntzz460 xh1 -> tx296\\n\\n-2. ck xh1 -> tx297\\n\\ntzz450 xh1 -> \
tx298\\n\\ntzz460 yh1 -> tx299\\n\\n-2. yh1 -> tzz471\\n\\nbk tzz471 -> tx300\
\\n\\ndk tzz471 -> tx301\\n\\ntzz460 zh1 -> tx302\\n\\n-2. zh1 -> \
tzz470\\n\\nbk tzz470 -> tx303\\n\\ntzz454 zh1 -> tx304\\n\\ntx297 + tx300 + \
tx302 -> tx305\\n\\ntx298 + tx299 + tx303 -> tx306\\n\\ntx296 + tx301 + tx304 \
-> tx307\\n\\n2. tx285 -> tzz445\\n\\ntx305 tzz445 -> tx308\\n\\n2. tx284 -> \
tzz446\\n\\ntx306 tzz446 -> tx309\\n\\n2. tx283 -> tzz447\\n\\ntx307 tzz447 \
-> tx310\\n\\npower2[tx439] -> tx435\\n\\ntx431 tx435 -> \
tx311\\n\\npower2[tx432] -> tx312\\n\\ntx289 -> tx436\\n\\ntx292 -> \
tx437\\n\\nreciprocal[tx436] -> tx438\\n\\ntx437 tx438 -> tx313\\n\\ntx308 + \
tx309 + tx310 -> tx314\\n\\ndA tx311 -> tzz443\\n\\n-6. tzz443 -> \
tzz449\\n\\ntx314 tzz449 -> tx315\\n\\ndC tx312 -> tzz442\\n\\n3 tzz442 -> \
tzz444\\n\\ntx314 tzz444 -> tx316\\n\\ndQ1Q2 tx313 -> tzz441\\n\\n-0.5 tzz441 \
-> tzz448\\n\\ntx314 tzz448 -> tx317\\n\\ntx315 + tx316 + tx317 -> \
gak\\n\\n-gak -> fak\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 0, fak \
);]\\n\\n2. bk -> tzz459\\n\\ntzz459 xh1 -> tx318\\n\\ntzz454 xh1 -> tx319\\n\
\\ntzz452 yh1 -> tx320\\n\\ntzz454 yh1 -> tx321\\n\\ntzz452 zh1 -> \
tx322\\n\\ntzz450 zh1 -> tx323\\n\\ntx298 + tx303 + tx320 -> tx324\\n\\ntx300 \
+ tx319 + tx322 -> tx325\\n\\ntx318 + tx321 + tx323 -> tx326\\n\\ntx324 \
tzz445 -> tx327\\n\\ntx325 tzz446 -> tx328\\n\\ntx326 tzz447 -> \
tx329\\n\\ntx327 + tx328 + tx329 -> tx330\\n\\ntx330 tzz449 -> \
tx331\\n\\ntx330 tzz444 -> tx332\\n\\ntx330 tzz448 -> tx333\\n\\ntx331 + \
tx332 + tx333 -> gbk\\n\\n-gbk -> \
fbk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 1, fbk );]\\n\\ntzz452 xh1 -> \
tx334\\n\\ntzz459 yh1 -> tx335\\n\\ntzz450 yh1 -> tx336\\n\\nck tzz470 -> \
tx337\\n\\ntx302 + tx319 + tx335 -> tx338\\n\\ntx334 + tx336 + tx337 -> tx339\
\\n\\ntx326 tzz446 -> tx340\\n\\ntx338 tzz447 -> tx341\\n\\ntx339 tzz445 -> \
tx342\\n\\ntx340 + tx341 + tx342 -> tx343\\n\\ntx343 tzz449 -> \
tx344\\n\\ntx343 tzz444 -> tx345\\n\\ntx343 tzz448 -> tx346\\n\\ntx344 + \
tx345 + tx346 -> gck\\n\\n-gck -> \
fck\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 2, fck );]\\n\\ntzz459 zh1 -> \
tx347\\n\\ntx298 + tx320 + tx347 -> tx348\\n\\ntx307 tzz446 -> \
tx349\\n\\ntx326 tzz445 -> tx350\\n\\ntx348 tzz447 -> tx351\\n\\ntx349 + \
tx350 + tx351 -> tx352\\n\\ntx352 tzz449 -> tx353\\n\\ntx352 tzz444 -> \
tx354\\n\\ntx352 tzz448 -> tx355\\n\\ntx353 + tx354 + tx355 -> gdk\\n\\n-gdk \
-> fdk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 3, fdk );]\\n\\n-12. tzz443 \
-> tzz469\\n\\ntx283 tzz469 -> tx356\\n\\n6. tzz442 -> tzz457\\n\\ntx283 \
tzz457 -> tx357\\n\\n-tzz441 -> tzz464\\n\\ntx283 tzz464 -> tx358\\n\\ntx356 \
+ tx357 + tx358 -> gxk\\n\\n-gxk -> \
fxk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 4, fxk );]\\n\\ntx284 tzz469 -> \
tx359\\n\\ntx284 tzz457 -> tx360\\n\\ntx284 tzz464 -> tx361\\n\\ntx359 + \
tx360 + tx361 -> gyk\\n\\n-gyk -> \
fyk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 5, fyk );]\\n\\ntx285 tzz469 -> \
tx362\\n\\ntx285 tzz457 -> tx363\\n\\ntx285 tzz464 -> tx364\\n\\ntx362 + \
tx363 + tx364 -> gzk\\n\\n-gzk -> \
fzk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 6, fzk );]\\n\\ntzz451 xh2 -> \
tx365\\n\\ntzz453 xh2 -> tx366\\n\\n-2. xh2 -> tzz467\\n\\ndl tzz467 -> tx367\
\\n\\ntzz451 yh2 -> tx368\\n\\ntzz458 yh2 -> tx369\\n\\n2. dl yh2 -> tx370\\n\
\\ntzz451 zh2 -> tx371\\n\\ntzz458 zh2 -> tx372\\n\\n-2. zh2 -> \
tzz465\\n\\ncl tzz465 -> tx373\\n\\ntx366 + tx369 + tx371 -> tx374\\n\\ntx367 \
+ tx368 + tx372 -> tx375\\n\\ntx365 + tx370 + tx373 -> tx376\\n\\ntx374 \
tzz445 -> tx377\\n\\ntx375 tzz446 -> tx378\\n\\ntx376 tzz447 -> \
tx379\\n\\ntx377 + tx378 + tx379 -> tx380\\n\\ntx380 tzz449 -> \
tx381\\n\\ntx380 tzz444 -> tx382\\n\\ntx380 tzz448 -> tx383\\n\\ntx381 + \
tx382 + tx383 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\nbl tzz467 -> \
tx384\\n\\ncl tzz467 -> tx385\\n\\ntzz455 yh2 -> tx386\\n\\n-2. yh2 -> tzz466\
\\n\\ncl tzz466 -> tx387\\n\\ntzz455 zh2 -> tx388\\n\\ndl tzz465 -> \
tx389\\n\\ntx367 + tx372 + tx386 -> tx390\\n\\ntx369 + tx385 + tx388 -> tx391\
\\n\\ntx384 + tx387 + tx389 -> tx392\\n\\ntx390 tzz445 -> tx393\\n\\ntx391 \
tzz446 -> tx394\\n\\ntx392 tzz447 -> tx395\\n\\ntx393 + tx394 + tx395 -> \
tx396\\n\\ntx396 tzz449 -> tx397\\n\\ntx396 tzz444 -> tx398\\n\\ntx396 tzz448 \
-> tx399\\n\\ntx397 + tx398 + tx399 -> gbl\\n\\n-gbl -> \
fbl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 1, fbl );]\\n\\ntzz455 xh2 -> \
tx400\\n\\nbl tzz466 -> tx401\\n\\ndl tzz466 -> tx402\\n\\ntzz453 zh2 -> \
tx403\\n\\ntx371 + tx385 + tx401 -> tx404\\n\\ntx400 + tx402 + tx403 -> tx405\
\\n\\ntx392 tzz446 -> tx406\\n\\ntx404 tzz447 -> tx407\\n\\ntx405 tzz445 -> \
tx408\\n\\ntx406 + tx407 + tx408 -> tx409\\n\\ntx409 tzz449 -> \
tx410\\n\\ntx409 tzz444 -> tx411\\n\\ntx409 tzz448 -> tx412\\n\\ntx410 + \
tx411 + tx412 -> gcl\\n\\n-gcl -> \
fcl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 2, fcl );]\\n\\nbl tzz465 -> \
tx413\\n\\ntx367 + tx386 + tx413 -> tx414\\n\\ntx376 tzz446 -> \
tx415\\n\\ntx392 tzz445 -> tx416\\n\\ntx414 tzz447 -> tx417\\n\\ntx415 + \
tx416 + tx417 -> tx418\\n\\ntx418 tzz449 -> tx419\\n\\ntx418 tzz444 -> \
tx420\\n\\ntx418 tzz448 -> tx421\\n\\ntx419 + tx420 + tx421 -> gdl\\n\\n-gdl \
-> fdl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 3, fdl );]\\n\\n12. tzz443 \
-> tzz456\\n\\ntx283 tzz456 -> tx422\\n\\n-6. tzz442 -> tzz468\\n\\ntx283 \
tzz468 -> tx423\\n\\ntx283 tzz441 -> tx424\\n\\ntx422 + tx423 + tx424 -> \
gxl\\n\\n-gxl -> fxl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\n\\ntx284 tzz456 -> tx425\\n\\ntx284 tzz468 -> tx426\\n\\ntx284 tzz441 \
-> tx427\\n\\ntx425 + tx426 + tx427 -> gyl\\n\\n-gyl -> \
fyl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 5, fyl );]\\n\\ntx285 tzz456 -> \
tx428\\n\\ntx285 tzz468 -> tx429\\n\\ntx285 tzz441 -> tx430\\n\\ntx428 + \
tx429 + tx430 -> gzl\\n\\n-gzl -> \
fzl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzl );]\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148947239532*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489474162617`*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tx472 -> tx440, tx440 -> tx433, \
tx289 -> tx436, tx292 -> tx437}\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.70714894741835*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148947420368*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tx472 -> tx440\\n\\ntx440 \
-> tx433\\n\\ntx289 -> tx436\\n\\ntx292 -> tx437\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.7071489474223833`*^9}],

Cell[BoxData["\<\"After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(I2);]\\\
n\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(\
dA);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(ak,I1,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bk,I1,1);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(ck,I1,2);]\\n\\nCCode[NONBONDRB_SET_POSITION(dk,I1,3);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(xk,I1,4);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(yk,I1,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zk,I1,6);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(al,I2,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bl,I2,1);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(cl,I2,2);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(dl,I2,3);]\\n\\nCCode[NONBONDRB_SET_POSITION(xl,I2,4);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(yl,I2,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zl,I2,6);]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ());]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh2,pointB,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh2,pointB,getZ());]\
\\n\\npower2[bk] -> tx216\\n\\npower2[bl] -> tx217\\n\\npower2[ck] -> \
tx218\\n\\npower2[cl] -> tx219\\n\\npower2[dk] -> tx220\\n\\npower2[dl] -> \
tx221\\n\\npower2[ak] -> tx222\\n\\npower2[al] -> tx223\\n\\n-2. ak -> tzz452\
\\n\\nbk tzz452 -> tx224\\n\\n-2. al -> tzz451\\n\\nbl tzz451 -> \
tx225\\n\\nck tzz452 -> tx226\\n\\n2. ck -> tzz454\\n\\nak tzz454 -> tx227\\n\
\\nbk tzz454 -> tx228\\n\\ncl tzz451 -> tx229\\n\\n2. cl -> tzz453\\n\\nal \
tzz453 -> tx230\\n\\nbl tzz453 -> tx231\\n\\ndk tzz452 -> tx232\\n\\n2. dk -> \
tzz450\\n\\nak tzz450 -> tx233\\n\\nbk tzz450 -> tx234\\n\\nck tzz450 -> \
tx235\\n\\ndl tzz451 -> tx236\\n\\n2. al -> tzz455\\n\\ndl tzz455 -> tx237\\n\
\\n2. bl -> tzz458\\n\\ndl tzz458 -> tx238\\n\\ndl tzz453 -> \
tx239\\n\\n-tx216 -> tx240\\n\\n-tx217 -> tx241\\n\\n-tx218 -> \
tx242\\n\\n-tx219 -> tx243\\n\\n-tx220 -> tx244\\n\\n-tx221 -> \
tx245\\n\\ntx216 + tx218 + tx220 + tx222 -> tx246\\n\\ntx217 + tx219 + tx221 \
+ tx223 -> tx247\\n\\ntx228 + tx232 -> tx248\\n\\ntx228 + tx233 -> \
tx249\\n\\ntx226 + tx234 -> tx250\\n\\ntx227 + tx234 -> tx251\\n\\ntx224 + \
tx235 -> tx252\\n\\ntx231 + tx236 -> tx253\\n\\ntx231 + tx237 -> \
tx254\\n\\ntx229 + tx238 -> tx255\\n\\ntx230 + tx238 -> tx256\\n\\ntx225 + \
tx239 -> tx257\\n\\ntx220 + tx222 + tx240 + tx242 -> tx258\\n\\ntx221 + tx223 \
+ tx241 + tx243 -> tx259\\n\\ntx218 + tx222 + tx240 + tx244 -> \
tx260\\n\\ntx219 + tx223 + tx241 + tx245 -> tx261\\n\\ntx246 xh1 -> \
tx262\\n\\ntx249 xh1 -> tx263\\n\\ntx250 xh1 -> tx264\\n\\n-xh2 -> \
tzz463\\n\\ntx247 tzz463 -> tx265\\n\\ntx254 tzz463 -> tx266\\n\\ntx255 \
tzz463 -> tx267\\n\\n-xl -> tx268\\n\\ntx248 yh1 -> tx269\\n\\ntx252 yh1 -> \
tx270\\n\\ntx260 yh1 -> tx271\\n\\n-yh2 -> tzz462\\n\\ntx253 tzz462 -> \
tx272\\n\\ntx257 tzz462 -> tx273\\n\\ntx261 tzz462 -> tx274\\n\\n-yl -> tx275\
\\n\\ntx251 zh1 -> tx276\\n\\ntx252 zh1 -> tx277\\n\\ntx258 zh1 -> \
tx278\\n\\n-zh2 -> tzz461\\n\\ntx256 tzz461 -> tx279\\n\\ntx257 tzz461 -> \
tx280\\n\\ntx259 tzz461 -> tx281\\n\\n-zl -> tx282\\n\\ntx262 + tx265 + tx268 \
+ tx269 + tx272 + tx276 + tx279 + xk -> tx283\\n\\ntx263 + tx266 + tx271 + \
tx274 + tx275 + tx277 + tx280 + yk -> tx284\\n\\ntx264 + tx267 + tx270 + \
tx273 + tx278 + tx281 + tx282 + zk -> tx285\\n\\npower2[tx283] -> \
tx286\\n\\npower2[tx284] -> tx287\\n\\npower2[tx285] -> tx288\\n\\ntx286 + \
tx287 + tx288 -> tx289\\n\\nreciprocal[tx289] -> tx472\\n\\npower2[tx472] -> \
tx439\\n\\ntx472 -> tx440\\n\\ntx439 tx440 -> tx431\\n\\npower2[tx431] -> \
tx290\\n\\npower2[tx440] -> tx432\\n\\ntx440 -> tx433\\n\\ntx432 tx433 -> \
tx291\\n\\nmysqrt[tx289] -> tx434\\n\\nreciprocal[tx434] -> tx292\\n\\ndA \
tx290 -> tx293\\n\\n-(dC tx291) -> tx294\\n\\ndQ1Q2 tx292 -> tx295\\n\\ntx293 \
+ tx294 + tx295 -> Energy\\n\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\\n\
\\n2. ak -> tzz460\\n\\ntzz460 xh1 -> tx296\\n\\n-2. ck xh1 -> \
tx297\\n\\ntzz450 xh1 -> tx298\\n\\ntzz460 yh1 -> tx299\\n\\n-2. yh1 -> \
tzz471\\n\\nbk tzz471 -> tx300\\n\\ndk tzz471 -> tx301\\n\\ntzz460 zh1 -> \
tx302\\n\\n-2. zh1 -> tzz470\\n\\nbk tzz470 -> tx303\\n\\ntzz454 zh1 -> tx304\
\\n\\ntx297 + tx300 + tx302 -> tx305\\n\\ntx298 + tx299 + tx303 -> \
tx306\\n\\ntx296 + tx301 + tx304 -> tx307\\n\\n2. tx285 -> tzz445\\n\\ntx305 \
tzz445 -> tx308\\n\\n2. tx284 -> tzz446\\n\\ntx306 tzz446 -> tx309\\n\\n2. \
tx283 -> tzz447\\n\\ntx307 tzz447 -> tx310\\n\\npower2[tx439] -> \
tx435\\n\\ntx431 tx435 -> tx311\\n\\npower2[tx432] -> tx312\\n\\ntx289 -> \
tx436\\n\\ntx292 -> tx437\\n\\nreciprocal[tx436] -> tx438\\n\\ntx437 tx438 -> \
tx313\\n\\ntx308 + tx309 + tx310 -> tx314\\n\\ndA tx311 -> tzz443\\n\\n-6. \
tzz443 -> tzz449\\n\\ntx314 tzz449 -> tx315\\n\\ndC tx312 -> tzz442\\n\\n3 \
tzz442 -> tzz444\\n\\ntx314 tzz444 -> tx316\\n\\ndQ1Q2 tx313 -> \
tzz441\\n\\n-0.5 tzz441 -> tzz448\\n\\ntx314 tzz448 -> tx317\\n\\ntx315 + \
tx316 + tx317 -> gak\\n\\n-gak -> \
fak\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 0, fak );]\\n\\n2. bk -> tzz459\
\\n\\ntzz459 xh1 -> tx318\\n\\ntzz454 xh1 -> tx319\\n\\ntzz452 yh1 -> \
tx320\\n\\ntzz454 yh1 -> tx321\\n\\ntzz452 zh1 -> tx322\\n\\ntzz450 zh1 -> \
tx323\\n\\ntx298 + tx303 + tx320 -> tx324\\n\\ntx300 + tx319 + tx322 -> tx325\
\\n\\ntx318 + tx321 + tx323 -> tx326\\n\\ntx324 tzz445 -> tx327\\n\\ntx325 \
tzz446 -> tx328\\n\\ntx326 tzz447 -> tx329\\n\\ntx327 + tx328 + tx329 -> \
tx330\\n\\ntx330 tzz449 -> tx331\\n\\ntx330 tzz444 -> tx332\\n\\ntx330 tzz448 \
-> tx333\\n\\ntx331 + tx332 + tx333 -> gbk\\n\\n-gbk -> \
fbk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 1, fbk );]\\n\\ntzz452 xh1 -> \
tx334\\n\\ntzz459 yh1 -> tx335\\n\\ntzz450 yh1 -> tx336\\n\\nck tzz470 -> \
tx337\\n\\ntx302 + tx319 + tx335 -> tx338\\n\\ntx334 + tx336 + tx337 -> tx339\
\\n\\ntx326 tzz446 -> tx340\\n\\ntx338 tzz447 -> tx341\\n\\ntx339 tzz445 -> \
tx342\\n\\ntx340 + tx341 + tx342 -> tx343\\n\\ntx343 tzz449 -> \
tx344\\n\\ntx343 tzz444 -> tx345\\n\\ntx343 tzz448 -> tx346\\n\\ntx344 + \
tx345 + tx346 -> gck\\n\\n-gck -> \
fck\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 2, fck );]\\n\\ntzz459 zh1 -> \
tx347\\n\\ntx298 + tx320 + tx347 -> tx348\\n\\ntx307 tzz446 -> \
tx349\\n\\ntx326 tzz445 -> tx350\\n\\ntx348 tzz447 -> tx351\\n\\ntx349 + \
tx350 + tx351 -> tx352\\n\\ntx352 tzz449 -> tx353\\n\\ntx352 tzz444 -> \
tx354\\n\\ntx352 tzz448 -> tx355\\n\\ntx353 + tx354 + tx355 -> gdk\\n\\n-gdk \
-> fdk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 3, fdk );]\\n\\n-12. tzz443 \
-> tzz469\\n\\ntx283 tzz469 -> tx356\\n\\n6. tzz442 -> tzz457\\n\\ntx283 \
tzz457 -> tx357\\n\\n-tzz441 -> tzz464\\n\\ntx283 tzz464 -> tx358\\n\\ntx356 \
+ tx357 + tx358 -> gxk\\n\\n-gxk -> \
fxk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 4, fxk );]\\n\\ntx284 tzz469 -> \
tx359\\n\\ntx284 tzz457 -> tx360\\n\\ntx284 tzz464 -> tx361\\n\\ntx359 + \
tx360 + tx361 -> gyk\\n\\n-gyk -> \
fyk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 5, fyk );]\\n\\ntx285 tzz469 -> \
tx362\\n\\ntx285 tzz457 -> tx363\\n\\ntx285 tzz464 -> tx364\\n\\ntx362 + \
tx363 + tx364 -> gzk\\n\\n-gzk -> \
fzk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 6, fzk );]\\n\\ntzz451 xh2 -> \
tx365\\n\\ntzz453 xh2 -> tx366\\n\\n-2. xh2 -> tzz467\\n\\ndl tzz467 -> tx367\
\\n\\ntzz451 yh2 -> tx368\\n\\ntzz458 yh2 -> tx369\\n\\n2. dl yh2 -> tx370\\n\
\\ntzz451 zh2 -> tx371\\n\\ntzz458 zh2 -> tx372\\n\\n-2. zh2 -> \
tzz465\\n\\ncl tzz465 -> tx373\\n\\ntx366 + tx369 + tx371 -> tx374\\n\\ntx367 \
+ tx368 + tx372 -> tx375\\n\\ntx365 + tx370 + tx373 -> tx376\\n\\ntx374 \
tzz445 -> tx377\\n\\ntx375 tzz446 -> tx378\\n\\ntx376 tzz447 -> \
tx379\\n\\ntx377 + tx378 + tx379 -> tx380\\n\\ntx380 tzz449 -> \
tx381\\n\\ntx380 tzz444 -> tx382\\n\\ntx380 tzz448 -> tx383\\n\\ntx381 + \
tx382 + tx383 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\nbl tzz467 -> \
tx384\\n\\ncl tzz467 -> tx385\\n\\ntzz455 yh2 -> tx386\\n\\n-2. yh2 -> tzz466\
\\n\\ncl tzz466 -> tx387\\n\\ntzz455 zh2 -> tx388\\n\\ndl tzz465 -> \
tx389\\n\\ntx367 + tx372 + tx386 -> tx390\\n\\ntx369 + tx385 + tx388 -> tx391\
\\n\\ntx384 + tx387 + tx389 -> tx392\\n\\ntx390 tzz445 -> tx393\\n\\ntx391 \
tzz446 -> tx394\\n\\ntx392 tzz447 -> tx395\\n\\ntx393 + tx394 + tx395 -> \
tx396\\n\\ntx396 tzz449 -> tx397\\n\\ntx396 tzz444 -> tx398\\n\\ntx396 tzz448 \
-> tx399\\n\\ntx397 + tx398 + tx399 -> gbl\\n\\n-gbl -> \
fbl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 1, fbl );]\\n\\ntzz455 xh2 -> \
tx400\\n\\nbl tzz466 -> tx401\\n\\ndl tzz466 -> tx402\\n\\ntzz453 zh2 -> \
tx403\\n\\ntx371 + tx385 + tx401 -> tx404\\n\\ntx400 + tx402 + tx403 -> tx405\
\\n\\ntx392 tzz446 -> tx406\\n\\ntx404 tzz447 -> tx407\\n\\ntx405 tzz445 -> \
tx408\\n\\ntx406 + tx407 + tx408 -> tx409\\n\\ntx409 tzz449 -> \
tx410\\n\\ntx409 tzz444 -> tx411\\n\\ntx409 tzz448 -> tx412\\n\\ntx410 + \
tx411 + tx412 -> gcl\\n\\n-gcl -> \
fcl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 2, fcl );]\\n\\nbl tzz465 -> \
tx413\\n\\ntx367 + tx386 + tx413 -> tx414\\n\\ntx376 tzz446 -> \
tx415\\n\\ntx392 tzz445 -> tx416\\n\\ntx414 tzz447 -> tx417\\n\\ntx415 + \
tx416 + tx417 -> tx418\\n\\ntx418 tzz449 -> tx419\\n\\ntx418 tzz444 -> \
tx420\\n\\ntx418 tzz448 -> tx421\\n\\ntx419 + tx420 + tx421 -> gdl\\n\\n-gdl \
-> fdl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 3, fdl );]\\n\\n12. tzz443 \
-> tzz456\\n\\ntx283 tzz456 -> tx422\\n\\n-6. tzz442 -> tzz468\\n\\ntx283 \
tzz468 -> tx423\\n\\ntx283 tzz441 -> tx424\\n\\ntx422 + tx423 + tx424 -> \
gxl\\n\\n-gxl -> fxl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\n\\ntx284 tzz456 -> tx425\\n\\ntx284 tzz468 -> tx426\\n\\ntx284 tzz441 \
-> tx427\\n\\ntx425 + tx426 + tx427 -> gyl\\n\\n-gyl -> \
fyl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 5, fyl );]\\n\\ntx285 tzz456 -> \
tx428\\n\\ntx285 tzz468 -> tx429\\n\\ntx285 tzz441 -> tx430\\n\\ntx428 + \
tx429 + tx430 -> gzl\\n\\n-gzl -> \
fzl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzl );]\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148947424438*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tx472 -> tx440, tx440 -> tx433, \
tx289 -> tx436, tx292 -> tx437}\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148947733173*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fak, fbk, fck, fdk, fxk, \
fyk, fzk, fal, fbl, fcl, fdl, fxl, fyl, fzl, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148947736103*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tx472 -> tx440\\n\\ntx440 \
-> tx433\\n\\ntx289 -> tx436\\n\\ntx292 -> tx437\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148947738578*^9}],

Cell[BoxData["\<\"After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(I2);]\\\
n\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(\
dA);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(ak,I1,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bk,I1,1);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(ck,I1,2);]\\n\\nCCode[NONBONDRB_SET_POSITION(dk,I1,3);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(xk,I1,4);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(yk,I1,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zk,I1,6);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(al,I2,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bl,I2,1);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(cl,I2,2);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(dl,I2,3);]\\n\\nCCode[NONBONDRB_SET_POSITION(xl,I2,4);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(yl,I2,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zl,I2,6);]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ());]\
\\n\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yh2,pointB,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zh2,pointB,getZ());]\
\\n\\npower2[bk] -> tx216\\n\\npower2[bl] -> tx217\\n\\npower2[ck] -> \
tx218\\n\\npower2[cl] -> tx219\\n\\npower2[dk] -> tx220\\n\\npower2[dl] -> \
tx221\\n\\npower2[ak] -> tx222\\n\\npower2[al] -> tx223\\n\\n-2. ak -> tzz452\
\\n\\nbk tzz452 -> tx224\\n\\n-2. al -> tzz451\\n\\nbl tzz451 -> \
tx225\\n\\nck tzz452 -> tx226\\n\\n2. ck -> tzz454\\n\\nak tzz454 -> tx227\\n\
\\nbk tzz454 -> tx228\\n\\ncl tzz451 -> tx229\\n\\n2. cl -> tzz453\\n\\nal \
tzz453 -> tx230\\n\\nbl tzz453 -> tx231\\n\\ndk tzz452 -> tx232\\n\\n2. dk -> \
tzz450\\n\\nak tzz450 -> tx233\\n\\nbk tzz450 -> tx234\\n\\nck tzz450 -> \
tx235\\n\\ndl tzz451 -> tx236\\n\\n2. al -> tzz455\\n\\ndl tzz455 -> tx237\\n\
\\n2. bl -> tzz458\\n\\ndl tzz458 -> tx238\\n\\ndl tzz453 -> \
tx239\\n\\n-tx216 -> tx240\\n\\n-tx217 -> tx241\\n\\n-tx218 -> \
tx242\\n\\n-tx219 -> tx243\\n\\n-tx220 -> tx244\\n\\n-tx221 -> \
tx245\\n\\ntx216 + tx218 + tx220 + tx222 -> tx246\\n\\ntx217 + tx219 + tx221 \
+ tx223 -> tx247\\n\\ntx228 + tx232 -> tx248\\n\\ntx228 + tx233 -> \
tx249\\n\\ntx226 + tx234 -> tx250\\n\\ntx227 + tx234 -> tx251\\n\\ntx224 + \
tx235 -> tx252\\n\\ntx231 + tx236 -> tx253\\n\\ntx231 + tx237 -> \
tx254\\n\\ntx229 + tx238 -> tx255\\n\\ntx230 + tx238 -> tx256\\n\\ntx225 + \
tx239 -> tx257\\n\\ntx222 + tx240 -> tzz476\\n\\ntx220 + tx242 + tzz476 -> \
tx258\\n\\ntx223 + tx241 -> tzz475\\n\\ntx221 + tx243 + tzz475 -> \
tx259\\n\\ntx218 + tx244 + tzz476 -> tx260\\n\\ntx219 + tx245 + tzz475 -> \
tx261\\n\\ntx246 xh1 -> tx262\\n\\ntx249 xh1 -> tx263\\n\\ntx250 xh1 -> tx264\
\\n\\n-xh2 -> tzz463\\n\\ntx247 tzz463 -> tx265\\n\\ntx254 tzz463 -> tx266\\n\
\\ntx255 tzz463 -> tx267\\n\\n-xl -> tx268\\n\\ntx248 yh1 -> tx269\\n\\ntx252 \
yh1 -> tx270\\n\\ntx260 yh1 -> tx271\\n\\n-yh2 -> tzz462\\n\\ntx253 tzz462 -> \
tx272\\n\\ntx257 tzz462 -> tx273\\n\\ntx261 tzz462 -> tx274\\n\\n-yl -> tx275\
\\n\\ntx251 zh1 -> tx276\\n\\ntx252 zh1 -> tx277\\n\\ntx258 zh1 -> \
tx278\\n\\n-zh2 -> tzz461\\n\\ntx256 tzz461 -> tx279\\n\\ntx257 tzz461 -> \
tx280\\n\\ntx259 tzz461 -> tx281\\n\\n-zl -> tx282\\n\\ntx262 + tx265 + tx268 \
+ tx269 + tx272 + tx276 + tx279 + xk -> tx283\\n\\ntx263 + tx266 + tx271 + \
tx274 + tx275 + tx277 + tx280 + yk -> tx284\\n\\ntx264 + tx267 + tx270 + \
tx273 + tx278 + tx281 + tx282 + zk -> tx285\\n\\npower2[tx283] -> \
tx286\\n\\npower2[tx284] -> tx287\\n\\npower2[tx285] -> tx288\\n\\ntx286 + \
tx287 + tx288 -> tx289\\n\\nreciprocal[tx289] -> tx472\\n\\npower2[tx472] -> \
tx439\\n\\ntx472 -> tx440\\n\\ntx439 tx440 -> tx431\\n\\npower2[tx431] -> \
tx290\\n\\npower2[tx440] -> tx432\\n\\ntx440 -> tx433\\n\\ntx432 tx433 -> \
tx291\\n\\nmysqrt[tx289] -> tx434\\n\\nreciprocal[tx434] -> tx292\\n\\ndA \
tx290 -> tx293\\n\\n-(dC tx291) -> tx294\\n\\ndQ1Q2 tx292 -> tx295\\n\\ntx293 \
+ tx294 + tx295 -> Energy\\n\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\\n\
\\n2. ak -> tzz460\\n\\ntzz460 xh1 -> tx296\\n\\n-2. ck xh1 -> \
tx297\\n\\ntzz450 xh1 -> tx298\\n\\ntzz460 yh1 -> tx299\\n\\n-2. yh1 -> \
tzz471\\n\\nbk tzz471 -> tx300\\n\\ndk tzz471 -> tx301\\n\\ntzz460 zh1 -> \
tx302\\n\\n-2. zh1 -> tzz470\\n\\nbk tzz470 -> tx303\\n\\ntzz454 zh1 -> tx304\
\\n\\ntx297 + tx300 + tx302 -> tx305\\n\\ntx298 + tx299 + tx303 -> \
tx306\\n\\ntx296 + tx301 + tx304 -> tx307\\n\\n2. tx285 -> tzz445\\n\\ntx305 \
tzz445 -> tx308\\n\\n2. tx284 -> tzz446\\n\\ntx306 tzz446 -> tx309\\n\\n2. \
tx283 -> tzz447\\n\\ntx307 tzz447 -> tx310\\n\\npower2[tx439] -> \
tx435\\n\\ntx431 tx435 -> tx311\\n\\npower2[tx432] -> tx312\\n\\ntx289 -> \
tx436\\n\\ntx292 -> tx437\\n\\nreciprocal[tx436] -> tx438\\n\\ntx437 tx438 -> \
tx313\\n\\ntx308 + tx309 + tx310 -> tx314\\n\\ndA tx311 -> tzz443\\n\\n-6. \
tzz443 -> tzz449\\n\\ntx314 tzz449 -> tx315\\n\\ndC tx312 -> tzz442\\n\\n3 \
tzz442 -> tzz444\\n\\ntx314 tzz444 -> tx316\\n\\ndQ1Q2 tx313 -> \
tzz441\\n\\n-0.5 tzz441 -> tzz448\\n\\ntx314 tzz448 -> tx317\\n\\ntx315 + \
tx316 + tx317 -> gak\\n\\n-gak -> \
fak\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 0, fak );]\\n\\n2. bk -> tzz459\
\\n\\ntzz459 xh1 -> tx318\\n\\ntzz454 xh1 -> tx319\\n\\ntzz452 yh1 -> \
tx320\\n\\ntzz454 yh1 -> tx321\\n\\ntzz452 zh1 -> tx322\\n\\ntzz450 zh1 -> \
tx323\\n\\ntx298 + tx320 -> tzz474\\n\\ntx303 + tzz474 -> tx324\\n\\ntx300 + \
tx319 + tx322 -> tx325\\n\\ntx318 + tx321 + tx323 -> tx326\\n\\ntx324 tzz445 \
-> tx327\\n\\ntx325 tzz446 -> tx328\\n\\ntx326 tzz447 -> tx329\\n\\ntx327 + \
tx328 + tx329 -> tx330\\n\\ntx330 tzz449 -> tx331\\n\\ntx330 tzz444 -> \
tx332\\n\\ntx330 tzz448 -> tx333\\n\\ntx331 + tx332 + tx333 -> gbk\\n\\n-gbk \
-> fbk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 1, fbk );]\\n\\ntzz452 xh1 \
-> tx334\\n\\ntzz459 yh1 -> tx335\\n\\ntzz450 yh1 -> tx336\\n\\nck tzz470 -> \
tx337\\n\\ntx302 + tx319 + tx335 -> tx338\\n\\ntx334 + tx336 + tx337 -> tx339\
\\n\\ntx326 tzz446 -> tx340\\n\\ntx338 tzz447 -> tx341\\n\\ntx339 tzz445 -> \
tx342\\n\\ntx340 + tx341 + tx342 -> tx343\\n\\ntx343 tzz449 -> \
tx344\\n\\ntx343 tzz444 -> tx345\\n\\ntx343 tzz448 -> tx346\\n\\ntx344 + \
tx345 + tx346 -> gck\\n\\n-gck -> \
fck\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 2, fck );]\\n\\ntzz459 zh1 -> \
tx347\\n\\ntx347 + tzz474 -> tx348\\n\\ntx307 tzz446 -> tx349\\n\\ntx326 \
tzz445 -> tx350\\n\\ntx348 tzz447 -> tx351\\n\\ntx349 + tx350 + tx351 -> \
tx352\\n\\ntx352 tzz449 -> tx353\\n\\ntx352 tzz444 -> tx354\\n\\ntx352 tzz448 \
-> tx355\\n\\ntx353 + tx354 + tx355 -> gdk\\n\\n-gdk -> \
fdk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 3, fdk );]\\n\\n-12. tzz443 -> \
tzz469\\n\\ntx283 tzz469 -> tx356\\n\\n6. tzz442 -> tzz457\\n\\ntx283 tzz457 \
-> tx357\\n\\n-tzz441 -> tzz464\\n\\ntx283 tzz464 -> tx358\\n\\ntx356 + tx357 \
+ tx358 -> gxk\\n\\n-gxk -> fxk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 4, \
fxk );]\\n\\ntx284 tzz469 -> tx359\\n\\ntx284 tzz457 -> tx360\\n\\ntx284 \
tzz464 -> tx361\\n\\ntx359 + tx360 + tx361 -> gyk\\n\\n-gyk -> \
fyk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 5, fyk );]\\n\\ntx285 tzz469 -> \
tx362\\n\\ntx285 tzz457 -> tx363\\n\\ntx285 tzz464 -> tx364\\n\\ntx362 + \
tx363 + tx364 -> gzk\\n\\n-gzk -> \
fzk\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 6, fzk );]\\n\\ntzz451 xh2 -> \
tx365\\n\\ntzz453 xh2 -> tx366\\n\\n-2. xh2 -> tzz467\\n\\ndl tzz467 -> tx367\
\\n\\ntzz451 yh2 -> tx368\\n\\ntzz458 yh2 -> tx369\\n\\n2. dl yh2 -> tx370\\n\
\\ntzz451 zh2 -> tx371\\n\\ntzz458 zh2 -> tx372\\n\\n-2. zh2 -> \
tzz465\\n\\ncl tzz465 -> tx373\\n\\ntx366 + tx369 + tx371 -> tx374\\n\\ntx367 \
+ tx368 + tx372 -> tx375\\n\\ntx365 + tx370 + tx373 -> tx376\\n\\ntx374 \
tzz445 -> tx377\\n\\ntx375 tzz446 -> tx378\\n\\ntx376 tzz447 -> \
tx379\\n\\ntx377 + tx378 + tx379 -> tx380\\n\\ntx380 tzz449 -> \
tx381\\n\\ntx380 tzz444 -> tx382\\n\\ntx380 tzz448 -> tx383\\n\\ntx381 + \
tx382 + tx383 -> gal\\n\\n-gal -> \
fal\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 0, fal );]\\n\\nbl tzz467 -> \
tx384\\n\\ncl tzz467 -> tx385\\n\\ntzz455 yh2 -> tx386\\n\\n-2. yh2 -> tzz466\
\\n\\ncl tzz466 -> tx387\\n\\ntzz455 zh2 -> tx388\\n\\ndl tzz465 -> \
tx389\\n\\ntx367 + tx386 -> tzz473\\n\\ntx372 + tzz473 -> tx390\\n\\ntx369 + \
tx385 + tx388 -> tx391\\n\\ntx384 + tx387 + tx389 -> tx392\\n\\ntx390 tzz445 \
-> tx393\\n\\ntx391 tzz446 -> tx394\\n\\ntx392 tzz447 -> tx395\\n\\ntx393 + \
tx394 + tx395 -> tx396\\n\\ntx396 tzz449 -> tx397\\n\\ntx396 tzz444 -> \
tx398\\n\\ntx396 tzz448 -> tx399\\n\\ntx397 + tx398 + tx399 -> gbl\\n\\n-gbl \
-> fbl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 1, fbl );]\\n\\ntzz455 xh2 \
-> tx400\\n\\nbl tzz466 -> tx401\\n\\ndl tzz466 -> tx402\\n\\ntzz453 zh2 -> \
tx403\\n\\ntx371 + tx385 + tx401 -> tx404\\n\\ntx400 + tx402 + tx403 -> tx405\
\\n\\ntx392 tzz446 -> tx406\\n\\ntx404 tzz447 -> tx407\\n\\ntx405 tzz445 -> \
tx408\\n\\ntx406 + tx407 + tx408 -> tx409\\n\\ntx409 tzz449 -> \
tx410\\n\\ntx409 tzz444 -> tx411\\n\\ntx409 tzz448 -> tx412\\n\\ntx410 + \
tx411 + tx412 -> gcl\\n\\n-gcl -> \
fcl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 2, fcl );]\\n\\nbl tzz465 -> \
tx413\\n\\ntx413 + tzz473 -> tx414\\n\\ntx376 tzz446 -> tx415\\n\\ntx392 \
tzz445 -> tx416\\n\\ntx414 tzz447 -> tx417\\n\\ntx415 + tx416 + tx417 -> \
tx418\\n\\ntx418 tzz449 -> tx419\\n\\ntx418 tzz444 -> tx420\\n\\ntx418 tzz448 \
-> tx421\\n\\ntx419 + tx420 + tx421 -> gdl\\n\\n-gdl -> \
fdl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 3, fdl );]\\n\\n12. tzz443 -> \
tzz456\\n\\ntx283 tzz456 -> tx422\\n\\n-6. tzz442 -> tzz468\\n\\ntx283 tzz468 \
-> tx423\\n\\ntx283 tzz441 -> tx424\\n\\ntx422 + tx423 + tx424 -> \
gxl\\n\\n-gxl -> fxl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 4, fxl \
);]\\n\\ntx284 tzz456 -> tx425\\n\\ntx284 tzz468 -> tx426\\n\\ntx284 tzz441 \
-> tx427\\n\\ntx425 + tx426 + tx427 -> gyl\\n\\n-gyl -> \
fyl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 5, fyl );]\\n\\ntx285 tzz456 -> \
tx428\\n\\ntx285 tzz468 -> tx429\\n\\ntx285 tzz441 -> tx430\\n\\ntx428 + \
tx429 + tx430 -> gzl\\n\\n-gzl -> \
fzl\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzl );]\"\>"], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148947741042*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing declares to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBONDRB_termDeclares.cc\"\>"}],
  SequenceForm["Writing declares to file: ", "_NONBONDRB_termDeclares.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.70714894779906*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing code to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBONDRB_termCode.cc\"\>"}],
  SequenceForm["Writing code to file: ", "_NONBONDRB_termCode.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707146554921957*^9, 3.707148947801936*^9}],

Cell[BoxData[
 StyleBox["\<\"Set TimesSimplify and PlusSimplify to turn these \
simplifications off and on\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 1],
  FrontFaceColor->RGBColor[0, 0, 1],
  BackFaceColor->RGBColor[0, 0, 1],
  GraphicsColor->RGBColor[0, 0, 1],
  FontSize->24,
  FontSlant->Italic,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.7074008310829077`*^9}],

Cell[BoxData[
 StyleBox["\<\"PlusOptimize = True\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 1],
  FrontFaceColor->RGBColor[0, 0, 1],
  BackFaceColor->RGBColor[0, 0, 1],
  GraphicsColor->RGBColor[0, 0, 1],
  FontSize->20,
  FontSlant->Italic,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.7074008310841303`*^9}],

Cell[BoxData[
 StyleBox["\<\"TimesOptimize = True\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 1],
  FrontFaceColor->RGBColor[0, 0, 1],
  BackFaceColor->RGBColor[0, 0, 1],
  GraphicsColor->RGBColor[0, 0, 1],
  FontSize->20,
  FontSlant->Italic,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400831086248*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400881064307*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.7074008810668583`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fam, fbm, fcm, fdm, fxm, \
fym, fzm, fan, fbn, fcn, fdn, fxn, fyn, fzn, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400881069281*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400881071638*^9}],

Cell[BoxData["\<\"Collecting terms\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400881148323*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \
\[NoBreak]\\!\\(Null\\\\ \\(\\({\\(\\(Name \[Rule] \\\"NONBONDRB\\\"\\)\\), \
\\(\\(AdditionalCDeclares \[Rule] \\\"\\\"\\)\\), \\(\\(DerivativeVariables \
\[Rule] \\(\\({ak, bk, ck, dk, xk, yk, zk, al, bl, cl, dl, xl, yl, \
zl}\\)\\)\\)\\), \\(\\(Rules \[Rule] \
\\(\\({\\(\\(CCode[\\\"NONBONDRB_SET_PARAMETER(I1);\\\"]\\)\\), \
\\(\\(CCode[\\\"NONBONDRB_SET_PARAMETER(I2);\\\"]\\)\\), \
\\(\\(CCode[\\\"NONBONDRB_SET_PARAMETER(dQ1Q2);\\\"]\\)\\), \
\\(\\(CCode[\\\"NONBONDRB_SET_PARAMETER(dA);\\\"]\\)\\), \
\\(\\(\[LeftSkeleton] 43 \[RightSkeleton]\\)\\), \
\\(\\(CCode[\\\"NONBONDRB_FORCE_ACCUMULATE(I1, 6, fzm );\\\"]\\)\\), \
\\(\\(\\(\\(\\(\\(\\(\\(-6\\)\\)\\\\ dA\\\\ \\(\\(Plus[\\(\\(\[LeftSkeleton] \
3 \[RightSkeleton]\\)\\)]\\)\\)\\\\ \\(\\(Power[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\) + \\(\\(3\\\\ dC\\\\ \\(\\(Plus[\\(\\(\
\[LeftSkeleton] 3 \[RightSkeleton]\\)\\)]\\)\\)\\\\ \\(\\(Power[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\) - \\(\\(1\\/2\\\\ dQ1Q2\
\\\\ \\(\\(Plus[\\(\\(\[LeftSkeleton] 3 \[RightSkeleton]\\)\\)]\\)\\)\\\\ \\(\
\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)\\) \
\[Rule] gan\\)\\), \\(\\(\\(\\(-gan\\)\\) \[Rule] fan\\)\\), \\(\\(\
\[LeftSkeleton] 19 \[RightSkeleton]\\)\\)}\\)\\)\\)\\), \\(\\(Input \[Rule] \
\\(\\({ak, bk, ck, dk, xk, yk, zk, al, bl, cl, dl, xl, yl, zl}\\)\\)\\)\\), \
\\(\\(Output \[Rule] \\(\\({Energy, fam, fbm, fcm, fdm, fxm, fym, fzm, fan, \
fbn, fcn, fdn, fxn, fyn, fzn, nonbondRBDeviation}\\)\\)\\)\\)}\\)\\)\\)\
\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.707148707022443*^9, 3.707148926071884*^9, 
  3.707400881150571*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400914267952*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.7074009142708187`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fam, fbm, fcm, fdm, fxm, \
fym, fzm, fan, fbn, fcn, fdn, fxn, fyn, fzn, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707148721968418*^9, 3.70740091427391*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400914276984*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.7074009161597557`*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {}\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400916163673*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fam, fbm, fcm, fdm, fxm, \
fym, fzm, fan, fbn, fcn, fdn, fxn, fyn, fzn, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400916167534*^9}],

Cell[BoxData["\<\"There were no trivial rules\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400916170931*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400917034012*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tx655 -> tx645, tx441 -> \
tx651}\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.7074009170367403`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fam, fbm, fcm, fdm, fxm, \
fym, fzm, fan, fbn, fcn, fdn, fxn, fyn, fzn, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707148721968418*^9, 3.70740091703935*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tx655 -> tx645\\n\\ntx441 \
-> tx651\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400917042495*^9}],

Cell[BoxData["\<\"After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(I2);]\\\
n\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(\
dA);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(am,I1,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bm,I1,1);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(cm,I1,2);]\\n\\nCCode[NONBONDRB_SET_POSITION(dm,I1,3);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(xm,I1,4);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(ym,I1,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zm,I1,6);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(an,I2,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bn,I2,1);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(cn,I2,2);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(dn,I2,3);]\\n\\nCCode[NONBONDRB_SET_POSITION(xn,I2,4);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(yn,I2,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zn,I2,6);]\
\\n\\nCCode[NONBONDRB_SET_POINT(xm,pointA,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(ym,pointA,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zm,pointA,getZ());]\\\
n\\nCCode[NONBONDRB_SET_POINT(xn,pointB,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yn,pointB,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zn,pointB,getZ());]\\\
n\\npower2[am] -> tx322\\n\\npower2[an] -> tx323\\n\\npower2[bm] -> \
tx324\\n\\npower2[bn] -> tx325\\n\\npower2[cm] -> tx326\\n\\npower2[cn] -> \
tx327\\n\\npower2[dm] -> tx328\\n\\npower2[dn] -> tx329\\n\\n-(am cm pxm) -> \
tx330\\n\\nbm cm pxm -> tx331\\n\\nam dm pxm -> tx332\\n\\nbm dm pxm -> tx333\
\\n\\n-(an cn pxn) -> tx334\\n\\nbn cn pxn -> tx335\\n\\nan dn pxn -> \
tx336\\n\\nbn dn pxn -> tx337\\n\\nam bm pym -> tx338\\n\\nbm cm pym -> tx339\
\\n\\n-(am dm pym) -> tx340\\n\\ncm dm pym -> tx341\\n\\nan bn pyn -> \
tx342\\n\\nbn cn pyn -> tx343\\n\\n-(an dn pyn) -> tx344\\n\\ncn dn pyn -> \
tx345\\n\\n-(am bm pzm) -> tx346\\n\\nam cm pzm -> tx347\\n\\nbm dm pzm -> \
tx348\\n\\ncm dm pzm -> tx349\\n\\n-(an bn pzn) -> tx350\\n\\nan cn pzn -> \
tx351\\n\\nbn dn pzn -> tx352\\n\\ncn dn pzn -> tx353\\n\\n-(pym tx324) -> \
tx354\\n\\n-(pzm tx324) -> tx355\\n\\n-(pyn tx325) -> tx356\\n\\n-(pzn tx325) \
-> tx357\\n\\n-(pxm tx326) -> tx358\\n\\n-(pzm tx326) -> tx359\\n\\n-(pxn \
tx327) -> tx360\\n\\n-(pzn tx327) -> tx361\\n\\n-(pxm tx328) -> \
tx362\\n\\n-(pym tx328) -> tx363\\n\\ntx322 + tx324 + tx326 + tx328 -> \
tx364\\n\\n-(pxn tx329) -> tx365\\n\\n-(pyn tx329) -> tx366\\n\\ntx323 + \
tx325 + tx327 + tx329 -> tx367\\n\\ntx330 + tx333 + tx338 + tx341 + tx355 + \
tx359 -> tx368\\n\\ntx334 + tx337 + tx342 + tx345 + tx357 + tx361 -> tx369\\n\
\\ntx339 + tx340 + tx347 + tx348 + tx358 + tx362 -> tx370\\n\\ntx331 + tx332 \
+ tx346 + tx349 + tx354 + tx363 -> tx371\\n\\nreciprocal[tx364] -> \
tx372\\n\\ntx343 + tx344 + tx351 + tx352 + tx360 + tx365 -> tx373\\n\\ntx335 \
+ tx336 + tx350 + tx353 + tx356 + tx366 -> tx374\\n\\nreciprocal[tx367] -> \
tx375\\n\\n-pxn -> tx376\\n\\n-pyn -> tx377\\n\\n-pzn -> tx378\\n\\n2. tx368 \
tx372 -> tx379\\n\\n2. tx370 tx372 -> tx380\\n\\n2. tx371 tx372 -> \
tx381\\n\\n-2. tx369 tx375 -> tx382\\n\\n-2. tx373 tx375 -> tx383\\n\\n-2. \
tx374 tx375 -> tx384\\n\\n-xn -> tx385\\n\\n-yn -> tx386\\n\\n-zn -> tx387\\n\
\\npxm + tx376 + tx380 + tx383 + tx385 + xm -> tx388\\n\\npym + tx377 + tx381 \
+ tx384 + tx386 + ym -> tx389\\n\\npzm + tx378 + tx379 + tx382 + tx387 + zm \
-> tx390\\n\\npower2[tx388] -> tx391\\n\\npower2[tx389] -> \
tx392\\n\\npower2[tx390] -> tx393\\n\\ntx391 + tx392 + tx393 -> \
tx394\\n\\npowern2[tx394] -> tx654\\n\\nreciprocal[tx394] -> tx655\\n\\ntx654 \
tx655 -> tx643\\n\\npower2[tx643] -> tx395\\n\\npower2[tx655] -> \
tx644\\n\\ntx655 -> tx645\\n\\ntx644 tx645 -> tx396\\n\\nmysqrt[tx394] -> \
tx646\\n\\nreciprocal[tx646] -> tx397\\n\\ndA tx395 -> tx398\\n\\n-(dC tx396) \
-> tx399\\n\\ndQ1Q2 tx397 -> tx400\\n\\ntx398 + tx399 + tx400 -> \
Energy\\n\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\\n\\ntx327 tx376 -> \
tx401\\n\\ntx329 tx376 -> tx402\\n\\ntx325 tx377 -> tx403\\n\\ntx329 tx377 -> \
tx404\\n\\ntx325 tx378 -> tx405\\n\\ntx327 tx378 -> tx406\\n\\n-(cm pxm) -> \
tx407\\n\\ndm pxm -> tx408\\n\\nbm pym -> tx409\\n\\n-(dm pym) -> \
tx410\\n\\n-(bm pzm) -> tx411\\n\\ncm pzm -> tx412\\n\\ntx343 + tx344 + tx351 \
+ tx352 + tx401 + tx402 -> tx413\\n\\ntx335 + tx336 + tx350 + tx353 + tx403 + \
tx404 -> tx414\\n\\ntx334 + tx337 + tx342 + tx345 + tx405 + tx406 -> tx415\\n\
\\npower2[tx372] -> tx416\\n\\ntx407 + tx409 -> tx417\\n\\ntx408 + tx411 -> \
tx418\\n\\ntx410 + tx412 -> tx419\\n\\n-2. tx375 tx413 -> tx420\\n\\n-2. \
tx375 tx414 -> tx421\\n\\n-2. tx375 tx415 -> tx422\\n\\n-4. am tx368 tx416 -> \
tx423\\n\\n-4. am tx370 tx416 -> tx424\\n\\n-4. am tx371 tx416 -> \
tx425\\n\\n2. tx372 tx417 -> tx426\\n\\n2. tx372 tx418 -> tx427\\n\\n2. tx372 \
tx419 -> tx428\\n\\npxm + tx376 + tx380 + tx385 + tx420 + xm -> \
tx429\\n\\npym + tx377 + tx381 + tx386 + tx421 + ym -> tx430\\n\\npzm + tx378 \
+ tx379 + tx387 + tx422 + zm -> tx431\\n\\ntx423 + tx426 -> tx432\\n\\ntx425 \
+ tx427 -> tx433\\n\\ntx424 + tx428 -> tx434\\n\\npower2[tx429] -> \
tx435\\n\\npower2[tx430] -> tx436\\n\\npower2[tx431] -> tx437\\n\\n2. tx431 \
tx432 -> tx438\\n\\n2. tx430 tx433 -> tx439\\n\\n2. tx429 tx434 -> \
tx440\\n\\ntx435 + tx436 + tx437 -> tx441\\n\\ntx438 + tx439 + tx440 -> tx442\
\\n\\npowern2[tx441] -> tx656\\n\\nreciprocal[tx441] -> tx657\\n\\ntx656 \
tx657 -> tx647\\n\\npower2[tx656] -> tx648\\n\\ntx647 tx648 -> \
tx443\\n\\npower2[tx657] -> tx649\\n\\npower2[tx649] -> \
tx444\\n\\nmysqrt[tx441] -> tx650\\n\\ntx441 -> tx651\\n\\nreciprocal[tx650] \
-> tx652\\n\\nreciprocal[tx651] -> tx653\\n\\ntx652 tx653 -> tx445\\n\\n-6. \
dA tx442 tx443 -> tx446\\n\\n3 dC tx442 tx444 -> tx447\\n\\n-0.5 dQ1Q2 tx442 \
tx445 -> tx448\\n\\ntx446 + tx447 + tx448 -> gam\\n\\n-gam -> \
fam\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 0, fam );]\\n\\ncm pxm -> tx449\
\\n\\nam pym -> tx450\\n\\ncm pym -> tx451\\n\\n-(am pzm) -> tx452\\n\\n-2. \
bm pzm -> tx453\\n\\ndm pzm -> tx454\\n\\n-2. tx409 -> tx455\\n\\ntx408 + \
tx450 + tx453 -> tx456\\n\\ntx451 + tx454 -> tx457\\n\\ntx449 + tx452 + tx455 \
-> tx458\\n\\n-4. bm tx368 tx416 -> tx459\\n\\n-4. bm tx370 tx416 -> tx460\\n\
\\n-4. bm tx371 tx416 -> tx461\\n\\n2. tx372 tx456 -> tx462\\n\\n2. tx372 \
tx457 -> tx463\\n\\n2. tx372 tx458 -> tx464\\n\\ntx459 + tx462 -> \
tx465\\n\\ntx460 + tx463 -> tx466\\n\\ntx461 + tx464 -> tx467\\n\\n2. tx431 \
tx465 -> tx468\\n\\n2. tx429 tx466 -> tx469\\n\\n2. tx430 tx467 -> \
tx470\\n\\ntx468 + tx469 + tx470 -> tx471\\n\\n-6. dA tx443 tx471 -> tx472\\n\
\\n3 dC tx444 tx471 -> tx473\\n\\n-0.5 dQ1Q2 tx445 tx471 -> tx474\\n\\ntx472 \
+ tx473 + tx474 -> gbm\\n\\n-gbm -> \
fbm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 1, fbm );]\\n\\n-(am pxm) -> \
tx475\\n\\nbm pxm -> tx476\\n\\ndm pym -> tx477\\n\\nam pzm -> tx478\\n\\n-2. \
tx412 -> tx479\\n\\n-2. tx449 -> tx480\\n\\ntx454 + tx476 -> tx481\\n\\ntx475 \
+ tx477 + tx479 -> tx482\\n\\ntx409 + tx478 + tx480 -> tx483\\n\\n-4. cm \
tx368 tx416 -> tx484\\n\\n-4. cm tx370 tx416 -> tx485\\n\\n-4. cm tx371 tx416 \
-> tx486\\n\\n2. tx372 tx481 -> tx487\\n\\n2. tx372 tx482 -> tx488\\n\\n2. \
tx372 tx483 -> tx489\\n\\ntx486 + tx487 -> tx490\\n\\ntx484 + tx488 -> \
tx491\\n\\ntx485 + tx489 -> tx492\\n\\n2. tx430 tx490 -> tx493\\n\\n2. tx431 \
tx491 -> tx494\\n\\n2. tx429 tx492 -> tx495\\n\\ntx493 + tx494 + tx495 -> \
tx496\\n\\n-6. dA tx443 tx496 -> tx497\\n\\n3 dC tx444 tx496 -> \
tx498\\n\\n-0.5 dQ1Q2 tx445 tx496 -> tx499\\n\\ntx497 + tx498 + tx499 -> \
gcm\\n\\n-gcm -> fcm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 2, fcm \
);]\\n\\nam pxm -> tx500\\n\\nbm pzm -> tx501\\n\\n-2. tx408 -> \
tx502\\n\\n-tx450 -> tx503\\n\\n-2. tx477 -> tx504\\n\\ntx451 + tx476 -> \
tx505\\n\\ntx501 + tx502 + tx503 -> tx506\\n\\ntx412 + tx500 + tx504 -> tx507\
\\n\\n-4. dm tx368 tx416 -> tx508\\n\\n-4. dm tx370 tx416 -> tx509\\n\\n-4. \
dm tx371 tx416 -> tx510\\n\\n2. tx372 tx505 -> tx511\\n\\n2. tx372 tx506 -> \
tx512\\n\\n2. tx372 tx507 -> tx513\\n\\ntx508 + tx511 -> tx514\\n\\ntx509 + \
tx512 -> tx515\\n\\ntx510 + tx513 -> tx516\\n\\n2. tx431 tx514 -> \
tx517\\n\\n2. tx429 tx515 -> tx518\\n\\n2. tx430 tx516 -> tx519\\n\\ntx517 + \
tx518 + tx519 -> tx520\\n\\n-6. dA tx443 tx520 -> tx521\\n\\n3 dC tx444 tx520 \
-> tx522\\n\\n-0.5 dQ1Q2 tx445 tx520 -> tx523\\n\\ntx521 + tx522 + tx523 -> \
gdm\\n\\n-gdm -> fdm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 3, fdm \
);]\\n\\n-12. dA tx429 tx443 -> tx524\\n\\n6. dC tx429 tx444 -> \
tx525\\n\\n-(dQ1Q2 tx429 tx445) -> tx526\\n\\ntx524 + tx525 + tx526 -> gxm\\n\
\\n-gxm -> fxm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 4, fxm );]\\n\\n-12. \
dA tx430 tx443 -> tx527\\n\\n6. dC tx430 tx444 -> tx528\\n\\n-(dQ1Q2 tx430 \
tx445) -> tx529\\n\\ntx527 + tx528 + tx529 -> gym\\n\\n-gym -> \
fym\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 5, fym );]\\n\\n-12. dA tx431 \
tx443 -> tx530\\n\\n6. dC tx431 tx444 -> tx531\\n\\n-(dQ1Q2 tx431 tx445) -> \
tx532\\n\\ntx530 + tx531 + tx532 -> gzm\\n\\n-gzm -> \
fzm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 6, fzm );]\\n\\ndn pxn -> tx533\
\\n\\nbn pyn -> tx534\\n\\ncn pzn -> tx535\\n\\ncn tx376 -> tx536\\n\\ndn \
tx377 -> tx537\\n\\nbn tx378 -> tx538\\n\\npower2[tx375] -> tx539\\n\\ntx534 \
+ tx536 -> tx540\\n\\ntx535 + tx537 -> tx541\\n\\ntx533 + tx538 -> \
tx542\\n\\n4. an tx413 tx539 -> tx543\\n\\n4. an tx414 tx539 -> tx544\\n\\n4. \
an tx415 tx539 -> tx545\\n\\n-2. tx375 tx540 -> tx546\\n\\n-2. tx375 tx541 -> \
tx547\\n\\n-2. tx375 tx542 -> tx548\\n\\ntx545 + tx546 -> tx549\\n\\ntx543 + \
tx547 -> tx550\\n\\ntx544 + tx548 -> tx551\\n\\n2. tx431 tx549 -> \
tx552\\n\\n2. tx429 tx550 -> tx553\\n\\n2. tx430 tx551 -> tx554\\n\\ntx552 + \
tx553 + tx554 -> tx555\\n\\n-6. dA tx443 tx555 -> tx556\\n\\n3 dC tx444 tx555 \
-> tx557\\n\\n-0.5 dQ1Q2 tx445 tx555 -> tx558\\n\\ntx556 + tx557 + tx558 -> \
gan\\n\\n-gan -> fan\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 0, fan \
);]\\n\\ncn pxn -> tx559\\n\\nan pyn -> tx560\\n\\ncn pyn -> tx561\\n\\n-2. \
bn pzn -> tx562\\n\\ndn pzn -> tx563\\n\\nan tx378 -> tx564\\n\\n-2. tx534 -> \
tx565\\n\\ntx533 + tx560 + tx562 -> tx566\\n\\ntx561 + tx563 -> \
tx567\\n\\ntx559 + tx564 + tx565 -> tx568\\n\\n4. bn tx413 tx539 -> \
tx569\\n\\n4. bn tx414 tx539 -> tx570\\n\\n4. bn tx415 tx539 -> \
tx571\\n\\n-2. tx375 tx566 -> tx572\\n\\n-2. tx375 tx567 -> tx573\\n\\n-2. \
tx375 tx568 -> tx574\\n\\ntx571 + tx572 -> tx575\\n\\ntx569 + tx573 -> \
tx576\\n\\ntx570 + tx574 -> tx577\\n\\n2. tx431 tx575 -> tx578\\n\\n2. tx429 \
tx576 -> tx579\\n\\n2. tx430 tx577 -> tx580\\n\\ntx578 + tx579 + tx580 -> \
tx581\\n\\n-6. dA tx443 tx581 -> tx582\\n\\n3 dC tx444 tx581 -> \
tx583\\n\\n-0.5 dQ1Q2 tx445 tx581 -> tx584\\n\\ntx582 + tx583 + tx584 -> \
gbn\\n\\n-gbn -> fbn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 1, fbn \
);]\\n\\nbn pxn -> tx585\\n\\ndn pyn -> tx586\\n\\nan pzn -> tx587\\n\\nan \
tx376 -> tx588\\n\\n-2. tx535 -> tx589\\n\\n-2. tx559 -> tx590\\n\\ntx563 + \
tx585 -> tx591\\n\\ntx586 + tx588 + tx589 -> tx592\\n\\ntx534 + tx587 + tx590 \
-> tx593\\n\\n4. cn tx413 tx539 -> tx594\\n\\n4. cn tx414 tx539 -> \
tx595\\n\\n4. cn tx415 tx539 -> tx596\\n\\n-2. tx375 tx591 -> tx597\\n\\n-2. \
tx375 tx592 -> tx598\\n\\n-2. tx375 tx593 -> tx599\\n\\ntx595 + tx597 -> \
tx600\\n\\ntx596 + tx598 -> tx601\\n\\ntx594 + tx599 -> tx602\\n\\n2. tx430 \
tx600 -> tx603\\n\\n2. tx431 tx601 -> tx604\\n\\n2. tx429 tx602 -> \
tx605\\n\\ntx603 + tx604 + tx605 -> tx606\\n\\n-6. dA tx443 tx606 -> tx607\\n\
\\n3 dC tx444 tx606 -> tx608\\n\\n-0.5 dQ1Q2 tx445 tx606 -> tx609\\n\\ntx607 \
+ tx608 + tx609 -> gcn\\n\\n-gcn -> \
fcn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 2, fcn );]\\n\\nan pxn -> tx610\
\\n\\nbn pzn -> tx611\\n\\nan tx377 -> tx612\\n\\n-2. tx533 -> tx613\\n\\n-2. \
tx586 -> tx614\\n\\ntx561 + tx585 -> tx615\\n\\ntx611 + tx612 + tx613 -> \
tx616\\n\\ntx535 + tx610 + tx614 -> tx617\\n\\n4. dn tx413 tx539 -> \
tx618\\n\\n4. dn tx414 tx539 -> tx619\\n\\n4. dn tx415 tx539 -> \
tx620\\n\\n-2. tx375 tx615 -> tx621\\n\\n-2. tx375 tx616 -> tx622\\n\\n-2. \
tx375 tx617 -> tx623\\n\\ntx620 + tx621 -> tx624\\n\\ntx618 + tx622 -> \
tx625\\n\\ntx619 + tx623 -> tx626\\n\\n2. tx431 tx624 -> tx627\\n\\n2. tx429 \
tx625 -> tx628\\n\\n2. tx430 tx626 -> tx629\\n\\ntx627 + tx628 + tx629 -> \
tx630\\n\\n-6. dA tx443 tx630 -> tx631\\n\\n3 dC tx444 tx630 -> \
tx632\\n\\n-0.5 dQ1Q2 tx445 tx630 -> tx633\\n\\ntx631 + tx632 + tx633 -> \
gdn\\n\\n-gdn -> fdn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 3, fdn \
);]\\n\\n12. dA tx429 tx443 -> tx634\\n\\n-6. dC tx429 tx444 -> \
tx635\\n\\ndQ1Q2 tx429 tx445 -> tx636\\n\\ntx634 + tx635 + tx636 -> \
gxn\\n\\n-gxn -> fxn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 4, fxn \
);]\\n\\n12. dA tx430 tx443 -> tx637\\n\\n-6. dC tx430 tx444 -> \
tx638\\n\\ndQ1Q2 tx430 tx445 -> tx639\\n\\ntx637 + tx638 + tx639 -> \
gyn\\n\\n-gyn -> fyn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 5, fyn \
);]\\n\\n12. dA tx431 tx443 -> tx640\\n\\n-6. dC tx431 tx444 -> \
tx641\\n\\ndQ1Q2 tx431 tx445 -> tx642\\n\\ntx640 + tx641 + tx642 -> \
gzn\\n\\n-gzn -> fzn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzn \
);]\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.7074009170452433`*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz685 -> tx376, tzz684 -> tx377, \
tzz696 -> tx378, tx655 -> tx645, tzz690 -> tx408, tx441 -> tx651, tzz693 -> \
tx451, tzz689 -> tx454, tzz688 -> tx533, tzz691 -> tx535, tzz692 -> tx561, \
tzz680 -> tx611}\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400922151173*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fam, fbm, fcm, fdm, fxm, \
fym, fzm, fan, fbn, fcn, fdn, fxn, fyn, fzn, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400922154418*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz685 -> \
tx376\\n\\ntzz684 -> tx377\\n\\ntzz696 -> tx378\\n\\ntx655 -> \
tx645\\n\\ntzz690 -> tx408\\n\\ntx441 -> tx651\\n\\ntzz693 -> \
tx451\\n\\ntzz689 -> tx454\\n\\ntzz688 -> tx533\\n\\ntzz691 -> \
tx535\\n\\ntzz692 -> tx561\\n\\ntzz680 -> tx611\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400922157736*^9}],

Cell[BoxData["\<\"After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(I2);]\\\
n\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(\
dA);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(am,I1,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bm,I1,1);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(cm,I1,2);]\\n\\nCCode[NONBONDRB_SET_POSITION(dm,I1,3);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(xm,I1,4);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(ym,I1,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zm,I1,6);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(an,I2,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bn,I2,1);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(cn,I2,2);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(dn,I2,3);]\\n\\nCCode[NONBONDRB_SET_POSITION(xn,I2,4);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(yn,I2,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zn,I2,6);]\
\\n\\nCCode[NONBONDRB_SET_POINT(xm,pointA,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(ym,pointA,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zm,pointA,getZ());]\\\
n\\nCCode[NONBONDRB_SET_POINT(xn,pointB,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yn,pointB,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zn,pointB,getZ());]\\\
n\\npower2[am] -> tx322\\n\\npower2[an] -> tx323\\n\\npower2[bm] -> \
tx324\\n\\npower2[bn] -> tx325\\n\\npower2[cm] -> tx326\\n\\npower2[cn] -> \
tx327\\n\\npower2[dm] -> tx328\\n\\npower2[dn] -> tx329\\n\\n-pxm -> \
tzz672\\n\\nam cm -> tzz694\\n\\ntzz672 tzz694 -> tx330\\n\\nbm cm pxm -> \
tx331\\n\\ndm pxm -> tzz690\\n\\nam tzz690 -> tx332\\n\\nbm tzz690 -> \
tx333\\n\\n-pxn -> tzz685\\n\\nan cn tzz685 -> tx334\\n\\nbn cn pxn -> \
tx335\\n\\ndn pxn -> tzz688\\n\\nan tzz688 -> tx336\\n\\nbn tzz688 -> \
tx337\\n\\nam bm -> tzz695\\n\\npym tzz695 -> tx338\\n\\ncm pym -> \
tzz693\\n\\nbm tzz693 -> tx339\\n\\n-pym -> tzz679\\n\\nam dm tzz679 -> tx340\
\\n\\ndm tzz693 -> tx341\\n\\nan bn pyn -> tx342\\n\\ncn pyn -> \
tzz692\\n\\nbn tzz692 -> tx343\\n\\n-pyn -> tzz684\\n\\nan dn tzz684 -> tx344\
\\n\\ndn tzz692 -> tx345\\n\\n-pzm -> tzz671\\n\\ntzz671 tzz695 -> \
tx346\\n\\npzm tzz694 -> tx347\\n\\ndm pzm -> tzz689\\n\\nbm tzz689 -> \
tx348\\n\\ncm tzz689 -> tx349\\n\\nbn pzn -> tzz680\\n\\n-(an tzz680) -> \
tx350\\n\\ncn pzn -> tzz691\\n\\nan tzz691 -> tx351\\n\\ndn tzz680 -> \
tx352\\n\\ndn tzz691 -> tx353\\n\\ntx324 tzz679 -> tx354\\n\\ntx324 tzz671 -> \
tx355\\n\\ntx325 tzz684 -> tx356\\n\\n-pzn -> tzz696\\n\\ntx325 tzz696 -> \
tx357\\n\\ntx326 tzz672 -> tx358\\n\\ntx326 tzz671 -> tx359\\n\\ntx327 tzz685 \
-> tx360\\n\\ntx327 tzz696 -> tx361\\n\\ntx328 tzz672 -> tx362\\n\\ntx328 \
tzz679 -> tx363\\n\\ntx322 + tx324 + tx326 + tx328 -> tx364\\n\\ntx329 tzz685 \
-> tx365\\n\\ntx329 tzz684 -> tx366\\n\\ntx323 + tx325 + tx327 + tx329 -> \
tx367\\n\\ntx330 + tx333 + tx338 + tx341 + tx355 + tx359 -> tx368\\n\\ntx334 \
+ tx337 + tx342 + tx345 + tx357 + tx361 -> tx369\\n\\ntx339 + tx340 + tx347 + \
tx348 + tx358 + tx362 -> tx370\\n\\ntx331 + tx332 + tx346 + tx349 + tx354 + \
tx363 -> tx371\\n\\nreciprocal[tx364] -> tx372\\n\\ntx343 + tx344 + tx351 + \
tx352 + tx360 + tx365 -> tx373\\n\\ntx335 + tx336 + tx350 + tx353 + tx356 + \
tx366 -> tx374\\n\\nreciprocal[tx367] -> tx375\\n\\ntzz685 -> \
tx376\\n\\ntzz684 -> tx377\\n\\ntzz696 -> tx378\\n\\n2. tx372 -> \
tzz659\\n\\ntx368 tzz659 -> tx379\\n\\ntx370 tzz659 -> tx380\\n\\ntx371 \
tzz659 -> tx381\\n\\n-2. tx375 -> tzz658\\n\\ntx369 tzz658 -> \
tx382\\n\\ntx373 tzz658 -> tx383\\n\\ntx374 tzz658 -> tx384\\n\\n-xn -> tx385\
\\n\\n-yn -> tx386\\n\\n-zn -> tx387\\n\\npxm + tx376 + tx380 + tx383 + tx385 \
+ xm -> tx388\\n\\npym + tx377 + tx381 + tx384 + tx386 + ym -> tx389\\n\\npzm \
+ tx378 + tx379 + tx382 + tx387 + zm -> tx390\\n\\npower2[tx388] -> \
tx391\\n\\npower2[tx389] -> tx392\\n\\npower2[tx390] -> tx393\\n\\ntx391 + \
tx392 + tx393 -> tx394\\n\\npower2[reciprocal[tx394]] -> \
tx654\\n\\nreciprocal[tx394] -> tx655\\n\\ntx654 tx655 -> \
tx643\\n\\npower2[tx643] -> tx395\\n\\npower2[tx655] -> tx644\\n\\ntx655 -> \
tx645\\n\\ntx644 tx645 -> tx396\\n\\nmysqrt[tx394] -> \
tx646\\n\\nreciprocal[tx646] -> tx397\\n\\ndA tx395 -> tx398\\n\\n-(dC tx396) \
-> tx399\\n\\ndQ1Q2 tx397 -> tx400\\n\\ntx398 + tx399 + tx400 -> \
Energy\\n\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\\n\\ntx327 tx376 -> \
tx401\\n\\ntx329 tx376 -> tx402\\n\\ntx325 tx377 -> tx403\\n\\ntx329 tx377 -> \
tx404\\n\\ntx325 tx378 -> tx405\\n\\ntx327 tx378 -> tx406\\n\\ncm tzz672 -> \
tx407\\n\\ntzz690 -> tx408\\n\\nbm pym -> tx409\\n\\ndm tzz679 -> \
tx410\\n\\nbm tzz671 -> tx411\\n\\ncm pzm -> tx412\\n\\ntx343 + tx344 + tx351 \
+ tx352 + tx401 + tx402 -> tx413\\n\\ntx335 + tx336 + tx350 + tx353 + tx403 + \
tx404 -> tx414\\n\\ntx334 + tx337 + tx342 + tx345 + tx405 + tx406 -> tx415\\n\
\\npower2[tx372] -> tx416\\n\\ntx407 + tx409 -> tx417\\n\\ntx408 + tx411 -> \
tx418\\n\\ntx410 + tx412 -> tx419\\n\\ntx413 tzz658 -> tx420\\n\\ntx414 \
tzz658 -> tx421\\n\\ntx415 tzz658 -> tx422\\n\\n-4. tx416 -> \
tzz664\\n\\ntx368 tzz664 -> tzz678\\n\\nam tzz678 -> tx423\\n\\ntx370 tzz664 \
-> tzz677\\n\\nam tzz677 -> tx424\\n\\ntx371 tzz664 -> tzz676\\n\\nam tzz676 \
-> tx425\\n\\ntx417 tzz659 -> tx426\\n\\ntx418 tzz659 -> tx427\\n\\ntx419 \
tzz659 -> tx428\\n\\npxm + tx376 + tx380 + tx385 + tx420 + xm -> \
tx429\\n\\npym + tx377 + tx381 + tx386 + tx421 + ym -> tx430\\n\\npzm + tx378 \
+ tx379 + tx387 + tx422 + zm -> tx431\\n\\ntx423 + tx426 -> tx432\\n\\ntx425 \
+ tx427 -> tx433\\n\\ntx424 + tx428 -> tx434\\n\\npower2[tx429] -> \
tx435\\n\\npower2[tx430] -> tx436\\n\\npower2[tx431] -> tx437\\n\\n2. tx431 \
-> tzz666\\n\\ntx432 tzz666 -> tx438\\n\\n2. tx430 -> tzz667\\n\\ntx433 \
tzz667 -> tx439\\n\\n2. tx429 -> tzz668\\n\\ntx434 tzz668 -> tx440\\n\\ntx435 \
+ tx436 + tx437 -> tx441\\n\\ntx438 + tx439 + tx440 -> \
tx442\\n\\npower2[reciprocal[tx441]] -> tx656\\n\\nreciprocal[tx441] -> tx657\
\\n\\ntx656 tx657 -> tx647\\n\\npower2[tx656] -> tx648\\n\\ntx647 tx648 -> \
tx443\\n\\npower2[tx657] -> tx649\\n\\npower2[tx649] -> \
tx444\\n\\nmysqrt[tx441] -> tx650\\n\\ntx441 -> tx651\\n\\nreciprocal[tx650] \
-> tx652\\n\\nreciprocal[tx651] -> tx653\\n\\ntx652 tx653 -> tx445\\n\\ndA \
tx443 -> tzz662\\n\\n-6. tzz662 -> tzz670\\n\\ntx442 tzz670 -> tx446\\n\\ndC \
tx444 -> tzz661\\n\\n3 tzz661 -> tzz665\\n\\ntx442 tzz665 -> tx447\\n\\ndQ1Q2 \
tx445 -> tzz660\\n\\n-0.5 tzz660 -> tzz669\\n\\ntx442 tzz669 -> \
tx448\\n\\ntx446 + tx447 + tx448 -> gam\\n\\n-gam -> \
fam\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 0, fam );]\\n\\ncm pxm -> tx449\
\\n\\nam pym -> tx450\\n\\ntzz693 -> tx451\\n\\nam tzz671 -> tx452\\n\\n-2. \
bm pzm -> tx453\\n\\ntzz689 -> tx454\\n\\n-2. tx409 -> tx455\\n\\ntx408 + \
tx450 + tx453 -> tx456\\n\\ntx451 + tx454 -> tx457\\n\\ntx449 + tx452 + tx455 \
-> tx458\\n\\nbm tzz678 -> tx459\\n\\nbm tzz677 -> tx460\\n\\nbm tzz676 -> \
tx461\\n\\ntx456 tzz659 -> tx462\\n\\ntx457 tzz659 -> tx463\\n\\ntx458 tzz659 \
-> tx464\\n\\ntx459 + tx462 -> tx465\\n\\ntx460 + tx463 -> tx466\\n\\ntx461 + \
tx464 -> tx467\\n\\ntx465 tzz666 -> tx468\\n\\ntx466 tzz668 -> \
tx469\\n\\ntx467 tzz667 -> tx470\\n\\ntx468 + tx469 + tx470 -> \
tx471\\n\\ntx471 tzz670 -> tx472\\n\\ntx471 tzz665 -> tx473\\n\\ntx471 tzz669 \
-> tx474\\n\\ntx472 + tx473 + tx474 -> gbm\\n\\n-gbm -> \
fbm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 1, fbm );]\\n\\nam tzz672 -> \
tx475\\n\\nbm pxm -> tx476\\n\\ndm pym -> tx477\\n\\nam pzm -> tx478\\n\\n-2. \
tx412 -> tx479\\n\\n-2. tx449 -> tx480\\n\\ntx454 + tx476 -> tx481\\n\\ntx475 \
+ tx477 + tx479 -> tx482\\n\\ntx409 + tx478 + tx480 -> tx483\\n\\ncm tzz678 \
-> tx484\\n\\ncm tzz677 -> tx485\\n\\ncm tzz676 -> tx486\\n\\ntx481 tzz659 -> \
tx487\\n\\ntx482 tzz659 -> tx488\\n\\ntx483 tzz659 -> tx489\\n\\ntx486 + \
tx487 -> tx490\\n\\ntx484 + tx488 -> tx491\\n\\ntx485 + tx489 -> \
tx492\\n\\ntx490 tzz667 -> tx493\\n\\ntx491 tzz666 -> tx494\\n\\ntx492 tzz668 \
-> tx495\\n\\ntx493 + tx494 + tx495 -> tx496\\n\\ntx496 tzz670 -> \
tx497\\n\\ntx496 tzz665 -> tx498\\n\\ntx496 tzz669 -> tx499\\n\\ntx497 + \
tx498 + tx499 -> gcm\\n\\n-gcm -> \
fcm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 2, fcm );]\\n\\nam pxm -> tx500\
\\n\\nbm pzm -> tx501\\n\\n-2. tx408 -> tx502\\n\\n-tx450 -> tx503\\n\\n-2. \
tx477 -> tx504\\n\\ntx451 + tx476 -> tx505\\n\\ntx501 + tx502 + tx503 -> \
tx506\\n\\ntx412 + tx500 + tx504 -> tx507\\n\\ndm tzz678 -> tx508\\n\\ndm \
tzz677 -> tx509\\n\\ndm tzz676 -> tx510\\n\\ntx505 tzz659 -> tx511\\n\\ntx506 \
tzz659 -> tx512\\n\\ntx507 tzz659 -> tx513\\n\\ntx508 + tx511 -> \
tx514\\n\\ntx509 + tx512 -> tx515\\n\\ntx510 + tx513 -> tx516\\n\\ntx514 \
tzz666 -> tx517\\n\\ntx515 tzz668 -> tx518\\n\\ntx516 tzz667 -> \
tx519\\n\\ntx517 + tx518 + tx519 -> tx520\\n\\ntx520 tzz670 -> \
tx521\\n\\ntx520 tzz665 -> tx522\\n\\ntx520 tzz669 -> tx523\\n\\ntx521 + \
tx522 + tx523 -> gdm\\n\\n-gdm -> \
fdm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 3, fdm );]\\n\\n-12. tzz662 -> \
tzz687\\n\\ntx429 tzz687 -> tx524\\n\\n6. tzz661 -> tzz682\\n\\ntx429 tzz682 \
-> tx525\\n\\n-tzz660 -> tzz683\\n\\ntx429 tzz683 -> tx526\\n\\ntx524 + tx525 \
+ tx526 -> gxm\\n\\n-gxm -> fxm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 4, \
fxm );]\\n\\ntx430 tzz687 -> tx527\\n\\ntx430 tzz682 -> tx528\\n\\ntx430 \
tzz683 -> tx529\\n\\ntx527 + tx528 + tx529 -> gym\\n\\n-gym -> \
fym\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 5, fym );]\\n\\ntx431 tzz687 -> \
tx530\\n\\ntx431 tzz682 -> tx531\\n\\ntx431 tzz683 -> tx532\\n\\ntx530 + \
tx531 + tx532 -> gzm\\n\\n-gzm -> \
fzm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 6, fzm );]\\n\\ntzz688 -> tx533\
\\n\\nbn pyn -> tx534\\n\\ntzz691 -> tx535\\n\\ncn tx376 -> tx536\\n\\ndn \
tx377 -> tx537\\n\\nbn tx378 -> tx538\\n\\npower2[tx375] -> tx539\\n\\ntx534 \
+ tx536 -> tx540\\n\\ntx535 + tx537 -> tx541\\n\\ntx533 + tx538 -> \
tx542\\n\\n4. tx539 -> tzz663\\n\\ntx413 tzz663 -> tzz675\\n\\nan tzz675 -> \
tx543\\n\\ntx414 tzz663 -> tzz674\\n\\nan tzz674 -> tx544\\n\\ntx415 tzz663 \
-> tzz673\\n\\nan tzz673 -> tx545\\n\\ntx540 tzz658 -> tx546\\n\\ntx541 \
tzz658 -> tx547\\n\\ntx542 tzz658 -> tx548\\n\\ntx545 + tx546 -> \
tx549\\n\\ntx543 + tx547 -> tx550\\n\\ntx544 + tx548 -> tx551\\n\\ntx549 \
tzz666 -> tx552\\n\\ntx550 tzz668 -> tx553\\n\\ntx551 tzz667 -> \
tx554\\n\\ntx552 + tx553 + tx554 -> tx555\\n\\ntx555 tzz670 -> \
tx556\\n\\ntx555 tzz665 -> tx557\\n\\ntx555 tzz669 -> tx558\\n\\ntx556 + \
tx557 + tx558 -> gan\\n\\n-gan -> \
fan\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 0, fan );]\\n\\ncn pxn -> tx559\
\\n\\nan pyn -> tx560\\n\\ntzz692 -> tx561\\n\\n-2. tzz680 -> tx562\\n\\ndn \
pzn -> tx563\\n\\nan tx378 -> tx564\\n\\n-2. tx534 -> tx565\\n\\ntx533 + \
tx560 + tx562 -> tx566\\n\\ntx561 + tx563 -> tx567\\n\\ntx559 + tx564 + tx565 \
-> tx568\\n\\nbn tzz675 -> tx569\\n\\nbn tzz674 -> tx570\\n\\nbn tzz673 -> \
tx571\\n\\ntx566 tzz658 -> tx572\\n\\ntx567 tzz658 -> tx573\\n\\ntx568 tzz658 \
-> tx574\\n\\ntx571 + tx572 -> tx575\\n\\ntx569 + tx573 -> tx576\\n\\ntx570 + \
tx574 -> tx577\\n\\ntx575 tzz666 -> tx578\\n\\ntx576 tzz668 -> \
tx579\\n\\ntx577 tzz667 -> tx580\\n\\ntx578 + tx579 + tx580 -> \
tx581\\n\\ntx581 tzz670 -> tx582\\n\\ntx581 tzz665 -> tx583\\n\\ntx581 tzz669 \
-> tx584\\n\\ntx582 + tx583 + tx584 -> gbn\\n\\n-gbn -> \
fbn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 1, fbn );]\\n\\nbn pxn -> tx585\
\\n\\ndn pyn -> tx586\\n\\nan pzn -> tx587\\n\\nan tx376 -> tx588\\n\\n-2. \
tx535 -> tx589\\n\\n-2. tx559 -> tx590\\n\\ntx563 + tx585 -> tx591\\n\\ntx586 \
+ tx588 + tx589 -> tx592\\n\\ntx534 + tx587 + tx590 -> tx593\\n\\ncn tzz675 \
-> tx594\\n\\ncn tzz674 -> tx595\\n\\ncn tzz673 -> tx596\\n\\ntx591 tzz658 -> \
tx597\\n\\ntx592 tzz658 -> tx598\\n\\ntx593 tzz658 -> tx599\\n\\ntx595 + \
tx597 -> tx600\\n\\ntx596 + tx598 -> tx601\\n\\ntx594 + tx599 -> \
tx602\\n\\ntx600 tzz667 -> tx603\\n\\ntx601 tzz666 -> tx604\\n\\ntx602 tzz668 \
-> tx605\\n\\ntx603 + tx604 + tx605 -> tx606\\n\\ntx606 tzz670 -> \
tx607\\n\\ntx606 tzz665 -> tx608\\n\\ntx606 tzz669 -> tx609\\n\\ntx607 + \
tx608 + tx609 -> gcn\\n\\n-gcn -> \
fcn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 2, fcn );]\\n\\nan pxn -> tx610\
\\n\\ntzz680 -> tx611\\n\\nan tx377 -> tx612\\n\\n-2. tx533 -> tx613\\n\\n-2. \
tx586 -> tx614\\n\\ntx561 + tx585 -> tx615\\n\\ntx611 + tx612 + tx613 -> \
tx616\\n\\ntx535 + tx610 + tx614 -> tx617\\n\\ndn tzz675 -> tx618\\n\\ndn \
tzz674 -> tx619\\n\\ndn tzz673 -> tx620\\n\\ntx615 tzz658 -> tx621\\n\\ntx616 \
tzz658 -> tx622\\n\\ntx617 tzz658 -> tx623\\n\\ntx620 + tx621 -> \
tx624\\n\\ntx618 + tx622 -> tx625\\n\\ntx619 + tx623 -> tx626\\n\\ntx624 \
tzz666 -> tx627\\n\\ntx625 tzz668 -> tx628\\n\\ntx626 tzz667 -> \
tx629\\n\\ntx627 + tx628 + tx629 -> tx630\\n\\ntx630 tzz670 -> \
tx631\\n\\ntx630 tzz665 -> tx632\\n\\ntx630 tzz669 -> tx633\\n\\ntx631 + \
tx632 + tx633 -> gdn\\n\\n-gdn -> \
fdn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 3, fdn );]\\n\\n12. tzz662 -> \
tzz681\\n\\ntx429 tzz681 -> tx634\\n\\n-6. tzz661 -> tzz686\\n\\ntx429 tzz686 \
-> tx635\\n\\ntx429 tzz660 -> tx636\\n\\ntx634 + tx635 + tx636 -> \
gxn\\n\\n-gxn -> fxn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 4, fxn \
);]\\n\\ntx430 tzz681 -> tx637\\n\\ntx430 tzz686 -> tx638\\n\\ntx430 tzz660 \
-> tx639\\n\\ntx637 + tx638 + tx639 -> gyn\\n\\n-gyn -> \
fyn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 5, fyn );]\\n\\ntx431 tzz681 -> \
tx640\\n\\ntx431 tzz686 -> tx641\\n\\ntx431 tzz660 -> tx642\\n\\ntx640 + \
tx641 + tx642 -> gzn\\n\\n-gzn -> \
fzn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzn );]\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400922161025*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400922641871*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz685 -> tx376, tzz684 -> tx377, \
tzz696 -> tx378, tx697 -> tx655, tx655 -> tx645, tzz690 -> tx408, tx698 -> \
tx657, tx441 -> tx651, tzz693 -> tx451, tzz689 -> tx454, tzz688 -> tx533, \
tzz691 -> tx535, tzz692 -> tx561, tzz680 -> tx611}\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.7074009226450377`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fam, fbm, fcm, fdm, fxm, \
fym, fzm, fan, fbn, fcn, fdn, fxn, fyn, fzn, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400922648395*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz685 -> \
tx376\\n\\ntzz684 -> tx377\\n\\ntzz696 -> tx378\\n\\ntx697 -> \
tx655\\n\\ntx655 -> tx645\\n\\ntzz690 -> tx408\\n\\ntx698 -> tx657\\n\\ntx441 \
-> tx651\\n\\ntzz693 -> tx451\\n\\ntzz689 -> tx454\\n\\ntzz688 -> \
tx533\\n\\ntzz691 -> tx535\\n\\ntzz692 -> tx561\\n\\ntzz680 -> tx611\"\>"], \
"Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400922652239*^9}],

Cell[BoxData["\<\"After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(I2);]\\\
n\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(\
dA);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(am,I1,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bm,I1,1);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(cm,I1,2);]\\n\\nCCode[NONBONDRB_SET_POSITION(dm,I1,3);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(xm,I1,4);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(ym,I1,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zm,I1,6);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(an,I2,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bn,I2,1);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(cn,I2,2);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(dn,I2,3);]\\n\\nCCode[NONBONDRB_SET_POSITION(xn,I2,4);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(yn,I2,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zn,I2,6);]\
\\n\\nCCode[NONBONDRB_SET_POINT(xm,pointA,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(ym,pointA,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zm,pointA,getZ());]\\\
n\\nCCode[NONBONDRB_SET_POINT(xn,pointB,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yn,pointB,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zn,pointB,getZ());]\\\
n\\npower2[am] -> tx322\\n\\npower2[an] -> tx323\\n\\npower2[bm] -> \
tx324\\n\\npower2[bn] -> tx325\\n\\npower2[cm] -> tx326\\n\\npower2[cn] -> \
tx327\\n\\npower2[dm] -> tx328\\n\\npower2[dn] -> tx329\\n\\n-pxm -> \
tzz672\\n\\nam cm -> tzz694\\n\\ntzz672 tzz694 -> tx330\\n\\nbm cm pxm -> \
tx331\\n\\ndm pxm -> tzz690\\n\\nam tzz690 -> tx332\\n\\nbm tzz690 -> \
tx333\\n\\n-pxn -> tzz685\\n\\nan cn tzz685 -> tx334\\n\\nbn cn pxn -> \
tx335\\n\\ndn pxn -> tzz688\\n\\nan tzz688 -> tx336\\n\\nbn tzz688 -> \
tx337\\n\\nam bm -> tzz695\\n\\npym tzz695 -> tx338\\n\\ncm pym -> \
tzz693\\n\\nbm tzz693 -> tx339\\n\\n-pym -> tzz679\\n\\nam dm tzz679 -> tx340\
\\n\\ndm tzz693 -> tx341\\n\\nan bn pyn -> tx342\\n\\ncn pyn -> \
tzz692\\n\\nbn tzz692 -> tx343\\n\\n-pyn -> tzz684\\n\\nan dn tzz684 -> tx344\
\\n\\ndn tzz692 -> tx345\\n\\n-pzm -> tzz671\\n\\ntzz671 tzz695 -> \
tx346\\n\\npzm tzz694 -> tx347\\n\\ndm pzm -> tzz689\\n\\nbm tzz689 -> \
tx348\\n\\ncm tzz689 -> tx349\\n\\nbn pzn -> tzz680\\n\\n-(an tzz680) -> \
tx350\\n\\ncn pzn -> tzz691\\n\\nan tzz691 -> tx351\\n\\ndn tzz680 -> \
tx352\\n\\ndn tzz691 -> tx353\\n\\ntx324 tzz679 -> tx354\\n\\ntx324 tzz671 -> \
tx355\\n\\ntx325 tzz684 -> tx356\\n\\n-pzn -> tzz696\\n\\ntx325 tzz696 -> \
tx357\\n\\ntx326 tzz672 -> tx358\\n\\ntx326 tzz671 -> tx359\\n\\ntx327 tzz685 \
-> tx360\\n\\ntx327 tzz696 -> tx361\\n\\ntx328 tzz672 -> tx362\\n\\ntx328 \
tzz679 -> tx363\\n\\ntx322 + tx324 + tx326 + tx328 -> tx364\\n\\ntx329 tzz685 \
-> tx365\\n\\ntx329 tzz684 -> tx366\\n\\ntx323 + tx325 + tx327 + tx329 -> \
tx367\\n\\ntx330 + tx333 + tx338 + tx341 + tx355 + tx359 -> tx368\\n\\ntx334 \
+ tx337 + tx342 + tx345 + tx357 + tx361 -> tx369\\n\\ntx339 + tx340 + tx347 + \
tx348 + tx358 + tx362 -> tx370\\n\\ntx331 + tx332 + tx346 + tx349 + tx354 + \
tx363 -> tx371\\n\\nreciprocal[tx364] -> tx372\\n\\ntx343 + tx344 + tx351 + \
tx352 + tx360 + tx365 -> tx373\\n\\ntx335 + tx336 + tx350 + tx353 + tx356 + \
tx366 -> tx374\\n\\nreciprocal[tx367] -> tx375\\n\\ntzz685 -> \
tx376\\n\\ntzz684 -> tx377\\n\\ntzz696 -> tx378\\n\\n2. tx372 -> \
tzz659\\n\\ntx368 tzz659 -> tx379\\n\\ntx370 tzz659 -> tx380\\n\\ntx371 \
tzz659 -> tx381\\n\\n-2. tx375 -> tzz658\\n\\ntx369 tzz658 -> \
tx382\\n\\ntx373 tzz658 -> tx383\\n\\ntx374 tzz658 -> tx384\\n\\n-xn -> tx385\
\\n\\n-yn -> tx386\\n\\n-zn -> tx387\\n\\npxm + tx376 + tx380 + tx383 + tx385 \
+ xm -> tx388\\n\\npym + tx377 + tx381 + tx384 + tx386 + ym -> tx389\\n\\npzm \
+ tx378 + tx379 + tx382 + tx387 + zm -> tx390\\n\\npower2[tx388] -> \
tx391\\n\\npower2[tx389] -> tx392\\n\\npower2[tx390] -> tx393\\n\\ntx391 + \
tx392 + tx393 -> tx394\\n\\nreciprocal[tx394] -> tx697\\n\\npower2[tx697] -> \
tx654\\n\\ntx697 -> tx655\\n\\ntx654 tx655 -> tx643\\n\\npower2[tx643] -> \
tx395\\n\\npower2[tx655] -> tx644\\n\\ntx655 -> tx645\\n\\ntx644 tx645 -> \
tx396\\n\\nmysqrt[tx394] -> tx646\\n\\nreciprocal[tx646] -> tx397\\n\\ndA \
tx395 -> tx398\\n\\n-(dC tx396) -> tx399\\n\\ndQ1Q2 tx397 -> tx400\\n\\ntx398 \
+ tx399 + tx400 -> Energy\\n\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\\n\
\\ntx327 tx376 -> tx401\\n\\ntx329 tx376 -> tx402\\n\\ntx325 tx377 -> \
tx403\\n\\ntx329 tx377 -> tx404\\n\\ntx325 tx378 -> tx405\\n\\ntx327 tx378 -> \
tx406\\n\\ncm tzz672 -> tx407\\n\\ntzz690 -> tx408\\n\\nbm pym -> \
tx409\\n\\ndm tzz679 -> tx410\\n\\nbm tzz671 -> tx411\\n\\ncm pzm -> tx412\\n\
\\ntx343 + tx344 + tx351 + tx352 + tx401 + tx402 -> tx413\\n\\ntx335 + tx336 \
+ tx350 + tx353 + tx403 + tx404 -> tx414\\n\\ntx334 + tx337 + tx342 + tx345 + \
tx405 + tx406 -> tx415\\n\\npower2[tx372] -> tx416\\n\\ntx407 + tx409 -> \
tx417\\n\\ntx408 + tx411 -> tx418\\n\\ntx410 + tx412 -> tx419\\n\\ntx413 \
tzz658 -> tx420\\n\\ntx414 tzz658 -> tx421\\n\\ntx415 tzz658 -> \
tx422\\n\\n-4. tx416 -> tzz664\\n\\ntx368 tzz664 -> tzz678\\n\\nam tzz678 -> \
tx423\\n\\ntx370 tzz664 -> tzz677\\n\\nam tzz677 -> tx424\\n\\ntx371 tzz664 \
-> tzz676\\n\\nam tzz676 -> tx425\\n\\ntx417 tzz659 -> tx426\\n\\ntx418 \
tzz659 -> tx427\\n\\ntx419 tzz659 -> tx428\\n\\npxm + tx376 + tx380 + tx385 + \
tx420 + xm -> tx429\\n\\npym + tx377 + tx381 + tx386 + tx421 + ym -> tx430\\n\
\\npzm + tx378 + tx379 + tx387 + tx422 + zm -> tx431\\n\\ntx423 + tx426 -> \
tx432\\n\\ntx425 + tx427 -> tx433\\n\\ntx424 + tx428 -> \
tx434\\n\\npower2[tx429] -> tx435\\n\\npower2[tx430] -> \
tx436\\n\\npower2[tx431] -> tx437\\n\\n2. tx431 -> tzz666\\n\\ntx432 tzz666 \
-> tx438\\n\\n2. tx430 -> tzz667\\n\\ntx433 tzz667 -> tx439\\n\\n2. tx429 -> \
tzz668\\n\\ntx434 tzz668 -> tx440\\n\\ntx435 + tx436 + tx437 -> \
tx441\\n\\ntx438 + tx439 + tx440 -> tx442\\n\\nreciprocal[tx441] -> \
tx698\\n\\npower2[tx698] -> tx656\\n\\ntx698 -> tx657\\n\\ntx656 tx657 -> \
tx647\\n\\npower2[tx656] -> tx648\\n\\ntx647 tx648 -> \
tx443\\n\\npower2[tx657] -> tx649\\n\\npower2[tx649] -> \
tx444\\n\\nmysqrt[tx441] -> tx650\\n\\ntx441 -> tx651\\n\\nreciprocal[tx650] \
-> tx652\\n\\nreciprocal[tx651] -> tx653\\n\\ntx652 tx653 -> tx445\\n\\ndA \
tx443 -> tzz662\\n\\n-6. tzz662 -> tzz670\\n\\ntx442 tzz670 -> tx446\\n\\ndC \
tx444 -> tzz661\\n\\n3 tzz661 -> tzz665\\n\\ntx442 tzz665 -> tx447\\n\\ndQ1Q2 \
tx445 -> tzz660\\n\\n-0.5 tzz660 -> tzz669\\n\\ntx442 tzz669 -> \
tx448\\n\\ntx446 + tx447 + tx448 -> gam\\n\\n-gam -> \
fam\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 0, fam );]\\n\\ncm pxm -> tx449\
\\n\\nam pym -> tx450\\n\\ntzz693 -> tx451\\n\\nam tzz671 -> tx452\\n\\n-2. \
bm pzm -> tx453\\n\\ntzz689 -> tx454\\n\\n-2. tx409 -> tx455\\n\\ntx408 + \
tx450 + tx453 -> tx456\\n\\ntx451 + tx454 -> tx457\\n\\ntx449 + tx452 + tx455 \
-> tx458\\n\\nbm tzz678 -> tx459\\n\\nbm tzz677 -> tx460\\n\\nbm tzz676 -> \
tx461\\n\\ntx456 tzz659 -> tx462\\n\\ntx457 tzz659 -> tx463\\n\\ntx458 tzz659 \
-> tx464\\n\\ntx459 + tx462 -> tx465\\n\\ntx460 + tx463 -> tx466\\n\\ntx461 + \
tx464 -> tx467\\n\\ntx465 tzz666 -> tx468\\n\\ntx466 tzz668 -> \
tx469\\n\\ntx467 tzz667 -> tx470\\n\\ntx468 + tx469 + tx470 -> \
tx471\\n\\ntx471 tzz670 -> tx472\\n\\ntx471 tzz665 -> tx473\\n\\ntx471 tzz669 \
-> tx474\\n\\ntx472 + tx473 + tx474 -> gbm\\n\\n-gbm -> \
fbm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 1, fbm );]\\n\\nam tzz672 -> \
tx475\\n\\nbm pxm -> tx476\\n\\ndm pym -> tx477\\n\\nam pzm -> tx478\\n\\n-2. \
tx412 -> tx479\\n\\n-2. tx449 -> tx480\\n\\ntx454 + tx476 -> tx481\\n\\ntx475 \
+ tx477 + tx479 -> tx482\\n\\ntx409 + tx478 + tx480 -> tx483\\n\\ncm tzz678 \
-> tx484\\n\\ncm tzz677 -> tx485\\n\\ncm tzz676 -> tx486\\n\\ntx481 tzz659 -> \
tx487\\n\\ntx482 tzz659 -> tx488\\n\\ntx483 tzz659 -> tx489\\n\\ntx486 + \
tx487 -> tx490\\n\\ntx484 + tx488 -> tx491\\n\\ntx485 + tx489 -> \
tx492\\n\\ntx490 tzz667 -> tx493\\n\\ntx491 tzz666 -> tx494\\n\\ntx492 tzz668 \
-> tx495\\n\\ntx493 + tx494 + tx495 -> tx496\\n\\ntx496 tzz670 -> \
tx497\\n\\ntx496 tzz665 -> tx498\\n\\ntx496 tzz669 -> tx499\\n\\ntx497 + \
tx498 + tx499 -> gcm\\n\\n-gcm -> \
fcm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 2, fcm );]\\n\\nam pxm -> tx500\
\\n\\nbm pzm -> tx501\\n\\n-2. tx408 -> tx502\\n\\n-tx450 -> tx503\\n\\n-2. \
tx477 -> tx504\\n\\ntx451 + tx476 -> tx505\\n\\ntx501 + tx502 + tx503 -> \
tx506\\n\\ntx412 + tx500 + tx504 -> tx507\\n\\ndm tzz678 -> tx508\\n\\ndm \
tzz677 -> tx509\\n\\ndm tzz676 -> tx510\\n\\ntx505 tzz659 -> tx511\\n\\ntx506 \
tzz659 -> tx512\\n\\ntx507 tzz659 -> tx513\\n\\ntx508 + tx511 -> \
tx514\\n\\ntx509 + tx512 -> tx515\\n\\ntx510 + tx513 -> tx516\\n\\ntx514 \
tzz666 -> tx517\\n\\ntx515 tzz668 -> tx518\\n\\ntx516 tzz667 -> \
tx519\\n\\ntx517 + tx518 + tx519 -> tx520\\n\\ntx520 tzz670 -> \
tx521\\n\\ntx520 tzz665 -> tx522\\n\\ntx520 tzz669 -> tx523\\n\\ntx521 + \
tx522 + tx523 -> gdm\\n\\n-gdm -> \
fdm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 3, fdm );]\\n\\n-12. tzz662 -> \
tzz687\\n\\ntx429 tzz687 -> tx524\\n\\n6. tzz661 -> tzz682\\n\\ntx429 tzz682 \
-> tx525\\n\\n-tzz660 -> tzz683\\n\\ntx429 tzz683 -> tx526\\n\\ntx524 + tx525 \
+ tx526 -> gxm\\n\\n-gxm -> fxm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 4, \
fxm );]\\n\\ntx430 tzz687 -> tx527\\n\\ntx430 tzz682 -> tx528\\n\\ntx430 \
tzz683 -> tx529\\n\\ntx527 + tx528 + tx529 -> gym\\n\\n-gym -> \
fym\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 5, fym );]\\n\\ntx431 tzz687 -> \
tx530\\n\\ntx431 tzz682 -> tx531\\n\\ntx431 tzz683 -> tx532\\n\\ntx530 + \
tx531 + tx532 -> gzm\\n\\n-gzm -> \
fzm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 6, fzm );]\\n\\ntzz688 -> tx533\
\\n\\nbn pyn -> tx534\\n\\ntzz691 -> tx535\\n\\ncn tx376 -> tx536\\n\\ndn \
tx377 -> tx537\\n\\nbn tx378 -> tx538\\n\\npower2[tx375] -> tx539\\n\\ntx534 \
+ tx536 -> tx540\\n\\ntx535 + tx537 -> tx541\\n\\ntx533 + tx538 -> \
tx542\\n\\n4. tx539 -> tzz663\\n\\ntx413 tzz663 -> tzz675\\n\\nan tzz675 -> \
tx543\\n\\ntx414 tzz663 -> tzz674\\n\\nan tzz674 -> tx544\\n\\ntx415 tzz663 \
-> tzz673\\n\\nan tzz673 -> tx545\\n\\ntx540 tzz658 -> tx546\\n\\ntx541 \
tzz658 -> tx547\\n\\ntx542 tzz658 -> tx548\\n\\ntx545 + tx546 -> \
tx549\\n\\ntx543 + tx547 -> tx550\\n\\ntx544 + tx548 -> tx551\\n\\ntx549 \
tzz666 -> tx552\\n\\ntx550 tzz668 -> tx553\\n\\ntx551 tzz667 -> \
tx554\\n\\ntx552 + tx553 + tx554 -> tx555\\n\\ntx555 tzz670 -> \
tx556\\n\\ntx555 tzz665 -> tx557\\n\\ntx555 tzz669 -> tx558\\n\\ntx556 + \
tx557 + tx558 -> gan\\n\\n-gan -> \
fan\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 0, fan );]\\n\\ncn pxn -> tx559\
\\n\\nan pyn -> tx560\\n\\ntzz692 -> tx561\\n\\n-2. tzz680 -> tx562\\n\\ndn \
pzn -> tx563\\n\\nan tx378 -> tx564\\n\\n-2. tx534 -> tx565\\n\\ntx533 + \
tx560 + tx562 -> tx566\\n\\ntx561 + tx563 -> tx567\\n\\ntx559 + tx564 + tx565 \
-> tx568\\n\\nbn tzz675 -> tx569\\n\\nbn tzz674 -> tx570\\n\\nbn tzz673 -> \
tx571\\n\\ntx566 tzz658 -> tx572\\n\\ntx567 tzz658 -> tx573\\n\\ntx568 tzz658 \
-> tx574\\n\\ntx571 + tx572 -> tx575\\n\\ntx569 + tx573 -> tx576\\n\\ntx570 + \
tx574 -> tx577\\n\\ntx575 tzz666 -> tx578\\n\\ntx576 tzz668 -> \
tx579\\n\\ntx577 tzz667 -> tx580\\n\\ntx578 + tx579 + tx580 -> \
tx581\\n\\ntx581 tzz670 -> tx582\\n\\ntx581 tzz665 -> tx583\\n\\ntx581 tzz669 \
-> tx584\\n\\ntx582 + tx583 + tx584 -> gbn\\n\\n-gbn -> \
fbn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 1, fbn );]\\n\\nbn pxn -> tx585\
\\n\\ndn pyn -> tx586\\n\\nan pzn -> tx587\\n\\nan tx376 -> tx588\\n\\n-2. \
tx535 -> tx589\\n\\n-2. tx559 -> tx590\\n\\ntx563 + tx585 -> tx591\\n\\ntx586 \
+ tx588 + tx589 -> tx592\\n\\ntx534 + tx587 + tx590 -> tx593\\n\\ncn tzz675 \
-> tx594\\n\\ncn tzz674 -> tx595\\n\\ncn tzz673 -> tx596\\n\\ntx591 tzz658 -> \
tx597\\n\\ntx592 tzz658 -> tx598\\n\\ntx593 tzz658 -> tx599\\n\\ntx595 + \
tx597 -> tx600\\n\\ntx596 + tx598 -> tx601\\n\\ntx594 + tx599 -> \
tx602\\n\\ntx600 tzz667 -> tx603\\n\\ntx601 tzz666 -> tx604\\n\\ntx602 tzz668 \
-> tx605\\n\\ntx603 + tx604 + tx605 -> tx606\\n\\ntx606 tzz670 -> \
tx607\\n\\ntx606 tzz665 -> tx608\\n\\ntx606 tzz669 -> tx609\\n\\ntx607 + \
tx608 + tx609 -> gcn\\n\\n-gcn -> \
fcn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 2, fcn );]\\n\\nan pxn -> tx610\
\\n\\ntzz680 -> tx611\\n\\nan tx377 -> tx612\\n\\n-2. tx533 -> tx613\\n\\n-2. \
tx586 -> tx614\\n\\ntx561 + tx585 -> tx615\\n\\ntx611 + tx612 + tx613 -> \
tx616\\n\\ntx535 + tx610 + tx614 -> tx617\\n\\ndn tzz675 -> tx618\\n\\ndn \
tzz674 -> tx619\\n\\ndn tzz673 -> tx620\\n\\ntx615 tzz658 -> tx621\\n\\ntx616 \
tzz658 -> tx622\\n\\ntx617 tzz658 -> tx623\\n\\ntx620 + tx621 -> \
tx624\\n\\ntx618 + tx622 -> tx625\\n\\ntx619 + tx623 -> tx626\\n\\ntx624 \
tzz666 -> tx627\\n\\ntx625 tzz668 -> tx628\\n\\ntx626 tzz667 -> \
tx629\\n\\ntx627 + tx628 + tx629 -> tx630\\n\\ntx630 tzz670 -> \
tx631\\n\\ntx630 tzz665 -> tx632\\n\\ntx630 tzz669 -> tx633\\n\\ntx631 + \
tx632 + tx633 -> gdn\\n\\n-gdn -> \
fdn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 3, fdn );]\\n\\n12. tzz662 -> \
tzz681\\n\\ntx429 tzz681 -> tx634\\n\\n-6. tzz661 -> tzz686\\n\\ntx429 tzz686 \
-> tx635\\n\\ntx429 tzz660 -> tx636\\n\\ntx634 + tx635 + tx636 -> \
gxn\\n\\n-gxn -> fxn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 4, fxn \
);]\\n\\ntx430 tzz681 -> tx637\\n\\ntx430 tzz686 -> tx638\\n\\ntx430 tzz660 \
-> tx639\\n\\ntx637 + tx638 + tx639 -> gyn\\n\\n-gyn -> \
fyn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 5, fyn );]\\n\\ntx431 tzz681 -> \
tx640\\n\\ntx431 tzz686 -> tx641\\n\\ntx431 tzz660 -> tx642\\n\\ntx640 + \
tx641 + tx642 -> gzn\\n\\n-gzn -> \
fzn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzn );]\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400922656219*^9}],

Cell[BoxData["\<\"trivialRules>> triv = {tzz685 -> tx376, tzz684 -> tx377, \
tzz696 -> tx378, tx697 -> tx655, tx655 -> tx645, tzz690 -> tx408, tx698 -> \
tx657, tx441 -> tx651, tzz693 -> tx451, tzz689 -> tx454, tzz688 -> tx533, \
tzz691 -> tx535, tzz692 -> tx561, tzz680 -> tx611}\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.7074009251156693`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, fam, fbm, fcm, fdm, fxm, \
fym, fzm, fan, fbn, fcn, fdn, fxn, fyn, fzn, nonbondRBDeviation}\"\>"], \
"Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400925118291*^9}],

Cell[BoxData["\<\"Trivial rules are being removed: tzz685 -> \
tx376\\n\\ntzz684 -> tx377\\n\\ntzz696 -> tx378\\n\\ntx697 -> \
tx655\\n\\ntx655 -> tx645\\n\\ntzz690 -> tx408\\n\\ntx698 -> tx657\\n\\ntx441 \
-> tx651\\n\\ntzz693 -> tx451\\n\\ntzz689 -> tx454\\n\\ntzz688 -> \
tx533\\n\\ntzz691 -> tx535\\n\\ntzz692 -> tx561\\n\\ntzz680 -> tx611\"\>"], \
"Print",
 CellChangeTimes->{3.707148721968418*^9, 3.7074009251208467`*^9}],

Cell[BoxData["\<\"After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(I2);]\\\
n\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(\
dA);]\\n\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(am,I1,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bm,I1,1);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(cm,I1,2);]\\n\\nCCode[NONBONDRB_SET_POSITION(dm,I1,3);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(xm,I1,4);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(ym,I1,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zm,I1,6);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(an,I2,0);]\\n\\nCCode[NONBONDRB_SET_POSITION(bn,I2,1);]\
\\n\\nCCode[NONBONDRB_SET_POSITION(cn,I2,2);]\\n\\nCCode[NONBONDRB_SET_\
POSITION(dn,I2,3);]\\n\\nCCode[NONBONDRB_SET_POSITION(xn,I2,4);]\\n\\nCCode[\
NONBONDRB_SET_POSITION(yn,I2,5);]\\n\\nCCode[NONBONDRB_SET_POSITION(zn,I2,6);]\
\\n\\nCCode[NONBONDRB_SET_POINT(xm,pointA,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(ym,pointA,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zm,pointA,getZ());]\\\
n\\nCCode[NONBONDRB_SET_POINT(xn,pointB,getX());]\\n\\nCCode[NONBONDRB_SET_\
POINT(yn,pointB,getY());]\\n\\nCCode[NONBONDRB_SET_POINT(zn,pointB,getZ());]\\\
n\\npower2[am] -> tx322\\n\\npower2[an] -> tx323\\n\\npower2[bm] -> \
tx324\\n\\npower2[bn] -> tx325\\n\\npower2[cm] -> tx326\\n\\npower2[cn] -> \
tx327\\n\\npower2[dm] -> tx328\\n\\npower2[dn] -> tx329\\n\\n-pxm -> \
tzz672\\n\\nam cm -> tzz694\\n\\ntzz672 tzz694 -> tx330\\n\\nbm cm pxm -> \
tx331\\n\\ndm pxm -> tzz690\\n\\nam tzz690 -> tx332\\n\\nbm tzz690 -> \
tx333\\n\\n-pxn -> tzz685\\n\\nan cn tzz685 -> tx334\\n\\nbn cn pxn -> \
tx335\\n\\ndn pxn -> tzz688\\n\\nan tzz688 -> tx336\\n\\nbn tzz688 -> \
tx337\\n\\nam bm -> tzz695\\n\\npym tzz695 -> tx338\\n\\ncm pym -> \
tzz693\\n\\nbm tzz693 -> tx339\\n\\n-pym -> tzz679\\n\\nam dm tzz679 -> tx340\
\\n\\ndm tzz693 -> tx341\\n\\nan bn pyn -> tx342\\n\\ncn pyn -> \
tzz692\\n\\nbn tzz692 -> tx343\\n\\n-pyn -> tzz684\\n\\nan dn tzz684 -> tx344\
\\n\\ndn tzz692 -> tx345\\n\\n-pzm -> tzz671\\n\\ntzz671 tzz695 -> \
tx346\\n\\npzm tzz694 -> tx347\\n\\ndm pzm -> tzz689\\n\\nbm tzz689 -> \
tx348\\n\\ncm tzz689 -> tx349\\n\\nbn pzn -> tzz680\\n\\n-(an tzz680) -> \
tx350\\n\\ncn pzn -> tzz691\\n\\nan tzz691 -> tx351\\n\\ndn tzz680 -> \
tx352\\n\\ndn tzz691 -> tx353\\n\\ntx324 tzz679 -> tx354\\n\\ntx324 tzz671 -> \
tx355\\n\\ntx325 tzz684 -> tx356\\n\\n-pzn -> tzz696\\n\\ntx325 tzz696 -> \
tx357\\n\\ntx326 tzz672 -> tx358\\n\\ntx326 tzz671 -> tx359\\n\\ntx327 tzz685 \
-> tx360\\n\\ntx327 tzz696 -> tx361\\n\\ntx328 tzz672 -> tx362\\n\\ntx328 \
tzz679 -> tx363\\n\\ntx322 + tx324 + tx326 + tx328 -> tx364\\n\\ntx329 tzz685 \
-> tx365\\n\\ntx329 tzz684 -> tx366\\n\\ntx323 + tx325 + tx327 + tx329 -> \
tx367\\n\\ntx330 + tx333 + tx338 + tx341 + tx355 + tx359 -> tx368\\n\\ntx342 \
+ tx345 -> tzz712\\n\\ntx337 + tzz712 -> tzz713\\n\\ntx334 + tzz713 -> tzz716\
\\n\\ntx357 + tx361 + tzz716 -> tx369\\n\\ntx339 + tx340 + tx347 + tx348 + \
tx358 + tx362 -> tx370\\n\\ntx331 + tx332 + tx346 + tx349 + tx354 + tx363 -> \
tx371\\n\\nreciprocal[tx364] -> tx372\\n\\ntx351 + tx352 -> tzz708\\n\\ntx344 \
+ tzz708 -> tzz710\\n\\ntx343 + tzz710 -> tzz711\\n\\ntx360 + tx365 + tzz711 \
-> tx373\\n\\ntx350 + tx353 -> tzz709\\n\\ntx336 + tzz709 -> \
tzz714\\n\\ntx335 + tzz714 -> tzz715\\n\\ntx356 + tx366 + tzz715 -> \
tx374\\n\\nreciprocal[tx367] -> tx375\\n\\ntzz685 -> tx376\\n\\ntzz684 -> \
tx377\\n\\ntzz696 -> tx378\\n\\n2. tx372 -> tzz659\\n\\ntx368 tzz659 -> tx379\
\\n\\ntx370 tzz659 -> tx380\\n\\ntx371 tzz659 -> tx381\\n\\n-2. tx375 -> \
tzz658\\n\\ntx369 tzz658 -> tx382\\n\\ntx373 tzz658 -> tx383\\n\\ntx374 \
tzz658 -> tx384\\n\\n-xn -> tx385\\n\\n-yn -> tx386\\n\\n-zn -> \
tx387\\n\\ntx385 + xm -> tzz701\\n\\ntx380 + tzz701 -> tzz703\\n\\ntx376 + \
tzz703 -> tzz707\\n\\npxm + tzz707 -> tzz719\\n\\ntx383 + tzz719 -> \
tx388\\n\\ntx386 + ym -> tzz700\\n\\ntx381 + tzz700 -> tzz702\\n\\ntx377 + \
tzz702 -> tzz706\\n\\npym + tzz706 -> tzz718\\n\\ntx384 + tzz718 -> \
tx389\\n\\ntx387 + zm -> tzz699\\n\\ntx379 + tzz699 -> tzz704\\n\\ntx378 + \
tzz704 -> tzz705\\n\\npzm + tzz705 -> tzz717\\n\\ntx382 + tzz717 -> \
tx390\\n\\npower2[tx388] -> tx391\\n\\npower2[tx389] -> \
tx392\\n\\npower2[tx390] -> tx393\\n\\ntx391 + tx392 + tx393 -> \
tx394\\n\\nreciprocal[tx394] -> tx697\\n\\npower2[tx697] -> tx654\\n\\ntx697 \
-> tx655\\n\\ntx654 tx655 -> tx643\\n\\npower2[tx643] -> \
tx395\\n\\npower2[tx655] -> tx644\\n\\ntx655 -> tx645\\n\\ntx644 tx645 -> \
tx396\\n\\nmysqrt[tx394] -> tx646\\n\\nreciprocal[tx646] -> tx397\\n\\ndA \
tx395 -> tx398\\n\\n-(dC tx396) -> tx399\\n\\ndQ1Q2 tx397 -> tx400\\n\\ntx398 \
+ tx399 + tx400 -> Energy\\n\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\\n\
\\ntx327 tx376 -> tx401\\n\\ntx329 tx376 -> tx402\\n\\ntx325 tx377 -> \
tx403\\n\\ntx329 tx377 -> tx404\\n\\ntx325 tx378 -> tx405\\n\\ntx327 tx378 -> \
tx406\\n\\ncm tzz672 -> tx407\\n\\ntzz690 -> tx408\\n\\nbm pym -> \
tx409\\n\\ndm tzz679 -> tx410\\n\\nbm tzz671 -> tx411\\n\\ncm pzm -> tx412\\n\
\\ntx401 + tx402 + tzz711 -> tx413\\n\\ntx403 + tx404 + tzz715 -> \
tx414\\n\\ntx405 + tx406 + tzz716 -> tx415\\n\\npower2[tx372] -> \
tx416\\n\\ntx407 + tx409 -> tx417\\n\\ntx408 + tx411 -> tx418\\n\\ntx410 + \
tx412 -> tx419\\n\\ntx413 tzz658 -> tx420\\n\\ntx414 tzz658 -> \
tx421\\n\\ntx415 tzz658 -> tx422\\n\\n-4. tx416 -> tzz664\\n\\ntx368 tzz664 \
-> tzz678\\n\\nam tzz678 -> tx423\\n\\ntx370 tzz664 -> tzz677\\n\\nam tzz677 \
-> tx424\\n\\ntx371 tzz664 -> tzz676\\n\\nam tzz676 -> tx425\\n\\ntx417 \
tzz659 -> tx426\\n\\ntx418 tzz659 -> tx427\\n\\ntx419 tzz659 -> \
tx428\\n\\ntx420 + tzz719 -> tx429\\n\\ntx421 + tzz718 -> tx430\\n\\ntx422 + \
tzz717 -> tx431\\n\\ntx423 + tx426 -> tx432\\n\\ntx425 + tx427 -> \
tx433\\n\\ntx424 + tx428 -> tx434\\n\\npower2[tx429] -> \
tx435\\n\\npower2[tx430] -> tx436\\n\\npower2[tx431] -> tx437\\n\\n2. tx431 \
-> tzz666\\n\\ntx432 tzz666 -> tx438\\n\\n2. tx430 -> tzz667\\n\\ntx433 \
tzz667 -> tx439\\n\\n2. tx429 -> tzz668\\n\\ntx434 tzz668 -> tx440\\n\\ntx435 \
+ tx436 + tx437 -> tx441\\n\\ntx438 + tx439 + tx440 -> \
tx442\\n\\nreciprocal[tx441] -> tx698\\n\\npower2[tx698] -> tx656\\n\\ntx698 \
-> tx657\\n\\ntx656 tx657 -> tx647\\n\\npower2[tx656] -> tx648\\n\\ntx647 \
tx648 -> tx443\\n\\npower2[tx657] -> tx649\\n\\npower2[tx649] -> \
tx444\\n\\nmysqrt[tx441] -> tx650\\n\\ntx441 -> tx651\\n\\nreciprocal[tx650] \
-> tx652\\n\\nreciprocal[tx651] -> tx653\\n\\ntx652 tx653 -> tx445\\n\\ndA \
tx443 -> tzz662\\n\\n-6. tzz662 -> tzz670\\n\\ntx442 tzz670 -> tx446\\n\\ndC \
tx444 -> tzz661\\n\\n3 tzz661 -> tzz665\\n\\ntx442 tzz665 -> tx447\\n\\ndQ1Q2 \
tx445 -> tzz660\\n\\n-0.5 tzz660 -> tzz669\\n\\ntx442 tzz669 -> \
tx448\\n\\ntx446 + tx447 + tx448 -> gam\\n\\n-gam -> \
fam\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 0, fam );]\\n\\ncm pxm -> tx449\
\\n\\nam pym -> tx450\\n\\ntzz693 -> tx451\\n\\nam tzz671 -> tx452\\n\\n-2. \
bm pzm -> tx453\\n\\ntzz689 -> tx454\\n\\n-2. tx409 -> tx455\\n\\ntx408 + \
tx450 + tx453 -> tx456\\n\\ntx451 + tx454 -> tx457\\n\\ntx449 + tx452 + tx455 \
-> tx458\\n\\nbm tzz678 -> tx459\\n\\nbm tzz677 -> tx460\\n\\nbm tzz676 -> \
tx461\\n\\ntx456 tzz659 -> tx462\\n\\ntx457 tzz659 -> tx463\\n\\ntx458 tzz659 \
-> tx464\\n\\ntx459 + tx462 -> tx465\\n\\ntx460 + tx463 -> tx466\\n\\ntx461 + \
tx464 -> tx467\\n\\ntx465 tzz666 -> tx468\\n\\ntx466 tzz668 -> \
tx469\\n\\ntx467 tzz667 -> tx470\\n\\ntx468 + tx469 + tx470 -> \
tx471\\n\\ntx471 tzz670 -> tx472\\n\\ntx471 tzz665 -> tx473\\n\\ntx471 tzz669 \
-> tx474\\n\\ntx472 + tx473 + tx474 -> gbm\\n\\n-gbm -> \
fbm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 1, fbm );]\\n\\nam tzz672 -> \
tx475\\n\\nbm pxm -> tx476\\n\\ndm pym -> tx477\\n\\nam pzm -> tx478\\n\\n-2. \
tx412 -> tx479\\n\\n-2. tx449 -> tx480\\n\\ntx454 + tx476 -> tx481\\n\\ntx475 \
+ tx477 + tx479 -> tx482\\n\\ntx409 + tx478 + tx480 -> tx483\\n\\ncm tzz678 \
-> tx484\\n\\ncm tzz677 -> tx485\\n\\ncm tzz676 -> tx486\\n\\ntx481 tzz659 -> \
tx487\\n\\ntx482 tzz659 -> tx488\\n\\ntx483 tzz659 -> tx489\\n\\ntx486 + \
tx487 -> tx490\\n\\ntx484 + tx488 -> tx491\\n\\ntx485 + tx489 -> \
tx492\\n\\ntx490 tzz667 -> tx493\\n\\ntx491 tzz666 -> tx494\\n\\ntx492 tzz668 \
-> tx495\\n\\ntx493 + tx494 + tx495 -> tx496\\n\\ntx496 tzz670 -> \
tx497\\n\\ntx496 tzz665 -> tx498\\n\\ntx496 tzz669 -> tx499\\n\\ntx497 + \
tx498 + tx499 -> gcm\\n\\n-gcm -> \
fcm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 2, fcm );]\\n\\nam pxm -> tx500\
\\n\\nbm pzm -> tx501\\n\\n-2. tx408 -> tx502\\n\\n-tx450 -> tx503\\n\\n-2. \
tx477 -> tx504\\n\\ntx451 + tx476 -> tx505\\n\\ntx501 + tx502 + tx503 -> \
tx506\\n\\ntx412 + tx500 + tx504 -> tx507\\n\\ndm tzz678 -> tx508\\n\\ndm \
tzz677 -> tx509\\n\\ndm tzz676 -> tx510\\n\\ntx505 tzz659 -> tx511\\n\\ntx506 \
tzz659 -> tx512\\n\\ntx507 tzz659 -> tx513\\n\\ntx508 + tx511 -> \
tx514\\n\\ntx509 + tx512 -> tx515\\n\\ntx510 + tx513 -> tx516\\n\\ntx514 \
tzz666 -> tx517\\n\\ntx515 tzz668 -> tx518\\n\\ntx516 tzz667 -> \
tx519\\n\\ntx517 + tx518 + tx519 -> tx520\\n\\ntx520 tzz670 -> \
tx521\\n\\ntx520 tzz665 -> tx522\\n\\ntx520 tzz669 -> tx523\\n\\ntx521 + \
tx522 + tx523 -> gdm\\n\\n-gdm -> \
fdm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 3, fdm );]\\n\\n-12. tzz662 -> \
tzz687\\n\\ntx429 tzz687 -> tx524\\n\\n6. tzz661 -> tzz682\\n\\ntx429 tzz682 \
-> tx525\\n\\n-tzz660 -> tzz683\\n\\ntx429 tzz683 -> tx526\\n\\ntx524 + tx525 \
+ tx526 -> gxm\\n\\n-gxm -> fxm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 4, \
fxm );]\\n\\ntx430 tzz687 -> tx527\\n\\ntx430 tzz682 -> tx528\\n\\ntx430 \
tzz683 -> tx529\\n\\ntx527 + tx528 + tx529 -> gym\\n\\n-gym -> \
fym\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 5, fym );]\\n\\ntx431 tzz687 -> \
tx530\\n\\ntx431 tzz682 -> tx531\\n\\ntx431 tzz683 -> tx532\\n\\ntx530 + \
tx531 + tx532 -> gzm\\n\\n-gzm -> \
fzm\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I1, 6, fzm );]\\n\\ntzz688 -> tx533\
\\n\\nbn pyn -> tx534\\n\\ntzz691 -> tx535\\n\\ncn tx376 -> tx536\\n\\ndn \
tx377 -> tx537\\n\\nbn tx378 -> tx538\\n\\npower2[tx375] -> tx539\\n\\ntx534 \
+ tx536 -> tx540\\n\\ntx535 + tx537 -> tx541\\n\\ntx533 + tx538 -> \
tx542\\n\\n4. tx539 -> tzz663\\n\\ntx413 tzz663 -> tzz675\\n\\nan tzz675 -> \
tx543\\n\\ntx414 tzz663 -> tzz674\\n\\nan tzz674 -> tx544\\n\\ntx415 tzz663 \
-> tzz673\\n\\nan tzz673 -> tx545\\n\\ntx540 tzz658 -> tx546\\n\\ntx541 \
tzz658 -> tx547\\n\\ntx542 tzz658 -> tx548\\n\\ntx545 + tx546 -> \
tx549\\n\\ntx543 + tx547 -> tx550\\n\\ntx544 + tx548 -> tx551\\n\\ntx549 \
tzz666 -> tx552\\n\\ntx550 tzz668 -> tx553\\n\\ntx551 tzz667 -> \
tx554\\n\\ntx552 + tx553 + tx554 -> tx555\\n\\ntx555 tzz670 -> \
tx556\\n\\ntx555 tzz665 -> tx557\\n\\ntx555 tzz669 -> tx558\\n\\ntx556 + \
tx557 + tx558 -> gan\\n\\n-gan -> \
fan\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 0, fan );]\\n\\ncn pxn -> tx559\
\\n\\nan pyn -> tx560\\n\\ntzz692 -> tx561\\n\\n-2. tzz680 -> tx562\\n\\ndn \
pzn -> tx563\\n\\nan tx378 -> tx564\\n\\n-2. tx534 -> tx565\\n\\ntx533 + \
tx560 + tx562 -> tx566\\n\\ntx561 + tx563 -> tx567\\n\\ntx559 + tx564 + tx565 \
-> tx568\\n\\nbn tzz675 -> tx569\\n\\nbn tzz674 -> tx570\\n\\nbn tzz673 -> \
tx571\\n\\ntx566 tzz658 -> tx572\\n\\ntx567 tzz658 -> tx573\\n\\ntx568 tzz658 \
-> tx574\\n\\ntx571 + tx572 -> tx575\\n\\ntx569 + tx573 -> tx576\\n\\ntx570 + \
tx574 -> tx577\\n\\ntx575 tzz666 -> tx578\\n\\ntx576 tzz668 -> \
tx579\\n\\ntx577 tzz667 -> tx580\\n\\ntx578 + tx579 + tx580 -> \
tx581\\n\\ntx581 tzz670 -> tx582\\n\\ntx581 tzz665 -> tx583\\n\\ntx581 tzz669 \
-> tx584\\n\\ntx582 + tx583 + tx584 -> gbn\\n\\n-gbn -> \
fbn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 1, fbn );]\\n\\nbn pxn -> tx585\
\\n\\ndn pyn -> tx586\\n\\nan pzn -> tx587\\n\\nan tx376 -> tx588\\n\\n-2. \
tx535 -> tx589\\n\\n-2. tx559 -> tx590\\n\\ntx563 + tx585 -> tx591\\n\\ntx586 \
+ tx588 + tx589 -> tx592\\n\\ntx534 + tx587 + tx590 -> tx593\\n\\ncn tzz675 \
-> tx594\\n\\ncn tzz674 -> tx595\\n\\ncn tzz673 -> tx596\\n\\ntx591 tzz658 -> \
tx597\\n\\ntx592 tzz658 -> tx598\\n\\ntx593 tzz658 -> tx599\\n\\ntx595 + \
tx597 -> tx600\\n\\ntx596 + tx598 -> tx601\\n\\ntx594 + tx599 -> \
tx602\\n\\ntx600 tzz667 -> tx603\\n\\ntx601 tzz666 -> tx604\\n\\ntx602 tzz668 \
-> tx605\\n\\ntx603 + tx604 + tx605 -> tx606\\n\\ntx606 tzz670 -> \
tx607\\n\\ntx606 tzz665 -> tx608\\n\\ntx606 tzz669 -> tx609\\n\\ntx607 + \
tx608 + tx609 -> gcn\\n\\n-gcn -> \
fcn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 2, fcn );]\\n\\nan pxn -> tx610\
\\n\\ntzz680 -> tx611\\n\\nan tx377 -> tx612\\n\\n-2. tx533 -> tx613\\n\\n-2. \
tx586 -> tx614\\n\\ntx561 + tx585 -> tx615\\n\\ntx611 + tx612 + tx613 -> \
tx616\\n\\ntx535 + tx610 + tx614 -> tx617\\n\\ndn tzz675 -> tx618\\n\\ndn \
tzz674 -> tx619\\n\\ndn tzz673 -> tx620\\n\\ntx615 tzz658 -> tx621\\n\\ntx616 \
tzz658 -> tx622\\n\\ntx617 tzz658 -> tx623\\n\\ntx620 + tx621 -> \
tx624\\n\\ntx618 + tx622 -> tx625\\n\\ntx619 + tx623 -> tx626\\n\\ntx624 \
tzz666 -> tx627\\n\\ntx625 tzz668 -> tx628\\n\\ntx626 tzz667 -> \
tx629\\n\\ntx627 + tx628 + tx629 -> tx630\\n\\ntx630 tzz670 -> \
tx631\\n\\ntx630 tzz665 -> tx632\\n\\ntx630 tzz669 -> tx633\\n\\ntx631 + \
tx632 + tx633 -> gdn\\n\\n-gdn -> \
fdn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 3, fdn );]\\n\\n12. tzz662 -> \
tzz681\\n\\ntx429 tzz681 -> tx634\\n\\n-6. tzz661 -> tzz686\\n\\ntx429 tzz686 \
-> tx635\\n\\ntx429 tzz660 -> tx636\\n\\ntx634 + tx635 + tx636 -> \
gxn\\n\\n-gxn -> fxn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 4, fxn \
);]\\n\\ntx430 tzz681 -> tx637\\n\\ntx430 tzz686 -> tx638\\n\\ntx430 tzz660 \
-> tx639\\n\\ntx637 + tx638 + tx639 -> gyn\\n\\n-gyn -> \
fyn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 5, fyn );]\\n\\ntx431 tzz681 -> \
tx640\\n\\ntx431 tzz686 -> tx641\\n\\ntx431 tzz660 -> tx642\\n\\ntx640 + \
tx641 + tx642 -> gzn\\n\\n-gzn -> \
fzn\\n\\nCCode[NONBONDRB_FORCE_ACCUMULATE(I2, 6, fzn );]\"\>"], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400925124085*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing declares to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBONDRB_termDeclares.cc\"\>"}],
  SequenceForm["Writing declares to file: ", "_NONBONDRB_termDeclares.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.7074009251907177`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing code to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBONDRB_termCode.cc\"\>"}],
  SequenceForm["Writing code to file: ", "_NONBONDRB_termCode.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707148721968418*^9, 3.707400925193182*^9}],

Cell[BoxData["\"\<trivialRules>> triv = {nonbondRBEnergyFn -> Energy}\>\""], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146554926938*^9, 3.707146598563415*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, nonbondRBDeviation}\"\>"], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146554928162*^9, 3.70714659856561*^9}],

Cell[BoxData["\"\<Trivial rules are being removed: nonbondRBEnergyFn -> \
Energy\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146554929359*^9, 3.707146598566432*^9}],

Cell[BoxData["\"\<After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(I2)\
;]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\\\n\\\\nCCode[NONBONDRB_\
SET_PARAMETER(dA);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\\\n\\\\\
nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\\\n\\\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ(\
));]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\\\n\\\\nCCode[\
NONBONDRB_SET_POINT(yh2,pointB,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(\
zh2,pointB,getZ());]\\\\n\\\\nnonbondRBEnergyFn -> \
Energy\\\\n\\\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.707146554930573*^9, {3.707146598567664*^9, 3.707146611529502*^9}}],

Cell[BoxData["\<\"Collecting terms\"\>"], "Print",
 CellChangeTimes->{3.7071465551205063`*^9}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707146555122032*^9}],

Cell[BoxData["\"\<trivialRules>> triv = {nonbondRBEnergyFn -> Energy}\>\""], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146555123384*^9, 3.7071465985685883`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, nonbondRBDeviation}\"\>"], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146555124707*^9, 3.7071465985694313`*^9}],

Cell[BoxData["\"\<Trivial rules are being removed: nonbondRBEnergyFn -> \
Energy\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146555125849*^9, 3.7071465985702553`*^9}],

Cell[BoxData["\"\<After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(I2)\
;]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\\\n\\\\nCCode[NONBONDRB_\
SET_PARAMETER(dA);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\\\n\\\\\
nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\\\n\\\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ(\
));]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\\\n\\\\nCCode[\
NONBONDRB_SET_POINT(yh2,pointB,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(\
zh2,pointB,getZ());]\\\\n\\\\nnonbondRBEnergyFn -> \
Energy\\\\n\\\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.707146555126994*^9, {3.707146598571507*^9, 3.707146611539405*^9}}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.7071465554550962`*^9}],

Cell[BoxData["\"\<trivialRules>> triv = {nonbondRBEnergyFn -> Energy}\>\""], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7071465554567337`*^9, 3.707146598572425*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, nonbondRBDeviation}\"\>"], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146555458202*^9, 3.707146598573275*^9}],

Cell[BoxData["\"\<Trivial rules are being removed: nonbondRBEnergyFn -> \
Energy\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146555459589*^9, 3.7071465985741034`*^9}],

Cell[BoxData["\"\<After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(I2)\
;]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\\\n\\\\nCCode[NONBONDRB_\
SET_PARAMETER(dA);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\\\n\\\\\
nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\\\n\\\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ(\
));]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\\\n\\\\nCCode[\
NONBONDRB_SET_POINT(yh2,pointB,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(\
zh2,pointB,getZ());]\\\\n\\\\nnonbondRBEnergyFn -> \
Energy\\\\n\\\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.7071465554608183`*^9, {3.707146598575267*^9, 3.7071466115484953`*^9}}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.707146555704143*^9}],

Cell[BoxData["\"\<trivialRules>> triv = {nonbondRBEnergyFn -> Energy}\>\""], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146555705748*^9, 3.707146598576144*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, nonbondRBDeviation}\"\>"], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146555707198*^9, 3.7071465985769567`*^9}],

Cell[BoxData["\"\<Trivial rules are being removed: nonbondRBEnergyFn -> \
Energy\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146555708582*^9, 3.707146598577776*^9}],

Cell[BoxData["\"\<After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(I2)\
;]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\\\n\\\\nCCode[NONBONDRB_\
SET_PARAMETER(dA);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\\\n\\\\\
nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\\\n\\\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ(\
));]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\\\n\\\\nCCode[\
NONBONDRB_SET_POINT(yh2,pointB,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(\
zh2,pointB,getZ());]\\\\n\\\\nnonbondRBEnergyFn -> \
Energy\\\\n\\\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.707146555709831*^9, {3.707146598578931*^9, 3.707146611557538*^9}}],

Cell[BoxData["\"\<trivialRules>> triv = {nonbondRBEnergyFn -> Energy}\>\""], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7071465561028843`*^9, 3.707146598579801*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, nonbondRBDeviation}\"\>"], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146556104545*^9, 3.7071465985805893`*^9}],

Cell[BoxData["\"\<Trivial rules are being removed: nonbondRBEnergyFn -> \
Energy\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7071465561059513`*^9, 3.70714659858136*^9}],

Cell[BoxData["\"\<After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(I2)\
;]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\\\n\\\\nCCode[NONBONDRB_\
SET_PARAMETER(dA);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\\\n\\\\\
nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\\\n\\\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ(\
));]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\\\n\\\\nCCode[\
NONBONDRB_SET_POINT(yh2,pointB,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(\
zh2,pointB,getZ());]\\\\n\\\\nnonbondRBEnergyFn -> \
Energy\\\\n\\\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.707146556107338*^9, {3.707146598582491*^9, 3.707146611566619*^9}}],

Cell[BoxData["\<\"eliminateTrivialRules\"\>"], "Print",
 CellChangeTimes->{3.70714655633771*^9}],

Cell[BoxData["\"\<trivialRules>> triv = {nonbondRBEnergyFn -> Energy}\>\""], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146556339469*^9, 3.7071465985833187`*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, nonbondRBDeviation}\"\>"], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146556341074*^9, 3.707146598584079*^9}],

Cell[BoxData["\"\<Trivial rules are being removed: nonbondRBEnergyFn -> \
Energy\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146556342516*^9, 3.707146598584819*^9}],

Cell[BoxData["\"\<After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(I2)\
;]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\\\n\\\\nCCode[NONBONDRB_\
SET_PARAMETER(dA);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\\\n\\\\\
nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\\\n\\\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ(\
));]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\\\n\\\\nCCode[\
NONBONDRB_SET_POINT(yh2,pointB,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(\
zh2,pointB,getZ());]\\\\n\\\\nnonbondRBEnergyFn -> \
Energy\\\\n\\\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.707146556343858*^9, {3.707146598585919*^9, 3.707146611575688*^9}}],

Cell[BoxData["\"\<trivialRules>> triv = {nonbondRBEnergyFn -> Energy}\>\""], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146556968987*^9, 3.707146598586694*^9}],

Cell[BoxData["\<\"trivialRules>> outs = {Energy, nonbondRBDeviation}\"\>"], \
"Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146556971044*^9, 3.707146598587427*^9}],

Cell[BoxData["\"\<Trivial rules are being removed: nonbondRBEnergyFn -> \
Energy\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.707146556972909*^9, 3.707146598588154*^9}],

Cell[BoxData["\"\<After removal: \
CCode[NONBONDRB_SET_PARAMETER(I1);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(I2)\
;]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dQ1Q2);]\\\\n\\\\nCCode[NONBONDRB_\
SET_PARAMETER(dA);]\\\\n\\\\nCCode[NONBONDRB_SET_PARAMETER(dC);]\\\\n\\\\\
nCCode[NONBONDRB_SET_POINT(xh1,pointA,getX());]\\\\n\\\\nCCode[NONBONDRB_SET_\
POINT(yh1,pointA,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(zh1,pointA,getZ(\
));]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(xh2,pointB,getX());]\\\\n\\\\nCCode[\
NONBONDRB_SET_POINT(yh2,pointB,getY());]\\\\n\\\\nCCode[NONBONDRB_SET_POINT(\
zh2,pointB,getZ());]\\\\n\\\\nnonbondRBEnergyFn -> \
Energy\\\\n\\\\nCCode[NONBONDRB_ENERGY_ACCUMULATE(Energy);]\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.707146556974464*^9, {3.707146598589217*^9, 3.7071466115847473`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing declares to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBOND_termDeclares.cc\"\>"}],
  SequenceForm["Writing declares to file: ", "_NONBOND_termDeclares.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707146557053534*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Writing code to file: \"\>", 
   "\[InvisibleSpace]", "\<\"_NONBOND_termCode.cc\"\>"}],
  SequenceForm["Writing code to file: ", "_NONBOND_termCode.cc"],
  Editable->False]], "Print",
 CellChangeTimes->{3.707146557055546*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Draw an evaluation tree for the optimized \"C\" code.  It doesn' t do \
anything useful but it looks impressive - I have got to print some of these \
on large format posters.

Inputs (independent variables and parameters) are on the left and drawn in \
Black, and outputs are on the right and also drawn in Black. Computationally \
expensive functions are highlighted in red, Plus functions are blue and Times \
functions are green.\
\>", "Subsection",
 CellChangeTimes->{{3.494844130294557*^9, 3.494844200819201*^9}, {
  3.494844239453156*^9, 3.494844307388302*^9}, {3.494844349909049*^9, 
  3.494844362349473*^9}, {3.494844417981534*^9, 3.49484444617253*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"packGraph", "[", "nonbondRBPack", "]"}]], "Input",
 CellChangeTimes->{{3.405634991753235*^9, 3.405634995403973*^9}, {
   3.4085648880849*^9, 3.408564889562644*^9}, 3.7026665440166197`*^9, 
   3.7026678792391*^9, {3.7071464544676456`*^9, 3.707146456728408*^9}, 
   3.7071465985900717`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 6.666666666666666}, {0.03, 
     15.238095238095237`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 20.}, {0.03, 45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 33.33333333333333}, {0.03, 
     76.19047619047619}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 46.66666666666666}, {0.03, 
     106.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 60.}, {0.03, 137.14285714285714`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 73.33333333333333}, {0.03, 
     167.6190476190476}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 86.66666666666666}, {0.03, 
     198.0952380952381}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 100.}, {0.03, 228.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 113.33333333333331`}, {0.03, 
     259.04761904761904`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 126.66666666666666`}, {0.03, 
     15.238095238095237`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 126.66666666666666`}, {0.03, 
     137.14285714285714`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 5.}, {0.13, 113.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 5.}, {0.13, 126.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 140.}, {0.03, 76.19047619047619}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 140.}, {0.03, 137.14285714285714`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 140.}, {0.03, 259.04761904761904`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 153.33333333333331`}, {0.03, 
     198.0952380952381}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 153.33333333333331`}, {0.03, 
     259.04761904761904`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 15.}, {0.03, 15.238095238095237`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 15.}, {0.13, 153.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 25.}, {0.03, 76.19047619047619}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 25.}, {0.13, 153.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 166.66666666666663`}, {0.03, 
     289.5238095238095}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 35.}, {0.03, 45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 35.}, {0.03, 167.6190476190476}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 35.}, {0.13, 166.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 180.}, {0.03, 106.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 180.}, {0.03, 167.6190476190476}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 180.}, {0.03, 289.5238095238095}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 193.33333333333331`}, {0.03, 
     228.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 193.33333333333331`}, {0.03, 
     289.5238095238095}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 45.}, {0.03, 45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 45.}, {0.13, 193.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 55.}, {0.03, 106.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 55.}, {0.13, 193.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 206.66666666666663`}, {0.03, 
     15.238095238095237`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 206.66666666666663`}, {0.03, 
     76.19047619047619}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 65.}, {0.03, 320.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 65.}, {0.13, 206.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 220.}, {0.03, 137.14285714285714`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 220.}, {0.03, 320.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 75.}, {0.03, 76.19047619047619}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 75.}, {0.13, 220.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 233.33333333333331`}, {0.03, 320.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 85.}, {0.03, 15.238095238095237`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 85.}, {0.03, 198.0952380952381}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 85.}, {0.13, 233.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 95.}, {0.03, 198.0952380952381}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 95.}, {0.13, 220.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 246.66666666666663`}, {0.03, 
     45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 246.66666666666663`}, {0.03, 
     106.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 246.66666666666663`}, {0.03, 
     350.4761904761904}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 260.}, {0.03, 167.6190476190476}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 260.}, {0.03, 350.4761904761904}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 105.}, {0.03, 106.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 105.}, {0.13, 260.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 273.3333333333333}, {0.03, 
     350.4761904761904}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 115.}, {0.03, 45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 115.}, {0.03, 228.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 115.}, {0.13, 273.3333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 125.}, {0.03, 228.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 125.}, {0.13, 260.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 286.66666666666663`}, {0.03, 
     380.95238095238096`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 135.}, {0.13, 286.66666666666663`}}]}, 
   
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 135.}, {0.13, 206.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 145.}, {0.03, 380.95238095238096`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 145.}, {0.13, 126.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 300.}, {0.03, 198.0952380952381}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 300.}, {0.03, 380.95238095238096`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 155.}, {0.03, 76.19047619047619}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 155.}, {0.13, 300.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 165.}, {0.03, 137.14285714285714`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 165.}, {0.13, 300.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 313.3333333333333}, {0.03, 
     106.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 313.3333333333333}, {0.03, 
     411.4285714285714}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 175.}, {0.03, 45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 175.}, {0.13, 313.3333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 326.66666666666663`}, {0.03, 
     167.6190476190476}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 326.66666666666663`}, {0.03, 
     411.4285714285714}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 185.}, {0.03, 45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 185.}, {0.13, 326.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 195.}, {0.03, 228.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 195.}, {0.13, 313.3333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 205.}, {0.03, 228.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 205.}, {0.13, 326.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 215.}, {0.13, 33.33333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 215.}, {0.13, 233.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 225.}, {0.13, 33.33333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 225.}, {0.13, 286.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 235.}, {0.13, 46.66666666666666}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 235.}, {0.13, 273.3333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 340.}, {0.03, 411.4285714285714}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 245.}, {0.13, 46.66666666666666}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 245.}, {0.13, 340.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 255.}, {0.13, 60.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 255.}, {0.13, 113.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 265.}, {0.13, 60.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 265.}, {0.13, 286.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 275.}, {0.13, 73.33333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 275.}, {0.13, 166.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 285.}, {0.13, 73.33333333333333}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 285.}, {0.13, 340.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 295.}, {0.13, 86.66666666666666}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 295.}, {0.13, 113.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 305.}, {0.13, 86.66666666666666}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 305.}, {0.13, 233.33333333333331`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 315.}, {0.13, 6.666666666666666}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 315.}, {0.13, 33.33333333333333}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 315.}, {0.13, 60.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 315.}, {0.13, 86.66666666666666}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 325.}, {0.13, 100.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 325.}, {0.13, 166.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 335.}, {0.13, 100.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 335.}, {0.13, 273.3333333333333}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 345.}, {0.13, 20.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 345.}, {0.13, 46.66666666666666}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 345.}, {0.13, 73.33333333333333}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 345.}, {0.13, 100.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 8.}, {0.22999999999999998`, 5.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 8.}, {0.22999999999999998`, 25.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 8.}, {0.22999999999999998`, 65.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 8.}, {0.22999999999999998`, 95.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 8.}, {0.22999999999999998`, 225.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 8.}, {0.22999999999999998`, 265.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 24.000000000000004`}, {0.13, 246.66666666666663`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 24.000000000000004`}, {0.22999999999999998`, 125.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 21.333333333333332`}, {
     0.22999999999999998`, 55.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 21.333333333333332`}, {0.33, 
     24.000000000000004`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 9.696969696969697}, {0.22999999999999998`,
      35.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 9.696969696969697}, {0.43, 
     21.333333333333332`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 24.615384615384617`}, {0.22999999999999998`,
      245.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 24.615384615384617`}, {0.22999999999999998`,
      285.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 24.615384615384617`}, {0.53, 
     9.696969696969697}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 40.}, {0.22999999999999998`, 75.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 40.}, {0.22999999999999998`, 85.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 40.}, {0.22999999999999998`, 145.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 40.}, {0.22999999999999998`, 155.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 40.}, {0.22999999999999998`, 255.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 40.}, {0.22999999999999998`, 295.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 56.00000000000001}, {0.13, 140.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 56.00000000000001}, {0.22999999999999998`, 15.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 56.00000000000001}, {0.22999999999999998`, 135.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 56.00000000000001}, {0.22999999999999998`, 165.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 56.00000000000001}, {0.22999999999999998`, 215.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 56.00000000000001}, {0.22999999999999998`, 305.}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[{{0.27, 72.}, {0.22999999999999998`, 315.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 88.}, {0.22999999999999998`, 185.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 88.}, {0.22999999999999998`, 195.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 64.}, {0.22999999999999998`, 115.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.37000000000000005`, 64.}, {0.33, 88.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 29.090909090909093`}, {
     0.22999999999999998`, 105.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 29.090909090909093`}, {0.43, 64.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 73.84615384615385}, {0.22999999999999998`, 
     275.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 73.84615384615385}, {0.22999999999999998`, 
     325.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 73.84615384615385}, {0.53, 
     29.090909090909093`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 104.}, {0.22999999999999998`, 175.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 104.}, {0.22999999999999998`, 205.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 106.66666666666666`}, {
     0.22999999999999998`, 45.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 106.66666666666666`}, {0.33, 104.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 48.484848484848484`}, {0.13, 180.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.47000000000000003`, 48.484848484848484`}, {0.43, 
     106.66666666666666`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 123.07692307692308`}, {0.22999999999999998`,
      235.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 123.07692307692308`}, {0.22999999999999998`,
      335.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 123.07692307692308`}, {0.53, 
     48.484848484848484`}}]}, 
   {RGBColor[1, 0, 0], LineBox[{{0.27, 120.}, {0.22999999999999998`, 345.}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 355.}, {0.13, 166.66666666666663`}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 365.}, {0.13, 273.3333333333333}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 375.}, {0.13, 340.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 149.33333333333334`}, {0.33, 72.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 67.87878787878788}, {0.33, 8.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 67.87878787878788}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 87.27272727272727}, {0.33, 40.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 87.27272727272727}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 106.66666666666669`}, {0.33, 
     56.00000000000001}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 106.66666666666669`}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.37000000000000005`, 192.}, {0.33, 120.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 12.8}, {0.63, 24.615384615384617`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 12.8}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 38.4}, {0.63, 73.84615384615385}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 38.4}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 64.}, {0.63, 123.07692307692308`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 64.}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 353.33333333333326`}, {0.03, 
     441.9047619047619}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 366.66666666666663`}, {0.03, 
     472.38095238095235`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 380.}, {0.03, 502.85714285714283`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.17, 385.}, {0.13, 353.33333333333326`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 385.}, {0.03, 533.3333333333333}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 172.30769230769232`}, {0.53, 
     87.27272727272727}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 172.30769230769232`}, {0.22999999999999998`,
      385.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.67, 89.60000000000001}, {0.22999999999999998`, 355.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.67, 89.60000000000001}, {0.63, 172.30769230769232`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 11.428571428571427`}, {0.03, 259.04761904761904`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 11.428571428571427`}, {0.73, 89.60000000000001}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 16.842105263157894`}, {0.73, 38.4}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 16.842105263157894`}, {0.8300000000000001, 
     11.428571428571427`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.17, 395.}, {0.13, 366.66666666666663`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 395.}, {0.03, 563.8095238095239}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 221.53846153846155`}, {0.53, 
     106.66666666666669`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 221.53846153846155`}, {0.22999999999999998`,
      395.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.67, 115.19999999999999`}, {0.22999999999999998`, 365.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.67, 115.19999999999999`}, {0.63, 221.53846153846155`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 34.285714285714285`}, {0.03, 320.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 34.285714285714285`}, {0.73, 115.19999999999999`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 50.526315789473685`}, {0.73, 64.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 50.526315789473685`}, {0.8300000000000001, 
     34.285714285714285`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 405.}, {0.13, 380.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 405.}, {0.03, 594.2857142857142}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 270.76923076923083`}, {0.53, 
     67.87878787878788}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 270.76923076923083`}, {0.22999999999999998`,
      405.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.67, 140.8}, {0.22999999999999998`, 375.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.67, 140.8}, {0.63, 270.76923076923083`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 57.14285714285714}, {0.03, 380.95238095238096`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 57.14285714285714}, {0.73, 140.8}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 84.21052631578947}, {0.73, 12.8}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 84.21052631578947}, {0.8300000000000001, 
     57.14285714285714}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 32.}, {0.9300000000000002, 16.842105263157894`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 96.00000000000001}, {0.9300000000000002, 
     50.526315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 160.}, {0.9300000000000002, 84.21052631578947}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.07, 11.851851851851851`}, {1.03, 32.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.07, 11.851851851851851`}, {1.03, 96.00000000000001}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.07, 11.851851851851851`}, {1.03, 160.}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[{{1.17, 21.333333333333332`}, {1.1300000000000001`, 
     11.851851851851851`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 40.}, {1.2300000000000002`, 21.333333333333332`}}]}, 
   {GrayLevel[0], 
    LineBox[{{1.27, 120.}, {1.2300000000000002`, 21.333333333333332`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 29.090909090909093`}, {1.33, 40.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.37, 29.090909090909093`}, {1.33, 120.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 53.33333333333333}, {1.4300000000000002`, 
     29.090909090909093`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 87.27272727272727}, {1.33, 120.}}]}, 
   {GrayLevel[0], LineBox[{{1.37, 145.45454545454547`}, {1.33, 120.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 160.}, {1.4300000000000002`, 87.27272727272727}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 160.}, {1.4300000000000002`, 145.45454545454547`}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[{{1.17, 64.}, {1.1300000000000001`, 11.851851851851851`}}]}, 
   {RGBColor[1, 0, 0], LineBox[{{1.27, 200.}, {1.2300000000000002`, 64.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 32.}, {1.4300000000000002`, 203.63636363636363`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 32.}, {1.5300000000000002`, 53.33333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 96.00000000000001}, {1.4300000000000002`, 
     261.8181818181818}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 96.00000000000001}, {1.5300000000000002`, 160.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.37, 320.}, {1.2300000000000002`, 106.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 320.}, {1.33, 200.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.67, 16.842105263157894`}, {1.6300000000000001`, 32.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.67, 16.842105263157894`}, {1.6300000000000001`, 
     96.00000000000001}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.67, 16.842105263157894`}, {1.4300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 136.}, {0.13, 73.33333333333333}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 136.}, {0.22999999999999998`, 355.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 152.}, {0.13, 100.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 152.}, {0.22999999999999998`, 355.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 168.}, {0.13, 46.66666666666666}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 168.}, {0.22999999999999998`, 365.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 184.00000000000003`}, {0.13, 100.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 184.00000000000003`}, {0.22999999999999998`, 365.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 200.}, {0.13, 46.66666666666666}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 200.}, {0.22999999999999998`, 375.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 216.}, {0.13, 73.33333333333333}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 216.}, {0.22999999999999998`, 375.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 415.}, {0.03, 137.14285714285714`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 415.}, {0.13, 113.33333333333331`}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 425.}, {0.13, 153.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 393.33333333333326`}, {0.03, 
     76.19047619047619}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 393.33333333333326`}, {0.03, 320.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 435.}, {0.03, 198.0952380952381}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 435.}, {0.13, 233.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 445.}, {0.03, 76.19047619047619}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 445.}, {0.13, 286.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 406.66666666666663`}, {0.03, 
     137.14285714285714`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 406.66666666666663`}, {0.03, 
     380.95238095238096`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.5700000000000001, 320.}, {0.33, 136.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.5700000000000001, 320.}, {0.33, 152.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 320.}, {0.53, 29.090909090909093`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 369.2307692307693}, {0.33, 168.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 369.2307692307693}, {0.33, 
     184.00000000000003`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 369.2307692307693}, {0.53, 
     48.484848484848484`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 418.46153846153845`}, {0.33, 200.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 418.46153846153845`}, {0.33, 216.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.5700000000000001, 418.46153846153845`}, {0.53, 
     9.696969696969697}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.37000000000000005`, 234.66666666666666`}, {0.33, 72.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 232.00000000000003`}, {0.22999999999999998`, 415.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 232.00000000000003`}, {0.13, 393.33333333333326`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 248.}, {0.22999999999999998`, 425.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 248.}, {0.22999999999999998`, 445.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 264.}, {0.22999999999999998`, 435.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 264.}, {0.13, 406.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 166.4}, {0.63, 320.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 166.4}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 192.}, {0.63, 369.2307692307693}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 192.}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 217.60000000000002`}, {0.63, 418.46153846153845`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 217.60000000000002`}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 126.06060606060606`}, {0.43, 
     234.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.5700000000000001, 467.69230769230774`}, {0.33, 8.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.5700000000000001, 467.69230769230774`}, {0.53, 
     126.06060606060606`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 243.2}, {0.03, 15.238095238095237`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 243.2}, {0.63, 467.69230769230774`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.5700000000000001, 516.9230769230769}, {0.33, 40.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.5700000000000001, 516.9230769230769}, {0.53, 
     126.06060606060606`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 268.8}, {0.03, 15.238095238095237`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 268.8}, {0.63, 516.9230769230769}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.5700000000000001, 566.1538461538462}, {0.33, 
     56.00000000000001}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.5700000000000001, 566.1538461538462}, {0.53, 
     126.06060606060606`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 294.40000000000003`}, {0.03, 15.238095238095237`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 294.40000000000003`}, {0.63, 566.1538461538462}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 145.45454545454547`}, {0.33, 
     232.00000000000003`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 145.45454545454547`}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 164.84848484848484`}, {0.33, 248.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 164.84848484848484`}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 184.24242424242425`}, {0.33, 264.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 184.24242424242425`}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.87, 117.89473684210526`}, {0.73, 166.4}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 117.89473684210526`}, {0.8300000000000001, 
     11.428571428571427`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 151.57894736842104`}, {0.73, 192.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 151.57894736842104`}, {0.8300000000000001, 
     34.285714285714285`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 185.26315789473685`}, {0.73, 217.60000000000002`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 185.26315789473685`}, {0.8300000000000001, 
     57.14285714285714}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 80.}, {0.73, 243.2}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 80.}, {0.53, 145.45454545454547`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 102.85714285714285`}, {0.73, 294.40000000000003`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 102.85714285714285`}, {0.53, 164.84848484848484`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 125.71428571428571`}, {0.73, 268.8}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 125.71428571428571`}, {0.53, 184.24242424242425`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 224.00000000000003`}, {0.9300000000000002, 
     117.89473684210526`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 288.}, {0.9300000000000002, 151.57894736842104`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 352.}, {0.9300000000000002, 185.26315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 416.}, {0.9300000000000002, 185.26315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 35.55555555555556}, {0.8300000000000001, 80.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 35.55555555555556}, {1.03, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 480.}, {0.9300000000000002, 151.57894736842104`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 59.25925925925925}, {0.8300000000000001, 
     102.85714285714285`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 59.25925925925925}, {1.03, 480.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.97, 544.}, {0.9300000000000002, 117.89473684210526`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 82.96296296296296}, {0.8300000000000001, 
     125.71428571428571`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 82.96296296296296}, {1.03, 544.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.07, 106.66666666666666`}, {1.03, 224.00000000000003`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.07, 106.66666666666666`}, {1.03, 288.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.07, 106.66666666666666`}, {1.03, 352.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 149.33333333333334`}, {1.1300000000000001`, 
     35.55555555555556}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 149.33333333333334`}, {1.1300000000000001`, 
     59.25925925925925}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 149.33333333333334`}, {1.1300000000000001`, 
     82.96296296296296}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[{{1.17, 192.}, {1.1300000000000001`, 106.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.27, 280.}, {1.2300000000000002`, 192.}}]}, 
   {GrayLevel[0], LineBox[{{1.27, 360.}, {1.2300000000000002`, 192.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 378.1818181818182}, {1.33, 280.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 378.1818181818182}, {1.33, 360.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 436.3636363636364}, {1.33, 280.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 266.66666666666663`}, {1.4300000000000002`, 
     378.1818181818182}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 266.66666666666663`}, {1.4300000000000002`, 
     436.3636363636364}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 494.5454545454545}, {1.33, 360.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 373.33333333333326`}, {1.4300000000000002`, 
     494.5454545454545}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[{{1.17, 234.66666666666666`}, {1.1300000000000001`, 
     106.66666666666666`}}]}, 
   {GrayLevel[0], 
    LineBox[{{1.17, 277.33333333333337`}, {1.1300000000000001`, 
     106.66666666666666`}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[{{1.27, 440.}, {1.2300000000000002`, 234.66666666666666`}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[{{1.27, 520.}, {1.2300000000000002`, 277.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 552.7272727272727}, {1.33, 440.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.37, 552.7272727272727}, {1.33, 520.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 160.}, {1.4300000000000002`, 203.63636363636363`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 160.}, {1.5300000000000002`, 266.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 50.526315789473685`}, {1.6300000000000001`, 160.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 11.03448275862069}, {1.2300000000000002`, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 11.03448275862069}, {1.7300000000000002`, 
     50.526315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 224.00000000000003`}, {1.4300000000000002`, 
     261.8181818181818}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 224.00000000000003`}, {1.5300000000000002`, 
     373.33333333333326`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 84.21052631578947}, {1.6300000000000001`, 
     224.00000000000003`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 33.10344827586207}, {1.2300000000000002`, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 33.10344827586207}, {1.7300000000000002`, 
     84.21052631578947}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 480.}, {1.2300000000000002`, 106.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.47, 480.}, {1.4300000000000002`, 552.7272727272727}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 288.}, {1.5300000000000002`, 480.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 117.89473684210526`}, {1.2300000000000002`, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 117.89473684210526`}, {1.6300000000000001`, 288.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 21.333333333333332`}, {1.83, 11.03448275862069}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 21.333333333333332`}, {1.83, 33.10344827586207}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 21.333333333333332`}, {1.7300000000000002`, 
     117.89473684210526`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.97, 21.333333333333332`}, {1.9300000000000002`, 
     21.333333333333332`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 420.}, {0.03, 137.14285714285714`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 420.}, {0.03, 259.04761904761904`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 433.33333333333326`}, {0.03, 
     15.238095238095237`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 433.33333333333326`}, {0.03, 320.}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 455.}, {0.13, 220.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 465.}, {0.03, 15.238095238095237`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 465.}, {0.13, 286.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 446.66666666666663`}, {0.03, 
     76.19047619047619}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 446.66666666666663`}, {0.03, 
     380.95238095238096`}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 475.}, {0.13, 300.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 485.}, {0.13, 393.33333333333326`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 280.}, {0.22999999999999998`, 425.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 280.}, {0.13, 433.33333333333326`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 280.}, {0.13, 446.66666666666663`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 296.}, {0.22999999999999998`, 455.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 296.}, {0.22999999999999998`, 475.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 312.}, {0.13, 420.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 312.}, {0.22999999999999998`, 465.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 312.}, {0.22999999999999998`, 485.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 320.}, {0.03, 76.19047619047619}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 320.}, {0.63, 467.69230769230774`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 345.6}, {0.03, 76.19047619047619}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 345.6}, {0.63, 516.9230769230769}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 371.2}, {0.03, 76.19047619047619}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 371.2}, {0.63, 566.1538461538462}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 203.63636363636363`}, {0.33, 280.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 203.63636363636363`}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 223.03030303030306`}, {0.33, 296.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 223.03030303030306`}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 242.42424242424244`}, {0.33, 312.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 242.42424242424244`}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 148.57142857142856`}, {0.73, 320.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 148.57142857142856`}, {0.53, 203.63636363636363`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 171.42857142857142`}, {0.73, 345.6}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 171.42857142857142`}, {0.53, 223.03030303030306`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 194.28571428571428`}, {0.73, 371.2}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 194.28571428571428`}, {0.53, 242.42424242424244`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 130.37037037037035`}, {0.8300000000000001, 
     148.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 130.37037037037035`}, {1.03, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 154.07407407407408`}, {0.8300000000000001, 
     171.42857142857142`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 154.07407407407408`}, {1.03, 544.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 177.77777777777777`}, {0.8300000000000001, 
     194.28571428571428`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 177.77777777777777`}, {1.03, 480.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 320.}, {1.1300000000000001`, 130.37037037037035`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 320.}, {1.1300000000000001`, 154.07407407407408`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 320.}, {1.1300000000000001`, 177.77777777777777`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 55.17241379310345}, {1.2300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 55.17241379310345}, {1.7300000000000002`, 
     50.526315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 77.24137931034483}, {1.2300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 77.24137931034483}, {1.7300000000000002`, 
     84.21052631578947}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 151.57894736842104`}, {1.2300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 151.57894736842104`}, {1.6300000000000001`, 288.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.87, 64.}, {1.83, 55.17241379310345}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.87, 64.}, {1.83, 77.24137931034483}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 64.}, {1.7300000000000002`, 151.57894736842104`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.97, 64.}, {1.9300000000000002`, 64.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 495.}, {0.03, 15.238095238095237`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 495.}, {0.13, 113.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 460.}, {0.03, 76.19047619047619}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 460.}, {0.03, 259.04761904761904`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 473.33333333333326`}, {0.03, 
     198.0952380952381}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 473.33333333333326`}, {0.03, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 486.66666666666663`}, {0.03, 
     15.238095238095237`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 486.66666666666663`}, {0.03, 
     380.95238095238096`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 505.}, {0.13, 406.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 515.}, {0.13, 420.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 328.00000000000006`}, {0.22999999999999998`, 475.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 328.00000000000006`}, {0.13, 460.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 344.}, {0.22999999999999998`, 495.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 344.}, {0.13, 473.33333333333326`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 344.}, {0.22999999999999998`, 505.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 360.}, {0.13, 393.33333333333326`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 360.}, {0.13, 486.66666666666663`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 360.}, {0.22999999999999998`, 515.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 396.8}, {0.03, 137.14285714285714`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 396.8}, {0.63, 467.69230769230774`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 422.40000000000003`}, {0.03, 137.14285714285714`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 422.40000000000003`}, {0.63, 516.9230769230769}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 448.00000000000006`}, {0.03, 137.14285714285714`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 448.00000000000006`}, {0.63, 566.1538461538462}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 261.8181818181818}, {0.33, 
     328.00000000000006`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 261.8181818181818}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 281.2121212121212}, {0.33, 344.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 281.2121212121212}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 300.6060606060606}, {0.33, 360.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 300.6060606060606}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 217.1428571428571}, {0.73, 448.00000000000006`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 217.1428571428571}, {0.53, 261.8181818181818}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 240.}, {0.73, 396.8}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 240.}, {0.53, 281.2121212121212}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 262.85714285714283`}, {0.73, 422.40000000000003`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 262.85714285714283`}, {0.53, 300.6060606060606}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 201.48148148148147`}, {0.8300000000000001, 
     217.1428571428571}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 201.48148148148147`}, {1.03, 480.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 225.1851851851852}, {0.8300000000000001, 240.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 225.1851851851852}, {1.03, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 248.88888888888886`}, {0.8300000000000001, 
     262.85714285714283`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 248.88888888888886`}, {1.03, 544.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 362.66666666666663`}, {1.1300000000000001`, 
     201.48148148148147`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 362.66666666666663`}, {1.1300000000000001`, 
     225.1851851851852}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 362.66666666666663`}, {1.1300000000000001`, 
     248.88888888888886`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 99.3103448275862}, {1.2300000000000002`, 
     362.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 99.3103448275862}, {1.7300000000000002`, 
     50.526315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 121.37931034482759`}, {1.2300000000000002`, 
     362.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 121.37931034482759`}, {1.7300000000000002`, 
     84.21052631578947}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 185.26315789473685`}, {1.2300000000000002`, 
     362.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 185.26315789473685`}, {1.6300000000000001`, 288.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 106.66666666666666`}, {1.83, 99.3103448275862}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 106.66666666666666`}, {1.83, 121.37931034482759`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 106.66666666666666`}, {1.7300000000000002`, 
     185.26315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.97, 106.66666666666666`}, {1.9300000000000002`, 
     106.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 500.}, {0.03, 15.238095238095237`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 500.}, {0.03, 259.04761904761904`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 513.3333333333333}, {0.03, 
     76.19047619047619}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 513.3333333333333}, {0.03, 
     380.95238095238096`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 376.}, {0.22999999999999998`, 425.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 525.}, {0.13, 433.33333333333326`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.17, 535.}, {0.13, 473.33333333333326`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 392.}, {0.22999999999999998`, 455.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 392.}, {0.13, 460.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 277.33333333333337`}, {0.13, 
     513.3333333333333}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 277.33333333333337`}, {0.33, 376.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 277.33333333333337`}, {
     0.22999999999999998`, 525.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 408.00000000000006`}, {0.13, 406.66666666666663`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 408.00000000000006`}, {0.13, 500.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 408.00000000000006`}, {0.22999999999999998`, 535.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 473.6}, {0.03, 198.0952380952381}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 473.6}, {0.63, 467.69230769230774`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 499.20000000000005`}, {0.03, 198.0952380952381}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 499.20000000000005`}, {0.63, 516.9230769230769}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 524.8000000000001}, {0.03, 198.0952380952381}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.67, 524.8000000000001}, {0.63, 566.1538461538462}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.47000000000000003`, 320.}, {0.33, 392.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 320.}, {0.43, 149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 339.3939393939394}, {0.43, 
     277.33333333333337`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 339.3939393939394}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 358.7878787878788}, {0.33, 
     408.00000000000006`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 358.7878787878788}, {0.43, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.77, 285.71428571428567`}, {0.73, 473.6}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 285.71428571428567`}, {0.53, 320.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 308.57142857142856`}, {0.73, 499.20000000000005`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 308.57142857142856`}, {0.53, 339.3939393939394}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 331.4285714285714}, {0.73, 524.8000000000001}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.77, 331.4285714285714}, {0.53, 358.7878787878788}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 272.5925925925926}, {0.8300000000000001, 
     285.71428571428567`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 272.5925925925926}, {1.03, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 296.29629629629625`}, {0.8300000000000001, 
     308.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 296.29629629629625`}, {1.03, 544.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 320.}, {0.8300000000000001, 331.4285714285714}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 320.}, {1.03, 480.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 405.3333333333333}, {1.1300000000000001`, 
     272.5925925925926}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 405.3333333333333}, {1.1300000000000001`, 
     296.29629629629625`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 405.3333333333333}, {1.1300000000000001`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 143.44827586206895`}, {1.2300000000000002`, 
     405.3333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 143.44827586206895`}, {1.7300000000000002`, 
     50.526315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 165.51724137931035`}, {1.2300000000000002`, 
     405.3333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 165.51724137931035`}, {1.7300000000000002`, 
     84.21052631578947}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 218.9473684210526}, {1.2300000000000002`, 
     405.3333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 218.9473684210526}, {1.6300000000000001`, 288.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 149.33333333333334`}, {1.83, 143.44827586206895`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 149.33333333333334`}, {1.83, 165.51724137931035`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 149.33333333333334`}, {1.7300000000000002`, 
     218.9473684210526}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.97, 149.33333333333334`}, {1.9300000000000002`, 
     149.33333333333334`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 252.63157894736844`}, {1.6300000000000001`, 160.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 187.58620689655172`}, {0.9300000000000002, 
     117.89473684210526`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 187.58620689655172`}, {1.7300000000000002`, 
     252.63157894736844`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 286.31578947368416`}, {1.6300000000000001`, 
     224.00000000000003`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 209.65517241379308`}, {0.9300000000000002, 
     117.89473684210526`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 209.65517241379308`}, {1.7300000000000002`, 
     286.31578947368416`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 352.}, {1.5300000000000002`, 480.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 320.}, {0.9300000000000002, 117.89473684210526`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 320.}, {1.6300000000000001`, 352.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 192.}, {1.83, 187.58620689655172`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 192.}, {1.83, 209.65517241379308`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 192.}, {1.7300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.97, 192.}, {1.9300000000000002`, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 231.72413793103448`}, {0.9300000000000002, 
     151.57894736842104`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 231.72413793103448`}, {1.7300000000000002`, 
     252.63157894736844`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 253.79310344827587`}, {0.9300000000000002, 
     151.57894736842104`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 253.79310344827587`}, {1.7300000000000002`, 
     286.31578947368416`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 353.6842105263157}, {0.9300000000000002, 
     151.57894736842104`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 353.6842105263157}, {1.6300000000000001`, 352.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 234.66666666666666`}, {1.83, 231.72413793103448`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 234.66666666666666`}, {1.83, 253.79310344827587`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 234.66666666666666`}, {1.7300000000000002`, 
     353.6842105263157}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.97, 234.66666666666666`}, {1.9300000000000002`, 
     234.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 275.8620689655172}, {0.9300000000000002, 
     185.26315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 275.8620689655172}, {1.7300000000000002`, 
     252.63157894736844`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 297.9310344827586}, {0.9300000000000002, 
     185.26315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 297.9310344827586}, {1.7300000000000002`, 
     286.31578947368416`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 387.36842105263156`}, {0.9300000000000002, 
     185.26315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 387.36842105263156`}, {1.6300000000000001`, 352.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 277.33333333333337`}, {1.83, 275.8620689655172}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 277.33333333333337`}, {1.83, 297.9310344827586}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 277.33333333333337`}, {1.7300000000000002`, 
     387.36842105263156`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.97, 277.33333333333337`}, {1.9300000000000002`, 
     277.33333333333337`}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 545.}, {0.13, 193.33333333333331`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 526.6666666666666}, {0.03, 
     106.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 526.6666666666666}, {0.03, 
     350.4761904761904}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 555.}, {0.13, 326.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 424.00000000000006`}, {0.03, 167.6190476190476}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 424.00000000000006`}, {0.22999999999999998`, 355.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 440.}, {0.03, 228.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 440.}, {0.22999999999999998`, 365.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.27, 456.}, {0.03, 106.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 456.}, {0.22999999999999998`, 375.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.37000000000000005`, 320.}, {0.33, 120.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 362.66666666666663`}, {0.13, 
     526.6666666666666}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 362.66666666666663`}, {0.33, 
     424.00000000000006`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 405.3333333333333}, {0.22999999999999998`,
      555.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 405.3333333333333}, {0.33, 440.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 448.}, {0.22999999999999998`, 545.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.37000000000000005`, 448.}, {0.33, 456.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 378.1818181818182}, {0.43, 320.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 550.4}, {0.63, 320.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 550.4}, {0.53, 378.1818181818182}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 354.2857142857142}, {0.03, 45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 354.2857142857142}, {0.73, 550.4}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 576.}, {0.63, 369.2307692307693}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 576.}, {0.53, 378.1818181818182}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 377.14285714285717`}, {0.03, 45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 377.14285714285717`}, {0.73, 576.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 601.6}, {0.63, 418.46153846153845`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.67, 601.6}, {0.53, 378.1818181818182}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 400.}, {0.03, 45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 400.}, {0.73, 601.6}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 397.57575757575756`}, {0.43, 
     362.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 397.57575757575756`}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 416.96969696969694`}, {0.43, 
     405.3333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 416.96969696969694`}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 436.3636363636364}, {0.43, 448.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 436.3636363636364}, {0.43, 192.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 218.9473684210526}, {0.8300000000000001, 400.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 218.9473684210526}, {0.53, 397.57575757575756`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 252.63157894736844`}, {0.8300000000000001, 
     354.2857142857142}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 252.63157894736844`}, {0.53, 416.96969696969694`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 286.31578947368416`}, {0.8300000000000001, 
     377.14285714285717`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 286.31578947368416`}, {0.53, 436.3636363636364}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 343.7037037037037}, {0.9300000000000002, 
     218.9473684210526}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 343.7037037037037}, {1.03, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 367.4074074074074}, {0.9300000000000002, 
     252.63157894736844`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 367.4074074074074}, {1.03, 544.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 391.1111111111111}, {0.9300000000000002, 
     286.31578947368416`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 391.1111111111111}, {1.03, 480.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 448.}, {1.1300000000000001`, 343.7037037037037}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 448.}, {1.1300000000000001`, 367.4074074074074}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 448.}, {1.1300000000000001`, 391.1111111111111}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 320.}, {1.2300000000000002`, 448.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 320.}, {1.7300000000000002`, 50.526315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 342.06896551724134`}, {1.2300000000000002`, 448.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 342.06896551724134`}, {1.7300000000000002`, 
     84.21052631578947}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 421.05263157894734`}, {1.2300000000000002`, 448.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 421.05263157894734`}, {1.6300000000000001`, 288.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.87, 320.}, {1.83, 320.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 320.}, {1.83, 342.06896551724134`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 320.}, {1.7300000000000002`, 421.05263157894734`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.97, 320.}, {1.9300000000000002`, 320.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 540.}, {0.03, 167.6190476190476}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 540.}, {0.03, 289.5238095238095}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 553.3333333333333}, {0.03, 
     45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 553.3333333333333}, {0.03, 
     350.4761904761904}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 565.}, {0.13, 260.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 575.}, {0.13, 313.3333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 566.6666666666666}, {0.03, 
     228.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 566.6666666666666}, {0.03, 
     411.4285714285714}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 472.}, {0.03, 45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 472.}, {0.22999999999999998`, 375.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 585.}, {0.13, 526.6666666666666}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 488.00000000000006`}, {0.22999999999999998`, 545.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 488.00000000000006`}, {0.13, 553.3333333333333}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 488.00000000000006`}, {0.22999999999999998`, 575.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 504.00000000000006`}, {0.22999999999999998`, 565.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.27, 504.00000000000006`}, {0.13, 566.6666666666666}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 490.66666666666663`}, {0.13, 540.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 490.66666666666663`}, {0.33, 472.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 490.66666666666663`}, {
     0.22999999999999998`, 585.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 422.85714285714283`}, {0.03, 106.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 422.85714285714283`}, {0.73, 550.4}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 445.71428571428567`}, {0.03, 106.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 445.71428571428567`}, {0.73, 576.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 468.57142857142856`}, {0.03, 106.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 468.57142857142856`}, {0.73, 601.6}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 455.75757575757575`}, {0.33, 
     488.00000000000006`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 455.75757575757575`}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 475.1515151515151}, {0.33, 
     504.00000000000006`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 475.1515151515151}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 494.5454545454545}, {0.43, 
     490.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 494.5454545454545}, {0.43, 192.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 320.}, {0.8300000000000001, 468.57142857142856`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 320.}, {0.53, 455.75757575757575`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 353.6842105263157}, {0.8300000000000001, 
     422.85714285714283`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 353.6842105263157}, {0.53, 475.1515151515151}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 387.36842105263156`}, {0.8300000000000001, 
     445.71428571428567`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 387.36842105263156`}, {0.53, 494.5454545454545}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 414.8148148148148}, {0.9300000000000002, 320.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 414.8148148148148}, {1.03, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 438.5185185185185}, {0.9300000000000002, 
     353.6842105263157}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 438.5185185185185}, {1.03, 544.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 462.22222222222223`}, {0.9300000000000002, 
     387.36842105263156`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 462.22222222222223`}, {1.03, 480.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 490.66666666666663`}, {1.1300000000000001`, 
     414.8148148148148}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 490.66666666666663`}, {1.1300000000000001`, 
     438.5185185185185}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 490.66666666666663`}, {1.1300000000000001`, 
     462.22222222222223`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 364.1379310344828}, {1.2300000000000002`, 
     490.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 364.1379310344828}, {1.7300000000000002`, 
     50.526315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 386.2068965517241}, {1.2300000000000002`, 
     490.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 386.2068965517241}, {1.7300000000000002`, 
     84.21052631578947}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 454.7368421052631}, {1.2300000000000002`, 
     490.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 454.7368421052631}, {1.6300000000000001`, 288.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 362.66666666666663`}, {1.83, 364.1379310344828}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 362.66666666666663`}, {1.83, 386.2068965517241}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 362.66666666666663`}, {1.7300000000000002`, 
     454.7368421052631}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.97, 362.66666666666663`}, {1.9300000000000002`, 
     362.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 580.}, {0.03, 106.66666666666666`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 580.}, {0.03, 289.5238095238095}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 593.3333333333333}, {0.03, 
     228.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 593.3333333333333}, {0.03, 
     350.4761904761904}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 606.6666666666666}, {0.03, 
     45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 606.6666666666666}, {0.03, 
     411.4285714285714}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 520.}, {0.03, 45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 520.}, {0.22999999999999998`, 355.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 536.}, {0.22999999999999998`, 555.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 595.}, {0.13, 540.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 605.}, {0.13, 566.6666666666666}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.17, 605.}, {0.13, 580.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 533.3333333333334}, {0.13, 
     593.3333333333333}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 533.3333333333334}, {0.33, 520.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 533.3333333333334}, {0.33, 536.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 552.}, {0.13, 526.6666666666666}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 552.}, {0.13, 606.6666666666666}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 552.}, {0.22999999999999998`, 595.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 491.4285714285714}, {0.03, 167.6190476190476}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 491.4285714285714}, {0.73, 550.4}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 514.2857142857142}, {0.03, 167.6190476190476}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 514.2857142857142}, {0.73, 576.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 537.1428571428571}, {0.03, 167.6190476190476}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 537.1428571428571}, {0.73, 601.6}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 513.939393939394}, {0.22999999999999998`, 
     605.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 513.939393939394}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 533.3333333333334}, {0.43, 
     533.3333333333334}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 533.3333333333334}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 552.7272727272727}, {0.33, 552.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 552.7272727272727}, {0.43, 192.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 421.05263157894734`}, {0.8300000000000001, 
     514.2857142857142}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 421.05263157894734`}, {0.53, 513.939393939394}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 454.7368421052631}, {0.8300000000000001, 
     537.1428571428571}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 454.7368421052631}, {0.53, 533.3333333333334}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 488.4210526315789}, {0.8300000000000001, 
     491.4285714285714}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 488.4210526315789}, {0.53, 552.7272727272727}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 485.92592592592587`}, {0.9300000000000002, 
     421.05263157894734`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 485.92592592592587`}, {1.03, 480.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 509.6296296296296}, {0.9300000000000002, 
     454.7368421052631}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 509.6296296296296}, {1.03, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 533.3333333333333}, {0.9300000000000002, 
     488.4210526315789}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 533.3333333333333}, {1.03, 544.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 533.3333333333334}, {1.1300000000000001`, 
     485.92592592592587`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 533.3333333333334}, {1.1300000000000001`, 
     509.6296296296296}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 533.3333333333334}, {1.1300000000000001`, 
     533.3333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 408.27586206896547`}, {1.2300000000000002`, 
     533.3333333333334}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 408.27586206896547`}, {1.7300000000000002`, 
     50.526315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 430.3448275862069}, {1.2300000000000002`, 
     533.3333333333334}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 430.3448275862069}, {1.7300000000000002`, 
     84.21052631578947}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 488.4210526315789}, {1.2300000000000002`, 
     533.3333333333334}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 488.4210526315789}, {1.6300000000000001`, 288.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 405.3333333333333}, {1.83, 408.27586206896547`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 405.3333333333333}, {1.83, 430.3448275862069}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 405.3333333333333}, {1.7300000000000002`, 
     488.4210526315789}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.97, 405.3333333333333}, {1.9300000000000002`, 
     405.3333333333333}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 620.}, {0.03, 45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.06999999999999999, 620.}, {0.03, 289.5238095238095}}]}, 
   {GrayLevel[0], LineBox[{{0.17, 615.}, {0.13, 313.3333333333333}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 568.}, {0.03, 45.71428571428571}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 568.}, {0.22999999999999998`, 365.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.27, 584.}, {0.22999999999999998`, 545.}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.17, 625.}, {0.13, 593.3333333333333}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 600.}, {0.22999999999999998`, 565.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 600.}, {0.13, 580.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.37000000000000005`, 576.}, {0.22999999999999998`, 615.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.37000000000000005`, 576.}, {0.33, 568.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.37000000000000005`, 576.}, {0.33, 584.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 616.}, {0.22999999999999998`, 555.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 616.}, {0.13, 620.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{0.27, 616.}, {0.22999999999999998`, 625.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 560.}, {0.03, 228.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 560.}, {0.73, 550.4}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 582.8571428571429}, {0.03, 228.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 582.8571428571429}, {0.73, 576.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.77, 605.7142857142857}, {0.03, 228.57142857142856`}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{0.77, 605.7142857142857}, {0.73, 601.6}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 572.1212121212121}, {0.33, 600.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 572.1212121212121}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 591.5151515151515}, {0.43, 576.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 591.5151515151515}, {0.43, 192.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 610.909090909091}, {0.33, 616.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{0.47000000000000003`, 610.909090909091}, {0.43, 192.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 522.1052631578947}, {0.8300000000000001, 
     605.7142857142857}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 522.1052631578947}, {0.53, 572.1212121212121}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 555.7894736842105}, {0.8300000000000001, 560.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 555.7894736842105}, {0.53, 591.5151515151515}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 589.4736842105262}, {0.8300000000000001, 
     582.8571428571429}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{0.87, 589.4736842105262}, {0.53, 610.909090909091}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 557.0370370370371}, {0.9300000000000002, 
     522.1052631578947}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 557.0370370370371}, {1.03, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 580.7407407407406}, {0.9300000000000002, 
     555.7894736842105}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 580.7407407407406}, {1.03, 544.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.07, 604.4444444444445}, {0.9300000000000002, 
     589.4736842105262}}]}, 
   {RGBColor[0, 1, 0], LineBox[{{1.07, 604.4444444444445}, {1.03, 480.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 576.}, {1.1300000000000001`, 557.0370370370371}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 576.}, {1.1300000000000001`, 580.7407407407406}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.17, 576.}, {1.1300000000000001`, 604.4444444444445}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 452.41379310344826`}, {1.2300000000000002`, 576.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 452.41379310344826`}, {1.7300000000000002`, 
     50.526315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 474.48275862068965`}, {1.2300000000000002`, 576.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 474.48275862068965`}, {1.7300000000000002`, 
     84.21052631578947}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 522.1052631578947}, {1.2300000000000002`, 576.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 522.1052631578947}, {1.6300000000000001`, 288.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 448.}, {1.83, 452.41379310344826`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 448.}, {1.83, 474.48275862068965`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 448.}, {1.7300000000000002`, 522.1052631578947}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.97, 448.}, {1.9300000000000002`, 448.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 555.7894736842105}, {1.6300000000000001`, 160.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 496.55172413793105`}, {0.9300000000000002, 
     117.89473684210526`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 496.55172413793105`}, {1.7300000000000002`, 
     555.7894736842105}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.67, 589.4736842105262}, {1.6300000000000001`, 
     224.00000000000003`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 518.6206896551723}, {0.9300000000000002, 
     117.89473684210526`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 518.6206896551723}, {1.7300000000000002`, 
     589.4736842105262}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 416.}, {0.9300000000000002, 117.89473684210526`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 416.}, {1.5300000000000002`, 480.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 490.66666666666663`}, {1.83, 496.55172413793105`}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 490.66666666666663`}, {1.83, 518.6206896551723}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 490.66666666666663`}, {1.6300000000000001`, 416.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.97, 490.66666666666663`}, {1.9300000000000002`, 
     490.66666666666663`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 540.6896551724138}, {0.9300000000000002, 
     151.57894736842104`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 540.6896551724138}, {1.7300000000000002`, 
     555.7894736842105}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 562.7586206896551}, {0.9300000000000002, 
     151.57894736842104`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 562.7586206896551}, {1.7300000000000002`, 
     589.4736842105262}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 480.}, {0.9300000000000002, 151.57894736842104`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 480.}, {1.5300000000000002`, 480.}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 533.3333333333334}, {1.83, 540.6896551724138}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 533.3333333333334}, {1.83, 562.7586206896551}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 533.3333333333334}, {1.6300000000000001`, 480.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.97, 533.3333333333334}, {1.9300000000000002`, 
     533.3333333333334}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 584.8275862068965}, {0.9300000000000002, 
     185.26315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 584.8275862068965}, {1.7300000000000002`, 
     555.7894736842105}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 606.8965517241379}, {0.9300000000000002, 
     185.26315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.77, 606.8965517241379}, {1.7300000000000002`, 
     589.4736842105262}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 544.}, {0.9300000000000002, 185.26315789473685`}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.57, 544.}, {1.5300000000000002`, 480.}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.87, 576.}, {1.83, 584.8275862068965}}]}, 
   {RGBColor[0, 0, 1], LineBox[{{1.87, 576.}, {1.83, 606.8965517241379}}]}, 
   {RGBColor[0, 0, 1], 
    LineBox[{{1.87, 576.}, {1.6300000000000001`, 544.}}]}, 
   {RGBColor[0, 1, 0], 
    LineBox[{{1.97, 576.}, {1.9300000000000002`, 576.}}]}, 
   {GrayLevel[0], InsetBox["\<\"am\"\>", {0., 15.238095238095237`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx322:power2\"\>", {0.1, 6.666666666666666},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"an\"\>", {0., 45.71428571428571},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx323:power2\"\>", {0.1, 20.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"bm\"\>", {0., 76.19047619047619},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx324:power2\"\>", {0.1, 33.33333333333333},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"bn\"\>", {0., 106.66666666666666`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx325:power2\"\>", {0.1, 46.66666666666666},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"cm\"\>", {0., 137.14285714285714`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx326:power2\"\>", {0.1, 60.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"cn\"\>", {0., 167.6190476190476},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx327:power2\"\>", {0.1, 73.33333333333333},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"dm\"\>", {0., 198.0952380952381},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx328:power2\"\>", {0.1, 86.66666666666666},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"dn\"\>", {0., 228.57142857142856`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx329:power2\"\>", {0.1, 100.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"pxm\"\>", {0., 259.04761904761904`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz672:Times(-1)\"\>", {0.1, 113.33333333333331`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz694:Times\"\>", {0.1, 126.66666666666666`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx330:Times\"\>", {0.2, 5.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx331:Times\"\>", {0.1, 140.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz690:Times\"\>", {0.1, 153.33333333333331`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx332:Times\"\>", {0.2, 15.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx333:Times\"\>", {0.2, 25.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"pxn\"\>", {0., 289.5238095238095},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz685:Times(-1)\"\>", {0.1, 166.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx334:Times\"\>", {0.2, 35.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx335:Times\"\>", {0.1, 180.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz688:Times\"\>", {0.1, 193.33333333333331`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx336:Times\"\>", {0.2, 45.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx337:Times\"\>", {0.2, 55.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz695:Times\"\>", {0.1, 206.66666666666663`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"pym\"\>", {0., 320.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx338:Times\"\>", {0.2, 65.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz693:Times\"\>", {0.1, 220.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx339:Times\"\>", {0.2, 75.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz679:Times(-1)\"\>", {0.1, 233.33333333333331`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx340:Times\"\>", {0.2, 85.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx341:Times\"\>", {0.2, 95.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"pyn\"\>", {0., 350.4761904761904},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx342:Times\"\>", {0.1, 246.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz692:Times\"\>", {0.1, 260.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx343:Times\"\>", {0.2, 105.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz684:Times(-1)\"\>", {0.1, 273.3333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx344:Times\"\>", {0.2, 115.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx345:Times\"\>", {0.2, 125.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"pzm\"\>", {0., 380.95238095238096`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz671:Times(-1)\"\>", {0.1, 286.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx346:Times\"\>", {0.2, 135.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx347:Times\"\>", {0.2, 145.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz689:Times\"\>", {0.1, 300.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx348:Times\"\>", {0.2, 155.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx349:Times\"\>", {0.2, 165.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"pzn\"\>", {0., 411.4285714285714},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz680:Times\"\>", {0.1, 313.3333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx350:Times(-1)\"\>", {0.2, 175.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz691:Times\"\>", {0.1, 326.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx351:Times\"\>", {0.2, 185.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx352:Times\"\>", {0.2, 195.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx353:Times\"\>", {0.2, 205.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx354:Times\"\>", {0.2, 215.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx355:Times\"\>", {0.2, 225.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx356:Times\"\>", {0.2, 235.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz696:Times(-1)\"\>", {0.1, 340.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx357:Times\"\>", {0.2, 245.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx358:Times\"\>", {0.2, 255.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx359:Times\"\>", {0.2, 265.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx360:Times\"\>", {0.2, 275.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx361:Times\"\>", {0.2, 285.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx362:Times\"\>", {0.2, 295.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx363:Times\"\>", {0.2, 305.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx364:Plus\"\>", {0.2, 315.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx365:Times\"\>", {0.2, 325.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx366:Times\"\>", {0.2, 335.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx367:Plus\"\>", {0.2, 345.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx368:Plus\"\>", {0.30000000000000004`, 8.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz712:Plus\"\>", {0.30000000000000004`, 24.000000000000004`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz713:Plus\"\>", {0.4, 21.333333333333332`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz716:Plus\"\>", {0.5, 9.696969696969697},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx369:Plus\"\>", {0.6000000000000001, 24.615384615384617`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx370:Plus\"\>", {0.30000000000000004`, 40.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx371:Plus\"\>", {0.30000000000000004`, 56.00000000000001},
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], 
    InsetBox["\<\"tx372:reciprocal\"\>", {0.30000000000000004`, 72.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz708:Plus\"\>", {0.30000000000000004`, 88.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tzz710:Plus\"\>", {0.4, 64.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz711:Plus\"\>", {0.5, 29.090909090909093`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx373:Plus\"\>", {0.6000000000000001, 73.84615384615385},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz709:Plus\"\>", {0.30000000000000004`, 104.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz714:Plus\"\>", {0.4, 106.66666666666666`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz715:Plus\"\>", {0.5, 48.484848484848484`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx374:Plus\"\>", {0.6000000000000001, 123.07692307692308`},
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], 
    InsetBox["\<\"tx375:reciprocal\"\>", {0.30000000000000004`, 120.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx376:Symbol\"\>", {0.2, 355.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx377:Symbol\"\>", {0.2, 365.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx378:Symbol\"\>", {0.2, 375.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz659:Times(2.)\"\>", {0.4, 149.33333333333334`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx379:Times\"\>", {0.5, 67.87878787878788},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx380:Times\"\>", {0.5, 87.27272727272727},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx381:Times\"\>", {0.5, 106.66666666666669`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz658:Times(-2.)\"\>", {0.4, 192.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx382:Times\"\>", {0.7000000000000001, 12.8},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx383:Times\"\>", {0.7000000000000001, 38.4},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx384:Times\"\>", {0.7000000000000001, 64.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"xn\"\>", {0., 441.9047619047619},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx385:Times(-1)\"\>", {0.1, 353.33333333333326`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"yn\"\>", {0., 472.38095238095235`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx386:Times(-1)\"\>", {0.1, 366.66666666666663`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"zn\"\>", {0., 502.85714285714283`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx387:Times(-1)\"\>", {0.1, 380.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"xm\"\>", {0., 533.3333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tzz701:Plus\"\>", {0.2, 385.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz703:Plus\"\>", {0.6000000000000001, 172.30769230769232`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz707:Plus\"\>", {0.7000000000000001, 89.60000000000001},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz719:Plus\"\>", {0.8, 11.428571428571427`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx388:Plus\"\>", {0.9, 16.842105263157894`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"ym\"\>", {0., 563.8095238095239},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tzz700:Plus\"\>", {0.2, 395.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz702:Plus\"\>", {0.6000000000000001, 221.53846153846155`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz706:Plus\"\>", {0.7000000000000001, 115.19999999999999`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz718:Plus\"\>", {0.8, 34.285714285714285`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx389:Plus\"\>", {0.9, 50.526315789473685`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"zm\"\>", {0., 594.2857142857142},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tzz699:Plus\"\>", {0.2, 405.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz704:Plus\"\>", {0.6000000000000001, 270.76923076923083`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz705:Plus\"\>", {0.7000000000000001, 140.8},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tzz717:Plus\"\>", {0.8, 57.14285714285714},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx390:Plus\"\>", {0.9, 84.21052631578947},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx391:power2\"\>", {1., 32.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx392:power2\"\>", {1., 96.00000000000001},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx393:power2\"\>", {1., 160.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx394:Plus\"\>", {1.1, 11.851851851851851`},
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], 
    InsetBox["\<\"tx697:reciprocal\"\>", {1.2000000000000002`, 21.333333333333332`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx654:power2\"\>", {1.3, 40.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx655:Symbol\"\>", {1.3, 120.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx643:Times\"\>", {1.4000000000000001`, 29.090909090909093`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx395:power2\"\>", {1.5, 53.33333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx644:power2\"\>", {1.4000000000000001`, 87.27272727272727},
     
     Background->Automatic]}, 
   {GrayLevel[0], 
    InsetBox["\<\"tx645:Symbol\"\>", {1.4000000000000001`, 145.45454545454547`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx396:Times\"\>", {1.5, 160.},
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], 
    InsetBox["\<\"tx646:mysqrt\"\>", {1.2000000000000002`, 64.},
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], InsetBox["\<\"tx397:reciprocal\"\>", {1.3, 200.},
     Background->Automatic]}, 
   {GrayLevel[0], 
    InsetBox["\<\"dA\"\>", {1.4000000000000001`, 203.63636363636363`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx398:Times\"\>", {1.6, 32.},
     Background->Automatic]}, 
   {GrayLevel[0], 
    InsetBox["\<\"dC\"\>", {1.4000000000000001`, 261.8181818181818},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx399:Times(-1)\"\>", {1.6, 96.00000000000001},
     Background->Automatic]}, 
   {GrayLevel[0], 
    InsetBox["\<\"dQ1Q2\"\>", {1.2000000000000002`, 106.66666666666666`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx400:Times\"\>", {1.4000000000000001`, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"Energy:Plus\"\>", {1.7000000000000002`, 16.842105263157894`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx401:Times\"\>", {0.30000000000000004`, 136.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx402:Times\"\>", {0.30000000000000004`, 152.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx403:Times\"\>", {0.30000000000000004`, 168.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx404:Times\"\>", {0.30000000000000004`, 184.00000000000003`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx405:Times\"\>", {0.30000000000000004`, 200.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx406:Times\"\>", {0.30000000000000004`, 216.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx407:Times\"\>", {0.2, 415.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx408:Symbol\"\>", {0.2, 425.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx409:Times\"\>", {0.1, 393.33333333333326`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx410:Times\"\>", {0.2, 435.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx411:Times\"\>", {0.2, 445.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx412:Times\"\>", {0.1, 406.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx413:Plus\"\>", {0.6000000000000001, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx414:Plus\"\>", {0.6000000000000001, 369.2307692307693},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx415:Plus\"\>", {0.6000000000000001, 418.46153846153845`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx416:power2\"\>", {0.4, 234.66666666666666`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx417:Plus\"\>", {0.30000000000000004`, 232.00000000000003`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx418:Plus\"\>", {0.30000000000000004`, 248.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx419:Plus\"\>", {0.30000000000000004`, 264.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx420:Times\"\>", {0.7000000000000001, 166.4},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx421:Times\"\>", {0.7000000000000001, 192.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx422:Times\"\>", {0.7000000000000001, 217.60000000000002`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz664:Times(-4.)\"\>", {0.5, 126.06060606060606`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz678:Times\"\>", {0.6000000000000001, 467.69230769230774`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx423:Times\"\>", {0.7000000000000001, 243.2},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz677:Times\"\>", {0.6000000000000001, 516.9230769230769},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx424:Times\"\>", {0.7000000000000001, 268.8},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz676:Times\"\>", {0.6000000000000001, 566.1538461538462},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx425:Times\"\>", {0.7000000000000001, 294.40000000000003`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx426:Times\"\>", {0.5, 145.45454545454547`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx427:Times\"\>", {0.5, 164.84848484848484`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx428:Times\"\>", {0.5, 184.24242424242425`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx429:Plus\"\>", {0.9, 117.89473684210526`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx430:Plus\"\>", {0.9, 151.57894736842104`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx431:Plus\"\>", {0.9, 185.26315789473685`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx432:Plus\"\>", {0.8, 80.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx433:Plus\"\>", {0.8, 102.85714285714285`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx434:Plus\"\>", {0.8, 125.71428571428571`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx435:power2\"\>", {1., 224.00000000000003`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx436:power2\"\>", {1., 288.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx437:power2\"\>", {1., 352.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz666:Times(2.)\"\>", {1., 416.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx438:Times\"\>", {1.1, 35.55555555555556},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz667:Times(2.)\"\>", {1., 480.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx439:Times\"\>", {1.1, 59.25925925925925},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz668:Times(2.)\"\>", {1., 544.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx440:Times\"\>", {1.1, 82.96296296296296},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx441:Plus\"\>", {1.1, 106.66666666666666`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx442:Plus\"\>", {1.2000000000000002`, 149.33333333333334`},
     
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], 
    InsetBox["\<\"tx698:reciprocal\"\>", {1.2000000000000002`, 192.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx656:power2\"\>", {1.3, 280.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx657:Symbol\"\>", {1.3, 360.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx647:Times\"\>", {1.4000000000000001`, 378.1818181818182},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx648:power2\"\>", {1.4000000000000001`, 436.3636363636364},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx443:Times\"\>", {1.5, 266.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx649:power2\"\>", {1.4000000000000001`, 494.5454545454545},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx444:power2\"\>", {1.5, 373.33333333333326`},
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], 
    InsetBox["\<\"tx650:mysqrt\"\>", {1.2000000000000002`, 234.66666666666666`},
     
     Background->Automatic]}, 
   {GrayLevel[0], 
    InsetBox["\<\"tx651:Symbol\"\>", {1.2000000000000002`, 277.33333333333337`},
     
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], InsetBox["\<\"tx652:reciprocal\"\>", {1.3, 440.},
     Background->Automatic]}, 
   {RGBColor[1, 0, 0], InsetBox["\<\"tx653:reciprocal\"\>", {1.3, 520.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx445:Times\"\>", {1.4000000000000001`, 552.7272727272727},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz662:Times\"\>", {1.6, 160.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz670:Times(-6.)\"\>", {1.7000000000000002`, 50.526315789473685`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx446:Times\"\>", {1.8, 11.03448275862069},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz661:Times\"\>", {1.6, 224.00000000000003`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz665:Times(3)\"\>", {1.7000000000000002`, 84.21052631578947},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx447:Times\"\>", {1.8, 33.10344827586207},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz660:Times\"\>", {1.5, 480.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz669:Times(-0.5)\"\>", {1.6, 288.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx448:Times\"\>", {1.7000000000000002`, 117.89473684210526`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gam:Plus\"\>", {1.9000000000000001`, 21.333333333333332`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fam:Times(-1)\"\>", {2., 21.333333333333332`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx449:Times\"\>", {0.1, 420.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx450:Times\"\>", {0.1, 433.33333333333326`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx451:Symbol\"\>", {0.2, 455.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx452:Times\"\>", {0.2, 465.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx453:Times(-2.)\"\>", {0.1, 446.66666666666663`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx454:Symbol\"\>", {0.2, 475.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx455:Times(-2.)\"\>", {0.2, 485.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx456:Plus\"\>", {0.30000000000000004`, 280.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx457:Plus\"\>", {0.30000000000000004`, 296.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx458:Plus\"\>", {0.30000000000000004`, 312.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx459:Times\"\>", {0.7000000000000001, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx460:Times\"\>", {0.7000000000000001, 345.6},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx461:Times\"\>", {0.7000000000000001, 371.2},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx462:Times\"\>", {0.5, 203.63636363636363`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx463:Times\"\>", {0.5, 223.03030303030306`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx464:Times\"\>", {0.5, 242.42424242424244`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx465:Plus\"\>", {0.8, 148.57142857142856`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx466:Plus\"\>", {0.8, 171.42857142857142`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx467:Plus\"\>", {0.8, 194.28571428571428`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx468:Times\"\>", {1.1, 130.37037037037035`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx469:Times\"\>", {1.1, 154.07407407407408`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx470:Times\"\>", {1.1, 177.77777777777777`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx471:Plus\"\>", {1.2000000000000002`, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx472:Times\"\>", {1.8, 55.17241379310345},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx473:Times\"\>", {1.8, 77.24137931034483},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx474:Times\"\>", {1.7000000000000002`, 151.57894736842104`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gbm:Plus\"\>", {1.9000000000000001`, 64.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"fbm:Times(-1)\"\>", {2., 64.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx475:Times\"\>", {0.2, 495.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx476:Times\"\>", {0.1, 460.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx477:Times\"\>", {0.1, 473.33333333333326`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx478:Times\"\>", {0.1, 486.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx479:Times(-2.)\"\>", {0.2, 505.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx480:Times(-2.)\"\>", {0.2, 515.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx481:Plus\"\>", {0.30000000000000004`, 328.00000000000006`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx482:Plus\"\>", {0.30000000000000004`, 344.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx483:Plus\"\>", {0.30000000000000004`, 360.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx484:Times\"\>", {0.7000000000000001, 396.8},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx485:Times\"\>", {0.7000000000000001, 422.40000000000003`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx486:Times\"\>", {0.7000000000000001, 448.00000000000006`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx487:Times\"\>", {0.5, 261.8181818181818},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx488:Times\"\>", {0.5, 281.2121212121212},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx489:Times\"\>", {0.5, 300.6060606060606},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx490:Plus\"\>", {0.8, 217.1428571428571},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx491:Plus\"\>", {0.8, 240.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx492:Plus\"\>", {0.8, 262.85714285714283`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx493:Times\"\>", {1.1, 201.48148148148147`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx494:Times\"\>", {1.1, 225.1851851851852},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx495:Times\"\>", {1.1, 248.88888888888886`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx496:Plus\"\>", {1.2000000000000002`, 362.66666666666663`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx497:Times\"\>", {1.8, 99.3103448275862},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx498:Times\"\>", {1.8, 121.37931034482759`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx499:Times\"\>", {1.7000000000000002`, 185.26315789473685`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gcm:Plus\"\>", {1.9000000000000001`, 106.66666666666666`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fcm:Times(-1)\"\>", {2., 106.66666666666666`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx500:Times\"\>", {0.1, 500.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx501:Times\"\>", {0.1, 513.3333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx502:Times(-2.)\"\>", {0.30000000000000004`, 376.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx503:Times(-1)\"\>", {0.2, 525.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx504:Times(-2.)\"\>", {0.2, 535.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx505:Plus\"\>", {0.30000000000000004`, 392.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx506:Plus\"\>", {0.4, 277.33333333333337`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx507:Plus\"\>", {0.30000000000000004`, 408.00000000000006`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx508:Times\"\>", {0.7000000000000001, 473.6},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx509:Times\"\>", {0.7000000000000001, 499.20000000000005`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx510:Times\"\>", {0.7000000000000001, 524.8000000000001},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx511:Times\"\>", {0.5, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx512:Times\"\>", {0.5, 339.3939393939394},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx513:Times\"\>", {0.5, 358.7878787878788},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx514:Plus\"\>", {0.8, 285.71428571428567`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx515:Plus\"\>", {0.8, 308.57142857142856`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx516:Plus\"\>", {0.8, 331.4285714285714},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx517:Times\"\>", {1.1, 272.5925925925926},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx518:Times\"\>", {1.1, 296.29629629629625`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx519:Times\"\>", {1.1, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx520:Plus\"\>", {1.2000000000000002`, 405.3333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx521:Times\"\>", {1.8, 143.44827586206895`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx522:Times\"\>", {1.8, 165.51724137931035`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx523:Times\"\>", {1.7000000000000002`, 218.9473684210526},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gdm:Plus\"\>", {1.9000000000000001`, 149.33333333333334`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fdm:Times(-1)\"\>", {2., 149.33333333333334`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz687:Times(-12.)\"\>", {1.7000000000000002`, 252.63157894736844`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx524:Times\"\>", {1.8, 187.58620689655172`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz682:Times(6.)\"\>", {1.7000000000000002`, 286.31578947368416`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx525:Times\"\>", {1.8, 209.65517241379308`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tzz683:Times(-1)\"\>", {1.6, 352.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx526:Times\"\>", {1.7000000000000002`, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gxm:Plus\"\>", {1.9000000000000001`, 192.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"fxm:Times(-1)\"\>", {2., 192.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx527:Times\"\>", {1.8, 231.72413793103448`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx528:Times\"\>", {1.8, 253.79310344827587`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx529:Times\"\>", {1.7000000000000002`, 353.6842105263157},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gym:Plus\"\>", {1.9000000000000001`, 234.66666666666666`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fym:Times(-1)\"\>", {2., 234.66666666666666`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx530:Times\"\>", {1.8, 275.8620689655172},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx531:Times\"\>", {1.8, 297.9310344827586},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx532:Times\"\>", {1.7000000000000002`, 387.36842105263156`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gzm:Plus\"\>", {1.9000000000000001`, 277.33333333333337`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fzm:Times(-1)\"\>", {2., 277.33333333333337`},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx533:Symbol\"\>", {0.2, 545.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx534:Times\"\>", {0.1, 526.6666666666666},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx535:Symbol\"\>", {0.2, 555.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx536:Times\"\>", {0.30000000000000004`, 424.00000000000006`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx537:Times\"\>", {0.30000000000000004`, 440.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx538:Times\"\>", {0.30000000000000004`, 456.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx539:power2\"\>", {0.4, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx540:Plus\"\>", {0.4, 362.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx541:Plus\"\>", {0.4, 405.3333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx542:Plus\"\>", {0.4, 448.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz663:Times(4.)\"\>", {0.5, 378.1818181818182},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz675:Times\"\>", {0.7000000000000001, 550.4},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx543:Times\"\>", {0.8, 354.2857142857142},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz674:Times\"\>", {0.7000000000000001, 576.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx544:Times\"\>", {0.8, 377.14285714285717`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz673:Times\"\>", {0.7000000000000001, 601.6},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx545:Times\"\>", {0.8, 400.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx546:Times\"\>", {0.5, 397.57575757575756`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx547:Times\"\>", {0.5, 416.96969696969694`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx548:Times\"\>", {0.5, 436.3636363636364},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx549:Plus\"\>", {0.9, 218.9473684210526},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx550:Plus\"\>", {0.9, 252.63157894736844`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx551:Plus\"\>", {0.9, 286.31578947368416`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx552:Times\"\>", {1.1, 343.7037037037037},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx553:Times\"\>", {1.1, 367.4074074074074},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx554:Times\"\>", {1.1, 391.1111111111111},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx555:Plus\"\>", {1.2000000000000002`, 448.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx556:Times\"\>", {1.8, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx557:Times\"\>", {1.8, 342.06896551724134`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx558:Times\"\>", {1.7000000000000002`, 421.05263157894734`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gan:Plus\"\>", {1.9000000000000001`, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"fan:Times(-1)\"\>", {2., 320.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx559:Times\"\>", {0.1, 540.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx560:Times\"\>", {0.1, 553.3333333333333},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx561:Symbol\"\>", {0.2, 565.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx562:Times(-2.)\"\>", {0.2, 575.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx563:Times\"\>", {0.1, 566.6666666666666},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx564:Times\"\>", {0.30000000000000004`, 472.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx565:Times(-2.)\"\>", {0.2, 585.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx566:Plus\"\>", {0.30000000000000004`, 488.00000000000006`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx567:Plus\"\>", {0.30000000000000004`, 504.00000000000006`},
     
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx568:Plus\"\>", {0.4, 490.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx569:Times\"\>", {0.8, 422.85714285714283`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx570:Times\"\>", {0.8, 445.71428571428567`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx571:Times\"\>", {0.8, 468.57142857142856`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx572:Times\"\>", {0.5, 455.75757575757575`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx573:Times\"\>", {0.5, 475.1515151515151},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx574:Times\"\>", {0.5, 494.5454545454545},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx575:Plus\"\>", {0.9, 320.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx576:Plus\"\>", {0.9, 353.6842105263157},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx577:Plus\"\>", {0.9, 387.36842105263156`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx578:Times\"\>", {1.1, 414.8148148148148},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx579:Times\"\>", {1.1, 438.5185185185185},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx580:Times\"\>", {1.1, 462.22222222222223`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx581:Plus\"\>", {1.2000000000000002`, 490.66666666666663`},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx582:Times\"\>", {1.8, 364.1379310344828},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx583:Times\"\>", {1.8, 386.2068965517241},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx584:Times\"\>", {1.7000000000000002`, 454.7368421052631},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gbn:Plus\"\>", {1.9000000000000001`, 362.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fbn:Times(-1)\"\>", {2., 362.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx585:Times\"\>", {0.1, 580.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx586:Times\"\>", {0.1, 593.3333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx587:Times\"\>", {0.1, 606.6666666666666},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx588:Times\"\>", {0.30000000000000004`, 520.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx589:Times(-2.)\"\>", {0.30000000000000004`, 536.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx590:Times(-2.)\"\>", {0.2, 595.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx591:Plus\"\>", {0.2, 605.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx592:Plus\"\>", {0.4, 533.3333333333334},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx593:Plus\"\>", {0.30000000000000004`, 552.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx594:Times\"\>", {0.8, 491.4285714285714},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx595:Times\"\>", {0.8, 514.2857142857142},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx596:Times\"\>", {0.8, 537.1428571428571},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx597:Times\"\>", {0.5, 513.939393939394},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx598:Times\"\>", {0.5, 533.3333333333334},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx599:Times\"\>", {0.5, 552.7272727272727},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx600:Plus\"\>", {0.9, 421.05263157894734`},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx601:Plus\"\>", {0.9, 454.7368421052631},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx602:Plus\"\>", {0.9, 488.4210526315789},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx603:Times\"\>", {1.1, 485.92592592592587`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx604:Times\"\>", {1.1, 509.6296296296296},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx605:Times\"\>", {1.1, 533.3333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx606:Plus\"\>", {1.2000000000000002`, 533.3333333333334},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx607:Times\"\>", {1.8, 408.27586206896547`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx608:Times\"\>", {1.8, 430.3448275862069},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx609:Times\"\>", {1.7000000000000002`, 488.4210526315789},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gcn:Plus\"\>", {1.9000000000000001`, 405.3333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fcn:Times(-1)\"\>", {2., 405.3333333333333},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx610:Times\"\>", {0.1, 620.},
     Background->Automatic]}, 
   {GrayLevel[0], InsetBox["\<\"tx611:Symbol\"\>", {0.2, 615.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx612:Times\"\>", {0.30000000000000004`, 568.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx613:Times(-2.)\"\>", {0.30000000000000004`, 584.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx614:Times(-2.)\"\>", {0.2, 625.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx615:Plus\"\>", {0.30000000000000004`, 600.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], InsetBox["\<\"tx616:Plus\"\>", {0.4, 576.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx617:Plus\"\>", {0.30000000000000004`, 616.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx618:Times\"\>", {0.8, 560.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx619:Times\"\>", {0.8, 582.8571428571429},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx620:Times\"\>", {0.8, 605.7142857142857},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx621:Times\"\>", {0.5, 572.1212121212121},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx622:Times\"\>", {0.5, 591.5151515151515},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx623:Times\"\>", {0.5, 610.909090909091},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx624:Plus\"\>", {0.9, 522.1052631578947},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx625:Plus\"\>", {0.9, 555.7894736842105},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx626:Plus\"\>", {0.9, 589.4736842105262},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx627:Times\"\>", {1.1, 557.0370370370371},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx628:Times\"\>", {1.1, 580.7407407407406},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx629:Times\"\>", {1.1, 604.4444444444445},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"tx630:Plus\"\>", {1.2000000000000002`, 576.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx631:Times\"\>", {1.8, 452.41379310344826`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx632:Times\"\>", {1.8, 474.48275862068965`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx633:Times\"\>", {1.7000000000000002`, 522.1052631578947},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gdn:Plus\"\>", {1.9000000000000001`, 448.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"fdn:Times(-1)\"\>", {2., 448.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz681:Times(12.)\"\>", {1.7000000000000002`, 555.7894736842105},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx634:Times\"\>", {1.8, 496.55172413793105`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tzz686:Times(-6.)\"\>", {1.7000000000000002`, 589.4736842105262},
     
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx635:Times\"\>", {1.8, 518.6206896551723},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx636:Times\"\>", {1.6, 416.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gxn:Plus\"\>", {1.9000000000000001`, 490.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fxn:Times(-1)\"\>", {2., 490.66666666666663`},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx637:Times\"\>", {1.8, 540.6896551724138},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx638:Times\"\>", {1.8, 562.7586206896551},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx639:Times\"\>", {1.6, 480.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gyn:Plus\"\>", {1.9000000000000001`, 533.3333333333334},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"fyn:Times(-1)\"\>", {2., 533.3333333333334},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx640:Times\"\>", {1.8, 584.8275862068965},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], 
    InsetBox["\<\"tx641:Times\"\>", {1.8, 606.8965517241379},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"tx642:Times\"\>", {1.6, 544.},
     Background->Automatic]}, 
   {RGBColor[0, 0, 1], 
    InsetBox["\<\"gzn:Plus\"\>", {1.9000000000000001`, 576.},
     Background->Automatic]}, 
   {RGBColor[0, 1, 0], InsetBox["\<\"fzn:Times(-1)\"\>", {2., 576.},
     Background->Automatic]}},
  AspectRatio->0.41,
  ImageSize->{1059.62890625, Automatic}]], "Output",
 CellChangeTimes->{3.7071466359563007`*^9, 3.707146718613145*^9, 
  3.707147969138157*^9, 3.7071482064866877`*^9, 3.707148726704485*^9, 
  3.7071489488276577`*^9, 3.707400928149626*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1342, 1317},
WindowMargins->{{Automatic, -78}, {1124, Automatic}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 210, 5, 51, "Subtitle",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[792, 29, 222, 4, 50, "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[1017, 35, 614, 9, 28, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[1634, 46, 591, 10, 50, "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[2228, 58, 634, 9, 28, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[2865, 69, 171, 3, 28, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[3039, 74, 215, 3, 51, "Subtitle",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[3257, 79, 233, 4, 50, "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[3493, 85, 1785, 45, 81, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[5281, 132, 2148, 68, 103, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[7432, 202, 2011, 63, 103, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[9446, 267, 456, 12, 28, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[9905, 281, 186, 3, 44, "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[10094, 286, 377, 8, 28, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[10474, 296, 206, 3, 44, "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[10683, 301, 294, 7, 28, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[10980, 310, 475, 13, 28, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[11458, 325, 887, 27, 28, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[12348, 354, 211, 3, 44, "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[12562, 359, 1021, 26, 51, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[13586, 387, 181, 3, 35, "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[13770, 392, 468, 10, 28, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[14241, 404, 2351, 64, 53, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[16595, 470, 197, 3, 44, "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[16795, 475, 433, 9, 28, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[17265, 489, 469, 8, 120, "Title"],
Cell[17737, 499, 271, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[18033, 509, 183, 4, 44, "Subsection"],
Cell[18219, 515, 529, 12, 46, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18785, 532, 206, 4, 44, "Subsection"],
Cell[CellGroupData[{
Cell[19016, 540, 401, 10, 28, "Input"],
Cell[19420, 552, 2266, 61, 98, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21723, 618, 354, 9, 28, "Input"],
Cell[22080, 629, 2269, 61, 98, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24398, 696, 201, 4, 44, "Subsection"],
Cell[CellGroupData[{
Cell[24624, 704, 975, 19, 28, "Input"],
Cell[25602, 725, 5301, 132, 152, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30952, 863, 174, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[31151, 870, 227, 5, 28, "Input"],
Cell[31381, 877, 5551, 132, 153, "Output"]
}, Open  ]],
Cell[36947, 1012, 1911, 49, 284, "Input"],
Cell[38861, 1063, 1267, 30, 97, "Input"],
Cell[40131, 1095, 1489, 37, 114, "Input"],
Cell[41623, 1134, 1596, 41, 131, "Input"],
Cell[CellGroupData[{
Cell[43244, 1179, 166, 3, 28, "Input"],
Cell[43413, 1184, 3326, 82, 432, "Output"]
}, Open  ]],
Cell[46754, 1269, 976, 24, 97, "Input"],
Cell[CellGroupData[{
Cell[47755, 1297, 111, 1, 28, "Input"],
Cell[47869, 1300, 5876, 134, 184, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53794, 1440, 113, 1, 51, "Subtitle"],
Cell[53910, 1443, 205, 5, 28, "Input"],
Cell[54118, 1450, 387, 8, 28, "Input"],
Cell[CellGroupData[{
Cell[54530, 1462, 133, 2, 28, "Input"],
Cell[54666, 1466, 871, 15, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55574, 1486, 123, 1, 44, "Subsection"],
Cell[55700, 1489, 480, 10, 63, "Input"],
Cell[56183, 1501, 305, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[56513, 1511, 253, 5, 28, "Input"],
Cell[56769, 1518, 728, 12, 28, "Output"]
}, Open  ]],
Cell[57512, 1533, 544, 11, 28, "Input"],
Cell[58059, 1546, 247, 3, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58343, 1554, 250, 4, 44, "Subsection"],
Cell[58596, 1560, 1754, 31, 148, "Input"],
Cell[CellGroupData[{
Cell[60375, 1595, 302, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[60702, 1605, 868, 16, 22, "Print"],
Cell[61573, 1623, 846, 15, 22, "Print"],
Cell[62422, 1640, 844, 15, 22, "Print"],
Cell[63269, 1657, 838, 15, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[64134, 1676, 529, 8, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64700, 1689, 139, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[64864, 1694, 105, 1, 28, "Input"],
Cell[64972, 1697, 411, 8, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65420, 1710, 128, 2, 28, "Input"],
Cell[65551, 1714, 435, 8, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66023, 1727, 620, 10, 28, "Input"],
Cell[CellGroupData[{
Cell[66668, 1741, 355, 5, 21, "Print"],
Cell[67026, 1748, 358, 5, 21, "Print"],
Cell[67387, 1755, 436, 6, 22, "Print"],
Cell[67826, 1763, 361, 5, 21, "Print"],
Cell[68190, 1770, 355, 5, 21, "Print"],
Cell[68548, 1777, 360, 5, 21, "Print"],
Cell[68911, 1784, 435, 6, 22, "Print"],
Cell[69349, 1792, 363, 5, 21, "Print"],
Cell[69715, 1799, 357, 5, 21, "Print"],
Cell[70075, 1806, 360, 5, 21, "Print"],
Cell[70438, 1813, 436, 6, 22, "Print"],
Cell[70877, 1821, 361, 5, 21, "Print"],
Cell[71241, 1828, 530, 7, 37, "Print"],
Cell[71774, 1837, 436, 6, 22, "Print"],
Cell[72213, 1845, 579, 9, 293, "Print"],
Cell[72795, 1856, 656, 15, 33, "Print"],
Cell[73454, 1873, 600, 14, 29, "Print"],
Cell[74057, 1889, 599, 14, 29, "Print"],
Cell[74659, 1905, 355, 5, 21, "Print"],
Cell[75017, 1912, 358, 5, 21, "Print"],
Cell[75378, 1919, 436, 6, 22, "Print"],
Cell[75817, 1927, 361, 5, 21, "Print"],
Cell[76181, 1934, 349, 5, 22, "Print"]
}, Open  ]],
Cell[76545, 1942, 1441, 24, 77, "Message"],
Cell[CellGroupData[{
Cell[78011, 1970, 355, 5, 21, "Print"],
Cell[78369, 1977, 360, 5, 21, "Print"],
Cell[78732, 1984, 435, 6, 22, "Print"],
Cell[79170, 1992, 361, 5, 21, "Print"],
Cell[79534, 1999, 355, 5, 21, "Print"],
Cell[79892, 2006, 357, 5, 21, "Print"],
Cell[80252, 2013, 436, 6, 22, "Print"],
Cell[80691, 2021, 363, 5, 21, "Print"],
Cell[81057, 2028, 357, 5, 21, "Print"],
Cell[81417, 2035, 360, 5, 21, "Print"],
Cell[81780, 2042, 436, 6, 22, "Print"],
Cell[82219, 2050, 361, 5, 21, "Print"],
Cell[82583, 2057, 530, 7, 37, "Print"],
Cell[83116, 2066, 436, 6, 22, "Print"],
Cell[83555, 2074, 579, 9, 293, "Print"],
Cell[84137, 2085, 11623, 158, 11536, "Print"],
Cell[95763, 2245, 355, 5, 21, "Print"],
Cell[96121, 2252, 532, 7, 37, "Print"],
Cell[96656, 2261, 436, 6, 22, "Print"],
Cell[97095, 2269, 579, 9, 293, "Print"],
Cell[97677, 2280, 11623, 158, 11536, "Print"],
Cell[109303, 2440, 530, 7, 37, "Print"],
Cell[109836, 2449, 438, 6, 22, "Print"],
Cell[110277, 2457, 579, 9, 293, "Print"],
Cell[110859, 2468, 11950, 164, 12162, "Print"],
Cell[122812, 2634, 545, 10, 22, "Print"],
Cell[123360, 2646, 529, 10, 22, "Print"],
Cell[123892, 2658, 10564, 146, 8929, "Print"],
Cell[134459, 2806, 354, 5, 21, "Print"],
Cell[134816, 2813, 530, 7, 52, "Print"],
Cell[135349, 2822, 438, 6, 38, "Print"],
Cell[135790, 2830, 579, 9, 293, "Print"],
Cell[136372, 2841, 9202, 124, 8944, "Print"],
Cell[145577, 2967, 530, 7, 37, "Print"],
Cell[146110, 2976, 436, 6, 22, "Print"],
Cell[146549, 2984, 579, 9, 293, "Print"],
Cell[147131, 2995, 9526, 129, 9570, "Print"],
Cell[156660, 3126, 548, 10, 22, "Print"],
Cell[157211, 3138, 529, 10, 22, "Print"],
Cell[157743, 3150, 292, 5, 22, "Print"],
Cell[158038, 3157, 127, 1, 21, "Print"],
Cell[158168, 3160, 113, 1, 22, "Print"]
}, Open  ]],
Cell[158296, 3164, 1777, 27, 60, "Message"],
Cell[CellGroupData[{
Cell[160098, 3195, 119, 1, 21, "Print"],
Cell[160220, 3198, 122, 1, 21, "Print"],
Cell[160345, 3201, 292, 5, 22, "Print"],
Cell[160640, 3208, 127, 1, 21, "Print"],
Cell[160770, 3211, 119, 1, 21, "Print"],
Cell[160892, 3214, 121, 1, 21, "Print"],
Cell[161016, 3217, 294, 5, 22, "Print"],
Cell[161313, 3224, 127, 1, 21, "Print"],
Cell[161443, 3227, 119, 1, 21, "Print"],
Cell[161565, 3230, 122, 1, 21, "Print"],
Cell[161690, 3233, 294, 5, 22, "Print"],
Cell[161987, 3240, 125, 1, 21, "Print"],
Cell[162115, 3243, 169, 2, 22, "Print"],
Cell[162287, 3247, 292, 5, 22, "Print"],
Cell[162582, 3254, 184, 2, 86, "Print"],
Cell[162769, 3258, 8154, 115, 670, "Print"],
Cell[170926, 3375, 119, 1, 21, "Print"],
Cell[171048, 3378, 167, 2, 22, "Print"],
Cell[171218, 3382, 294, 5, 22, "Print"],
Cell[171515, 3389, 184, 2, 86, "Print"],
Cell[171702, 3393, 8160, 115, 670, "Print"],
Cell[179865, 3510, 167, 2, 22, "Print"],
Cell[180035, 3514, 292, 5, 22, "Print"],
Cell[180330, 3521, 184, 2, 86, "Print"],
Cell[180517, 3525, 8236, 116, 687, "Print"],
Cell[188756, 3643, 312, 6, 22, "Print"],
Cell[189071, 3651, 296, 6, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[189428, 3664, 671, 12, 144, "Subsection"],
Cell[CellGroupData[{
Cell[190124, 3680, 233, 4, 28, "Input"],
Cell[190360, 3686, 611600, 10653, 417, 110039, 2431, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[801997, 14344, 154, 3, 28, "Input"],
Cell[802154, 14349, 474, 9, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[802701, 14366, 185, 2, 92, "Title"],
Cell[802889, 14370, 647, 16, 63, "Input"],
Cell[803539, 14388, 574, 13, 46, "Input"],
Cell[CellGroupData[{
Cell[804138, 14405, 360, 9, 28, "Input"],
Cell[804501, 14416, 2177, 60, 98, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[806715, 14481, 405, 10, 28, "Input"],
Cell[807123, 14493, 2152, 60, 98, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[809312, 14558, 612, 12, 28, "Input"],
Cell[809927, 14572, 4619, 122, 152, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[814583, 14699, 661, 13, 50, "Input"],
Cell[815247, 14714, 9967, 251, 295, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[825251, 14970, 674, 11, 49, "Input"],
Cell[825928, 14983, 5119, 127, 152, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[831084, 15115, 300, 5, 28, "Input"],
Cell[831387, 15122, 14896, 373, 440, "Output"]
}, Open  ]],
Cell[846298, 15498, 2110, 51, 284, "Input"],
Cell[848411, 15551, 1454, 32, 114, "Input"],
Cell[849868, 15585, 1629, 38, 114, "Input"],
Cell[851500, 15625, 1779, 43, 114, "Input"],
Cell[CellGroupData[{
Cell[853304, 15672, 215, 3, 28, "Input"],
Cell[853522, 15677, 3212, 95, 448, "Output"]
}, Open  ]],
Cell[856749, 15775, 1120, 26, 97, "Input"],
Cell[CellGroupData[{
Cell[857894, 15805, 113, 1, 51, "Subtitle"],
Cell[858010, 15808, 252, 5, 28, "Input"],
Cell[858265, 15815, 529, 10, 28, "Input"],
Cell[CellGroupData[{
Cell[858819, 15829, 180, 2, 28, "Input"],
Cell[859002, 15833, 703, 12, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[859742, 15850, 123, 1, 44, "Subsection"],
Cell[859868, 15853, 585, 11, 63, "Input"],
Cell[860456, 15866, 408, 7, 28, "Input"],
Cell[CellGroupData[{
Cell[860889, 15877, 202, 3, 28, "Input"],
Cell[861094, 15882, 4859, 136, 130, "Output"]
}, Open  ]],
Cell[865968, 16021, 595, 11, 28, "Input"],
Cell[866566, 16034, 401, 8, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[867004, 16047, 250, 4, 44, "Subsection"],
Cell[867257, 16053, 2180, 38, 148, "Input"],
Cell[CellGroupData[{
Cell[869462, 16095, 353, 7, 28, "Input"],
Cell[CellGroupData[{
Cell[869840, 16106, 514, 10, 22, "Print"],
Cell[870357, 16118, 490, 9, 22, "Print"],
Cell[870850, 16129, 488, 9, 22, "Print"],
Cell[871341, 16140, 482, 9, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[871884, 16156, 139, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[872048, 16161, 724, 11, 28, "Input"],
Cell[CellGroupData[{
Cell[872797, 16176, 119, 1, 21, "Print"],
Cell[872919, 16179, 122, 1, 21, "Print"],
Cell[873044, 16182, 222, 3, 22, "Print"],
Cell[873269, 16187, 125, 1, 21, "Print"],
Cell[873397, 16190, 119, 1, 21, "Print"],
Cell[873519, 16193, 122, 1, 21, "Print"],
Cell[873644, 16196, 224, 3, 22, "Print"],
Cell[873871, 16201, 125, 1, 21, "Print"],
Cell[873999, 16204, 121, 1, 21, "Print"],
Cell[874123, 16207, 172, 2, 21, "Print"],
Cell[874298, 16211, 224, 3, 22, "Print"],
Cell[874525, 16216, 187, 2, 83, "Print"],
Cell[874715, 16220, 9674, 130, 9032, "Print"],
Cell[884392, 16352, 172, 2, 21, "Print"],
Cell[884567, 16356, 224, 3, 22, "Print"],
Cell[884794, 16361, 189, 2, 83, "Print"],
Cell[884986, 16365, 10119, 140, 9952, "Print"],
Cell[895108, 16507, 121, 1, 21, "Print"],
Cell[895232, 16510, 185, 2, 21, "Print"],
Cell[895420, 16514, 222, 3, 22, "Print"],
Cell[895645, 16519, 209, 2, 113, "Print"],
Cell[895857, 16523, 10125, 139, 9982, "Print"],
Cell[905985, 16664, 186, 2, 21, "Print"],
Cell[906174, 16668, 222, 3, 22, "Print"],
Cell[906399, 16673, 207, 2, 113, "Print"],
Cell[906609, 16677, 10183, 138, 10102, "Print"],
Cell[916795, 16817, 315, 6, 22, "Print"],
Cell[917113, 16825, 300, 6, 22, "Print"],
Cell[917416, 16833, 422, 11, 33, "Print"],
Cell[917841, 16846, 364, 10, 29, "Print"],
Cell[918208, 16858, 363, 10, 29, "Print"],
Cell[918574, 16870, 119, 1, 21, "Print"],
Cell[918696, 16873, 124, 1, 21, "Print"],
Cell[918823, 16876, 222, 3, 22, "Print"],
Cell[919048, 16881, 125, 1, 21, "Print"],
Cell[919176, 16884, 114, 1, 22, "Print"]
}, Open  ]],
Cell[919305, 16888, 2034, 33, 108, "Message"],
Cell[CellGroupData[{
Cell[921364, 16925, 119, 1, 21, "Print"],
Cell[921486, 16928, 124, 1, 21, "Print"],
Cell[921613, 16931, 221, 3, 22, "Print"],
Cell[921837, 16936, 125, 1, 21, "Print"],
Cell[921965, 16939, 121, 1, 21, "Print"],
Cell[922089, 16942, 122, 1, 21, "Print"],
Cell[922214, 16945, 222, 3, 22, "Print"],
Cell[922439, 16950, 125, 1, 21, "Print"],
Cell[922567, 16953, 119, 1, 21, "Print"],
Cell[922689, 16956, 156, 2, 21, "Print"],
Cell[922848, 16960, 221, 3, 22, "Print"],
Cell[923072, 16965, 167, 2, 53, "Print"],
Cell[923242, 16969, 13166, 177, 12496, "Print"],
Cell[936411, 17148, 328, 4, 37, "Print"],
Cell[936742, 17154, 222, 3, 22, "Print"],
Cell[936967, 17159, 383, 5, 353, "Print"],
Cell[937353, 17166, 13538, 185, 13598, "Print"],
Cell[950894, 17353, 119, 1, 21, "Print"],
Cell[951016, 17356, 362, 4, 37, "Print"],
Cell[951381, 17362, 222, 3, 22, "Print"],
Cell[951606, 17367, 425, 6, 413, "Print"],
Cell[952034, 17375, 13554, 185, 13658, "Print"],
Cell[965591, 17562, 362, 4, 37, "Print"],
Cell[965956, 17568, 222, 3, 22, "Print"],
Cell[966181, 17573, 427, 6, 413, "Print"],
Cell[966611, 17581, 13879, 190, 14284, "Print"],
Cell[980493, 17773, 318, 6, 22, "Print"],
Cell[980814, 17781, 300, 6, 22, "Print"],
Cell[981117, 17789, 201, 4, 22, "Print"],
Cell[981321, 17795, 199, 4, 22, "Print"],
Cell[981523, 17801, 210, 4, 22, "Print"],
Cell[981736, 17807, 852, 13, 86, "Print"],
Cell[982591, 17822, 94, 1, 22, "Print"],
Cell[982688, 17825, 97, 1, 21, "Print"],
Cell[982788, 17828, 203, 4, 22, "Print"],
Cell[982994, 17834, 202, 4, 22, "Print"],
Cell[983199, 17840, 212, 4, 22, "Print"],
Cell[983414, 17846, 852, 13, 86, "Print"],
Cell[984269, 17861, 99, 1, 21, "Print"],
Cell[984371, 17864, 203, 4, 22, "Print"],
Cell[984577, 17870, 200, 4, 22, "Print"],
Cell[984780, 17876, 212, 4, 22, "Print"],
Cell[984995, 17882, 856, 13, 86, "Print"],
Cell[985854, 17897, 97, 1, 21, "Print"],
Cell[985954, 17900, 201, 4, 22, "Print"],
Cell[986158, 17906, 202, 4, 22, "Print"],
Cell[986363, 17912, 210, 4, 22, "Print"],
Cell[986576, 17918, 852, 13, 86, "Print"],
Cell[987431, 17933, 203, 4, 22, "Print"],
Cell[987637, 17939, 202, 4, 22, "Print"],
Cell[987842, 17945, 211, 4, 22, "Print"],
Cell[988056, 17951, 852, 13, 86, "Print"],
Cell[988911, 17966, 96, 1, 21, "Print"],
Cell[989010, 17969, 203, 4, 22, "Print"],
Cell[989216, 17975, 200, 4, 22, "Print"],
Cell[989419, 17981, 210, 4, 22, "Print"],
Cell[989632, 17987, 852, 13, 86, "Print"],
Cell[990487, 18002, 201, 4, 22, "Print"],
Cell[990691, 18008, 200, 4, 22, "Print"],
Cell[990894, 18014, 210, 4, 22, "Print"],
Cell[991107, 18020, 854, 13, 86, "Print"],
Cell[991964, 18035, 290, 6, 22, "Print"],
Cell[992257, 18043, 274, 6, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[992592, 18056, 671, 12, 144, "Subsection"],
Cell[CellGroupData[{
Cell[993288, 18072, 312, 5, 28, "Input"],
Cell[993603, 18079, 131294, 2919, 446, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
