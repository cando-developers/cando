(setup-default-paths)
(load-atom-type-rules "ATOMTYPE_GFF.DEF")
(source "leaprc.ff14SB.redq")
(source "leaprc.gaff")
(defparameter ti-runs (ti-run:make-ti-run))
(defparameter sk (load-chem-draw "ligands.cdxml"))
(ti-run:setup-ligands ti-runs sk)
(defparameter tests (list (cons :c1 (lambda (a) (eq (chem:get-name a) :c1))) (cons :c3 (lambda (a) (eq (chem:get-name a) :c3))) (cons :c5 (lambda (a) (eq (chem:get-name a) :c5)))))
(defparameter pick (chem:compile-smarts "[C:6]1~[C<c1>:1]~[C:2]~[C<c3>:3]~[C:4]~[C<c5>:5]1" :tests tests))
(defparameter lysozyme (load-pdb "181L_mod.pdb"))
(cando:build-unbuilt-hydrogens lysozyme)
(simple-build-unbuilt-atoms lysozyme)
(ti-run:add-receptor ti-runs lysozyme)
(load-off "phen.lib")
(load-off "benz.lib")
(defparameter ligs (load-pdb "bnz_phn.pdb"))
(simple-build-unbuilt-atoms ligs)
(build-unbuilt-hydrogens ligs)
(ti-run:pose-ligands-using-pattern ti-runs pick ligs)
(ti-run:build-job-nodes ti-runs)
(ti-run:connect-job-nodes ti-runs :simple :connections 2 :stages 3 :windows 11)
(defparameter worklist (ti-run:generate-jobs ti-runs))
(with-open-file (sout "/tmp/graph.dot" :direction :output) (ti-rundot:draw-graph-stream (list worklist) sout))
(ext:system "dot -Tpdf -O /tmp/graph.dot")
(ext:system "open -n /tmp/graph.dot.pdf")
(core:exit)
