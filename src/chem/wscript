def build(bld):
    for name in [
            'rigid_staple',
            'chemInfo',
            'ffTypesDb',
            'ffStretchDb',
            'ffVdwDb',
            'ffAngleDb',
            'ffBaseDb',
            'ffItorDb',
            'ffPtorDb',
            'ffNonbondDb',
            'chemPackage',
            'matter', 
            'aggregate', 
            'molecule', 
            'residue', 
            'atom', 
            'bond', 
            'atomIdMap',
            'atomId',
            'elements',
            'restraint', 
            'minimizer',
            'angle',
            'properTorsion',
            'improperTorsion',
            'topology', 
            'candoDatabase', 
            'constitution', 
            'monomerCoordinates',
            'frameRecognizer',
            'rotamer',
            'atomReference',
            'entity',
            'pdbMonomer',
            'constitutionAtoms',
            'stereoisomerAtoms',
            'loop',
            'trajectory',
            'indirectAtomCoordinateReference',
            'energyComponent',
            'energyStretch',
            'energyAngle',
            'energyDihedral',
            'energyNonbond',
            'energyChiralRestraint',
            'energyAnchorRestraint',
            'energyPointToLineRestraint',
            'energyOutOfZPlane',
            'energyImproperRestraint',
            'energyFixedNonbond',
            'energyAtomTable',
            'energyRigidBodyStaple',
            'energyRigidBodyNonbond',
            'scoringFunction',
            'energyFunction',
            'sketchFunction',
            'energySketchNonbond',
            'rigidBodyEnergyFunction',
            'complexRestraints',
            'searchStatistics',
            'plug', 
            'specificContext',
            'calculatePosition',
            'virtualAtom',
            'coordSys', 
            'coupling', 
            'mbbCoreTools', 
            'nVector', 
            'oligomer', 
            'spanningLoop', 
            'spline', 
            'superposeEngine', 
            'virtualSphere', 
            'moe', 
            'mol2', 
            'numericalFunction', 
            'forceField',
            'linearAlgebra',
            'minimizerLog',
            'iterateRestraints', 
            'pdb', 
            'ringFinder', 
            'iterateMatter', 
            'macroModel', 
#            'typeAssignmentRules', 
            'alias', 
            'superposableConformationCollection', 
            'zMatrix', 
            'structureComparer', 
            'chimera', 
            'command', 
            'monomerPack', 
            'statusTracker', 
            'atomIndexer', 
            'structureList', 
            'twister', 
            'largeSquareMatrix', 
            'randomGenerators', 
            'stereochemistry', 
            'entityNameSet', 
            'monomerContext', 
            'representedEntityNameSet', 
            'readAmberParameters',
            'cipPrioritizer',
            'chemdraw',
            'candoScript',
            'monomer', 
            'conformationExplorer', 
            'conformationCollection', 
 #           'gaff_Parser',
            'octree' ]:
        source(bld,name)

def source(bld,name):
    full_name = name+'.cc'
    node = bld.path.find_node(full_name)
    assert node != None, "Could not find %s/%s" % ( bld.path.abspath(), full_name )
    bld.extensions_source_files.append(node)


