def build(bld):
    for name in [
        'aggregateNode',
        'jointTemplate',
        'atomTree',
        'bondId',
        'bondedAtom',
        'chainNode',
        'chiDihedrals',
        'conformation',
            'coordinateCalculators',
        'delayedBondedAtom',
        'dofType',
        'foldTree',
        'jump',
        'jumpAtom',
        'kin_atom',
        'kin_rotamer',
        'kinematicsPackage',
        'monomerBaseNode',
        'monomerId',
        'monomerNode',
        'originJumpAtom',
        'ringClosingMonomerNode',
        'rootAtomInfo',
        'rootBondedAtom',
        'stub'
    ]:
        source(bld,name)

def source(bld,name):
    full_name = name+'.cc'
    node = bld.path.find_node(full_name)
    assert node != None, "Could not find %s/%s" % ( bld.path.abspath(), full_name )
    bld.extensions_source_files.append(node)


