dimension.cc:37:	return _lisp->onil();
namedUnit.cc:18:	NamedUnit_sp n = _lisp->create<NamedUnit_O>();
namedUnit.cc:19:	n->_Symbol = _lisp->symbol(symbolId);
namedUnit.cc:31:	NamedUnit_sp n = _lisp->create<NamedUnit_O>();
namedUnit.cc:32:	n->_Symbol = _lisp->symbol(symbolId);
namedUnit.cc:44:	NamedUnit_sp n = _lisp->create<NamedUnit_O>();
namedUnit.cc:45:	n->_Symbol = _lisp->symbol(symbolId);
namedUnit.cc:73:	return _lisp->onil();
unit.cc:78://	core::Binder_sp unitDatabase = _lisp->symbol(_sym_UnitsPkg_StarUnitDatabaseStar)->symbolValue()->as<core::Binder_O>();
unit.cc:149://	core::Binder_sp unitDatabase = _lisp->symbol(_sym_UnitsPkg_StarUnitDatabaseStar)->symbolValue()->as<core::Binder_O>();
unitsPackage.cc:97:#define defDim(sym,scale,code,dim,pwr) Unit_sp unit_##sym = _lisp->symbol(_sym_##sym)->exportYourself()->defparameter(NamedUnit_O::create(_sym_##sym,scale,dim,pwr,code,code,_lisp))->as<Unit_O>();
unitsPackage.cc:123:	    _lisp->symbol(_sym_coulomb)->exportYourself()->defparameter(unit_coulomb);
unitsPackage.cc:128:	    _lisp->symbol(_sym_elementaryCharge)->exportYourself()->defparameter(unit_elementaryCharge);
unitsPackage.cc:140:	    _lisp->symbol(_sym_joules)->exportYourself()->defparameter(unit_joules);
unitsPackage.cc:144:	    _lisp->symbol(_sym_kilojoules)->exportYourself()->defparameter(unit_kilojoules);
unitsPackage.cc:150:	    _lisp->symbol(_sym_kilojoules_per_mole)->exportYourself()->defparameter(unit_kilojoules_per_mole);
unitsPackage.cc:155:	    _lisp->symbol(_sym_kilocalories_per_mole)->exportYourself()->defparameter(unit_kilocalories_per_mole);
unitsPackage.cc:161:	    _lisp->symbol(_sym_nm_per_ps)->exportYourself()->defparameter(unit_nm_per_ps);
unitsPackage.cc:167:	    _lisp->symbol(_sym_daltons)->exportYourself()->defparameter(unit_daltons);
unitsPackage.cc:207:	    _lisp->installPackage(unitsPkgP);
