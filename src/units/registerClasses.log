Namespace changed to core - -nofile-:0
    CurrentPackage set to None
!!!!! Reading fileName(include/unitsPackage.h)
!!!!! Associating namespace(units) with package(UnitsPkg)
Namespace changed to units - include/unitsPackage.h:14
    CurrentPackage set to UnitsPkg
!!!!! Reading fileName(include/dimension.fwd.h)
Namespace changed to units - include/dimension.fwd.h:8
    CurrentPackage set to UnitsPkg
!!!!! Reading fileName(include/dimension.h)
Namespace changed to units - include/dimension.h:7
    CurrentPackage set to UnitsPkg
In fileName: include/dimension.h parsed cppClassDefinition line: class Dimension_O : public core::T_O
Creating one Initializer(units::Dimension_O) baseInitializer(['core::T_O'])
Group: <__main__.ClassGroup instance at 0x1050d3680>  target: units::Dimension_O   filename: include/dimension.h
createOnClass@include/dimension.h:11 --> units::Dimension_O
In fileName: include/dimension.h parsed lispBase1 line: LISP_BASE1(core::T_O);
In fileName: include/dimension.h parsed lispClass line: LISP_CLASS(units,UnitsPkg,Dimension_O,"Dimension");
updateLatestClass info for class[units::Dimension_O] packageName[UnitsPkg]
!!!!! Reading fileName(include/kinFoundation.h)
Namespace changed to kinematics - include/kinFoundation.h:6
    CurrentPackage set to None
!!!!! Reading fileName(include/namedUnit.h)
Namespace changed to units - include/namedUnit.h:12
    CurrentPackage set to UnitsPkg
In fileName: include/namedUnit.h parsed cppClassDefinition line: class NamedUnit_O : public Unit_O
Creating one Initializer(units::NamedUnit_O) baseInitializer(['units::Unit_O'])
Group: <__main__.ClassGroup instance at 0x1050d3680>  target: units::NamedUnit_O   filename: include/namedUnit.h
createOnClass@include/namedUnit.h:16 --> units::NamedUnit_O
In fileName: include/namedUnit.h parsed lispBase1 line: LISP_BASE1(Unit_O);
In fileName: include/namedUnit.h parsed lispClass line: LISP_CLASS(units,UnitsPkg,NamedUnit_O,"NamedUnit");
updateLatestClass info for class[units::NamedUnit_O] packageName[UnitsPkg]
!!!!! Reading fileName(include/otherPackageClasses.h)
!!!!! Reading fileName(include/quantity.fwd.h)
Namespace changed to units - include/quantity.fwd.h:8
    CurrentPackage set to UnitsPkg
!!!!! Reading fileName(include/quantity.h)
Namespace changed to units - include/quantity.h:9
    CurrentPackage set to UnitsPkg
In fileName: include/quantity.h parsed cppClassDefinition line: class Quantity_O : public core::T_O
Creating one Initializer(units::Quantity_O) baseInitializer(['core::T_O'])
Group: <__main__.ClassGroup instance at 0x1050d3680>  target: units::Quantity_O   filename: include/quantity.h
createOnClass@include/quantity.h:13 --> units::Quantity_O
In fileName: include/quantity.h parsed lispBase1 line: LISP_BASE1(core::T_O);
In fileName: include/quantity.h parsed lispClass line: LISP_CLASS(units,UnitsPkg,Quantity_O,"Quantity");
updateLatestClass info for class[units::Quantity_O] packageName[UnitsPkg]
!!!!! Reading fileName(include/symbolTable.h)
Namespace changed to units - include/symbolTable.h:6
    CurrentPackage set to UnitsPkg
!!!!! Reading fileName(include/unit.h)
Namespace changed to units - include/unit.h:8
    CurrentPackage set to UnitsPkg
In fileName: include/unit.h parsed cppClassDefinition line: class Unit_O : public core::T_O
Creating one Initializer(units::Unit_O) baseInitializer(['core::T_O'])
Group: <__main__.ClassGroup instance at 0x1050d3680>  target: units::Unit_O   filename: include/unit.h
createOnClass@include/unit.h:12 --> units::Unit_O
In fileName: include/unit.h parsed lispBase1 line: LISP_BASE1(core::T_O);
In fileName: include/unit.h parsed lispClass line: LISP_CLASS(units,UnitsPkg,Unit_O,"Unit");
updateLatestClass info for class[units::Unit_O] packageName[UnitsPkg]
!!!!! Reading fileName(include/unitsFoundation.h)
Namespace changed to kinematics - include/unitsFoundation.h:6
    CurrentPackage set to None
!!!!! Reading fileName(include/unitsPackage.h)
!!!!! Associating namespace(units) with package(UnitsPkg)
Namespace changed to units - include/unitsPackage.h:14
    CurrentPackage set to UnitsPkg
!!!!! Reading fileName(*.h)
Skipping file[*.h] - it doesn't exist
!!!!! Reading fileName(dimension.cc)
Namespace changed to units - dimension.cc:7
    CurrentPackage set to UnitsPkg
!!!!! Reading fileName(namedUnit.cc)
Namespace changed to units - namedUnit.cc:8
    CurrentPackage set to UnitsPkg
!!!!! Reading fileName(quantity.cc)
Namespace changed to units - quantity.cc:11
    CurrentPackage set to UnitsPkg
!!!!! Reading fileName(unit.cc)
Namespace changed to units - unit.cc:14
    CurrentPackage set to UnitsPkg
!!!!! Reading fileName(unitsPackage.cc)
Namespace changed to kw - unitsPackage.cc:17
    CurrentPackage set to None
Namespace changed to units - unitsPackage.cc:29
    CurrentPackage set to UnitsPkg
Namespace changed to units - unitsPackage.cc:44
    CurrentPackage set to UnitsPkg
Namespace changed to units - unitsPackage.cc:60
    CurrentPackage set to UnitsPkg
-------- loaded everything -------- now processing
============= Writing classInitializers
Class[core::T_O] was not defined
Class[core::T_O] was not defined
Class[core::T_O] was not defined
Class[core::T_O] was not defined
Class[core::T_O] was not defined
For class[units::Dimension_O] requirements = set(['core::T_O'])
Returning bases[['core::T_O']]
For class[units::Quantity_O] requirements = set(['core::T_O'])
Returning bases[['core::T_O']]
For class[units::Unit_O] requirements = set(['core::T_O'])
Returning bases[['core::T_O']]
For class[units::NamedUnit_O] requirements = set(['units::Unit_O'])
Returning bases[['units::Unit_O']]
Class[core::T_O] was not defined
Class[core::T_O] was not defined
Class[core::T_O] was not defined
Writing macros
Class[core::T_O] was not defined
------------- Done classInitializers
===============  afterInitializers
