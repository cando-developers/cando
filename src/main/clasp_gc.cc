/*
    File: clasp_gc.cc
*/
/*
Open Source License
Copyright (c) 2016, Christian E. Schafmeister
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 
This is an open source license for the CANDO software from Temple University, but it is not the only one. Contact Temple University at mailto:techtransfer@temple.edu if you would like a different license.
*/
/* -^- */
#ifdef DECLARE_FORWARDS
 namespace asttooling {
    class DerivableSyntaxOnlyAction;
    class Message;
    class DerivableASTFrontendAction;
    class AstVisitor_O;
    class DerivableMatchCallback;
    class DerivableFrontendActionFactory;
    class ErrorContent;
    class ContextFrame;
    class ParserValue;
    namespace RegMap {
        class SymbolMatcherDescriptorPair;
        class RegistryMaps;
    };
    namespace internal {
        class FreeFuncMatcherDescriptor;
        class FixedArgCountMatcherDescriptor;
        class VariadicOperatorMatcherDescriptor;
        class OverloadedMatcherDescriptor;
    };
 };
 namespace geom {
    class OVector2_O;
    class BoundingBox_O;
    class OMatrix_O;
    class OVector3_O;
    class CoordinateArrayWithHash_O;
    class Color_O;
    class CoordinateArray_O;
 };
 namespace cffi {
    class Pointer_O;
 };
 namespace units {
    class Unit_O;
    class NamedUnit_O;
    class Quantity_O;
    class Dimension_O;
 };
 namespace clbind {
    class ClassRep_O;
    class ClassRegistry_O;
    class DummyCreator;
    namespace detail {
        class class_map;
    };
 };
 namespace llvmo {
    class DataLayoutPass_O;
    class TargetLibraryInfo_O;
    class Argument_O;
    class FunctionPassManager_O;
    class DISubprogram_O;
    class PHINode_O;
    class UnreachableInst_O;
    class PointerType_O;
    class TargetOptions_O;
    class ConstantInt_O;
    class DIBuilder_O;
    class InvokeInst_O;
    class AttributeSet_O;
    class PassManager_O;
    class CompositeType_O;
    class User_O;
    class ArrayType_O;
    class Linker_O;
    class Pass_O;
    class StructType_O;
    class DebugInfo_O;
    class ImmutablePass_O;
    class Module_O;
    class Constant_O;
    class APFloat_O;
    class ConstantFP_O;
    class LLVMContext_O;
    class FunctionType_O;
    class Target_O;
    class APInt_O;
    class DIDescriptor_O;
    class VAArgInst_O;
    class DIType_O;
    class DISubroutineType_O;
    class IRBuilder_O;
    class PassManagerBase_O;
    class ModulePass_O;
    class Value_O;
    class IRBuilderBase_O;
    class LandingPadInst_O;
    class GlobalValue_O;
    class ConstantArray_O;
    class Instruction_O;
    class BranchInst_O;
    class SequentialType_O;
    class ConstantStruct_O;
    class BasicBlock_O;
    class AtomicCmpXchgInst_O;
    class VectorType_O;
    class DICompileUnit_O;
    class DebugLoc_O;
    class IntegerType_O;
    class UndefValue_O;
    class TerminatorInst_O;
    class MCSubtargetInfo_O;
    class ConstantPointerNull_O;
    class EngineBuilder_O;
    class IndirectBrInst_O;
    class FenceInst_O;
    class ConstantExpr_O;
    class DataLayout_O;
    class Triple_O;
    class ResumeInst_O;
    class AtomicRMWInst_O;
    class FunctionPass_O;
    class StoreInst_O;
    class BlockAddress_O;
    class DIArray_O;
    class DIDerivedType_O;
    class GlobalVariable_O;
    class DIBasicType_O;
    class TargetMachine_O;
    class UnaryInstruction_O;
    class DICompositeType_O;
    class ValueAsMetadata_O;
    class ConstantDataSequential_O;
    class DITypeArray_O;
    class InsertPoint_O;
    class Function_O;
    class SwitchInst_O;
    class CallInst_O;
    class AllocaInst_O;
    class Type_O;
    class DILexicalBlock_O;
    class Metadata_O;
    class NamedMDNode_O;
    class Attribute_O;
    class DIFile_O;
    class ConstantDataArray_O;
    class MDString_O;
    class ExecutionEngine_O;
    class CompiledClosure;
    class DIScope_O;
    class LoadInst_O;
    class TargetSubtargetInfo_O;
    class PassManagerBuilder_O;
    class ReturnInst_O;
    class LLVMTargetMachine_O;
    class MDNode_O;
 };
 namespace adapt {
    class StringSet_O;
    class SymbolSet_O;
    class StringList_O;
    class ObjectSet_O;
    class IndexedObjectBag_O;
    class SymbolList_O;
    class IterateCons_O;
    class QDomNode_O;
 };
 namespace core {
    class Float_O;
    class ConsStepper;
    class HashTableEq_O;
    class Complex_O;
    class Regex_O;
    class EchoStream_O;
    class SingleDispatchGenericFunction_O;
    class BranchSNode_O;
    class WeakHashTable_O;
    class Reader_O;
    class MacroletEnvironment_O;
    class ActivationFrame_O;
    class CxxObject_O;
    class Array_O;
    class SNode_O;
    class SexpLoadArchive_O;
    class SexpSaveArchive_O;
    class ValueEnvironment_O;
    class StrWithFillPtr_O;
    class UserData_O;
    class Package_O;
    class FunctionContainerEnvironment_O;
    class FunctionFrame_O;
    class FunctionValueEnvironment_O;
    class RegexMatch_O;
    class Class_O;
    class DirectoryEntry_O;
    class HashTableEqual_O;
    class LogicalPathname_O;
    class StandardObject_O;
    class SynonymStream_O;
    class LoadTimeValues_O;
    class VectorDisplaced_O;
    class WeakKeyHashTable_O;
    class BroadcastStream_O;
    class LexicalEnvironment_O;
    class InstanceCreator;
    class Specializer_O;
    class Null_O;
    class GlueEnvironment_O;
    class VectorObjects_O;
    class SourcePosInfo_O;
    class VectorObjectsWithFillPtr_O;
    class MultiStringBuffer_O;
    class VectorStepper;
    class BitVector_O;
    class InterpretedClosure;
    class UnwindProtectEnvironment_O;
    class SymbolMacroletEnvironment_O;
    class FileStatus_O;
    class Real_O;
    class Stream_O;
    class Cons_O;
    class SpecialForm_O;
    class CoreExposer;
    class Metaobject_O;
    class HashTableEql_O;
    class ArrayDisplaced_O;
    class ForwardReferencedClass_O;
    class SourceFileInfo_O;
    class StringStream_O;
    class KeywordArgument;
    class Path_O;
    class AuxArgument;
    class SingleFloat_dummy_O;
    class CxxClass_O;
    class StructureObject_O;
    class IOStreamStream_O;
    class InvocationHistoryFrameIterator_O;
    class RandomState_O;
    class CompileTimeEnvironment_O;
    class StdClass_O;
    class RecursiveDirectoryIterator_O;
    class HashTableEqualp_O;
    class InstanceClosure;
    class StructureClass_O;
    class IOFileStream_O;
    class Integer_O;
    class TwoWayStream_O;
    class FuncallableStandardClass_O;
    class Function_O;
    class WeakPointer_O;
    class Pointer_O;
    class VaList_dummy_O;
    class RuntimeVisibleEnvironment_O;
    class ExternalObject_O;
    class OptionalArgument;
    class String_O;
    class CacheRecord;
    class Instance_O;
    class BitVectorWithFillPtr_O;
    class IntArray_O;
    class PosixTime_O;
    class StackValueEnvironment_O;
    class Lisp_O;
    class T_O;
    class Symbol_O;
    class ExceptionEntry;
    class Ratio_O;
    class LoadArchive_O;
    class RequiredArgument;
    class SymbolClassPair;
    class MacroClosure;
    class SymbolStorage;
    class BlockEnvironment_O;
    class FileStream_O;
    class LongFloat_O;
    class ArrayObjects_O;
    class StandardClass_O;
    class CompiledFunction_O;
    class PosixTimeDuration_O;
    class Bignum_O;
    class SymbolToEnumConverter_O;
    class ReadTable_O;
    class CandoException_O;
    class Number_O;
    class DynamicBinding;
    class SingleDispatchEffectiveMethodFunction_O;
    class StringInputStream_O;
    class AnsiStream_O;
    class Rational_O;
    class Archive_O;
    class HashTable_O;
    class ConcatenatedStream_O;
    class Str_O;
    class Environment_O;
    class WeakKeyMapping_O;
    class LambdaListHandler_O;
    class Vector_O;
    class StringOutputStream_O;
    class DirectoryIterator_O;
    class SingleDispatchMethod_O;
    class TagbodyFrame_O;
    class BuiltInClass_O;
    class TagbodyEnvironment_O;
    class Cache;
    class Fixnum_dummy_O;
    class Character_dummy_O;
    class ValueFrame_O;
    class SimpleBitVector_O;
    class SmallMultimap_O;
    class Binder_O;
    class ForeignData_O;
    class CatchEnvironment_O;
    class LeafSNode_O;
    class SingleDispatchGenericFunctionClosure;
    class Pathname_O;
    class SaveArchive_O;
    class SourceManager_O;
    class Record_O;
    class ShortFloat_O;
    class SmallMap_O;
    class LightUserData_O;
    class DoubleFloat_O;
 };
 namespace chem {
    class MessageReport_O;
    class EntityNameSetBase_O;
    class AtomTable_O;
    class Command_O;
    class IterateResidues_O;
    class TagSet_O;
    class DirectionalCoupling_O;
    class EnergyChiralRestraint_O;
    class NVector_O;
    class EnergyImproperRestraint_O;
    class Root_O;
    class ResidueOut;
    class EnergyImproperRestraint;
    class Monomer_O;
    class MonomerContext_O;
    class FFNonbondCrossTermTable_O;
    class FFStretch_O;
    class CDFragment_O;
    class BondList_O;
    class ResidueList_O;
    class Structure_Old_ListEntry_O;
    class OligomerPart_Monomer_O;
    class OutPlug_O;
    class ReadAmberParameters_O;
    class AtomIndexer_O;
    class Residue_O;
    class EnergyChiralRestraint;
    class RestrainedExoCyclicAtom_O;
    class Structure_Old_List_O;
    class SpanningLoop_O;
    class ChemInfoMatch_O;
    class CDBond_O;
    class OligomerPart_Link_O;
    class EnergyAtom;
    class CalculatePositionUsingInternals_O;
    class RingClosingMate_O;
    class RestrainedPiBond_O;
    class OneMonomer_O;
    class ForceField_O;
    class ReportBase_O;
    class FFAngle_O;
    class PathMessage_O;
    class FrameRecognizer_O;
    class MonomerCoordinates_O;
    class StereoisomerAtom_O;
    class SearchStatistics_O;
    class RestraintAngle_O;
    class ZMatrixBondInternal_O;
    class FFVdw_O;
    class FFStretchDb_O;
    class EnergyAnchorRestraint_O;
    class AtomId_O;
    class TypeAssignmentRules_O;
    class SmartsRoot_O;
    class EnergyNonbond;
    class WildElementDict_O;
    class PlugWithMates_O;
    class EnergyAnchorRestraint;
    class EnergyAngle_O;
    class ResidueTest_O;
    class SpecificContext_O;
    class AtomOrBondMatchNode_O;
    class AntechamberFocusAtomMatch_O;
    class CDText_O;
    class RestraintAnchor_O;
    class PdbMonomerConnectivity_O;
    class IterateBonds_O;
    class Plug_O;
    class IterateAtoms_O;
    class SparseLargeSquareMatrix_O;
    class RepresentedEntityNameSet_O;
    class SuperposeSelectedAtoms_O;
    class MinimizerLog_O;
    class FFTypesDb_O;
    class Branch_O;
    class ChemInfo_O;
    class ZMatrixEntry_O;
    class RestraintFixedNonbond_O;
    class StereoInformation_O;
    class MacroModelFile_O;
    class RestraintChiral_O;
    class PdbWriter_O;
    class ChemDraw_O;
    class AGEdge_O;
    class ConformationExplorerMatch_O;
    class ImproperTorsion_O;
    class ConstitutionAtoms_O;
    class Aggregate_O;
    class Atom_O;
    class CoordinateSystem_O;
    class JumpPlug_O;
    class ConformationCollectionEntry_O;
    class Restraint_O;
    class ChemInfoNode_O;
    class FFNonbond_O;
    class FFPtorDb_O;
    class FFPtor_O;
    class AtomInfo;
    class Molecule_O;
    class RingTest_O;
    class EnergyDihedral_O;
    class MultiMonomer_O;
    class RootMatchNode_O;
    class Minimizer_O;
    class Oligomer_O;
    class ConstitutionBond_O;
    class Entity_O;
    class StereoisomerAtoms_O;
    class EntityNameSetWithCap_O;
    class ConformationExplorerEntry_O;
    class AtomReferenceBase_O;
    class CDNode_O;
    class FixedNonbondRestraint;
    class Chain_O;
    class TrajectoryFrame_O;
    class EnergyComponent_O;
    class PdbMonomerDatabase_O;
    class Coupling_O;
    class KeyEntry;
    class PdbReader_O;
    class EnergyStretch_O;
    class ZMatrixInternal_O;
    class CipPrioritizer_O;
    class Matter_O;
    class Mate_O;
    class EstimateStretch;
    class Bond_O;
    class RestraintDihedral_O;
    class AGVertex_O;
    class FullLargeSquareMatrix_O;
    class FFItorDb_O;
    class BondTest_O;
    class Alias_O;
    class CandoDatabase_O;
    class AtomReference_O;
    class ProperTorsion_O;
    class ComplexRestraint_O;
    class EnergyFunction_O;
    class CalculatePositionRelativeToOrigin_O;
    class IterateRestraints_O;
    class AntechamberRoot_O;
    class ZMatrix_O;
    class Stereoisomer_O;
    class AntechamberBondTest_O;
    class IterateMatter_O;
    class BondMatchNode_O;
    class StatusTracker_O;
    class AtomPdbRec;
    class OneTypeRule_O;
    class SuperposableConformationCollection_O;
    class ZMatrixAngleInternal_O;
    class EnergyNonbond_O;
    class OligomerPart_Base_O;
    class RingClosingPlug_O;
    class FFAngleDb_O;
    class CalculatePositionAlongBond_O;
    class EnergyAngle;
    class EntityNameSet_O;
    class ConformationCollection_O;
    class InfoDb_O;
    class ConformationExplorer_O;
    class ConstitutionVirtualAtom_O;
    class ConstitutionAtom_O;
    class NumericalFunction_O;
    class AbstractLargeSquareMatrix_O;
    class ZMatrixDihedralInternal_O;
    class TwisterDriver_O;
    class FFNonbondDb_O;
    class VirtualAtom_O;
    class EnergyDihedral;
    class VirtualSphere_O;
    class Rotamer_O;
    class FFItor_O;
    class Topology_O;
    class StereoConfiguration_O;
    class BondListMatchNode_O;
    class Trajectory_O;
    class MapOfMonomerNamesToAtomIndexers_O;
    class RingCoupling_O;
    class AfterMatchBondTest_O;
    class RingFinder_O;
    class Twister_O;
    class FFBaseDb_O;
    class InPlug_O;
    class MonomerPack_O;
    class SuperposeEngine_O;
    class CalculatePosition_O;
    class ForceMatchReport_O;
    class StereoisomerVirtualAtom_O;
    class Constitution_O;
    class FFParameter_O;
    class EnergyStretch;
    class RestraintDistance_O;
    class SpecificContextSet_O;
    class ConformationExplorerEntryStage_O;
    class Angle_O;
    class EnergyFixedNonbondRestraint_O;
    class BeyondThresholdFixedNonbondRestraint;
    class StructureComparer_O;
    class AtomTest_O;
    class Logical_O;
    class StepReport_O;
    class AtomIdToAtomMap_O;
    class FFVdwDb_O;
 };
#endif // DECLARE_FORWARDS
#if defined(GC_ENUM)
enum { KIND_null = 0, 
KIND_CHARACTER = 3, 
KIND_SINGLE_FLOAT = 2, 
KIND_FIXNUM = 1, 
KIND_ROOTCLASSALLOC_clbind__detail__class_map = 4,
KIND_ROOTCLASSALLOC_core__Lisp_O = 5,
KIND_BOOTSTRAP_core__T_O = 6,
KIND_LISPALLOC_core__Regex_O = 7,
KIND_LISPALLOC_core__WeakHashTable_O = 8,
KIND_LISPALLOC_core__WeakKeyHashTable_O = 9,
KIND_LISPALLOC_core__Reader_O = 10,
KIND_LISPALLOC_core__CxxObject_O = 11,
KIND_LISPALLOC_units__Unit_O = 12,
KIND_LISPALLOC_units__NamedUnit_O = 13,
KIND_LISPALLOC_chem__AtomTable_O = 14,
KIND_LISPALLOC_chem__Command_O = 15,
KIND_LISPALLOC_chem__NVector_O = 16,
KIND_LISPALLOC_geom__OVector2_O = 17,
KIND_LISPALLOC_chem__MonomerContext_O = 18,
KIND_LISPALLOC_chem__FFNonbondCrossTermTable_O = 19,
KIND_LISPALLOC_chem__BondList_O = 20,
KIND_LISPALLOC_chem__CDFragment_O = 21,
KIND_LISPALLOC_chem__ResidueList_O = 22,
KIND_LISPALLOC_chem__Structure_Old_ListEntry_O = 23,
KIND_LISPALLOC_chem__ReadAmberParameters_O = 24,
KIND_LISPALLOC_chem__AtomIndexer_O = 25,
KIND_LISPALLOC_chem__Structure_Old_List_O = 26,
KIND_LISPALLOC_adapt__StringSet_O = 27,
KIND_LISPALLOC_chem__ChemInfoMatch_O = 28,
KIND_LISPALLOC_chem__SpanningLoop_O = 29,
KIND_LISPALLOC_chem__CDBond_O = 30,
KIND_LISPALLOC_chem__ForceField_O = 31,
KIND_LISPALLOC_chem__OneMonomer_O = 32,
KIND_LISPALLOC_chem__ReportBase_O = 33,
KIND_LISPALLOC_chem__MessageReport_O = 34,
KIND_LISPALLOC_chem__ForceMatchReport_O = 35,
KIND_LISPALLOC_chem__StepReport_O = 36,
KIND_LISPALLOC_chem__PathMessage_O = 37,
KIND_LISPALLOC_chem__FrameRecognizer_O = 38,
KIND_LISPALLOC_chem__StereoisomerAtom_O = 39,
KIND_LISPALLOC_chem__StereoisomerVirtualAtom_O = 40,
KIND_LISPALLOC_chem__MonomerCoordinates_O = 41,
KIND_LISPALLOC_chem__SearchStatistics_O = 42,
KIND_LISPALLOC_chem__AtomId_O = 43,
KIND_LISPALLOC_chem__TypeAssignmentRules_O = 44,
KIND_LISPALLOC_chem__WildElementDict_O = 45,
KIND_LISPALLOC_chem__SpecificContext_O = 46,
KIND_LISPALLOC_chem__CDText_O = 47,
KIND_LISPALLOC_chem__PdbMonomerConnectivity_O = 48,
KIND_LISPALLOC_units__Quantity_O = 49,
KIND_LISPALLOC_chem__Plug_O = 50,
KIND_LISPALLOC_chem__PlugWithMates_O = 51,
KIND_LISPALLOC_chem__OutPlug_O = 52,
KIND_LISPALLOC_chem__RingClosingPlug_O = 53,
KIND_LISPALLOC_chem__InPlug_O = 54,
KIND_LISPALLOC_chem__JumpPlug_O = 55,
KIND_LISPALLOC_geom__BoundingBox_O = 56,
KIND_LISPALLOC_chem__MinimizerLog_O = 57,
KIND_LISPALLOC_chem__ChemInfo_O = 58,
KIND_LISPALLOC_chem__ZMatrixEntry_O = 59,
KIND_LISPALLOC_chem__StereoInformation_O = 60,
KIND_LISPALLOC_chem__MacroModelFile_O = 61,
KIND_LISPALLOC_chem__PdbWriter_O = 62,
KIND_LISPALLOC_chem__ChemDraw_O = 63,
KIND_LISPALLOC_chem__AGEdge_O = 64,
KIND_LISPALLOC_chem__ConformationExplorerMatch_O = 65,
KIND_LISPALLOC_chem__ImproperTorsion_O = 66,
KIND_LISPALLOC_chem__ConstitutionAtoms_O = 67,
KIND_LISPALLOC_chem__CoordinateSystem_O = 68,
KIND_LISPALLOC_chem__ConformationCollectionEntry_O = 69,
KIND_LISPALLOC_chem__Restraint_O = 70,
KIND_LISPALLOC_chem__RestraintAngle_O = 71,
KIND_LISPALLOC_chem__RestraintAnchor_O = 72,
KIND_LISPALLOC_chem__RestraintFixedNonbond_O = 73,
KIND_LISPALLOC_chem__RestraintChiral_O = 74,
KIND_LISPALLOC_chem__RestraintDihedral_O = 75,
KIND_LISPALLOC_chem__RestraintDistance_O = 76,
KIND_LISPALLOC_chem__ChemInfoNode_O = 77,
KIND_LISPALLOC_chem__RootMatchNode_O = 78,
KIND_LISPALLOC_chem__AfterMatchBondTest_O = 79,
KIND_LISPALLOC_chem__BondMatchNode_O = 80,
KIND_LISPALLOC_chem__AtomOrBondMatchNode_O = 81,
KIND_LISPALLOC_chem__TagSet_O = 82,
KIND_LISPALLOC_chem__Root_O = 83,
KIND_LISPALLOC_chem__SmartsRoot_O = 84,
KIND_LISPALLOC_chem__AntechamberRoot_O = 85,
KIND_LISPALLOC_chem__ResidueTest_O = 86,
KIND_LISPALLOC_chem__AntechamberFocusAtomMatch_O = 87,
KIND_LISPALLOC_chem__RingTest_O = 88,
KIND_LISPALLOC_chem__AtomTest_O = 89,
KIND_LISPALLOC_chem__Logical_O = 90,
KIND_LISPALLOC_chem__BondTest_O = 91,
KIND_LISPALLOC_chem__AntechamberBondTest_O = 92,
KIND_LISPALLOC_chem__BondListMatchNode_O = 93,
KIND_LISPALLOC_chem__Branch_O = 94,
KIND_LISPALLOC_chem__Chain_O = 95,
KIND_LISPALLOC_chem__Minimizer_O = 96,
KIND_LISPALLOC_chem__Oligomer_O = 97,
KIND_LISPALLOC_chem__ConstitutionBond_O = 98,
KIND_LISPALLOC_chem__Entity_O = 99,
KIND_LISPALLOC_chem__EntityNameSetBase_O = 100,
KIND_LISPALLOC_chem__EntityNameSetWithCap_O = 101,
KIND_LISPALLOC_chem__RingClosingMate_O = 102,
KIND_LISPALLOC_chem__Mate_O = 103,
KIND_LISPALLOC_chem__EntityNameSet_O = 104,
KIND_LISPALLOC_chem__RepresentedEntityNameSet_O = 105,
KIND_LISPALLOC_chem__MonomerPack_O = 106,
KIND_LISPALLOC_chem__Monomer_O = 107,
KIND_LISPALLOC_chem__MultiMonomer_O = 108,
KIND_LISPALLOC_chem__Stereoisomer_O = 109,
KIND_LISPALLOC_chem__Constitution_O = 110,
KIND_LISPALLOC_units__Dimension_O = 111,
KIND_LISPALLOC_geom__OMatrix_O = 112,
KIND_LISPALLOC_chem__StereoisomerAtoms_O = 113,
KIND_LISPALLOC_chem__ConformationExplorerEntry_O = 114,
KIND_LISPALLOC_chem__AtomReferenceBase_O = 115,
KIND_LISPALLOC_chem__AtomReference_O = 116,
KIND_LISPALLOC_chem__CDNode_O = 117,
KIND_LISPALLOC_chem__TrajectoryFrame_O = 118,
KIND_LISPALLOC_chem__EnergyComponent_O = 119,
KIND_LISPALLOC_chem__EnergyChiralRestraint_O = 120,
KIND_LISPALLOC_chem__EnergyImproperRestraint_O = 121,
KIND_LISPALLOC_chem__EnergyAnchorRestraint_O = 122,
KIND_LISPALLOC_chem__EnergyAngle_O = 123,
KIND_LISPALLOC_chem__EnergyDihedral_O = 124,
KIND_LISPALLOC_chem__EnergyStretch_O = 125,
KIND_LISPALLOC_chem__EnergyNonbond_O = 126,
KIND_LISPALLOC_chem__EnergyFixedNonbondRestraint_O = 127,
KIND_LISPALLOC_chem__PdbMonomerDatabase_O = 128,
KIND_LISPALLOC_chem__Coupling_O = 129,
KIND_LISPALLOC_chem__DirectionalCoupling_O = 130,
KIND_LISPALLOC_chem__RingCoupling_O = 131,
KIND_LISPALLOC_chem__PdbReader_O = 132,
KIND_LISPALLOC_chem__ZMatrixInternal_O = 133,
KIND_LISPALLOC_chem__ZMatrixBondInternal_O = 134,
KIND_LISPALLOC_chem__ZMatrixAngleInternal_O = 135,
KIND_LISPALLOC_chem__ZMatrixDihedralInternal_O = 136,
KIND_LISPALLOC_chem__CipPrioritizer_O = 137,
KIND_LISPALLOC_chem__Matter_O = 138,
KIND_LISPALLOC_chem__Residue_O = 139,
KIND_LISPALLOC_chem__Aggregate_O = 140,
KIND_LISPALLOC_chem__Atom_O = 141,
KIND_LISPALLOC_chem__VirtualAtom_O = 142,
KIND_LISPALLOC_chem__Molecule_O = 143,
KIND_LISPALLOC_chem__Bond_O = 144,
KIND_LISPALLOC_chem__AGVertex_O = 145,
KIND_LISPALLOC_chem__Alias_O = 146,
KIND_LISPALLOC_chem__CandoDatabase_O = 147,
KIND_LISPALLOC_chem__ProperTorsion_O = 148,
KIND_LISPALLOC_geom__OVector3_O = 149,
KIND_LISPALLOC_chem__ComplexRestraint_O = 150,
KIND_LISPALLOC_chem__RestrainedExoCyclicAtom_O = 151,
KIND_LISPALLOC_chem__RestrainedPiBond_O = 152,
KIND_LISPALLOC_chem__EnergyFunction_O = 153,
KIND_LISPALLOC_chem__ZMatrix_O = 154,
KIND_LISPALLOC_chem__StatusTracker_O = 155,
KIND_LISPALLOC_chem__OneTypeRule_O = 156,
KIND_LISPALLOC_chem__OligomerPart_Base_O = 157,
KIND_LISPALLOC_chem__OligomerPart_Monomer_O = 158,
KIND_LISPALLOC_chem__OligomerPart_Link_O = 159,
KIND_LISPALLOC_adapt__SymbolList_O = 160,
KIND_LISPALLOC_chem__ConformationCollection_O = 161,
KIND_LISPALLOC_chem__SuperposableConformationCollection_O = 162,
KIND_LISPALLOC_chem__InfoDb_O = 163,
KIND_LISPALLOC_chem__ConformationExplorer_O = 164,
KIND_LISPALLOC_geom__Color_O = 165,
KIND_LISPALLOC_chem__ConstitutionAtom_O = 166,
KIND_LISPALLOC_chem__ConstitutionVirtualAtom_O = 167,
KIND_LISPALLOC_chem__NumericalFunction_O = 168,
KIND_LISPALLOC_chem__AbstractLargeSquareMatrix_O = 169,
KIND_LISPALLOC_chem__SparseLargeSquareMatrix_O = 170,
KIND_LISPALLOC_chem__FullLargeSquareMatrix_O = 171,
KIND_LISPALLOC_chem__TwisterDriver_O = 172,
KIND_LISPALLOC_chem__VirtualSphere_O = 173,
KIND_LISPALLOC_chem__Rotamer_O = 174,
KIND_LISPALLOC_chem__StereoConfiguration_O = 175,
KIND_LISPALLOC_chem__Topology_O = 176,
KIND_LISPALLOC_chem__Trajectory_O = 177,
KIND_LISPALLOC_chem__MapOfMonomerNamesToAtomIndexers_O = 178,
KIND_LISPALLOC_chem__RingFinder_O = 179,
KIND_LISPALLOC_chem__Twister_O = 180,
KIND_LISPALLOC_chem__FFBaseDb_O = 181,
KIND_LISPALLOC_chem__FFStretchDb_O = 182,
KIND_LISPALLOC_chem__FFTypesDb_O = 183,
KIND_LISPALLOC_chem__FFPtorDb_O = 184,
KIND_LISPALLOC_chem__FFItorDb_O = 185,
KIND_LISPALLOC_chem__FFAngleDb_O = 186,
KIND_LISPALLOC_chem__FFNonbondDb_O = 187,
KIND_LISPALLOC_chem__FFVdwDb_O = 188,
KIND_LISPALLOC_chem__SuperposeEngine_O = 189,
KIND_LISPALLOC_chem__SuperposeSelectedAtoms_O = 190,
KIND_LISPALLOC_chem__CalculatePosition_O = 191,
KIND_LISPALLOC_chem__CalculatePositionUsingInternals_O = 192,
KIND_LISPALLOC_chem__CalculatePositionRelativeToOrigin_O = 193,
KIND_LISPALLOC_chem__CalculatePositionAlongBond_O = 194,
KIND_LISPALLOC_chem__FFParameter_O = 195,
KIND_LISPALLOC_chem__FFStretch_O = 196,
KIND_LISPALLOC_chem__FFAngle_O = 197,
KIND_LISPALLOC_chem__FFVdw_O = 198,
KIND_LISPALLOC_chem__FFNonbond_O = 199,
KIND_LISPALLOC_chem__FFPtor_O = 200,
KIND_LISPALLOC_chem__FFItor_O = 201,
KIND_LISPALLOC_chem__SpecificContextSet_O = 202,
KIND_LISPALLOC_chem__ConformationExplorerEntryStage_O = 203,
KIND_LISPALLOC_chem__Angle_O = 204,
KIND_LISPALLOC_adapt__QDomNode_O = 205,
KIND_LISPALLOC_chem__StructureComparer_O = 206,
KIND_LISPALLOC_chem__AtomIdToAtomMap_O = 207,
KIND_LISPALLOC_core__Array_O = 208,
KIND_LISPALLOC_core__ArrayDisplaced_O = 209,
KIND_LISPALLOC_core__ArrayObjects_O = 210,
KIND_LISPALLOC_core__Vector_O = 211,
KIND_LISPALLOC_core__VectorDisplaced_O = 212,
KIND_LISPALLOC_core__VectorObjects_O = 213,
KIND_LISPALLOC_core__VectorObjectsWithFillPtr_O = 214,
KIND_LISPALLOC_core__BitVector_O = 215,
KIND_LISPALLOC_core__BitVectorWithFillPtr_O = 216,
KIND_LISPALLOC_core__SimpleBitVector_O = 217,
KIND_LISPALLOC_core__String_O = 218,
KIND_BOOTSTRAP_core__Str_O = 219,
KIND_LISPALLOC_core__StrWithFillPtr_O = 220,
KIND_LISPALLOC_geom__CoordinateArray_O = 221,
KIND_LISPALLOC_geom__CoordinateArrayWithHash_O = 222,
KIND_LISPALLOC_core__SNode_O = 223,
KIND_LISPALLOC_core__BranchSNode_O = 224,
KIND_LISPALLOC_core__LeafSNode_O = 225,
KIND_LISPALLOC_asttooling__AstVisitor_O = 226,
KIND_LISPALLOC_llvmo__AttributeSet_O = 227,
KIND_LISPALLOC_core__Package_O = 228,
KIND_TEMPLATED_LISPALLOC_core__WrappedPointer_O = 229,
KIND_LISPALLOC_core__RegexMatch_O = 230,
KIND_LISPALLOC_core__DirectoryEntry_O = 231,
KIND_LISPALLOC_clbind__ClassRegistry_O = 232,
KIND_LISPALLOC_llvmo__DebugInfo_O = 233,
KIND_LISPALLOC_llvmo__DISubprogram_O = 234,
KIND_LISPALLOC_llvmo__DIDescriptor_O = 235,
KIND_LISPALLOC_llvmo__DIType_O = 236,
KIND_LISPALLOC_llvmo__DISubroutineType_O = 237,
KIND_LISPALLOC_llvmo__DICompileUnit_O = 238,
KIND_LISPALLOC_llvmo__DIDerivedType_O = 239,
KIND_LISPALLOC_llvmo__DIArray_O = 240,
KIND_LISPALLOC_llvmo__DIBasicType_O = 241,
KIND_LISPALLOC_llvmo__DICompositeType_O = 242,
KIND_LISPALLOC_llvmo__DITypeArray_O = 243,
KIND_LISPALLOC_llvmo__DILexicalBlock_O = 244,
KIND_LISPALLOC_llvmo__DIFile_O = 245,
KIND_LISPALLOC_llvmo__DIScope_O = 246,
KIND_BOOTSTRAP_core__StandardObject_O = 247,
KIND_BOOTSTRAP_core__Metaobject_O = 248,
KIND_BOOTSTRAP_core__Specializer_O = 249,
KIND_BOOTSTRAP_core__Class_O = 250,
KIND_LISPALLOC_core__ForwardReferencedClass_O = 251,
KIND_LISPALLOC_core__CxxClass_O = 252,
KIND_BOOTSTRAP_core__StdClass_O = 253,
KIND_LISPALLOC_core__FuncallableStandardClass_O = 254,
KIND_BOOTSTRAP_core__StandardClass_O = 255,
KIND_BOOTSTRAP_core__StructureClass_O = 256,
KIND_BOOTSTRAP_core__BuiltInClass_O = 257,
KIND_LISPALLOC_clbind__ClassRep_O = 258,
KIND_LISPALLOC_core__LoadTimeValues_O = 259,
KIND_LISPALLOC_adapt__SymbolSet_O = 260,
KIND_LISPALLOC_core__SourcePosInfo_O = 261,
KIND_LISPALLOC_core__MultiStringBuffer_O = 262,
KIND_TEMPLATED_LISPALLOC_core__Iterator_O = 263,
KIND_LISPALLOC_core__RecursiveDirectoryIterator_O = 264,
KIND_LISPALLOC_chem__IterateRestraints_O = 265,
KIND_LISPALLOC_chem__IterateMatter_O = 266,
KIND_LISPALLOC_chem__IterateResidues_O = 267,
KIND_LISPALLOC_chem__IterateBonds_O = 268,
KIND_LISPALLOC_chem__IterateAtoms_O = 269,
KIND_LISPALLOC_core__DirectoryIterator_O = 270,
KIND_LISPALLOC_adapt__IterateCons_O = 271,
KIND_LISPALLOC_core__FileStatus_O = 272,
KIND_LISPALLOC_adapt__StringList_O = 273,
KIND_LISPALLOC_core__Stream_O = 274,
KIND_LISPALLOC_core__AnsiStream_O = 275,
KIND_LISPALLOC_core__EchoStream_O = 276,
KIND_LISPALLOC_core__SynonymStream_O = 277,
KIND_LISPALLOC_core__BroadcastStream_O = 278,
KIND_LISPALLOC_core__StringStream_O = 279,
KIND_LISPALLOC_core__StringInputStream_O = 280,
KIND_LISPALLOC_core__StringOutputStream_O = 281,
KIND_LISPALLOC_core__TwoWayStream_O = 282,
KIND_LISPALLOC_core__FileStream_O = 283,
KIND_LISPALLOC_core__IOStreamStream_O = 284,
KIND_LISPALLOC_core__IOFileStream_O = 285,
KIND_LISPALLOC_core__ConcatenatedStream_O = 286,
KIND_LISPALLOC_core__Cons_O = 287,
KIND_LISPALLOC_cffi__Pointer_O = 288,
KIND_LISPALLOC_core__SourceFileInfo_O = 289,
KIND_LISPALLOC_core__Path_O = 290,
KIND_LISPALLOC_core__StructureObject_O = 291,
KIND_LISPALLOC_core__InvocationHistoryFrameIterator_O = 292,
KIND_LISPALLOC_core__RandomState_O = 293,
KIND_LISPALLOC_llvmo__DebugLoc_O = 294,
KIND_LISPALLOC_core__Function_O = 295,
KIND_LISPALLOC_core__SingleDispatchGenericFunction_O = 296,
KIND_LISPALLOC_core__SpecialForm_O = 297,
KIND_LISPALLOC_core__Instance_O = 298,
KIND_LISPALLOC_core__CompiledFunction_O = 299,
KIND_LISPALLOC_core__SingleDispatchEffectiveMethodFunction_O = 300,
KIND_LISPALLOC_core__WeakPointer_O = 301,
KIND_LISPALLOC_core__Pointer_O = 302,
KIND_LISPALLOC_core__VaList_dummy_O = 303,
KIND_LISPALLOC_core__ExternalObject_O = 304,
KIND_LISPALLOC_llvmo__TargetOptions_O = 305,
KIND_LISPALLOC_llvmo__DIBuilder_O = 306,
KIND_LISPALLOC_llvmo__Pass_O = 307,
KIND_LISPALLOC_llvmo__ModulePass_O = 308,
KIND_LISPALLOC_llvmo__ImmutablePass_O = 309,
KIND_LISPALLOC_llvmo__DataLayoutPass_O = 310,
KIND_LISPALLOC_llvmo__TargetLibraryInfo_O = 311,
KIND_LISPALLOC_llvmo__FunctionPass_O = 312,
KIND_LISPALLOC_llvmo__Linker_O = 313,
KIND_LISPALLOC_llvmo__Module_O = 314,
KIND_LISPALLOC_llvmo__APFloat_O = 315,
KIND_LISPALLOC_llvmo__LLVMContext_O = 316,
KIND_LISPALLOC_llvmo__Target_O = 317,
KIND_LISPALLOC_llvmo__APInt_O = 318,
KIND_LISPALLOC_llvmo__PassManagerBase_O = 319,
KIND_LISPALLOC_llvmo__FunctionPassManager_O = 320,
KIND_LISPALLOC_llvmo__PassManager_O = 321,
KIND_LISPALLOC_llvmo__Value_O = 322,
KIND_LISPALLOC_llvmo__Argument_O = 323,
KIND_LISPALLOC_llvmo__User_O = 324,
KIND_LISPALLOC_llvmo__Constant_O = 325,
KIND_LISPALLOC_llvmo__ConstantInt_O = 326,
KIND_LISPALLOC_llvmo__ConstantFP_O = 327,
KIND_LISPALLOC_llvmo__GlobalValue_O = 328,
KIND_LISPALLOC_llvmo__GlobalVariable_O = 329,
KIND_LISPALLOC_llvmo__Function_O = 330,
KIND_LISPALLOC_llvmo__ConstantArray_O = 331,
KIND_LISPALLOC_llvmo__ConstantStruct_O = 332,
KIND_LISPALLOC_llvmo__UndefValue_O = 333,
KIND_LISPALLOC_llvmo__ConstantPointerNull_O = 334,
KIND_LISPALLOC_llvmo__ConstantExpr_O = 335,
KIND_LISPALLOC_llvmo__BlockAddress_O = 336,
KIND_LISPALLOC_llvmo__ConstantDataSequential_O = 337,
KIND_LISPALLOC_llvmo__ConstantDataArray_O = 338,
KIND_LISPALLOC_llvmo__Instruction_O = 339,
KIND_LISPALLOC_llvmo__PHINode_O = 340,
KIND_LISPALLOC_llvmo__LandingPadInst_O = 341,
KIND_LISPALLOC_llvmo__AtomicCmpXchgInst_O = 342,
KIND_LISPALLOC_llvmo__TerminatorInst_O = 343,
KIND_LISPALLOC_llvmo__UnreachableInst_O = 344,
KIND_LISPALLOC_llvmo__InvokeInst_O = 345,
KIND_LISPALLOC_llvmo__BranchInst_O = 346,
KIND_LISPALLOC_llvmo__IndirectBrInst_O = 347,
KIND_LISPALLOC_llvmo__ResumeInst_O = 348,
KIND_LISPALLOC_llvmo__SwitchInst_O = 349,
KIND_LISPALLOC_llvmo__ReturnInst_O = 350,
KIND_LISPALLOC_llvmo__FenceInst_O = 351,
KIND_LISPALLOC_llvmo__AtomicRMWInst_O = 352,
KIND_LISPALLOC_llvmo__StoreInst_O = 353,
KIND_LISPALLOC_llvmo__UnaryInstruction_O = 354,
KIND_LISPALLOC_llvmo__VAArgInst_O = 355,
KIND_LISPALLOC_llvmo__AllocaInst_O = 356,
KIND_LISPALLOC_llvmo__LoadInst_O = 357,
KIND_LISPALLOC_llvmo__CallInst_O = 358,
KIND_LISPALLOC_llvmo__BasicBlock_O = 359,
KIND_LISPALLOC_llvmo__IRBuilderBase_O = 360,
KIND_LISPALLOC_llvmo__IRBuilder_O = 361,
KIND_LISPALLOC_llvmo__MCSubtargetInfo_O = 362,
KIND_LISPALLOC_llvmo__TargetSubtargetInfo_O = 363,
KIND_LISPALLOC_llvmo__EngineBuilder_O = 364,
KIND_LISPALLOC_llvmo__DataLayout_O = 365,
KIND_LISPALLOC_llvmo__Triple_O = 366,
KIND_LISPALLOC_llvmo__TargetMachine_O = 367,
KIND_LISPALLOC_llvmo__LLVMTargetMachine_O = 368,
KIND_LISPALLOC_llvmo__Type_O = 369,
KIND_LISPALLOC_llvmo__CompositeType_O = 370,
KIND_LISPALLOC_llvmo__StructType_O = 371,
KIND_LISPALLOC_llvmo__SequentialType_O = 372,
KIND_LISPALLOC_llvmo__PointerType_O = 373,
KIND_LISPALLOC_llvmo__ArrayType_O = 374,
KIND_LISPALLOC_llvmo__VectorType_O = 375,
KIND_LISPALLOC_llvmo__FunctionType_O = 376,
KIND_LISPALLOC_llvmo__IntegerType_O = 377,
KIND_LISPALLOC_llvmo__Metadata_O = 378,
KIND_LISPALLOC_llvmo__ValueAsMetadata_O = 379,
KIND_LISPALLOC_llvmo__MDString_O = 380,
KIND_LISPALLOC_llvmo__MDNode_O = 381,
KIND_LISPALLOC_llvmo__NamedMDNode_O = 382,
KIND_LISPALLOC_llvmo__ExecutionEngine_O = 383,
KIND_LISPALLOC_core__ForeignData_O = 384,
KIND_LISPALLOC_llvmo__PassManagerBuilder_O = 385,
KIND_LISPALLOC_adapt__ObjectSet_O = 386,
KIND_LISPALLOC_core__IntArray_O = 387,
KIND_LISPALLOC_core__PosixTime_O = 388,
KIND_BOOTSTRAP_core__Symbol_O = 389,
KIND_LISPALLOC_core__Null_O = 390,
KIND_LISPALLOC_adapt__IndexedObjectBag_O = 391,
KIND_LISPALLOC_core__PosixTimeDuration_O = 392,
KIND_LISPALLOC_core__SymbolToEnumConverter_O = 393,
KIND_LISPALLOC_core__ReadTable_O = 394,
KIND_LISPALLOC_core__Number_O = 395,
KIND_LISPALLOC_core__Complex_O = 396,
KIND_LISPALLOC_core__Real_O = 397,
KIND_LISPALLOC_core__Float_O = 398,
KIND_LISPALLOC_core__SingleFloat_dummy_O = 399,
KIND_LISPALLOC_core__LongFloat_O = 400,
KIND_LISPALLOC_core__ShortFloat_O = 401,
KIND_LISPALLOC_core__DoubleFloat_O = 402,
KIND_LISPALLOC_core__Rational_O = 403,
KIND_LISPALLOC_core__Integer_O = 404,
KIND_LISPALLOC_core__Bignum_O = 405,
KIND_LISPALLOC_core__Fixnum_dummy_O = 406,
KIND_LISPALLOC_core__Ratio_O = 407,
KIND_LISPALLOC_core__CandoException_O = 408,
KIND_LISPALLOC_core__Archive_O = 409,
KIND_LISPALLOC_core__LoadArchive_O = 410,
KIND_LISPALLOC_core__SexpLoadArchive_O = 411,
KIND_LISPALLOC_core__SaveArchive_O = 412,
KIND_LISPALLOC_core__SexpSaveArchive_O = 413,
KIND_LISPALLOC_core__HashTable_O = 414,
KIND_LISPALLOC_core__HashTableEq_O = 415,
KIND_LISPALLOC_core__HashTableEqual_O = 416,
KIND_LISPALLOC_core__HashTableEql_O = 417,
KIND_LISPALLOC_core__HashTableEqualp_O = 418,
KIND_LISPALLOC_core__Environment_O = 419,
KIND_LISPALLOC_core__ActivationFrame_O = 420,
KIND_LISPALLOC_core__FunctionFrame_O = 421,
KIND_LISPALLOC_core__TagbodyFrame_O = 422,
KIND_LISPALLOC_core__ValueFrame_O = 423,
KIND_LISPALLOC_core__LexicalEnvironment_O = 424,
KIND_LISPALLOC_core__CompileTimeEnvironment_O = 425,
KIND_LISPALLOC_core__MacroletEnvironment_O = 426,
KIND_LISPALLOC_core__FunctionContainerEnvironment_O = 427,
KIND_LISPALLOC_core__UnwindProtectEnvironment_O = 428,
KIND_LISPALLOC_core__SymbolMacroletEnvironment_O = 429,
KIND_LISPALLOC_core__StackValueEnvironment_O = 430,
KIND_LISPALLOC_core__BlockEnvironment_O = 431,
KIND_LISPALLOC_core__CatchEnvironment_O = 432,
KIND_LISPALLOC_core__RuntimeVisibleEnvironment_O = 433,
KIND_LISPALLOC_core__ValueEnvironment_O = 434,
KIND_LISPALLOC_core__FunctionValueEnvironment_O = 435,
KIND_LISPALLOC_core__TagbodyEnvironment_O = 436,
KIND_LISPALLOC_core__GlueEnvironment_O = 437,
KIND_LISPALLOC_core__WeakKeyMapping_O = 438,
KIND_LISPALLOC_core__LambdaListHandler_O = 439,
KIND_LISPALLOC_llvmo__InsertPoint_O = 440,
KIND_LISPALLOC_core__SingleDispatchMethod_O = 441,
KIND_LISPALLOC_llvmo__Attribute_O = 442,
KIND_LISPALLOC_core__Character_dummy_O = 443,
KIND_LISPALLOC_core__SmallMultimap_O = 444,
KIND_LISPALLOC_core__Binder_O = 445,
KIND_LISPALLOC_core__Pathname_O = 446,
KIND_LISPALLOC_core__LogicalPathname_O = 447,
KIND_LISPALLOC_core__SourceManager_O = 448,
KIND_LISPALLOC_core__Record_O = 449,
KIND_LISPALLOC_core__SmallMap_O = 450,
KIND_LISPALLOC_core__LightUserData_O = 451,
KIND_LISPALLOC_core__UserData_O = 452,
KIND_ROOTCLASSALLOC_asttooling__RegMap__RegistryMaps = 453,
KIND_CLASSALLOC_core__Cache = 454,
KIND_TEMPLATED_CLASSALLOC_core__Creator = 455,
KIND_CLASSALLOC_core__InstanceCreator = 456,
KIND_TEMPLATED_CLASSALLOC_clbind__ConstructorCreator = 457,
KIND_CLASSALLOC_clbind__DummyCreator = 458,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__ = 459,
KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyStretch_ = 460,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFStretch_O__ = 461,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___ = 462,
KIND_CLASSALLOC_core__SingleDispatchGenericFunctionClosure = 463,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Stereoisomer_O___ = 464,
KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyNonbond_ = 465,
KIND_GCVECTOR_gctools__GCVector_moveable_core__RequiredArgument_ = 466,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___ = 467,
KIND_CLASSALLOC_llvmo__CompiledClosure = 468,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__ = 469,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Str_O___ = 470,
KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomInfo_ = 471,
KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__RegMap__SymbolMatcherDescriptorPair_ = 472,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___ = 473,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__ = 474,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFItor_O___ = 475,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___ = 476,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__ = 477,
KIND_CLASSALLOC_asttooling__internal__OverloadedMatcherDescriptor = 478,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___ = 479,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__ = 480,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__ = 481,
KIND_GCVECTOR_gctools__GCVector_moveable_chem__FixedNonbondRestraint_ = 482,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_asttooling__internal__MatcherDescriptor__ = 483,
KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__2_ = 484,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__ = 485,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__ = 486,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__ = 487,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__ = 488,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__ = 489,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___ = 490,
KIND_GCVECTOR_gctools__GCVector_moveable_core__ExceptionEntry_ = 491,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__ = 492,
KIND_CLASSALLOC_core__MacroClosure = 493,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__ = 494,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__ = 495,
KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyDihedral_ = 496,
KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ParserValue_ = 497,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__ = 498,
KIND_GCSTRING_gctools__GCString_moveable_char_ = 499,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__RingClosingMate_O__ = 500,
KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolClassPair_ = 501,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__ = 502,
KIND_GCVECTOR_gctools__GCVector_moveable_chem__KeyEntry_ = 503,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__ = 504,
KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAtom_ = 505,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFPtor_O__ = 506,
KIND_CLASSALLOC_asttooling__internal__VariadicOperatorMatcherDescriptor = 507,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___ = 508,
KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyImproperRestraint_ = 509,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__ = 510,
KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomPdbRec_ = 511,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFItor_O__ = 512,
KIND_CLASSALLOC_core__InstanceClosure = 513,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___ = 514,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___ = 515,
KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__1_ = 516,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___ = 517,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__ = 518,
KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolStorage_ = 519,
KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ErrorContent_ = 520,
KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyChiralRestraint_ = 521,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__ = 522,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__ = 523,
KIND_CLASSALLOC_core__CoreExposer = 524,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__ = 525,
KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ContextFrame_ = 526,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__ = 527,
KIND_CLASSALLOC_asttooling__internal__FixedArgCountMatcherDescriptor = 528,
KIND_GCVECTOR_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_ = 529,
KIND_GCVECTOR_gctools__GCVector_moveable_core__OptionalArgument_ = 530,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__ = 531,
KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAngle_ = 532,
KIND_GCVECTOR_gctools__GCVector_moveable_core__T_O_P_ = 533,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__ = 534,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__ = 535,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__ = 536,
KIND_CLASSALLOC_core__InterpretedClosure = 537,
KIND_CLASSALLOC_asttooling__internal__FreeFuncMatcherDescriptor = 538,
KIND_GCVECTOR_gctools__GCVector_moveable_core__DynamicBinding_ = 539,
KIND_CLASSALLOC_core__VectorStepper = 540,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__ = 541,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFStretch_O___ = 542,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__ = 543,
KIND_GCVECTOR_gctools__GCVector_moveable_core__AuxArgument_ = 544,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__ = 545,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_core__SequenceStepper__ = 546,
KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_ = 547,
KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__0_ = 548,
KIND_GCVECTOR_gctools__GCVector_moveable_core__KeywordArgument_ = 549,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__ = 550,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__ = 551,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__ = 552,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___ = 553,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___ = 554,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__ = 555,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__ = 556,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___ = 557,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SourceFileInfo_O__ = 558,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__ = 559,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___ = 560,
KIND_GCVECTOR_gctools__GCVector_moveable_core__CacheRecord_ = 561,
KIND_GCVECTOR_gctools__GCVector_moveable_chem__ResidueOut_ = 562,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___ = 563,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__ = 564,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__ = 565,
KIND_LISPALLOC_asttooling__DerivableFrontendActionFactory = 566,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___ = 567,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___ = 568,
KIND_LISPALLOC_asttooling__DerivableMatchCallback = 569,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFPtor_O___ = 570,
KIND_LISPALLOC_asttooling__DerivableASTFrontendAction = 571,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneTypeRule_O__ = 572,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__ = 573,
KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__Message_ = 574,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___ = 575,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__ = 576,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__ = 577,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__ = 578,
KIND_LISPALLOC_asttooling__DerivableSyntaxOnlyAction = 579,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneMonomer_O__ = 580,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFAngle_O___ = 581,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__ = 582,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___ = 583,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__ = 584,
KIND_TEMPLATED_CLASSALLOC_core__BuiltinClosure = 585,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___ = 586,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFAngle_O__ = 587,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__ = 588,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___ = 589,
KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfo_O__ = 590,
KIND_CLASSALLOC_core__ConsStepper = 591,
KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___ = 592,
  KIND_max = 592
}
#endif // defined(GC_ENUM)
#if defined(GC_DYNAMIC_CAST)
template <typename FP> struct Cast<chem::FFVdwDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 188 188 
      return (kindVal == 188);
  };
};
template <typename FP> struct Cast<llvmo::MDNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 381 381 
      return (kindVal == 381);
  };
};
template <typename FP> struct Cast<chem::AtomIdToAtomMap_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 207 207 
      return (kindVal == 207);
  };
};
template <typename FP> struct Cast<llvmo::LLVMTargetMachine_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 368 368 
      return (kindVal == 368);
  };
};
template <typename FP> struct Cast<llvmo::ReturnInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 350 350 
      return (kindVal == 350);
  };
};
template <typename FP> struct Cast<chem::Logical_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 90 90 
      return (kindVal == 90);
  };
};
template <typename FP> struct Cast<chem::StepReport_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 36 36 
      return (kindVal == 36);
  };
};
template <typename FP> struct Cast<core::DoubleFloat_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 402 402 
      return (kindVal == 402);
  };
};
template <typename FP> struct Cast<chem::AtomTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 89 89 
      return (kindVal == 89);
  };
};
template <typename FP> struct Cast<chem::StructureComparer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 206 206 
      return (kindVal == 206);
  };
};
template <typename FP> struct Cast<core::LightUserData_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 451 452 
      return ((451 <= kindVal) && (kindVal <= 452));
  };
};
template <typename FP> struct Cast<chem::EnergyFixedNonbondRestraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 127 127 
      return (kindVal == 127);
  };
};
template <typename FP> struct Cast<adapt::QDomNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 205 205 
      return (kindVal == 205);
  };
};
template <typename FP> struct Cast<chem::Angle_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 204 204 
      return (kindVal == 204);
  };
};
template <typename FP> struct Cast<chem::ConformationExplorerEntryStage_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 203 203 
      return (kindVal == 203);
  };
};
template <typename FP> struct Cast<llvmo::PassManagerBuilder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 385 385 
      return (kindVal == 385);
  };
};
template <typename FP> struct Cast<chem::SpecificContextSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 202 202 
      return (kindVal == 202);
  };
};
template <typename FP> struct Cast<core::Creator*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 455 458 
      return ((455 <= kindVal) && (kindVal <= 458));
  };
};
template <typename FP> struct Cast<chem::RestraintDistance_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 76 76 
      return (kindVal == 76);
  };
};
template <typename FP> struct Cast<core::SmallMap_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 450 450 
      return (kindVal == 450);
  };
};
template <typename FP> struct Cast<llvmo::TargetSubtargetInfo_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 363 363 
      return (kindVal == 363);
  };
};
template <typename FP> struct Cast<core::ShortFloat_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 401 401 
      return (kindVal == 401);
  };
};
template <typename FP> struct Cast<llvmo::LoadInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 357 357 
      return (kindVal == 357);
  };
};
template <typename FP> struct Cast<core::Record_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 449 449 
      return (kindVal == 449);
  };
};
template <typename FP> struct Cast<core::SaveArchive_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 412 413 
      return ((412 <= kindVal) && (kindVal <= 413));
  };
};
template <typename FP> struct Cast<core::SourceManager_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 448 448 
      return (kindVal == 448);
  };
};
template <typename FP> struct Cast<core::Pathname_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 446 447 
      return ((446 <= kindVal) && (kindVal <= 447));
  };
};
template <typename FP> struct Cast<geom::CoordinateArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 221 222 
      return ((221 <= kindVal) && (kindVal <= 222));
  };
};
template <typename FP> struct Cast<core::LeafSNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 225 225 
      return (kindVal == 225);
  };
};
template <typename FP> struct Cast<core::CatchEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 432 432 
      return (kindVal == 432);
  };
};
template <typename FP> struct Cast<llvmo::DIScope_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 246 246 
      return (kindVal == 246);
  };
};
template <typename FP> struct Cast<chem::FFParameter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 195 201 
      return ((195 <= kindVal) && (kindVal <= 201));
  };
};
template <typename FP> struct Cast<core::ForeignData_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 384 384 
      return (kindVal == 384);
  };
};
template <typename FP> struct Cast<core::Binder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 445 445 
      return (kindVal == 445);
  };
};
template <typename FP> struct Cast<chem::Constitution_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 110 110 
      return (kindVal == 110);
  };
};
template <typename FP> struct Cast<chem::StereoisomerVirtualAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 40 40 
      return (kindVal == 40);
  };
};
template <typename FP> struct Cast<chem::CalculatePosition_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 191 194 
      return ((191 <= kindVal) && (kindVal <= 194));
  };
};
template <typename FP> struct Cast<chem::ForceMatchReport_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 35 35 
      return (kindVal == 35);
  };
};
template <typename FP> struct Cast<chem::SuperposeEngine_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 189 190 
      return ((189 <= kindVal) && (kindVal <= 190));
  };
};
template <typename FP> struct Cast<chem::MonomerPack_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 106 106 
      return (kindVal == 106);
  };
};
template <typename FP> struct Cast<chem::InPlug_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 54 54 
      return (kindVal == 54);
  };
};
template <typename FP> struct Cast<core::SmallMultimap_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 444 444 
      return (kindVal == 444);
  };
};
template <typename FP> struct Cast<core::SimpleBitVector_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 217 217 
      return (kindVal == 217);
  };
};
template <typename FP> struct Cast<core::ValueFrame_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 423 423 
      return (kindVal == 423);
  };
};
template <typename FP> struct Cast<chem::FFBaseDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 181 188 
      return ((181 <= kindVal) && (kindVal <= 188));
  };
};
template <typename FP> struct Cast<core::Character_dummy_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 443 443 
      return (kindVal == 443);
  };
};
template <typename FP> struct Cast<chem::Twister_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 180 180 
      return (kindVal == 180);
  };
};
template <typename FP> struct Cast<llvmo::ExecutionEngine_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 383 383 
      return (kindVal == 383);
  };
};
template <typename FP> struct Cast<chem::RingFinder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 179 179 
      return (kindVal == 179);
  };
};
template <typename FP> struct Cast<chem::AfterMatchBondTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 79 79 
      return (kindVal == 79);
  };
};
template <typename FP> struct Cast<llvmo::MDString_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 380 380 
      return (kindVal == 380);
  };
};
template <typename FP> struct Cast<llvmo::ConstantDataArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 338 338 
      return (kindVal == 338);
  };
};
template <typename FP> struct Cast<chem::RingCoupling_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 131 131 
      return (kindVal == 131);
  };
};
template <typename FP> struct Cast<chem::MapOfMonomerNamesToAtomIndexers_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 178 178 
      return (kindVal == 178);
  };
};
template <typename FP> struct Cast<llvmo::DIFile_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 245 245 
      return (kindVal == 245);
  };
};
template <typename FP> struct Cast<chem::Trajectory_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 177 177 
      return (kindVal == 177);
  };
};
template <typename FP> struct Cast<chem::BondListMatchNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 93 95 
      return ((93 <= kindVal) && (kindVal <= 95));
  };
};
template <typename FP> struct Cast<chem::Topology_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 176 176 
      return (kindVal == 176);
  };
};
template <typename FP> struct Cast<chem::StereoConfiguration_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 175 175 
      return (kindVal == 175);
  };
};
template <typename FP> struct Cast<chem::FFItor_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 201 201 
      return (kindVal == 201);
  };
};
template <typename FP> struct Cast<llvmo::NamedMDNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 382 382 
      return (kindVal == 382);
  };
};
template <typename FP> struct Cast<llvmo::Attribute_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 442 442 
      return (kindVal == 442);
  };
};
template <typename FP> struct Cast<chem::Rotamer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 174 174 
      return (kindVal == 174);
  };
};
template <typename FP> struct Cast<chem::VirtualSphere_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 173 173 
      return (kindVal == 173);
  };
};
template <typename FP> struct Cast<llvmo::DILexicalBlock_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 244 244 
      return (kindVal == 244);
  };
};
template <typename FP> struct Cast<llvmo::Metadata_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 378 381 
      return ((378 <= kindVal) && (kindVal <= 381));
  };
};
template <typename FP> struct Cast<llvmo::Type_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 369 377 
      return ((369 <= kindVal) && (kindVal <= 377));
  };
};
template <typename FP> struct Cast<clbind::DummyCreator*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 458 458 
      return (kindVal == 458);
  };
};
template <typename FP> struct Cast<adapt::IterateCons_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 271 271 
      return (kindVal == 271);
  };
};
template <typename FP> struct Cast<llvmo::AllocaInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 356 356 
      return (kindVal == 356);
  };
};
template <typename FP> struct Cast<chem::VirtualAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 142 142 
      return (kindVal == 142);
  };
};
template <typename FP> struct Cast<core::Fixnum_dummy_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 406 406 
      return (kindVal == 406);
  };
};
template <typename FP> struct Cast<chem::FFNonbondDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 187 187 
      return (kindVal == 187);
  };
};
template <typename FP> struct Cast<core::Cache*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 454 454 
      return (kindVal == 454);
  };
};
template <typename FP> struct Cast<llvmo::CallInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 358 358 
      return (kindVal == 358);
  };
};
template <typename FP> struct Cast<core::TagbodyEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 436 436 
      return (kindVal == 436);
  };
};
template <typename FP> struct Cast<llvmo::SwitchInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 349 349 
      return (kindVal == 349);
  };
};
template <typename FP> struct Cast<core::BuiltInClass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 257 258 
      return ((257 <= kindVal) && (kindVal <= 258));
  };
};
template <typename FP> struct Cast<core::SingleDispatchMethod_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 441 441 
      return (kindVal == 441);
  };
};
template <typename FP> struct Cast<core::TagbodyFrame_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 422 422 
      return (kindVal == 422);
  };
};
template <typename FP> struct Cast<asttooling::RegMap::RegistryMaps*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 453 453 
      return (kindVal == 453);
  };
};
template <typename FP> struct Cast<chem::TwisterDriver_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 172 172 
      return (kindVal == 172);
  };
};
template <typename FP> struct Cast<chem::ZMatrixDihedralInternal_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 136 136 
      return (kindVal == 136);
  };
};
template <typename FP> struct Cast<core::DirectoryIterator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 270 270 
      return (kindVal == 270);
  };
};
template <typename FP> struct Cast<chem::AbstractLargeSquareMatrix_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 169 171 
      return ((169 <= kindVal) && (kindVal <= 171));
  };
};
template <typename FP> struct Cast<core::StringOutputStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 281 281 
      return (kindVal == 281);
  };
};
template <typename FP> struct Cast<chem::NumericalFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 168 168 
      return (kindVal == 168);
  };
};
template <typename FP> struct Cast<chem::ConstitutionAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 166 167 
      return ((166 <= kindVal) && (kindVal <= 167));
  };
};
template <typename FP> struct Cast<core::Vector_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 211 222 
      return ((211 <= kindVal) && (kindVal <= 222));
  };
};
template <typename FP> struct Cast<chem::ConstitutionVirtualAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 167 167 
      return (kindVal == 167);
  };
};
template <typename FP> struct Cast<geom::Color_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 165 165 
      return (kindVal == 165);
  };
};
template <typename FP> struct Cast<llvmo::Function_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 330 330 
      return (kindVal == 330);
  };
};
template <typename FP> struct Cast<llvmo::InsertPoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 440 440 
      return (kindVal == 440);
  };
};
template <typename FP> struct Cast<llvmo::DITypeArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 243 243 
      return (kindVal == 243);
  };
};
template <typename FP> struct Cast<core::LambdaListHandler_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 439 439 
      return (kindVal == 439);
  };
};
template <typename FP> struct Cast<chem::ConformationExplorer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 164 164 
      return (kindVal == 164);
  };
};
template <typename FP> struct Cast<chem::InfoDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 163 163 
      return (kindVal == 163);
  };
};
template <typename FP> struct Cast<chem::ConformationCollection_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 161 162 
      return ((161 <= kindVal) && (kindVal <= 162));
  };
};
template <typename FP> struct Cast<llvmo::ConstantDataSequential_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 337 338 
      return ((337 <= kindVal) && (kindVal <= 338));
  };
};
template <typename FP> struct Cast<chem::EntityNameSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 104 106 
      return ((104 <= kindVal) && (kindVal <= 106));
  };
};
template <typename FP> struct Cast<adapt::SymbolList_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 160 160 
      return (kindVal == 160);
  };
};
template <typename FP> struct Cast<core::WeakKeyMapping_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 438 438 
      return (kindVal == 438);
  };
};
template <typename FP> struct Cast<core::Environment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 419 437 
      return ((419 <= kindVal) && (kindVal <= 437));
  };
};
template <typename FP> struct Cast<chem::CalculatePositionAlongBond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 194 194 
      return (kindVal == 194);
  };
};
template <typename FP> struct Cast<llvmo::ValueAsMetadata_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 379 379 
      return (kindVal == 379);
  };
};
template <typename FP> struct Cast<core::Str_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 219 220 
      return ((219 <= kindVal) && (kindVal <= 220));
  };
};
template <typename FP> struct Cast<llvmo::DICompositeType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 242 242 
      return (kindVal == 242);
  };
};
template <typename FP> struct Cast<chem::FFAngleDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 186 186 
      return (kindVal == 186);
  };
};
template <typename FP> struct Cast<chem::RingClosingPlug_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 53 53 
      return (kindVal == 53);
  };
};
template <typename FP> struct Cast<chem::OligomerPart_Base_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 157 159 
      return ((157 <= kindVal) && (kindVal <= 159));
  };
};
template <typename FP> struct Cast<core::ConcatenatedStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 286 286 
      return (kindVal == 286);
  };
};
template <typename FP> struct Cast<chem::EnergyNonbond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 126 126 
      return (kindVal == 126);
  };
};
template <typename FP> struct Cast<chem::ZMatrixAngleInternal_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 135 135 
      return (kindVal == 135);
  };
};
template <typename FP> struct Cast<core::HashTable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 414 418 
      return ((414 <= kindVal) && (kindVal <= 418));
  };
};
template <typename FP> struct Cast<core::Archive_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 409 413 
      return ((409 <= kindVal) && (kindVal <= 413));
  };
};
template <typename FP> struct Cast<core::Rational_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 403 407 
      return ((403 <= kindVal) && (kindVal <= 407));
  };
};
template <typename FP> struct Cast<chem::SuperposableConformationCollection_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 162 162 
      return (kindVal == 162);
  };
};
template <typename FP> struct Cast<core::AnsiStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 275 286 
      return ((275 <= kindVal) && (kindVal <= 286));
  };
};
template <typename FP> struct Cast<chem::OneTypeRule_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 156 156 
      return (kindVal == 156);
  };
};
template <typename FP> struct Cast<geom::CoordinateArrayWithHash_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 222 222 
      return (kindVal == 222);
  };
};
template <typename FP> struct Cast<chem::StatusTracker_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 155 155 
      return (kindVal == 155);
  };
};
template <typename FP> struct Cast<llvmo::UnaryInstruction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 354 357 
      return ((354 <= kindVal) && (kindVal <= 357));
  };
};
template <typename FP> struct Cast<core::SingleDispatchEffectiveMethodFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 300 300 
      return (kindVal == 300);
  };
};
template <typename FP> struct Cast<core::StringInputStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 280 280 
      return (kindVal == 280);
  };
};
template <typename FP> struct Cast<llvmo::TargetMachine_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 367 368 
      return ((367 <= kindVal) && (kindVal <= 368));
  };
};
template <typename FP> struct Cast<chem::BondMatchNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 80 92 
      return ((80 <= kindVal) && (kindVal <= 92));
  };
};
template <typename FP> struct Cast<llvmo::DIBasicType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 241 241 
      return (kindVal == 241);
  };
};
template <typename FP> struct Cast<chem::IterateMatter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 266 269 
      return ((266 <= kindVal) && (kindVal <= 269));
  };
};
template <typename FP> struct Cast<chem::AntechamberBondTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 92 92 
      return (kindVal == 92);
  };
};
template <typename FP> struct Cast<chem::Stereoisomer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 109 109 
      return (kindVal == 109);
  };
};
template <typename FP> struct Cast<core::CandoException_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 408 408 
      return (kindVal == 408);
  };
};
template <typename FP> struct Cast<core::Number_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 395 407 
      return ((395 <= kindVal) && (kindVal <= 407));
  };
};
template <typename FP> struct Cast<chem::ZMatrix_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 154 154 
      return (kindVal == 154);
  };
};
template <typename FP> struct Cast<core::ReadTable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 394 394 
      return (kindVal == 394);
  };
};
template <typename FP> struct Cast<llvmo::GlobalVariable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 329 329 
      return (kindVal == 329);
  };
};
template <typename FP> struct Cast<chem::AntechamberRoot_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 85 85 
      return (kindVal == 85);
  };
};
template <typename FP> struct Cast<chem::IterateRestraints_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 265 265 
      return (kindVal == 265);
  };
};
template <typename FP> struct Cast<chem::CalculatePositionRelativeToOrigin_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 193 193 
      return (kindVal == 193);
  };
};
template <typename FP> struct Cast<chem::EnergyFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 153 153 
      return (kindVal == 153);
  };
};
template <typename FP> struct Cast<chem::ComplexRestraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 150 152 
      return ((150 <= kindVal) && (kindVal <= 152));
  };
};
template <typename FP> struct Cast<core::SymbolToEnumConverter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 393 393 
      return (kindVal == 393);
  };
};
template <typename FP> struct Cast<core::Bignum_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 405 405 
      return (kindVal == 405);
  };
};
template <typename FP> struct Cast<core::PosixTimeDuration_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 392 392 
      return (kindVal == 392);
  };
};
template <typename FP> struct Cast<geom::OVector3_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 149 149 
      return (kindVal == 149);
  };
};
template <typename FP> struct Cast<core::CompiledFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 299 299 
      return (kindVal == 299);
  };
};
template <typename FP> struct Cast<chem::ProperTorsion_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 148 148 
      return (kindVal == 148);
  };
};
template <typename FP> struct Cast<chem::AtomReference_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 116 116 
      return (kindVal == 116);
  };
};
template <typename FP> struct Cast<chem::CandoDatabase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 147 147 
      return (kindVal == 147);
  };
};
template <typename FP> struct Cast<chem::Alias_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 146 146 
      return (kindVal == 146);
  };
};
template <typename FP> struct Cast<core::StandardClass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 255 255 
      return (kindVal == 255);
  };
};
template <typename FP> struct Cast<chem::BondTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 91 91 
      return (kindVal == 91);
  };
};
template <typename FP> struct Cast<core::ArrayObjects_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 210 210 
      return (kindVal == 210);
  };
};
template <typename FP> struct Cast<llvmo::DIArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 240 240 
      return (kindVal == 240);
  };
};
template <typename FP> struct Cast<llvmo::DIDerivedType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 239 239 
      return (kindVal == 239);
  };
};
template <typename FP> struct Cast<chem::FFItorDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 185 185 
      return (kindVal == 185);
  };
};
template <typename FP> struct Cast<llvmo::BlockAddress_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 336 336 
      return (kindVal == 336);
  };
};
template <typename FP> struct Cast<chem::FullLargeSquareMatrix_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 171 171 
      return (kindVal == 171);
  };
};
template <typename FP> struct Cast<llvmo::StoreInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 353 353 
      return (kindVal == 353);
  };
};
template <typename FP> struct Cast<llvmo::FunctionPass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 312 312 
      return (kindVal == 312);
  };
};
template <typename FP> struct Cast<core::LongFloat_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 400 400 
      return (kindVal == 400);
  };
};
template <typename FP> struct Cast<core::FileStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 283 285 
      return ((283 <= kindVal) && (kindVal <= 285));
  };
};
template <typename FP> struct Cast<llvmo::AtomicRMWInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 352 352 
      return (kindVal == 352);
  };
};
template <typename FP> struct Cast<chem::AGVertex_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 145 145 
      return (kindVal == 145);
  };
};
template <typename FP> struct Cast<llvmo::ResumeInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 348 348 
      return (kindVal == 348);
  };
};
template <typename FP> struct Cast<core::BlockEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 431 431 
      return (kindVal == 431);
  };
};
template <typename FP> struct Cast<chem::RestraintDihedral_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 75 75 
      return (kindVal == 75);
  };
};
template <typename FP> struct Cast<chem::Bond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 144 144 
      return (kindVal == 144);
  };
};
template <typename FP> struct Cast<chem::Mate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 103 103 
      return (kindVal == 103);
  };
};
template <typename FP> struct Cast<chem::Matter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 138 143 
      return ((138 <= kindVal) && (kindVal <= 143));
  };
};
template <typename FP> struct Cast<adapt::IndexedObjectBag_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 391 391 
      return (kindVal == 391);
  };
};
template <typename FP> struct Cast<core::LoadArchive_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 410 411 
      return ((410 <= kindVal) && (kindVal <= 411));
  };
};
template <typename FP> struct Cast<chem::CipPrioritizer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 137 137 
      return (kindVal == 137);
  };
};
template <typename FP> struct Cast<core::Ratio_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 407 407 
      return (kindVal == 407);
  };
};
template <typename FP> struct Cast<llvmo::Triple_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 366 366 
      return (kindVal == 366);
  };
};
template <typename FP> struct Cast<chem::ZMatrixInternal_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 133 136 
      return ((133 <= kindVal) && (kindVal <= 136));
  };
};
template <typename FP> struct Cast<llvmo::DataLayout_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 365 365 
      return (kindVal == 365);
  };
};
template <typename FP> struct Cast<core::Symbol_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 389 390 
      return ((389 <= kindVal) && (kindVal <= 390));
  };
};
template <typename FP> struct Cast<chem::EnergyStretch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 125 125 
      return (kindVal == 125);
  };
};
template <typename FP> struct Cast<core::T_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 6 452 
      return ((6 <= kindVal) && (kindVal <= 452));
  };
};
template <typename FP> struct Cast<llvmo::ConstantExpr_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 335 335 
      return (kindVal == 335);
  };
};
template <typename FP> struct Cast<chem::PdbReader_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 132 132 
      return (kindVal == 132);
  };
};
template <typename FP> struct Cast<chem::Coupling_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 129 131 
      return ((129 <= kindVal) && (kindVal <= 131));
  };
};
template <typename FP> struct Cast<core::Lisp_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 5 5 
      return (kindVal == 5);
  };
};
template <typename FP> struct Cast<core::StackValueEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 430 430 
      return (kindVal == 430);
  };
};
template <typename FP> struct Cast<chem::PdbMonomerDatabase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 128 128 
      return (kindVal == 128);
  };
};
template <typename FP> struct Cast<llvmo::FenceInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 351 351 
      return (kindVal == 351);
  };
};
template <typename FP> struct Cast<core::PosixTime_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 388 388 
      return (kindVal == 388);
  };
};
template <typename FP> struct Cast<chem::EnergyComponent_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 119 127 
      return ((119 <= kindVal) && (kindVal <= 127));
  };
};
template <typename FP> struct Cast<chem::TrajectoryFrame_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 118 118 
      return (kindVal == 118);
  };
};
template <typename FP> struct Cast<chem::Chain_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 95 95 
      return (kindVal == 95);
  };
};
template <typename FP> struct Cast<core::IntArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 387 387 
      return (kindVal == 387);
  };
};
template <typename FP> struct Cast<adapt::ObjectSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 386 386 
      return (kindVal == 386);
  };
};
template <typename FP> struct Cast<core::BitVectorWithFillPtr_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 216 216 
      return (kindVal == 216);
  };
};
template <typename FP> struct Cast<chem::CDNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 117 117 
      return (kindVal == 117);
  };
};
template <typename FP> struct Cast<core::Instance_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 298 298 
      return (kindVal == 298);
  };
};
template <typename FP> struct Cast<chem::AtomReferenceBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 115 116 
      return ((115 <= kindVal) && (kindVal <= 116));
  };
};
template <typename FP> struct Cast<chem::ConformationExplorerEntry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 114 114 
      return (kindVal == 114);
  };
};
template <typename FP> struct Cast<llvmo::IndirectBrInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 347 347 
      return (kindVal == 347);
  };
};
template <typename FP> struct Cast<core::String_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 218 220 
      return ((218 <= kindVal) && (kindVal <= 220));
  };
};
template <typename FP> struct Cast<chem::EntityNameSetWithCap_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 101 103 
      return ((101 <= kindVal) && (kindVal <= 103));
  };
};
template <typename FP> struct Cast<llvmo::ConstantPointerNull_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 334 334 
      return (kindVal == 334);
  };
};
template <typename FP> struct Cast<llvmo::EngineBuilder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 364 364 
      return (kindVal == 364);
  };
};
template <typename FP> struct Cast<chem::StereoisomerAtoms_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 113 113 
      return (kindVal == 113);
  };
};
template <typename FP> struct Cast<core::ExternalObject_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 304 385 
      return ((304 <= kindVal) && (kindVal <= 385));
  };
};
template <typename FP> struct Cast<geom::OMatrix_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 112 112 
      return (kindVal == 112);
  };
};
template <typename FP> struct Cast<units::Dimension_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 111 111 
      return (kindVal == 111);
  };
};
template <typename FP> struct Cast<core::RuntimeVisibleEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 433 436 
      return ((433 <= kindVal) && (kindVal <= 436));
  };
};
template <typename FP> struct Cast<core::VaList_dummy_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 303 303 
      return (kindVal == 303);
  };
};
template <typename FP> struct Cast<core::Pointer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 302 302 
      return (kindVal == 302);
  };
};
template <typename FP> struct Cast<chem::Entity_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 99 110 
      return ((99 <= kindVal) && (kindVal <= 110));
  };
};
template <typename FP> struct Cast<chem::ConstitutionBond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 98 98 
      return (kindVal == 98);
  };
};
template <typename FP> struct Cast<core::WeakPointer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 301 301 
      return (kindVal == 301);
  };
};
template <typename FP> struct Cast<core::Function_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 295 300 
      return ((295 <= kindVal) && (kindVal <= 300));
  };
};
template <typename FP> struct Cast<clbind::ConstructorCreator*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 457 457 
      return (kindVal == 457);
  };
};
template <typename FP> struct Cast<llvmo::MCSubtargetInfo_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 362 363 
      return ((362 <= kindVal) && (kindVal <= 363));
  };
};
template <typename FP> struct Cast<chem::Oligomer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 97 97 
      return (kindVal == 97);
  };
};
template <typename FP> struct Cast<core::FuncallableStandardClass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 254 254 
      return (kindVal == 254);
  };
};
template <typename FP> struct Cast<chem::Minimizer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 96 96 
      return (kindVal == 96);
  };
};
template <typename FP> struct Cast<chem::RootMatchNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 78 79 
      return ((78 <= kindVal) && (kindVal <= 79));
  };
};
template <typename FP> struct Cast<chem::MultiMonomer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 108 108 
      return (kindVal == 108);
  };
};
template <typename FP> struct Cast<chem::EnergyDihedral_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 124 124 
      return (kindVal == 124);
  };
};
template <typename FP> struct Cast<chem::RingTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 88 88 
      return (kindVal == 88);
  };
};
template <typename FP> struct Cast<llvmo::TerminatorInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 343 350 
      return ((343 <= kindVal) && (kindVal <= 350));
  };
};
template <typename FP> struct Cast<core::TwoWayStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 282 282 
      return (kindVal == 282);
  };
};
template <typename FP> struct Cast<llvmo::UndefValue_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 333 333 
      return (kindVal == 333);
  };
};
template <typename FP> struct Cast<core::Integer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 404 406 
      return ((404 <= kindVal) && (kindVal <= 406));
  };
};
template <typename FP> struct Cast<core::IOFileStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 285 285 
      return (kindVal == 285);
  };
};
template <typename FP> struct Cast<core::StructureClass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 256 256 
      return (kindVal == 256);
  };
};
template <typename FP> struct Cast<llvmo::IntegerType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 377 377 
      return (kindVal == 377);
  };
};
template <typename FP> struct Cast<chem::Molecule_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 143 143 
      return (kindVal == 143);
  };
};
template <typename FP> struct Cast<core::HashTableEqualp_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 418 418 
      return (kindVal == 418);
  };
};
template <typename FP> struct Cast<llvmo::DebugLoc_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 294 294 
      return (kindVal == 294);
  };
};
template <typename FP> struct Cast<llvmo::DICompileUnit_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 238 238 
      return (kindVal == 238);
  };
};
template <typename FP> struct Cast<llvmo::VectorType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 375 375 
      return (kindVal == 375);
  };
};
template <typename FP> struct Cast<core::RecursiveDirectoryIterator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 264 264 
      return (kindVal == 264);
  };
};
template <typename FP> struct Cast<core::StdClass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 253 255 
      return ((253 <= kindVal) && (kindVal <= 255));
  };
};
template <typename FP> struct Cast<llvmo::AtomicCmpXchgInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 342 342 
      return (kindVal == 342);
  };
};
template <typename FP> struct Cast<chem::FFPtor_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 200 200 
      return (kindVal == 200);
  };
};
template <typename FP> struct Cast<chem::FFPtorDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 184 184 
      return (kindVal == 184);
  };
};
template <typename FP> struct Cast<llvmo::BasicBlock_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 359 359 
      return (kindVal == 359);
  };
};
template <typename FP> struct Cast<core::CompileTimeEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 425 432 
      return ((425 <= kindVal) && (kindVal <= 432));
  };
};
template <typename FP> struct Cast<core::RandomState_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 293 293 
      return (kindVal == 293);
  };
};
template <typename FP> struct Cast<chem::FFNonbond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 199 199 
      return (kindVal == 199);
  };
};
template <typename FP> struct Cast<llvmo::SequentialType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 372 375 
      return ((372 <= kindVal) && (kindVal <= 375));
  };
};
template <typename FP> struct Cast<llvmo::ConstantStruct_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 332 332 
      return (kindVal == 332);
  };
};
template <typename FP> struct Cast<chem::ChemInfoNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 77 95 
      return ((77 <= kindVal) && (kindVal <= 95));
  };
};
template <typename FP> struct Cast<core::IOStreamStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 284 284 
      return (kindVal == 284);
  };
};
template <typename FP> struct Cast<core::InvocationHistoryFrameIterator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 292 292 
      return (kindVal == 292);
  };
};
template <typename FP> struct Cast<core::StructureObject_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 291 291 
      return (kindVal == 291);
  };
};
template <typename FP> struct Cast<chem::Restraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 70 76 
      return ((70 <= kindVal) && (kindVal <= 76));
  };
};
template <typename FP> struct Cast<core::CxxClass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 252 252 
      return (kindVal == 252);
  };
};
template <typename FP> struct Cast<core::SingleFloat_dummy_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 399 399 
      return (kindVal == 399);
  };
};
template <typename FP> struct Cast<chem::ConformationCollectionEntry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 69 69 
      return (kindVal == 69);
  };
};
template <typename FP> struct Cast<chem::JumpPlug_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 55 55 
      return (kindVal == 55);
  };
};
template <typename FP> struct Cast<chem::CoordinateSystem_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 68 68 
      return (kindVal == 68);
  };
};
template <typename FP> struct Cast<core::Path_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 290 290 
      return (kindVal == 290);
  };
};
template <typename FP> struct Cast<core::StringStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 279 281 
      return ((279 <= kindVal) && (kindVal <= 281));
  };
};
template <typename FP> struct Cast<core::SourceFileInfo_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 289 289 
      return (kindVal == 289);
  };
};
template <typename FP> struct Cast<chem::Atom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 141 142 
      return ((141 <= kindVal) && (kindVal <= 142));
  };
};
template <typename FP> struct Cast<chem::Aggregate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 140 140 
      return (kindVal == 140);
  };
};
template <typename FP> struct Cast<core::ForwardReferencedClass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 251 251 
      return (kindVal == 251);
  };
};
template <typename FP> struct Cast<chem::ConstitutionAtoms_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 67 67 
      return (kindVal == 67);
  };
};
template <typename FP> struct Cast<chem::ImproperTorsion_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 66 66 
      return (kindVal == 66);
  };
};
template <typename FP> struct Cast<core::ArrayDisplaced_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 209 209 
      return (kindVal == 209);
  };
};
template <typename FP> struct Cast<core::HashTableEql_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 417 417 
      return (kindVal == 417);
  };
};
template <typename FP> struct Cast<chem::ConformationExplorerMatch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 65 65 
      return (kindVal == 65);
  };
};
template <typename FP> struct Cast<chem::AGEdge_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 64 64 
      return (kindVal == 64);
  };
};
template <typename FP> struct Cast<core::Metaobject_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 248 258 
      return ((248 <= kindVal) && (kindVal <= 258));
  };
};
template <typename FP> struct Cast<chem::ChemDraw_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 63 63 
      return (kindVal == 63);
  };
};
template <typename FP> struct Cast<cffi::Pointer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 288 288 
      return (kindVal == 288);
  };
};
template <typename FP> struct Cast<chem::PdbWriter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 62 62 
      return (kindVal == 62);
  };
};
template <typename FP> struct Cast<chem::RestraintChiral_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 74 74 
      return (kindVal == 74);
  };
};
template <typename FP> struct Cast<llvmo::BranchInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 346 346 
      return (kindVal == 346);
  };
};
template <typename FP> struct Cast<chem::MacroModelFile_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 61 61 
      return (kindVal == 61);
  };
};
template <typename FP> struct Cast<llvmo::Instruction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 339 358 
      return ((339 <= kindVal) && (kindVal <= 358));
  };
};
template <typename FP> struct Cast<chem::StereoInformation_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 60 60 
      return (kindVal == 60);
  };
};
template <typename FP> struct Cast<core::SpecialForm_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 297 297 
      return (kindVal == 297);
  };
};
template <typename FP> struct Cast<llvmo::ConstantArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 331 331 
      return (kindVal == 331);
  };
};
template <typename FP> struct Cast<core::Cons_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 287 287 
      return (kindVal == 287);
  };
};
template <typename FP> struct Cast<core::Stream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 274 286 
      return ((274 <= kindVal) && (kindVal <= 286));
  };
};
template <typename FP> struct Cast<core::Real_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 397 407 
      return ((397 <= kindVal) && (kindVal <= 407));
  };
};
template <typename FP> struct Cast<chem::RestraintFixedNonbond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 73 73 
      return (kindVal == 73);
  };
};
template <typename FP> struct Cast<adapt::StringList_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 273 273 
      return (kindVal == 273);
  };
};
template <typename FP> struct Cast<chem::ZMatrixEntry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 59 59 
      return (kindVal == 59);
  };
};
template <typename FP> struct Cast<chem::ChemInfo_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 58 58 
      return (kindVal == 58);
  };
};
template <typename FP> struct Cast<chem::Branch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 94 94 
      return (kindVal == 94);
  };
};
template <typename FP> struct Cast<chem::FFTypesDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 183 183 
      return (kindVal == 183);
  };
};
template <typename FP> struct Cast<chem::MinimizerLog_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 57 57 
      return (kindVal == 57);
  };
};
template <typename FP> struct Cast<chem::SuperposeSelectedAtoms_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 190 190 
      return (kindVal == 190);
  };
};
template <typename FP> struct Cast<llvmo::GlobalValue_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 328 330 
      return ((328 <= kindVal) && (kindVal <= 330));
  };
};
template <typename FP> struct Cast<core::FileStatus_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 272 272 
      return (kindVal == 272);
  };
};
template <typename FP> struct Cast<llvmo::LandingPadInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 341 341 
      return (kindVal == 341);
  };
};
template <typename FP> struct Cast<chem::RepresentedEntityNameSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 105 105 
      return (kindVal == 105);
  };
};
template <typename FP> struct Cast<llvmo::IRBuilderBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 360 361 
      return ((360 <= kindVal) && (kindVal <= 361));
  };
};
template <typename FP> struct Cast<core::SymbolMacroletEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 429 429 
      return (kindVal == 429);
  };
};
template <typename FP> struct Cast<llvmo::Value_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 322 359 
      return ((322 <= kindVal) && (kindVal <= 359));
  };
};
template <typename FP> struct Cast<chem::SparseLargeSquareMatrix_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 170 170 
      return (kindVal == 170);
  };
};
template <typename FP> struct Cast<chem::IterateAtoms_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 269 269 
      return (kindVal == 269);
  };
};
template <typename FP> struct Cast<geom::BoundingBox_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 56 56 
      return (kindVal == 56);
  };
};
template <typename FP> struct Cast<core::UnwindProtectEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 428 428 
      return (kindVal == 428);
  };
};
template <typename FP> struct Cast<chem::Plug_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 50 55 
      return ((50 <= kindVal) && (kindVal <= 55));
  };
};
template <typename FP> struct Cast<units::Quantity_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 49 49 
      return (kindVal == 49);
  };
};
template <typename FP> struct Cast<chem::IterateBonds_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 268 268 
      return (kindVal == 268);
  };
};
template <typename FP> struct Cast<chem::PdbMonomerConnectivity_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 48 48 
      return (kindVal == 48);
  };
};
template <typename FP> struct Cast<llvmo::ModulePass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 308 311 
      return ((308 <= kindVal) && (kindVal <= 311));
  };
};
template <typename FP> struct Cast<llvmo::PassManagerBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 319 321 
      return ((319 <= kindVal) && (kindVal <= 321));
  };
};
template <typename FP> struct Cast<core::Iterator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 263 271 
      return ((263 <= kindVal) && (kindVal <= 271));
  };
};
template <typename FP> struct Cast<chem::RestraintAnchor_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 72 72 
      return (kindVal == 72);
  };
};
template <typename FP> struct Cast<llvmo::IRBuilder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 361 361 
      return (kindVal == 361);
  };
};
template <typename FP> struct Cast<chem::CDText_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 47 47 
      return (kindVal == 47);
  };
};
template <typename FP> struct Cast<core::BitVector_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 215 217 
      return ((215 <= kindVal) && (kindVal <= 217));
  };
};
template <typename FP> struct Cast<chem::AntechamberFocusAtomMatch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 87 87 
      return (kindVal == 87);
  };
};
template <typename FP> struct Cast<core::MultiStringBuffer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 262 262 
      return (kindVal == 262);
  };
};
template <typename FP> struct Cast<llvmo::DISubroutineType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 237 237 
      return (kindVal == 237);
  };
};
template <typename FP> struct Cast<llvmo::DIType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 236 236 
      return (kindVal == 236);
  };
};
template <typename FP> struct Cast<chem::AtomOrBondMatchNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 81 90 
      return ((81 <= kindVal) && (kindVal <= 90));
  };
};
template <typename FP> struct Cast<llvmo::VAArgInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 355 355 
      return (kindVal == 355);
  };
};
template <typename FP> struct Cast<chem::SpecificContext_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 46 46 
      return (kindVal == 46);
  };
};
template <typename FP> struct Cast<core::VectorObjectsWithFillPtr_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 214 214 
      return (kindVal == 214);
  };
};
template <typename FP> struct Cast<core::VectorObjects_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 213 214 
      return ((213 <= kindVal) && (kindVal <= 214));
  };
};
template <typename FP> struct Cast<llvmo::DIDescriptor_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 235 235 
      return (kindVal == 235);
  };
};
template <typename FP> struct Cast<core::SourcePosInfo_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 261 261 
      return (kindVal == 261);
  };
};
template <typename FP> struct Cast<chem::ResidueTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 86 86 
      return (kindVal == 86);
  };
};
template <typename FP> struct Cast<llvmo::APInt_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 318 318 
      return (kindVal == 318);
  };
};
template <typename FP> struct Cast<core::GlueEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 437 437 
      return (kindVal == 437);
  };
};
template <typename FP> struct Cast<chem::EnergyAngle_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 123 123 
      return (kindVal == 123);
  };
};
template <typename FP> struct Cast<llvmo::Target_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 317 317 
      return (kindVal == 317);
  };
};
template <typename FP> struct Cast<chem::PlugWithMates_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 51 54 
      return ((51 <= kindVal) && (kindVal <= 54));
  };
};
template <typename FP> struct Cast<llvmo::FunctionType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 376 376 
      return (kindVal == 376);
  };
};
template <typename FP> struct Cast<core::Null_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 390 390 
      return (kindVal == 390);
  };
};
template <typename FP> struct Cast<chem::WildElementDict_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 45 45 
      return (kindVal == 45);
  };
};
template <typename FP> struct Cast<llvmo::LLVMContext_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 316 316 
      return (kindVal == 316);
  };
};
template <typename FP> struct Cast<chem::SmartsRoot_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 84 84 
      return (kindVal == 84);
  };
};
template <typename FP> struct Cast<adapt::SymbolSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 260 260 
      return (kindVal == 260);
  };
};
template <typename FP> struct Cast<core::Specializer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 249 258 
      return ((249 <= kindVal) && (kindVal <= 258));
  };
};
template <typename FP> struct Cast<llvmo::ConstantFP_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 327 327 
      return (kindVal == 327);
  };
};
template <typename FP> struct Cast<llvmo::APFloat_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 315 315 
      return (kindVal == 315);
  };
};
template <typename FP> struct Cast<chem::TypeAssignmentRules_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 44 44 
      return (kindVal == 44);
  };
};
template <typename FP> struct Cast<chem::AtomId_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 43 43 
      return (kindVal == 43);
  };
};
template <typename FP> struct Cast<chem::EnergyAnchorRestraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 122 122 
      return (kindVal == 122);
  };
};
template <typename FP> struct Cast<core::InstanceCreator*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 456 456 
      return (kindVal == 456);
  };
};
template <typename FP> struct Cast<core::LexicalEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 424 436 
      return ((424 <= kindVal) && (kindVal <= 436));
  };
};
template <typename FP> struct Cast<clbind::detail::class_map*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 4 4 
      return (kindVal == 4);
  };
};
template <typename FP> struct Cast<chem::FFStretchDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 182 182 
      return (kindVal == 182);
  };
};
template <typename FP> struct Cast<core::BroadcastStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 278 278 
      return (kindVal == 278);
  };
};
template <typename FP> struct Cast<chem::FFVdw_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 198 198 
      return (kindVal == 198);
  };
};
template <typename FP> struct Cast<chem::ZMatrixBondInternal_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 134 134 
      return (kindVal == 134);
  };
};
template <typename FP> struct Cast<llvmo::Constant_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 325 338 
      return ((325 <= kindVal) && (kindVal <= 338));
  };
};
template <typename FP> struct Cast<chem::RestraintAngle_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 71 71 
      return (kindVal == 71);
  };
};
template <typename FP> struct Cast<core::WeakKeyHashTable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 9 9 
      return (kindVal == 9);
  };
};
template <typename FP> struct Cast<core::VectorDisplaced_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 212 212 
      return (kindVal == 212);
  };
};
template <typename FP> struct Cast<core::LoadTimeValues_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 259 259 
      return (kindVal == 259);
  };
};
template <typename FP> struct Cast<core::SynonymStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 277 277 
      return (kindVal == 277);
  };
};
template <typename FP> struct Cast<llvmo::Module_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 314 314 
      return (kindVal == 314);
  };
};
template <typename FP> struct Cast<chem::SearchStatistics_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 42 42 
      return (kindVal == 42);
  };
};
template <typename FP> struct Cast<chem::MonomerCoordinates_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 41 41 
      return (kindVal == 41);
  };
};
template <typename FP> struct Cast<llvmo::ImmutablePass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 309 311 
      return ((309 <= kindVal) && (kindVal <= 311));
  };
};
template <typename FP> struct Cast<core::StandardObject_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 247 258 
      return ((247 <= kindVal) && (kindVal <= 258));
  };
};
template <typename FP> struct Cast<chem::StereoisomerAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 39 40 
      return ((39 <= kindVal) && (kindVal <= 40));
  };
};
template <typename FP> struct Cast<chem::FrameRecognizer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 38 38 
      return (kindVal == 38);
  };
};
template <typename FP> struct Cast<chem::PathMessage_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 37 37 
      return (kindVal == 37);
  };
};
template <typename FP> struct Cast<core::LogicalPathname_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 447 447 
      return (kindVal == 447);
  };
};
template <typename FP> struct Cast<chem::FFAngle_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 197 197 
      return (kindVal == 197);
  };
};
template <typename FP> struct Cast<llvmo::DebugInfo_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 233 246 
      return ((233 <= kindVal) && (kindVal <= 246));
  };
};
template <typename FP> struct Cast<llvmo::StructType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 371 371 
      return (kindVal == 371);
  };
};
template <typename FP> struct Cast<clbind::ClassRegistry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 232 232 
      return (kindVal == 232);
  };
};
template <typename FP> struct Cast<chem::ReportBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 33 36 
      return ((33 <= kindVal) && (kindVal <= 36));
  };
};
template <typename FP> struct Cast<core::HashTableEqual_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 416 416 
      return (kindVal == 416);
  };
};
template <typename FP> struct Cast<core::DirectoryEntry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 231 231 
      return (kindVal == 231);
  };
};
template <typename FP> struct Cast<core::Class_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 250 258 
      return ((250 <= kindVal) && (kindVal <= 258));
  };
};
template <typename FP> struct Cast<core::FunctionValueEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 435 435 
      return (kindVal == 435);
  };
};
template <typename FP> struct Cast<core::RegexMatch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 230 230 
      return (kindVal == 230);
  };
};
template <typename FP> struct Cast<llvmo::Linker_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 313 313 
      return (kindVal == 313);
  };
};
template <typename FP> struct Cast<llvmo::Pass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 307 312 
      return ((307 <= kindVal) && (kindVal <= 312));
  };
};
template <typename FP> struct Cast<chem::OneMonomer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 32 32 
      return (kindVal == 32);
  };
};
template <typename FP> struct Cast<chem::ForceField_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 31 31 
      return (kindVal == 31);
  };
};
template <typename FP> struct Cast<chem::RingClosingMate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 102 102 
      return (kindVal == 102);
  };
};
template <typename FP> struct Cast<chem::RestrainedPiBond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 152 152 
      return (kindVal == 152);
  };
};
template <typename FP> struct Cast<core::FunctionFrame_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 421 421 
      return (kindVal == 421);
  };
};
template <typename FP> struct Cast<core::FunctionContainerEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 427 427 
      return (kindVal == 427);
  };
};
template <typename FP> struct Cast<llvmo::ArrayType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 374 374 
      return (kindVal == 374);
  };
};
template <typename FP> struct Cast<llvmo::User_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 324 358 
      return ((324 <= kindVal) && (kindVal <= 358));
  };
};
template <typename FP> struct Cast<chem::CalculatePositionUsingInternals_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 192 192 
      return (kindVal == 192);
  };
};
template <typename FP> struct Cast<core::WrappedPointer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 229 229 
      return (kindVal == 229);
  };
};
template <typename FP> struct Cast<chem::OligomerPart_Link_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 159 159 
      return (kindVal == 159);
  };
};
template <typename FP> struct Cast<core::Package_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 228 228 
      return (kindVal == 228);
  };
};
template <typename FP> struct Cast<units::NamedUnit_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 13 13 
      return (kindVal == 13);
  };
};
template <typename FP> struct Cast<core::UserData_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 452 452 
      return (kindVal == 452);
  };
};
template <typename FP> struct Cast<chem::CDBond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 30 30 
      return (kindVal == 30);
  };
};
template <typename FP> struct Cast<llvmo::CompositeType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 370 375 
      return ((370 <= kindVal) && (kindVal <= 375));
  };
};
template <typename FP> struct Cast<chem::SpanningLoop_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 29 29 
      return (kindVal == 29);
  };
};
template <typename FP> struct Cast<chem::ChemInfoMatch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 28 28 
      return (kindVal == 28);
  };
};
template <typename FP> struct Cast<llvmo::PassManager_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 321 321 
      return (kindVal == 321);
  };
};
template <typename FP> struct Cast<adapt::StringSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 27 27 
      return (kindVal == 27);
  };
};
template <typename FP> struct Cast<core::ValueEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 434 434 
      return (kindVal == 434);
  };
};
template <typename FP> struct Cast<core::StrWithFillPtr_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 220 220 
      return (kindVal == 220);
  };
};
template <typename FP> struct Cast<llvmo::AttributeSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 227 227 
      return (kindVal == 227);
  };
};
template <typename FP> struct Cast<core::SexpSaveArchive_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 413 413 
      return (kindVal == 413);
  };
};
template <typename FP> struct Cast<core::SexpLoadArchive_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 411 411 
      return (kindVal == 411);
  };
};
template <typename FP> struct Cast<asttooling::AstVisitor_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 226 226 
      return (kindVal == 226);
  };
};
template <typename FP> struct Cast<llvmo::InvokeInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 345 345 
      return (kindVal == 345);
  };
};
template <typename FP> struct Cast<core::SNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 223 225 
      return ((223 <= kindVal) && (kindVal <= 225));
  };
};
template <typename FP> struct Cast<chem::Structure_Old_List_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 26 26 
      return (kindVal == 26);
  };
};
template <typename FP> struct Cast<chem::RestrainedExoCyclicAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 151 151 
      return (kindVal == 151);
  };
};
template <typename FP> struct Cast<chem::Residue_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 139 139 
      return (kindVal == 139);
  };
};
template <typename FP> struct Cast<llvmo::DIBuilder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 306 306 
      return (kindVal == 306);
  };
};
template <typename FP> struct Cast<chem::AtomIndexer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 25 25 
      return (kindVal == 25);
  };
};
template <typename FP> struct Cast<core::Array_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 208 222 
      return ((208 <= kindVal) && (kindVal <= 222));
  };
};
template <typename FP> struct Cast<llvmo::ConstantInt_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 326 326 
      return (kindVal == 326);
  };
};
template <typename FP> struct Cast<llvmo::TargetOptions_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 305 305 
      return (kindVal == 305);
  };
};
template <typename FP> struct Cast<chem::ReadAmberParameters_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 24 24 
      return (kindVal == 24);
  };
};
template <typename FP> struct Cast<chem::OligomerPart_Monomer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 158 158 
      return (kindVal == 158);
  };
};
template <typename FP> struct Cast<chem::OutPlug_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 52 53 
      return ((52 <= kindVal) && (kindVal <= 53));
  };
};
template <typename FP> struct Cast<chem::Structure_Old_ListEntry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 23 23 
      return (kindVal == 23);
  };
};
template <typename FP> struct Cast<llvmo::PointerType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 373 373 
      return (kindVal == 373);
  };
};
template <typename FP> struct Cast<core::CxxObject_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 11 207 
      return ((11 <= kindVal) && (kindVal <= 207));
  };
};
template <typename FP> struct Cast<chem::ResidueList_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 22 22 
      return (kindVal == 22);
  };
};
template <typename FP> struct Cast<chem::CDFragment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 21 21 
      return (kindVal == 21);
  };
};
template <typename FP> struct Cast<chem::BondList_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 20 20 
      return (kindVal == 20);
  };
};
template <typename FP> struct Cast<core::ActivationFrame_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 420 423 
      return ((420 <= kindVal) && (kindVal <= 423));
  };
};
template <typename FP> struct Cast<chem::FFNonbondCrossTermTable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 19 19 
      return (kindVal == 19);
  };
};
template <typename FP> struct Cast<chem::FFStretch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 196 196 
      return (kindVal == 196);
  };
};
template <typename FP> struct Cast<chem::MonomerContext_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 18 18 
      return (kindVal == 18);
  };
};
template <typename FP> struct Cast<chem::Monomer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 107 108 
      return ((107 <= kindVal) && (kindVal <= 108));
  };
};
template <typename FP> struct Cast<llvmo::UnreachableInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 344 344 
      return (kindVal == 344);
  };
};
template <typename FP> struct Cast<chem::Root_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 83 85 
      return ((83 <= kindVal) && (kindVal <= 85));
  };
};
template <typename FP> struct Cast<core::MacroletEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 426 426 
      return (kindVal == 426);
  };
};
template <typename FP> struct Cast<llvmo::PHINode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 340 340 
      return (kindVal == 340);
  };
};
template <typename FP> struct Cast<chem::EnergyImproperRestraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 121 121 
      return (kindVal == 121);
  };
};
template <typename FP> struct Cast<core::Reader_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 10 10 
      return (kindVal == 10);
  };
};
template <typename FP> struct Cast<core::WeakHashTable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 8 9 
      return ((8 <= kindVal) && (kindVal <= 9));
  };
};
template <typename FP> struct Cast<geom::OVector2_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 17 17 
      return (kindVal == 17);
  };
};
template <typename FP> struct Cast<core::BranchSNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 224 224 
      return (kindVal == 224);
  };
};
template <typename FP> struct Cast<llvmo::DISubprogram_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 234 234 
      return (kindVal == 234);
  };
};
template <typename FP> struct Cast<llvmo::FunctionPassManager_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 320 320 
      return (kindVal == 320);
  };
};
template <typename FP> struct Cast<chem::NVector_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 16 16 
      return (kindVal == 16);
  };
};
template <typename FP> struct Cast<chem::EnergyChiralRestraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 120 120 
      return (kindVal == 120);
  };
};
template <typename FP> struct Cast<core::SingleDispatchGenericFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 296 296 
      return (kindVal == 296);
  };
};
template <typename FP> struct Cast<core::EchoStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 276 276 
      return (kindVal == 276);
  };
};
template <typename FP> struct Cast<chem::DirectionalCoupling_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 130 130 
      return (kindVal == 130);
  };
};
template <typename FP> struct Cast<llvmo::Argument_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 323 323 
      return (kindVal == 323);
  };
};
template <typename FP> struct Cast<chem::TagSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 82 82 
      return (kindVal == 82);
  };
};
template <typename FP> struct Cast<core::Complex_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 396 396 
      return (kindVal == 396);
  };
};
template <typename FP> struct Cast<core::Regex_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 7 7 
      return (kindVal == 7);
  };
};
template <typename FP> struct Cast<clbind::ClassRep_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 258 258 
      return (kindVal == 258);
  };
};
template <typename FP> struct Cast<chem::IterateResidues_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 267 267 
      return (kindVal == 267);
  };
};
template <typename FP> struct Cast<llvmo::TargetLibraryInfo_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 311 311 
      return (kindVal == 311);
  };
};
template <typename FP> struct Cast<core::HashTableEq_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 415 415 
      return (kindVal == 415);
  };
};
template <typename FP> struct Cast<llvmo::DataLayoutPass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 310 310 
      return (kindVal == 310);
  };
};
template <typename FP> struct Cast<chem::Command_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 15 15 
      return (kindVal == 15);
  };
};
template <typename FP> struct Cast<chem::AtomTable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 14 14 
      return (kindVal == 14);
  };
};
template <typename FP> struct Cast<units::Unit_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 12 13 
      return ((12 <= kindVal) && (kindVal <= 13));
  };
};
template <typename FP> struct Cast<chem::EntityNameSetBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 100 106 
      return ((100 <= kindVal) && (kindVal <= 106));
  };
};
template <typename FP> struct Cast<core::Float_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 398 402 
      return ((398 <= kindVal) && (kindVal <= 402));
  };
};
template <typename FP> struct Cast<chem::MessageReport_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->kind();
      // low high --> 34 34 
      return (kindVal == 34);
  };
};
#endif // defined(GC_DYNAMIC_CAST)
#if defined(GC_KIND_SELECTORS)
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__ ;
};
template <> class gctools::GCKind<chem::FFVdwDb_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FFVdwDb_O ;
};
template <> class gctools::GCKind<llvmo::MDNode_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__MDNode_O ;
};
template <> class gctools::GCKind<chem::AtomIdToAtomMap_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__AtomIdToAtomMap_O ;
};
template <> class gctools::GCKind<llvmo::LLVMTargetMachine_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__LLVMTargetMachine_O ;
};
template <> class gctools::GCKind<llvmo::ReturnInst_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__ReturnInst_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<chem::EnergyStretch>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyStretch_ ;
};
template <> class gctools::GCKind<chem::Logical_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Logical_O ;
};
template <> class gctools::GCKind<chem::StepReport_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__StepReport_O ;
};
template <> class gctools::GCKind<core::DoubleFloat_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__DoubleFloat_O ;
};
template <> class gctools::GCKind<chem::AtomTest_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__AtomTest_O ;
};
template <> class gctools::GCKind<chem::StructureComparer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__StructureComparer_O ;
};
template <> class gctools::GCKind<core::LightUserData_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__LightUserData_O ;
};
template <> class gctools::GCKind<chem::EnergyFixedNonbondRestraint_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__EnergyFixedNonbondRestraint_O ;
};
template <> class gctools::GCKind<adapt::QDomNode_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_adapt__QDomNode_O ;
};
template <> class gctools::GCKind<chem::Angle_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Angle_O ;
};
template <> class gctools::GCKind<chem::ConformationExplorerEntryStage_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ConformationExplorerEntryStage_O ;
};
template <> class gctools::GCKind<llvmo::PassManagerBuilder_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__PassManagerBuilder_O ;
};
template <> class gctools::GCKind<chem::SpecificContextSet_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__SpecificContextSet_O ;
};
template <> class gctools::GCKind<core::Creator> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_TEMPLATED_CLASSALLOC_core__Creator ;
};
template <> class gctools::GCKind<chem::RestraintDistance_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__RestraintDistance_O ;
};
template <> class gctools::GCKind<core::SmallMap_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SmallMap_O ;
};
template <> class gctools::GCKind<llvmo::TargetSubtargetInfo_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__TargetSubtargetInfo_O ;
};
template <> class gctools::GCKind<core::ShortFloat_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__ShortFloat_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFStretch_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFStretch_O__ ;
};
template <> class gctools::GCKind<llvmo::LoadInst_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__LoadInst_O ;
};
template <> class gctools::GCKind<core::Record_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Record_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___ ;
};
template <> class gctools::GCKind<core::SaveArchive_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SaveArchive_O ;
};
template <> class gctools::GCKind<core::SourceManager_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SourceManager_O ;
};
template <> class gctools::GCKind<core::SingleDispatchGenericFunctionClosure> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_CLASSALLOC_core__SingleDispatchGenericFunctionClosure ;
};
template <> class gctools::GCKind<core::Pathname_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Pathname_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Stereoisomer_O___ ;
};
template <> class gctools::GCKind<geom::CoordinateArray_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_geom__CoordinateArray_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<chem::EnergyNonbond>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyNonbond_ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<core::RequiredArgument>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_core__RequiredArgument_ ;
};
template <> class gctools::GCKind<core::LeafSNode_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__LeafSNode_O ;
};
template <> class gctools::GCKind<core::CatchEnvironment_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__CatchEnvironment_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Entity_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___ ;
};
template <> class gctools::GCKind<llvmo::DIScope_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DIScope_O ;
};
template <> class gctools::GCKind<chem::FFParameter_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FFParameter_O ;
};
template <> class gctools::GCKind<core::ForeignData_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__ForeignData_O ;
};
template <> class gctools::GCKind<llvmo::CompiledClosure> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_CLASSALLOC_llvmo__CompiledClosure ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Str_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Str_O___ ;
};
template <> class gctools::GCKind<core::Binder_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Binder_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<chem::AtomInfo>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomInfo_ ;
};
template <> class gctools::GCKind<chem::Constitution_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Constitution_O ;
};
template <> class gctools::GCKind<chem::StereoisomerVirtualAtom_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__StereoisomerVirtualAtom_O ;
};
template <> class gctools::GCKind<chem::CalculatePosition_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__CalculatePosition_O ;
};
template <> class gctools::GCKind<chem::ForceMatchReport_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ForceMatchReport_O ;
};
template <> class gctools::GCKind<chem::SuperposeEngine_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__SuperposeEngine_O ;
};
template <> class gctools::GCKind<chem::MonomerPack_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__MonomerPack_O ;
};
template <> class gctools::GCKind<chem::InPlug_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__InPlug_O ;
};
template <> class gctools::GCKind<core::SmallMultimap_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SmallMultimap_O ;
};
template <> class gctools::GCKind<core::SimpleBitVector_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SimpleBitVector_O ;
};
template <> class gctools::GCKind<core::ValueFrame_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__ValueFrame_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<asttooling::RegMap::SymbolMatcherDescriptorPair>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__RegMap__SymbolMatcherDescriptorPair_ ;
};
template <> class gctools::GCKind<chem::FFBaseDb_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FFBaseDb_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___ ;
};
template <> class gctools::GCKind<core::Character_dummy_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Character_dummy_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__ ;
};
template <> class gctools::GCKind<chem::Twister_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Twister_O ;
};
template <> class gctools::GCKind<llvmo::ExecutionEngine_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__ExecutionEngine_O ;
};
template <> class gctools::GCKind<chem::RingFinder_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__RingFinder_O ;
};
template <> class gctools::GCKind<chem::AfterMatchBondTest_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__AfterMatchBondTest_O ;
};
template <> class gctools::GCKind<llvmo::MDString_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__MDString_O ;
};
template <> class gctools::GCKind<llvmo::ConstantDataArray_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__ConstantDataArray_O ;
};
template <> class gctools::GCKind<chem::RingCoupling_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__RingCoupling_O ;
};
template <> class gctools::GCKind<chem::MapOfMonomerNamesToAtomIndexers_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__MapOfMonomerNamesToAtomIndexers_O ;
};
template <> class gctools::GCKind<llvmo::DIFile_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DIFile_O ;
};
template <> class gctools::GCKind<chem::Trajectory_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Trajectory_O ;
};
template <> class gctools::GCKind<chem::BondListMatchNode_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__BondListMatchNode_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFItor_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFItor_O___ ;
};
template <> class gctools::GCKind<chem::Topology_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Topology_O ;
};
template <> class gctools::GCKind<chem::StereoConfiguration_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__StereoConfiguration_O ;
};
template <> class gctools::GCKind<chem::FFItor_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FFItor_O ;
};
template <> class gctools::GCKind<llvmo::NamedMDNode_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__NamedMDNode_O ;
};
template <> class gctools::GCKind<llvmo::Attribute_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__Attribute_O ;
};
template <> class gctools::GCKind<chem::Rotamer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Rotamer_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___ ;
};
template <> class gctools::GCKind<chem::VirtualSphere_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__VirtualSphere_O ;
};
template <> class gctools::GCKind<llvmo::DILexicalBlock_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DILexicalBlock_O ;
};
template <> class gctools::GCKind<llvmo::Metadata_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__Metadata_O ;
};
template <> class gctools::GCKind<llvmo::Type_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__Type_O ;
};
template <> class gctools::GCKind<clbind::DummyCreator> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_CLASSALLOC_clbind__DummyCreator ;
};
template <> class gctools::GCKind<adapt::IterateCons_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_adapt__IterateCons_O ;
};
template <> class gctools::GCKind<llvmo::AllocaInst_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__AllocaInst_O ;
};
template <> class gctools::GCKind<chem::VirtualAtom_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__VirtualAtom_O ;
};
template <> class gctools::GCKind<core::Fixnum_dummy_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Fixnum_dummy_O ;
};
template <> class gctools::GCKind<chem::FFNonbondDb_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FFNonbondDb_O ;
};
template <> class gctools::GCKind<core::Cache> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_CLASSALLOC_core__Cache ;
};
template <> class gctools::GCKind<llvmo::CallInst_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__CallInst_O ;
};
template <> class gctools::GCKind<core::TagbodyEnvironment_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__TagbodyEnvironment_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__ ;
};
template <> class gctools::GCKind<llvmo::SwitchInst_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__SwitchInst_O ;
};
template <> class gctools::GCKind<core::BuiltInClass_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_BOOTSTRAP_core__BuiltInClass_O ;
};
template <> class gctools::GCKind<core::SingleDispatchMethod_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SingleDispatchMethod_O ;
};
template <> class gctools::GCKind<core::TagbodyFrame_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__TagbodyFrame_O ;
};
template <> class gctools::GCKind<asttooling::RegMap::RegistryMaps> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_ROOTCLASSALLOC_asttooling__RegMap__RegistryMaps ;
};
template <> class gctools::GCKind<chem::TwisterDriver_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__TwisterDriver_O ;
};
template <> class gctools::GCKind<chem::ZMatrixDihedralInternal_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ZMatrixDihedralInternal_O ;
};
template <> class gctools::GCKind<core::DirectoryIterator_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__DirectoryIterator_O ;
};
template <> class gctools::GCKind<asttooling::internal::OverloadedMatcherDescriptor> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_CLASSALLOC_asttooling__internal__OverloadedMatcherDescriptor ;
};
template <> class gctools::GCKind<chem::AbstractLargeSquareMatrix_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__AbstractLargeSquareMatrix_O ;
};
template <> class gctools::GCKind<core::StringOutputStream_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__StringOutputStream_O ;
};
template <> class gctools::GCKind<chem::NumericalFunction_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__NumericalFunction_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___ ;
};
template <> class gctools::GCKind<chem::ConstitutionAtom_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ConstitutionAtom_O ;
};
template <> class gctools::GCKind<core::Vector_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Vector_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__ ;
};
template <> class gctools::GCKind<chem::ConstitutionVirtualAtom_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ConstitutionVirtualAtom_O ;
};
template <> class gctools::GCKind<geom::Color_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_geom__Color_O ;
};
template <> class gctools::GCKind<llvmo::Function_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__Function_O ;
};
template <> class gctools::GCKind<llvmo::InsertPoint_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__InsertPoint_O ;
};
template <> class gctools::GCKind<llvmo::DITypeArray_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DITypeArray_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<chem::FixedNonbondRestraint>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_chem__FixedNonbondRestraint_ ;
};
template <> class gctools::GCKind<core::LambdaListHandler_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__LambdaListHandler_O ;
};
template <> class gctools::GCKind<chem::ConformationExplorer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ConformationExplorer_O ;
};
template <> class gctools::GCKind<chem::InfoDb_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__InfoDb_O ;
};
template <> class gctools::GCKind<chem::ConformationCollection_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ConformationCollection_O ;
};
template <> class gctools::GCKind<llvmo::ConstantDataSequential_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__ConstantDataSequential_O ;
};
template <> class gctools::GCKind<chem::EntityNameSet_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__EntityNameSet_O ;
};
template <> class gctools::GCKind<adapt::SymbolList_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_adapt__SymbolList_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::tagged_pointer<asttooling::internal::MatcherDescriptor>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_asttooling__internal__MatcherDescriptor__ ;
};
template <> class gctools::GCKind<gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,2>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__2_ ;
};
template <> class gctools::GCKind<core::WeakKeyMapping_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__WeakKeyMapping_O ;
};
template <> class gctools::GCKind<core::Environment_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Environment_O ;
};
template <> class gctools::GCKind<chem::CalculatePositionAlongBond_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__CalculatePositionAlongBond_O ;
};
template <> class gctools::GCKind<llvmo::ValueAsMetadata_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__ValueAsMetadata_O ;
};
template <> class gctools::GCKind<core::Str_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_BOOTSTRAP_core__Str_O ;
};
template <> class gctools::GCKind<llvmo::DICompositeType_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DICompositeType_O ;
};
template <> class gctools::GCKind<chem::FFAngleDb_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FFAngleDb_O ;
};
template <> class gctools::GCKind<chem::RingClosingPlug_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__RingClosingPlug_O ;
};
template <> class gctools::GCKind<chem::OligomerPart_Base_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__OligomerPart_Base_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__ ;
};
template <> class gctools::GCKind<core::ConcatenatedStream_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__ConcatenatedStream_O ;
};
template <> class gctools::GCKind<chem::EnergyNonbond_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__EnergyNonbond_O ;
};
template <> class gctools::GCKind<chem::ZMatrixAngleInternal_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ZMatrixAngleInternal_O ;
};
template <> class gctools::GCKind<core::HashTable_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__HashTable_O ;
};
template <> class gctools::GCKind<core::Archive_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Archive_O ;
};
template <> class gctools::GCKind<core::Rational_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Rational_O ;
};
template <> class gctools::GCKind<chem::SuperposableConformationCollection_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__SuperposableConformationCollection_O ;
};
template <> class gctools::GCKind<core::AnsiStream_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__AnsiStream_O ;
};
template <> class gctools::GCKind<chem::OneTypeRule_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__OneTypeRule_O ;
};
template <> class gctools::GCKind<geom::CoordinateArrayWithHash_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_geom__CoordinateArrayWithHash_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__ ;
};
template <> class gctools::GCKind<chem::StatusTracker_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__StatusTracker_O ;
};
template <> class gctools::GCKind<llvmo::UnaryInstruction_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__UnaryInstruction_O ;
};
template <> class gctools::GCKind<core::SingleDispatchEffectiveMethodFunction_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SingleDispatchEffectiveMethodFunction_O ;
};
template <> class gctools::GCKind<core::StringInputStream_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__StringInputStream_O ;
};
template <> class gctools::GCKind<llvmo::TargetMachine_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__TargetMachine_O ;
};
template <> class gctools::GCKind<chem::BondMatchNode_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__BondMatchNode_O ;
};
template <> class gctools::GCKind<llvmo::DIBasicType_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DIBasicType_O ;
};
template <> class gctools::GCKind<chem::IterateMatter_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__IterateMatter_O ;
};
template <> class gctools::GCKind<chem::AntechamberBondTest_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__AntechamberBondTest_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__ ;
};
template <> class gctools::GCKind<chem::Stereoisomer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Stereoisomer_O ;
};
template <> class gctools::GCKind<core::CandoException_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__CandoException_O ;
};
template <> class gctools::GCKind<core::Number_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Number_O ;
};
template <> class gctools::GCKind<chem::ZMatrix_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ZMatrix_O ;
};
template <> class gctools::GCKind<core::ReadTable_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__ReadTable_O ;
};
template <> class gctools::GCKind<llvmo::GlobalVariable_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__GlobalVariable_O ;
};
template <> class gctools::GCKind<chem::AntechamberRoot_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__AntechamberRoot_O ;
};
template <> class gctools::GCKind<chem::IterateRestraints_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__IterateRestraints_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__ ;
};
template <> class gctools::GCKind<chem::CalculatePositionRelativeToOrigin_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__CalculatePositionRelativeToOrigin_O ;
};
template <> class gctools::GCKind<chem::EnergyFunction_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__EnergyFunction_O ;
};
template <> class gctools::GCKind<chem::ComplexRestraint_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ComplexRestraint_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__ ;
};
template <> class gctools::GCKind<core::SymbolToEnumConverter_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SymbolToEnumConverter_O ;
};
template <> class gctools::GCKind<core::Bignum_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Bignum_O ;
};
template <> class gctools::GCKind<core::PosixTimeDuration_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__PosixTimeDuration_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___ ;
};
template <> class gctools::GCKind<geom::OVector3_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_geom__OVector3_O ;
};
template <> class gctools::GCKind<core::CompiledFunction_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__CompiledFunction_O ;
};
template <> class gctools::GCKind<chem::ProperTorsion_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ProperTorsion_O ;
};
template <> class gctools::GCKind<chem::AtomReference_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__AtomReference_O ;
};
template <> class gctools::GCKind<chem::CandoDatabase_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__CandoDatabase_O ;
};
template <> class gctools::GCKind<chem::Alias_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Alias_O ;
};
template <> class gctools::GCKind<core::StandardClass_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_BOOTSTRAP_core__StandardClass_O ;
};
template <> class gctools::GCKind<chem::BondTest_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__BondTest_O ;
};
template <> class gctools::GCKind<core::ArrayObjects_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__ArrayObjects_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<core::ExceptionEntry>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_core__ExceptionEntry_ ;
};
template <> class gctools::GCKind<llvmo::DIArray_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DIArray_O ;
};
template <> class gctools::GCKind<llvmo::DIDerivedType_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DIDerivedType_O ;
};
template <> class gctools::GCKind<chem::FFItorDb_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FFItorDb_O ;
};
template <> class gctools::GCKind<llvmo::BlockAddress_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__BlockAddress_O ;
};
template <> class gctools::GCKind<chem::FullLargeSquareMatrix_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FullLargeSquareMatrix_O ;
};
template <> class gctools::GCKind<llvmo::StoreInst_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__StoreInst_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__ ;
};
template <> class gctools::GCKind<llvmo::FunctionPass_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__FunctionPass_O ;
};
template <> class gctools::GCKind<core::LongFloat_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__LongFloat_O ;
};
template <> class gctools::GCKind<core::FileStream_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__FileStream_O ;
};
template <> class gctools::GCKind<llvmo::AtomicRMWInst_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__AtomicRMWInst_O ;
};
template <> class gctools::GCKind<chem::AGVertex_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__AGVertex_O ;
};
template <> class gctools::GCKind<llvmo::ResumeInst_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__ResumeInst_O ;
};
template <> class gctools::GCKind<core::BlockEnvironment_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__BlockEnvironment_O ;
};
template <> class gctools::GCKind<core::MacroClosure> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_CLASSALLOC_core__MacroClosure ;
};
template <> class gctools::GCKind<chem::RestraintDihedral_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__RestraintDihedral_O ;
};
template <> class gctools::GCKind<chem::Bond_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Bond_O ;
};
template <> class gctools::GCKind<chem::Mate_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Mate_O ;
};
template <> class gctools::GCKind<chem::Matter_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Matter_O ;
};
template <> class gctools::GCKind<adapt::IndexedObjectBag_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_adapt__IndexedObjectBag_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__ ;
};
template <> class gctools::GCKind<core::LoadArchive_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__LoadArchive_O ;
};
template <> class gctools::GCKind<chem::CipPrioritizer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__CipPrioritizer_O ;
};
template <> class gctools::GCKind<core::Ratio_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Ratio_O ;
};
template <> class gctools::GCKind<llvmo::Triple_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__Triple_O ;
};
template <> class gctools::GCKind<chem::ZMatrixInternal_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ZMatrixInternal_O ;
};
template <> class gctools::GCKind<llvmo::DataLayout_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DataLayout_O ;
};
template <> class gctools::GCKind<core::Symbol_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_BOOTSTRAP_core__Symbol_O ;
};
template <> class gctools::GCKind<chem::EnergyStretch_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__EnergyStretch_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__ ;
};
template <> class gctools::GCKind<core::T_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_BOOTSTRAP_core__T_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<chem::EnergyDihedral>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyDihedral_ ;
};
template <> class gctools::GCKind<llvmo::ConstantExpr_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__ConstantExpr_O ;
};
template <> class gctools::GCKind<chem::PdbReader_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__PdbReader_O ;
};
template <> class gctools::GCKind<chem::Coupling_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Coupling_O ;
};
template <> class gctools::GCKind<core::Lisp_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_ROOTCLASSALLOC_core__Lisp_O ;
};
template <> class gctools::GCKind<core::StackValueEnvironment_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__StackValueEnvironment_O ;
};
template <> class gctools::GCKind<chem::PdbMonomerDatabase_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__PdbMonomerDatabase_O ;
};
template <> class gctools::GCKind<llvmo::FenceInst_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__FenceInst_O ;
};
template <> class gctools::GCKind<core::PosixTime_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__PosixTime_O ;
};
template <> class gctools::GCKind<chem::EnergyComponent_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__EnergyComponent_O ;
};
template <> class gctools::GCKind<chem::TrajectoryFrame_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__TrajectoryFrame_O ;
};
template <> class gctools::GCKind<chem::Chain_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Chain_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<asttooling::ParserValue>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ParserValue_ ;
};
template <> class gctools::GCKind<core::IntArray_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__IntArray_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__ ;
};
template <> class gctools::GCKind<gctools::GCString_moveable<char>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCSTRING_gctools__GCString_moveable_char_ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::RingClosingMate_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__RingClosingMate_O__ ;
};
template <> class gctools::GCKind<adapt::ObjectSet_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_adapt__ObjectSet_O ;
};
template <> class gctools::GCKind<core::BitVectorWithFillPtr_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__BitVectorWithFillPtr_O ;
};
template <> class gctools::GCKind<chem::CDNode_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__CDNode_O ;
};
template <> class gctools::GCKind<core::Instance_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Instance_O ;
};
template <> class gctools::GCKind<chem::AtomReferenceBase_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__AtomReferenceBase_O ;
};
template <> class gctools::GCKind<chem::ConformationExplorerEntry_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ConformationExplorerEntry_O ;
};
template <> class gctools::GCKind<llvmo::IndirectBrInst_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__IndirectBrInst_O ;
};
template <> class gctools::GCKind<core::String_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__String_O ;
};
template <> class gctools::GCKind<chem::EntityNameSetWithCap_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__EntityNameSetWithCap_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<core::SymbolClassPair>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolClassPair_ ;
};
template <> class gctools::GCKind<llvmo::ConstantPointerNull_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__ConstantPointerNull_O ;
};
template <> class gctools::GCKind<llvmo::EngineBuilder_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__EngineBuilder_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__ ;
};
template <> class gctools::GCKind<chem::StereoisomerAtoms_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__StereoisomerAtoms_O ;
};
template <> class gctools::GCKind<core::ExternalObject_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__ExternalObject_O ;
};
template <> class gctools::GCKind<geom::OMatrix_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_geom__OMatrix_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<chem::KeyEntry>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_chem__KeyEntry_ ;
};
template <> class gctools::GCKind<units::Dimension_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_units__Dimension_O ;
};
template <> class gctools::GCKind<core::RuntimeVisibleEnvironment_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__RuntimeVisibleEnvironment_O ;
};
template <> class gctools::GCKind<core::VaList_dummy_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__VaList_dummy_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__ ;
};
template <> class gctools::GCKind<core::Pointer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Pointer_O ;
};
template <> class gctools::GCKind<chem::Entity_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Entity_O ;
};
template <> class gctools::GCKind<chem::ConstitutionBond_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ConstitutionBond_O ;
};
template <> class gctools::GCKind<core::WeakPointer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__WeakPointer_O ;
};
template <> class gctools::GCKind<core::Function_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Function_O ;
};
template <> class gctools::GCKind<clbind::ConstructorCreator> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_TEMPLATED_CLASSALLOC_clbind__ConstructorCreator ;
};
template <> class gctools::GCKind<llvmo::MCSubtargetInfo_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__MCSubtargetInfo_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<chem::EnergyAtom>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAtom_ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFPtor_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFPtor_O__ ;
};
template <> class gctools::GCKind<chem::Oligomer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Oligomer_O ;
};
template <> class gctools::GCKind<asttooling::internal::VariadicOperatorMatcherDescriptor> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_CLASSALLOC_asttooling__internal__VariadicOperatorMatcherDescriptor ;
};
template <> class gctools::GCKind<core::FuncallableStandardClass_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__FuncallableStandardClass_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<chem::EnergyImproperRestraint>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyImproperRestraint_ ;
};
template <> class gctools::GCKind<chem::Minimizer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Minimizer_O ;
};
template <> class gctools::GCKind<chem::RootMatchNode_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__RootMatchNode_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<chem::AtomPdbRec>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomPdbRec_ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFItor_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFItor_O__ ;
};
template <> class gctools::GCKind<chem::MultiMonomer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__MultiMonomer_O ;
};
template <> class gctools::GCKind<chem::EnergyDihedral_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__EnergyDihedral_O ;
};
template <> class gctools::GCKind<chem::RingTest_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__RingTest_O ;
};
template <> class gctools::GCKind<llvmo::TerminatorInst_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__TerminatorInst_O ;
};
template <> class gctools::GCKind<core::TwoWayStream_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__TwoWayStream_O ;
};
template <> class gctools::GCKind<llvmo::UndefValue_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__UndefValue_O ;
};
template <> class gctools::GCKind<core::Integer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Integer_O ;
};
template <> class gctools::GCKind<core::IOFileStream_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__IOFileStream_O ;
};
template <> class gctools::GCKind<core::StructureClass_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_BOOTSTRAP_core__StructureClass_O ;
};
template <> class gctools::GCKind<llvmo::IntegerType_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__IntegerType_O ;
};
template <> class gctools::GCKind<core::InstanceClosure> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_CLASSALLOC_core__InstanceClosure ;
};
template <> class gctools::GCKind<chem::Molecule_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Molecule_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___ ;
};
template <> class gctools::GCKind<core::HashTableEqualp_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__HashTableEqualp_O ;
};
template <> class gctools::GCKind<llvmo::DebugLoc_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DebugLoc_O ;
};
template <> class gctools::GCKind<llvmo::DICompileUnit_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DICompileUnit_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___ ;
};
template <> class gctools::GCKind<llvmo::VectorType_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__VectorType_O ;
};
template <> class gctools::GCKind<core::RecursiveDirectoryIterator_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__RecursiveDirectoryIterator_O ;
};
template <> class gctools::GCKind<gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,1>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__1_ ;
};
template <> class gctools::GCKind<core::StdClass_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_BOOTSTRAP_core__StdClass_O ;
};
template <> class gctools::GCKind<llvmo::AtomicCmpXchgInst_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__AtomicCmpXchgInst_O ;
};
template <> class gctools::GCKind<chem::FFPtor_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FFPtor_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__ ;
};
template <> class gctools::GCKind<chem::FFPtorDb_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FFPtorDb_O ;
};
template <> class gctools::GCKind<llvmo::BasicBlock_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__BasicBlock_O ;
};
template <> class gctools::GCKind<core::CompileTimeEnvironment_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__CompileTimeEnvironment_O ;
};
template <> class gctools::GCKind<core::RandomState_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__RandomState_O ;
};
template <> class gctools::GCKind<chem::FFNonbond_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FFNonbond_O ;
};
template <> class gctools::GCKind<llvmo::SequentialType_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__SequentialType_O ;
};
template <> class gctools::GCKind<llvmo::ConstantStruct_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__ConstantStruct_O ;
};
template <> class gctools::GCKind<chem::ChemInfoNode_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ChemInfoNode_O ;
};
template <> class gctools::GCKind<core::IOStreamStream_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__IOStreamStream_O ;
};
template <> class gctools::GCKind<core::InvocationHistoryFrameIterator_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__InvocationHistoryFrameIterator_O ;
};
template <> class gctools::GCKind<core::StructureObject_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__StructureObject_O ;
};
template <> class gctools::GCKind<chem::Restraint_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Restraint_O ;
};
template <> class gctools::GCKind<core::CxxClass_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__CxxClass_O ;
};
template <> class gctools::GCKind<core::SingleFloat_dummy_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SingleFloat_dummy_O ;
};
template <> class gctools::GCKind<chem::ConformationCollectionEntry_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ConformationCollectionEntry_O ;
};
template <> class gctools::GCKind<chem::JumpPlug_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__JumpPlug_O ;
};
template <> class gctools::GCKind<chem::CoordinateSystem_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__CoordinateSystem_O ;
};
template <> class gctools::GCKind<core::Path_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Path_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<core::SymbolStorage>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolStorage_ ;
};
template <> class gctools::GCKind<core::StringStream_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__StringStream_O ;
};
template <> class gctools::GCKind<core::SourceFileInfo_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SourceFileInfo_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<asttooling::ErrorContent>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ErrorContent_ ;
};
template <> class gctools::GCKind<chem::Atom_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Atom_O ;
};
template <> class gctools::GCKind<chem::Aggregate_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Aggregate_O ;
};
template <> class gctools::GCKind<core::ForwardReferencedClass_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__ForwardReferencedClass_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<chem::EnergyChiralRestraint>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyChiralRestraint_ ;
};
template <> class gctools::GCKind<chem::ConstitutionAtoms_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ConstitutionAtoms_O ;
};
template <> class gctools::GCKind<chem::ImproperTorsion_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ImproperTorsion_O ;
};
template <> class gctools::GCKind<core::ArrayDisplaced_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__ArrayDisplaced_O ;
};
template <> class gctools::GCKind<core::HashTableEql_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__HashTableEql_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__ ;
};
template <> class gctools::GCKind<chem::ConformationExplorerMatch_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ConformationExplorerMatch_O ;
};
template <> class gctools::GCKind<chem::AGEdge_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__AGEdge_O ;
};
template <> class gctools::GCKind<core::Metaobject_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_BOOTSTRAP_core__Metaobject_O ;
};
template <> class gctools::GCKind<chem::ChemDraw_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ChemDraw_O ;
};
template <> class gctools::GCKind<cffi::Pointer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_cffi__Pointer_O ;
};
template <> class gctools::GCKind<chem::PdbWriter_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__PdbWriter_O ;
};
template <> class gctools::GCKind<core::CoreExposer> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_CLASSALLOC_core__CoreExposer ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__ ;
};
template <> class gctools::GCKind<chem::RestraintChiral_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__RestraintChiral_O ;
};
template <> class gctools::GCKind<llvmo::BranchInst_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__BranchInst_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<asttooling::ContextFrame>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ContextFrame_ ;
};
template <> class gctools::GCKind<chem::MacroModelFile_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__MacroModelFile_O ;
};
template <> class gctools::GCKind<llvmo::Instruction_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__Instruction_O ;
};
template <> class gctools::GCKind<chem::StereoInformation_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__StereoInformation_O ;
};
template <> class gctools::GCKind<core::SpecialForm_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SpecialForm_O ;
};
template <> class gctools::GCKind<llvmo::ConstantArray_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__ConstantArray_O ;
};
template <> class gctools::GCKind<core::Cons_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Cons_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__ ;
};
template <> class gctools::GCKind<core::Stream_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Stream_O ;
};
template <> class gctools::GCKind<core::Real_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Real_O ;
};
template <> class gctools::GCKind<asttooling::internal::FixedArgCountMatcherDescriptor> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_CLASSALLOC_asttooling__internal__FixedArgCountMatcherDescriptor ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<core::OptionalArgument>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_core__OptionalArgument_ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__ ;
};
template <> class gctools::GCKind<chem::RestraintFixedNonbond_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__RestraintFixedNonbond_O ;
};
template <> class gctools::GCKind<adapt::StringList_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_adapt__StringList_O ;
};
template <> class gctools::GCKind<chem::ZMatrixEntry_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ZMatrixEntry_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<chem::EnergyAngle>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAngle_ ;
};
template <> class gctools::GCKind<chem::ChemInfo_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ChemInfo_O ;
};
template <> class gctools::GCKind<chem::Branch_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Branch_O ;
};
template <> class gctools::GCKind<chem::FFTypesDb_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FFTypesDb_O ;
};
template <> class gctools::GCKind<chem::MinimizerLog_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__MinimizerLog_O ;
};
template <> class gctools::GCKind<chem::SuperposeSelectedAtoms_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__SuperposeSelectedAtoms_O ;
};
template <> class gctools::GCKind<llvmo::GlobalValue_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__GlobalValue_O ;
};
template <> class gctools::GCKind<core::FileStatus_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__FileStatus_O ;
};
template <> class gctools::GCKind<llvmo::LandingPadInst_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__LandingPadInst_O ;
};
template <> class gctools::GCKind<chem::RepresentedEntityNameSet_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__RepresentedEntityNameSet_O ;
};
template <> class gctools::GCKind<llvmo::IRBuilderBase_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__IRBuilderBase_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<core::T_O *>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_core__T_O_P_ ;
};
template <> class gctools::GCKind<core::SymbolMacroletEnvironment_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SymbolMacroletEnvironment_O ;
};
template <> class gctools::GCKind<llvmo::Value_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__Value_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__ ;
};
template <> class gctools::GCKind<chem::SparseLargeSquareMatrix_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__SparseLargeSquareMatrix_O ;
};
template <> class gctools::GCKind<chem::IterateAtoms_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__IterateAtoms_O ;
};
template <> class gctools::GCKind<geom::BoundingBox_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_geom__BoundingBox_O ;
};
template <> class gctools::GCKind<core::UnwindProtectEnvironment_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__UnwindProtectEnvironment_O ;
};
template <> class gctools::GCKind<chem::Plug_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Plug_O ;
};
template <> class gctools::GCKind<units::Quantity_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_units__Quantity_O ;
};
template <> class gctools::GCKind<chem::IterateBonds_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__IterateBonds_O ;
};
template <> class gctools::GCKind<chem::PdbMonomerConnectivity_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__PdbMonomerConnectivity_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__ ;
};
template <> class gctools::GCKind<llvmo::ModulePass_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__ModulePass_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__ ;
};
template <> class gctools::GCKind<llvmo::PassManagerBase_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__PassManagerBase_O ;
};
template <> class gctools::GCKind<core::Iterator_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_TEMPLATED_LISPALLOC_core__Iterator_O ;
};
template <> class gctools::GCKind<core::InterpretedClosure> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_CLASSALLOC_core__InterpretedClosure ;
};
template <> class gctools::GCKind<chem::RestraintAnchor_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__RestraintAnchor_O ;
};
template <> class gctools::GCKind<llvmo::IRBuilder_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__IRBuilder_O ;
};
template <> class gctools::GCKind<chem::CDText_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__CDText_O ;
};
template <> class gctools::GCKind<core::BitVector_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__BitVector_O ;
};
template <> class gctools::GCKind<asttooling::internal::FreeFuncMatcherDescriptor> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_CLASSALLOC_asttooling__internal__FreeFuncMatcherDescriptor ;
};
template <> class gctools::GCKind<chem::AntechamberFocusAtomMatch_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__AntechamberFocusAtomMatch_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<core::DynamicBinding>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_core__DynamicBinding_ ;
};
template <> class gctools::GCKind<core::VectorStepper> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_CLASSALLOC_core__VectorStepper ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__ ;
};
template <> class gctools::GCKind<core::MultiStringBuffer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__MultiStringBuffer_O ;
};
template <> class gctools::GCKind<llvmo::DISubroutineType_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DISubroutineType_O ;
};
template <> class gctools::GCKind<llvmo::DIType_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DIType_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFStretch_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFStretch_O___ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__ ;
};
template <> class gctools::GCKind<chem::AtomOrBondMatchNode_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__AtomOrBondMatchNode_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<core::AuxArgument>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_core__AuxArgument_ ;
};
template <> class gctools::GCKind<llvmo::VAArgInst_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__VAArgInst_O ;
};
template <> class gctools::GCKind<chem::SpecificContext_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__SpecificContext_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__ ;
};
template <> class gctools::GCKind<core::VectorObjectsWithFillPtr_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__VectorObjectsWithFillPtr_O ;
};
template <> class gctools::GCKind<core::VectorObjects_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__VectorObjects_O ;
};
template <> class gctools::GCKind<llvmo::DIDescriptor_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DIDescriptor_O ;
};
template <> class gctools::GCKind<core::SourcePosInfo_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SourcePosInfo_O ;
};
template <> class gctools::GCKind<chem::ResidueTest_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ResidueTest_O ;
};
template <> class gctools::GCKind<llvmo::APInt_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__APInt_O ;
};
template <> class gctools::GCKind<core::GlueEnvironment_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__GlueEnvironment_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::tagged_pointer<core::SequenceStepper>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_core__SequenceStepper__ ;
};
template <> class gctools::GCKind<chem::EnergyAngle_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__EnergyAngle_O ;
};
template <> class gctools::GCKind<llvmo::Target_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__Target_O ;
};
template <> class gctools::GCKind<chem::PlugWithMates_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__PlugWithMates_O ;
};
template <> class gctools::GCKind<llvmo::FunctionType_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__FunctionType_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<chem::EnergyAnchorRestraint>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_ ;
};
template <> class gctools::GCKind<core::Null_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Null_O ;
};
template <> class gctools::GCKind<chem::WildElementDict_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__WildElementDict_O ;
};
template <> class gctools::GCKind<llvmo::LLVMContext_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__LLVMContext_O ;
};
template <> class gctools::GCKind<chem::SmartsRoot_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__SmartsRoot_O ;
};
template <> class gctools::GCKind<adapt::SymbolSet_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_adapt__SymbolSet_O ;
};
template <> class gctools::GCKind<core::Specializer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_BOOTSTRAP_core__Specializer_O ;
};
template <> class gctools::GCKind<llvmo::ConstantFP_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__ConstantFP_O ;
};
template <> class gctools::GCKind<llvmo::APFloat_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__APFloat_O ;
};
template <> class gctools::GCKind<gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,0>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__0_ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<core::KeywordArgument>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_core__KeywordArgument_ ;
};
template <> class gctools::GCKind<chem::TypeAssignmentRules_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__TypeAssignmentRules_O ;
};
template <> class gctools::GCKind<chem::AtomId_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__AtomId_O ;
};
template <> class gctools::GCKind<chem::EnergyAnchorRestraint_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__EnergyAnchorRestraint_O ;
};
template <> class gctools::GCKind<core::InstanceCreator> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_CLASSALLOC_core__InstanceCreator ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__ ;
};
template <> class gctools::GCKind<core::LexicalEnvironment_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__LexicalEnvironment_O ;
};
template <> class gctools::GCKind<clbind::detail::class_map> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_ROOTCLASSALLOC_clbind__detail__class_map ;
};
template <> class gctools::GCKind<chem::FFStretchDb_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FFStretchDb_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__ ;
};
template <> class gctools::GCKind<core::BroadcastStream_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__BroadcastStream_O ;
};
template <> class gctools::GCKind<chem::FFVdw_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FFVdw_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__ ;
};
template <> class gctools::GCKind<chem::ZMatrixBondInternal_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ZMatrixBondInternal_O ;
};
template <> class gctools::GCKind<llvmo::Constant_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__Constant_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::StereoisomerAtoms_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___ ;
};
template <> class gctools::GCKind<chem::RestraintAngle_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__RestraintAngle_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__ ;
};
template <> class gctools::GCKind<core::WeakKeyHashTable_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__WeakKeyHashTable_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___ ;
};
template <> class gctools::GCKind<core::VectorDisplaced_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__VectorDisplaced_O ;
};
template <> class gctools::GCKind<core::LoadTimeValues_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__LoadTimeValues_O ;
};
template <> class gctools::GCKind<core::SynonymStream_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SynonymStream_O ;
};
template <> class gctools::GCKind<llvmo::Module_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__Module_O ;
};
template <> class gctools::GCKind<chem::SearchStatistics_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__SearchStatistics_O ;
};
template <> class gctools::GCKind<chem::MonomerCoordinates_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__MonomerCoordinates_O ;
};
template <> class gctools::GCKind<llvmo::ImmutablePass_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__ImmutablePass_O ;
};
template <> class gctools::GCKind<core::StandardObject_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_BOOTSTRAP_core__StandardObject_O ;
};
template <> class gctools::GCKind<chem::StereoisomerAtom_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__StereoisomerAtom_O ;
};
template <> class gctools::GCKind<chem::FrameRecognizer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FrameRecognizer_O ;
};
template <> class gctools::GCKind<chem::PathMessage_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__PathMessage_O ;
};
template <> class gctools::GCKind<core::LogicalPathname_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__LogicalPathname_O ;
};
template <> class gctools::GCKind<chem::FFAngle_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FFAngle_O ;
};
template <> class gctools::GCKind<llvmo::DebugInfo_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DebugInfo_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<core::SourceFileInfo_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SourceFileInfo_O__ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__ ;
};
template <> class gctools::GCKind<llvmo::StructType_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__StructType_O ;
};
template <> class gctools::GCKind<clbind::ClassRegistry_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_clbind__ClassRegistry_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___ ;
};
template <> class gctools::GCKind<chem::ReportBase_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ReportBase_O ;
};
template <> class gctools::GCKind<core::HashTableEqual_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__HashTableEqual_O ;
};
template <> class gctools::GCKind<core::DirectoryEntry_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__DirectoryEntry_O ;
};
template <> class gctools::GCKind<core::Class_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_BOOTSTRAP_core__Class_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<core::CacheRecord>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_core__CacheRecord_ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<chem::ResidueOut>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_chem__ResidueOut_ ;
};
template <> class gctools::GCKind<core::FunctionValueEnvironment_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__FunctionValueEnvironment_O ;
};
template <> class gctools::GCKind<core::RegexMatch_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__RegexMatch_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___ ;
};
template <> class gctools::GCKind<llvmo::Linker_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__Linker_O ;
};
template <> class gctools::GCKind<llvmo::Pass_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__Pass_O ;
};
template <> class gctools::GCKind<chem::OneMonomer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__OneMonomer_O ;
};
template <> class gctools::GCKind<chem::ForceField_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ForceField_O ;
};
template <> class gctools::GCKind<chem::RingClosingMate_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__RingClosingMate_O ;
};
template <> class gctools::GCKind<chem::RestrainedPiBond_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__RestrainedPiBond_O ;
};
template <> class gctools::GCKind<core::FunctionFrame_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__FunctionFrame_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__ ;
};
template <> class gctools::GCKind<core::FunctionContainerEnvironment_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__FunctionContainerEnvironment_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__ ;
};
template <> class gctools::GCKind<asttooling::DerivableFrontendActionFactory> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_asttooling__DerivableFrontendActionFactory ;
};
template <> class gctools::GCKind<llvmo::ArrayType_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__ArrayType_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___ ;
};
template <> class gctools::GCKind<llvmo::User_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__User_O ;
};
template <> class gctools::GCKind<chem::CalculatePositionUsingInternals_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__CalculatePositionUsingInternals_O ;
};
template <> class gctools::GCKind<core::WrappedPointer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_TEMPLATED_LISPALLOC_core__WrappedPointer_O ;
};
template <> class gctools::GCKind<asttooling::DerivableMatchCallback> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_asttooling__DerivableMatchCallback ;
};
template <> class gctools::GCKind<chem::OligomerPart_Link_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__OligomerPart_Link_O ;
};
template <> class gctools::GCKind<core::Package_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Package_O ;
};
template <> class gctools::GCKind<units::NamedUnit_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_units__NamedUnit_O ;
};
template <> class gctools::GCKind<core::UserData_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__UserData_O ;
};
template <> class gctools::GCKind<chem::CDBond_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__CDBond_O ;
};
template <> class gctools::GCKind<llvmo::CompositeType_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__CompositeType_O ;
};
template <> class gctools::GCKind<chem::SpanningLoop_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__SpanningLoop_O ;
};
template <> class gctools::GCKind<chem::ChemInfoMatch_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ChemInfoMatch_O ;
};
template <> class gctools::GCKind<llvmo::PassManager_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__PassManager_O ;
};
template <> class gctools::GCKind<adapt::StringSet_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_adapt__StringSet_O ;
};
template <> class gctools::GCKind<core::ValueEnvironment_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__ValueEnvironment_O ;
};
template <> class gctools::GCKind<core::StrWithFillPtr_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__StrWithFillPtr_O ;
};
template <> class gctools::GCKind<llvmo::AttributeSet_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__AttributeSet_O ;
};
template <> class gctools::GCKind<core::SexpSaveArchive_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SexpSaveArchive_O ;
};
template <> class gctools::GCKind<core::SexpLoadArchive_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SexpLoadArchive_O ;
};
template <> class gctools::GCKind<asttooling::AstVisitor_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_asttooling__AstVisitor_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFPtor_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFPtor_O___ ;
};
template <> class gctools::GCKind<llvmo::InvokeInst_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__InvokeInst_O ;
};
template <> class gctools::GCKind<core::SNode_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SNode_O ;
};
template <> class gctools::GCKind<chem::Structure_Old_List_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Structure_Old_List_O ;
};
template <> class gctools::GCKind<chem::RestrainedExoCyclicAtom_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__RestrainedExoCyclicAtom_O ;
};
template <> class gctools::GCKind<chem::Residue_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Residue_O ;
};
template <> class gctools::GCKind<llvmo::DIBuilder_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DIBuilder_O ;
};
template <> class gctools::GCKind<asttooling::DerivableASTFrontendAction> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_asttooling__DerivableASTFrontendAction ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::OneTypeRule_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneTypeRule_O__ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__ ;
};
template <> class gctools::GCKind<chem::AtomIndexer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__AtomIndexer_O ;
};
template <> class gctools::GCKind<core::Array_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Array_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<asttooling::Message>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__Message_ ;
};
template <> class gctools::GCKind<llvmo::ConstantInt_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__ConstantInt_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___ ;
};
template <> class gctools::GCKind<llvmo::TargetOptions_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__TargetOptions_O ;
};
template <> class gctools::GCKind<chem::ReadAmberParameters_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ReadAmberParameters_O ;
};
template <> class gctools::GCKind<chem::OligomerPart_Monomer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__OligomerPart_Monomer_O ;
};
template <> class gctools::GCKind<chem::OutPlug_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__OutPlug_O ;
};
template <> class gctools::GCKind<chem::Structure_Old_ListEntry_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Structure_Old_ListEntry_O ;
};
template <> class gctools::GCKind<llvmo::PointerType_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__PointerType_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__ ;
};
template <> class gctools::GCKind<core::CxxObject_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__CxxObject_O ;
};
template <> class gctools::GCKind<chem::ResidueList_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__ResidueList_O ;
};
template <> class gctools::GCKind<chem::CDFragment_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__CDFragment_O ;
};
template <> class gctools::GCKind<chem::BondList_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__BondList_O ;
};
template <> class gctools::GCKind<core::ActivationFrame_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__ActivationFrame_O ;
};
template <> class gctools::GCKind<chem::FFNonbondCrossTermTable_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FFNonbondCrossTermTable_O ;
};
template <> class gctools::GCKind<chem::FFStretch_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__FFStretch_O ;
};
template <> class gctools::GCKind<chem::MonomerContext_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__MonomerContext_O ;
};
template <> class gctools::GCKind<chem::Monomer_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Monomer_O ;
};
template <> class gctools::GCKind<llvmo::UnreachableInst_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__UnreachableInst_O ;
};
template <> class gctools::GCKind<chem::Root_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Root_O ;
};
template <> class gctools::GCKind<core::MacroletEnvironment_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__MacroletEnvironment_O ;
};
template <> class gctools::GCKind<llvmo::PHINode_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__PHINode_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__ ;
};
template <> class gctools::GCKind<chem::EnergyImproperRestraint_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__EnergyImproperRestraint_O ;
};
template <> class gctools::GCKind<core::Reader_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Reader_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__ ;
};
template <> class gctools::GCKind<core::WeakHashTable_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__WeakHashTable_O ;
};
template <> class gctools::GCKind<asttooling::DerivableSyntaxOnlyAction> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_asttooling__DerivableSyntaxOnlyAction ;
};
template <> class gctools::GCKind<geom::OVector2_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_geom__OVector2_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::OneMonomer_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneMonomer_O__ ;
};
template <> class gctools::GCKind<core::BranchSNode_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__BranchSNode_O ;
};
template <> class gctools::GCKind<llvmo::DISubprogram_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DISubprogram_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFAngle_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFAngle_O___ ;
};
template <> class gctools::GCKind<llvmo::FunctionPassManager_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__FunctionPassManager_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__ ;
};
template <> class gctools::GCKind<chem::NVector_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__NVector_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___ ;
};
template <> class gctools::GCKind<chem::EnergyChiralRestraint_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__EnergyChiralRestraint_O ;
};
template <> class gctools::GCKind<core::SingleDispatchGenericFunction_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__SingleDispatchGenericFunction_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__ ;
};
template <> class gctools::GCKind<core::BuiltinClosure> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_TEMPLATED_CLASSALLOC_core__BuiltinClosure ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___ ;
};
template <> class gctools::GCKind<core::EchoStream_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__EchoStream_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFAngle_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFAngle_O__ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__ ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___ ;
};
template <> class gctools::GCKind<chem::DirectionalCoupling_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__DirectionalCoupling_O ;
};
template <> class gctools::GCKind<llvmo::Argument_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__Argument_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfo_O>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfo_O__ ;
};
template <> class gctools::GCKind<chem::TagSet_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__TagSet_O ;
};
template <> class gctools::GCKind<core::Complex_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Complex_O ;
};
template <> class gctools::GCKind<core::Regex_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Regex_O ;
};
template <> class gctools::GCKind<clbind::ClassRep_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_clbind__ClassRep_O ;
};
template <> class gctools::GCKind<chem::IterateResidues_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__IterateResidues_O ;
};
template <> class gctools::GCKind<llvmo::TargetLibraryInfo_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__TargetLibraryInfo_O ;
};
template <> class gctools::GCKind<core::HashTableEq_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__HashTableEq_O ;
};
template <> class gctools::GCKind<llvmo::DataLayoutPass_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_llvmo__DataLayoutPass_O ;
};
template <> class gctools::GCKind<chem::Command_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__Command_O ;
};
template <> class gctools::GCKind<core::ConsStepper> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_CLASSALLOC_core__ConsStepper ;
};
template <> class gctools::GCKind<chem::AtomTable_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__AtomTable_O ;
};
template <> class gctools::GCKind<units::Unit_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_units__Unit_O ;
};
template <> class gctools::GCKind<chem::EntityNameSetBase_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__EntityNameSetBase_O ;
};
template <> class gctools::GCKind<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___ ;
};
template <> class gctools::GCKind<core::Float_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_core__Float_O ;
};
template <> class gctools::GCKind<chem::MessageReport_O> {
public:
  static gctools::GCKindEnum const Kind = gctools::KIND_LISPALLOC_chem__MessageReport_O ;
};
#endif // defined(GC_KIND_SELECTORS)
#if defined(GC_OBJ_SKIP)
obj_skip_KIND_TEMPLATED_LISPALLOC_core__WrappedPointer_O:
{
    core::WrappedPointer_O* obj_gc_safe = reinterpret_cast<core::WrappedPointer_O*>(client);
    // client = (char*)client + AlignUp(obj_gc_safe->templatedSizeof()) + global_alignup_sizeof_header;
    size = obj_gc_safe->templatedSizeof();
    goto DONE; //return client;
}
obj_skip_KIND_TEMPLATED_LISPALLOC_core__Iterator_O:
{
    core::Iterator_O* obj_gc_safe = reinterpret_cast<core::Iterator_O*>(client);
    // client = (char*)client + AlignUp(obj_gc_safe->templatedSizeof()) + global_alignup_sizeof_header;
    size = obj_gc_safe->templatedSizeof();
    goto DONE; //return client;
}
obj_skip_KIND_TEMPLATED_CLASSALLOC_core__Creator:
{
    core::Creator* obj_gc_safe = reinterpret_cast<core::Creator*>(client);
    // client = (char*)client + AlignUp(obj_gc_safe->templatedSizeof()) + global_alignup_sizeof_header;
    size = obj_gc_safe->templatedSizeof();
    goto DONE; //return client;
}
obj_skip_KIND_TEMPLATED_CLASSALLOC_clbind__ConstructorCreator:
{
    clbind::ConstructorCreator* obj_gc_safe = reinterpret_cast<clbind::ConstructorCreator*>(client);
    // client = (char*)client + AlignUp(obj_gc_safe->templatedSizeof()) + global_alignup_sizeof_header;
    size = obj_gc_safe->templatedSizeof();
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyStretch_:
{
  {
    gctools::GCVector_moveable<chem::EnergyStretch>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::EnergyStretch>*>(client);
    typedef typename gctools::GCVector_moveable<chem::EnergyStretch> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyStretch_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyStretch_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyStretch_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFStretch_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::FFStretch_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFStretch_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::FFStretch_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFStretch_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFStretch_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFStretch_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Stereoisomer_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Stereoisomer_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Stereoisomer_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Stereoisomer_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Stereoisomer_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyNonbond_:
{
  {
    gctools::GCVector_moveable<chem::EnergyNonbond>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::EnergyNonbond>*>(client);
    typedef typename gctools::GCVector_moveable<chem::EnergyNonbond> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyNonbond_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyNonbond_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyNonbond_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__RequiredArgument_:
{
  {
    gctools::GCVector_moveable<core::RequiredArgument>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::RequiredArgument>*>(client);
    typedef typename gctools::GCVector_moveable<core::RequiredArgument> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__RequiredArgument_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__RequiredArgument_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__RequiredArgument_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Entity_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Entity_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Entity_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Str_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Str_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Str_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Str_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Str_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Str_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Str_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomInfo_:
{
  {
    gctools::GCVector_moveable<chem::AtomInfo>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::AtomInfo>*>(client);
    typedef typename gctools::GCVector_moveable<chem::AtomInfo> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomInfo_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomInfo_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomInfo_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__RegMap__SymbolMatcherDescriptorPair_:
{
  {
    gctools::GCVector_moveable<asttooling::RegMap::SymbolMatcherDescriptorPair>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<asttooling::RegMap::SymbolMatcherDescriptorPair>*>(client);
    typedef typename gctools::GCVector_moveable<asttooling::RegMap::SymbolMatcherDescriptorPair> type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__RegMap__SymbolMatcherDescriptorPair_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__RegMap__SymbolMatcherDescriptorPair_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__RegMap__SymbolMatcherDescriptorPair_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFItor_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFItor_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFItor_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFItor_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFItor_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFItor_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFItor_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__FixedNonbondRestraint_:
{
  {
    gctools::GCVector_moveable<chem::FixedNonbondRestraint>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::FixedNonbondRestraint>*>(client);
    typedef typename gctools::GCVector_moveable<chem::FixedNonbondRestraint> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__FixedNonbondRestraint_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__FixedNonbondRestraint_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__FixedNonbondRestraint_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_asttooling__internal__MatcherDescriptor__:
{
  {
    gctools::GCVector_moveable<gctools::tagged_pointer<asttooling::internal::MatcherDescriptor>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::tagged_pointer<asttooling::internal::MatcherDescriptor>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::tagged_pointer<asttooling::internal::MatcherDescriptor>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_asttooling__internal__MatcherDescriptor__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_asttooling__internal__MatcherDescriptor__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_asttooling__internal__MatcherDescriptor__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__2_:
{
  {
    gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,2>* obj_gc_safe = reinterpret_cast<gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,2>*>(client);
    typedef typename gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,2> type_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__2_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__2_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__2_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__ExceptionEntry_:
{
  {
    gctools::GCVector_moveable<core::ExceptionEntry>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::ExceptionEntry>*>(client);
    typedef typename gctools::GCVector_moveable<core::ExceptionEntry> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__ExceptionEntry_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__ExceptionEntry_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__ExceptionEntry_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyDihedral_:
{
  {
    gctools::GCVector_moveable<chem::EnergyDihedral>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::EnergyDihedral>*>(client);
    typedef typename gctools::GCVector_moveable<chem::EnergyDihedral> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyDihedral_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyDihedral_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyDihedral_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ParserValue_:
{
  {
    gctools::GCVector_moveable<asttooling::ParserValue>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<asttooling::ParserValue>*>(client);
    typedef typename gctools::GCVector_moveable<asttooling::ParserValue> type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ParserValue_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ParserValue_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ParserValue_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCSTRING_gctools__GCString_moveable_char_:
{
  {
    gctools::GCString_moveable<char>* obj_gc_safe = reinterpret_cast<gctools::GCString_moveable<char>*>(client);
    typedef typename gctools::GCString_moveable<char> type_KIND_GCSTRING_gctools__GCString_moveable_char_;
    //size_t header_and_gcstring_size = AlignUp(sizeof_container<type_KIND_GCSTRING_gctools__GCString_moveable_char_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCSTRING_gctools__GCString_moveable_char_>(obj_gc_safe->capacity());
    //client = (char*)client + Align(header_and_gcstring_size);
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__RingClosingMate_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::RingClosingMate_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::RingClosingMate_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::RingClosingMate_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__RingClosingMate_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__RingClosingMate_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__RingClosingMate_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolClassPair_:
{
  {
    gctools::GCVector_moveable<core::SymbolClassPair>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::SymbolClassPair>*>(client);
    typedef typename gctools::GCVector_moveable<core::SymbolClassPair> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolClassPair_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolClassPair_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolClassPair_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__KeyEntry_:
{
  {
    gctools::GCVector_moveable<chem::KeyEntry>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::KeyEntry>*>(client);
    typedef typename gctools::GCVector_moveable<chem::KeyEntry> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__KeyEntry_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__KeyEntry_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__KeyEntry_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAtom_:
{
  {
    gctools::GCVector_moveable<chem::EnergyAtom>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::EnergyAtom>*>(client);
    typedef typename gctools::GCVector_moveable<chem::EnergyAtom> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAtom_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAtom_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAtom_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFPtor_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::FFPtor_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFPtor_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::FFPtor_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFPtor_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFPtor_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFPtor_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___:
{
  {
    gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyImproperRestraint_:
{
  {
    gctools::GCVector_moveable<chem::EnergyImproperRestraint>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::EnergyImproperRestraint>*>(client);
    typedef typename gctools::GCVector_moveable<chem::EnergyImproperRestraint> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyImproperRestraint_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyImproperRestraint_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyImproperRestraint_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomPdbRec_:
{
  {
    gctools::GCVector_moveable<chem::AtomPdbRec>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::AtomPdbRec>*>(client);
    typedef typename gctools::GCVector_moveable<chem::AtomPdbRec> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomPdbRec_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomPdbRec_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomPdbRec_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFItor_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::FFItor_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFItor_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::FFItor_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFItor_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFItor_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFItor_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___:
{
  {
    gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__1_:
{
  {
    gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,1>* obj_gc_safe = reinterpret_cast<gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,1>*>(client);
    typedef typename gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,1> type_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__1_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__1_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__1_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolStorage_:
{
  {
    gctools::GCVector_moveable<core::SymbolStorage>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::SymbolStorage>*>(client);
    typedef typename gctools::GCVector_moveable<core::SymbolStorage> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolStorage_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolStorage_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolStorage_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ErrorContent_:
{
  {
    gctools::GCVector_moveable<asttooling::ErrorContent>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<asttooling::ErrorContent>*>(client);
    typedef typename gctools::GCVector_moveable<asttooling::ErrorContent> type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ErrorContent_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ErrorContent_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ErrorContent_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyChiralRestraint_:
{
  {
    gctools::GCVector_moveable<chem::EnergyChiralRestraint>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::EnergyChiralRestraint>*>(client);
    typedef typename gctools::GCVector_moveable<chem::EnergyChiralRestraint> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyChiralRestraint_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyChiralRestraint_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyChiralRestraint_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ContextFrame_:
{
  {
    gctools::GCVector_moveable<asttooling::ContextFrame>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<asttooling::ContextFrame>*>(client);
    typedef typename gctools::GCVector_moveable<asttooling::ContextFrame> type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ContextFrame_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ContextFrame_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ContextFrame_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_:
{
  {
    gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>*>(client);
    typedef typename gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__OptionalArgument_:
{
  {
    gctools::GCVector_moveable<core::OptionalArgument>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::OptionalArgument>*>(client);
    typedef typename gctools::GCVector_moveable<core::OptionalArgument> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__OptionalArgument_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__OptionalArgument_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__OptionalArgument_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAngle_:
{
  {
    gctools::GCVector_moveable<chem::EnergyAngle>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::EnergyAngle>*>(client);
    typedef typename gctools::GCVector_moveable<chem::EnergyAngle> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAngle_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAngle_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAngle_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__T_O_P_:
{
  {
    gctools::GCVector_moveable<core::T_O *>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::T_O *>*>(client);
    typedef typename gctools::GCVector_moveable<core::T_O *> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__T_O_P_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__T_O_P_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__T_O_P_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__DynamicBinding_:
{
  {
    gctools::GCVector_moveable<core::DynamicBinding>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::DynamicBinding>*>(client);
    typedef typename gctools::GCVector_moveable<core::DynamicBinding> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__DynamicBinding_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__DynamicBinding_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__DynamicBinding_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFStretch_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFStretch_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFStretch_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFStretch_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFStretch_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFStretch_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFStretch_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__AuxArgument_:
{
  {
    gctools::GCVector_moveable<core::AuxArgument>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::AuxArgument>*>(client);
    typedef typename gctools::GCVector_moveable<core::AuxArgument> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__AuxArgument_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__AuxArgument_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__AuxArgument_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_core__SequenceStepper__:
{
  {
    gctools::GCVector_moveable<gctools::tagged_pointer<core::SequenceStepper>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::tagged_pointer<core::SequenceStepper>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::tagged_pointer<core::SequenceStepper>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_core__SequenceStepper__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_core__SequenceStepper__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_core__SequenceStepper__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_:
{
  {
    gctools::GCVector_moveable<chem::EnergyAnchorRestraint>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::EnergyAnchorRestraint>*>(client);
    typedef typename gctools::GCVector_moveable<chem::EnergyAnchorRestraint> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__0_:
{
  {
    gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,0>* obj_gc_safe = reinterpret_cast<gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,0>*>(client);
    typedef typename gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,0> type_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__0_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__0_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__0_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__KeywordArgument_:
{
  {
    gctools::GCVector_moveable<core::KeywordArgument>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::KeywordArgument>*>(client);
    typedef typename gctools::GCVector_moveable<core::KeywordArgument> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__KeywordArgument_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__KeywordArgument_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__KeywordArgument_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::StereoisomerAtoms_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::StereoisomerAtoms_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::StereoisomerAtoms_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SourceFileInfo_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<core::SourceFileInfo_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<core::SourceFileInfo_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<core::SourceFileInfo_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SourceFileInfo_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SourceFileInfo_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SourceFileInfo_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___:
{
  {
    gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__CacheRecord_:
{
  {
    gctools::GCVector_moveable<core::CacheRecord>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::CacheRecord>*>(client);
    typedef typename gctools::GCVector_moveable<core::CacheRecord> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__CacheRecord_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__CacheRecord_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__CacheRecord_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__ResidueOut_:
{
  {
    gctools::GCVector_moveable<chem::ResidueOut>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::ResidueOut>*>(client);
    typedef typename gctools::GCVector_moveable<chem::ResidueOut> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__ResidueOut_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__ResidueOut_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__ResidueOut_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFPtor_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFPtor_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFPtor_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFPtor_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFPtor_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFPtor_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFPtor_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneTypeRule_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::OneTypeRule_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::OneTypeRule_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::OneTypeRule_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneTypeRule_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneTypeRule_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneTypeRule_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__Message_:
{
  {
    gctools::GCVector_moveable<asttooling::Message>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<asttooling::Message>*>(client);
    typedef typename gctools::GCVector_moveable<asttooling::Message> type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__Message_;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__Message_>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__Message_>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneMonomer_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::OneMonomer_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::OneMonomer_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::OneMonomer_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneMonomer_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneMonomer_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneMonomer_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFAngle_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFAngle_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFAngle_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFAngle_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFAngle_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFAngle_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFAngle_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_TEMPLATED_CLASSALLOC_core__BuiltinClosure:
{
    core::BuiltinClosure* obj_gc_safe = reinterpret_cast<core::BuiltinClosure*>(client);
    // client = (char*)client + AlignUp(obj_gc_safe->templatedSizeof()) + global_alignup_sizeof_header;
    size = obj_gc_safe->templatedSizeof();
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___:
{
  {
    gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFAngle_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::FFAngle_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFAngle_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::FFAngle_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFAngle_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFAngle_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFAngle_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfo_O__:
{
  {
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfo_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfo_O>>*>(client);
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfo_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfo_O__;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfo_O__>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfo_O__>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___:
{
  {
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>*>(client);
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___;
    // size_t header_and_gccontainer_size = AlignUp(sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___>(obj_gc_safe->capacity()))+AlignUp(sizeof(gctools::Header_s));
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___>(obj_gc_safe->capacity());
    //client = (char*)client + header_and_gccontainer_size;
  }
    goto DONE; //return client;
}
#endif // defined(GC_OBJ_SKIP)
#if defined(GC_OBJ_SKIP_HELPERS)

#endif // defined(GC_OBJ_SKIP_HELPERS)
#if defined(GC_OBJ_SKIP_TABLE)
static void* OBJ_SKIP_table[] = { 
  /* 229 */ &&obj_skip_KIND_TEMPLATED_LISPALLOC_core__WrappedPointer_O,
  /* 263 */ &&obj_skip_KIND_TEMPLATED_LISPALLOC_core__Iterator_O,
  /* 455 */ &&obj_skip_KIND_TEMPLATED_CLASSALLOC_core__Creator,
  /* 457 */ &&obj_skip_KIND_TEMPLATED_CLASSALLOC_clbind__ConstructorCreator,
  /* 459 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__,
  /* 460 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyStretch_,
  /* 461 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFStretch_O__,
  /* 462 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___,
  /* 464 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Stereoisomer_O___,
  /* 465 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyNonbond_,
  /* 466 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__RequiredArgument_,
  /* 467 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___,
  /* 469 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__,
  /* 470 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Str_O___,
  /* 471 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomInfo_,
  /* 472 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__RegMap__SymbolMatcherDescriptorPair_,
  /* 473 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___,
  /* 474 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__,
  /* 475 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFItor_O___,
  /* 476 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___,
  /* 477 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__,
  /* 479 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___,
  /* 480 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__,
  /* 481 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__,
  /* 482 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__FixedNonbondRestraint_,
  /* 483 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_asttooling__internal__MatcherDescriptor__,
  /* 484 */ &&obj_skip_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__2_,
  /* 485 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__,
  /* 486 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__,
  /* 487 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__,
  /* 488 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__,
  /* 489 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__,
  /* 490 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___,
  /* 491 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__ExceptionEntry_,
  /* 492 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__,
  /* 494 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__,
  /* 495 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__,
  /* 496 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyDihedral_,
  /* 497 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ParserValue_,
  /* 498 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__,
  /* 499 */ &&obj_skip_KIND_GCSTRING_gctools__GCString_moveable_char_,
  /* 500 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__RingClosingMate_O__,
  /* 501 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolClassPair_,
  /* 502 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__,
  /* 503 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__KeyEntry_,
  /* 504 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__,
  /* 505 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAtom_,
  /* 506 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFPtor_O__,
  /* 508 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___,
  /* 509 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyImproperRestraint_,
  /* 510 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__,
  /* 511 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomPdbRec_,
  /* 512 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFItor_O__,
  /* 514 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___,
  /* 515 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___,
  /* 516 */ &&obj_skip_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__1_,
  /* 517 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___,
  /* 518 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__,
  /* 519 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolStorage_,
  /* 520 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ErrorContent_,
  /* 521 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyChiralRestraint_,
  /* 522 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__,
  /* 523 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__,
  /* 525 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__,
  /* 526 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ContextFrame_,
  /* 527 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__,
  /* 529 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_,
  /* 530 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__OptionalArgument_,
  /* 531 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__,
  /* 532 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAngle_,
  /* 533 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__T_O_P_,
  /* 534 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__,
  /* 535 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__,
  /* 536 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__,
  /* 539 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__DynamicBinding_,
  /* 541 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__,
  /* 542 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFStretch_O___,
  /* 543 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__,
  /* 544 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__AuxArgument_,
  /* 545 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__,
  /* 546 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_core__SequenceStepper__,
  /* 547 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_,
  /* 548 */ &&obj_skip_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__0_,
  /* 549 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__KeywordArgument_,
  /* 550 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__,
  /* 551 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__,
  /* 552 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__,
  /* 553 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___,
  /* 554 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___,
  /* 555 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__,
  /* 556 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__,
  /* 557 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___,
  /* 558 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SourceFileInfo_O__,
  /* 559 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__,
  /* 560 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___,
  /* 561 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_core__CacheRecord_,
  /* 562 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_chem__ResidueOut_,
  /* 563 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___,
  /* 564 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__,
  /* 565 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__,
  /* 567 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___,
  /* 568 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___,
  /* 570 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFPtor_O___,
  /* 572 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneTypeRule_O__,
  /* 573 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__,
  /* 574 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__Message_,
  /* 575 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___,
  /* 576 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__,
  /* 577 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__,
  /* 578 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__,
  /* 580 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneMonomer_O__,
  /* 581 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFAngle_O___,
  /* 582 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__,
  /* 583 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___,
  /* 584 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__,
  /* 585 */ &&obj_skip_KIND_TEMPLATED_CLASSALLOC_core__BuiltinClosure,
  /* 586 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___,
  /* 587 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFAngle_O__,
  /* 588 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__,
  /* 589 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___,
  /* 590 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfo_O__,
  /* 592 */ &&obj_skip_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___,
   NULL
};
#endif // defined(GC_OBJ_SKIP_TABLE)
#if defined(GC_OBJ_SCAN)
obj_scan_KIND_TEMPLATED_LISPALLOC_core__WrappedPointer_O:
{
    core::WrappedPointer_O* obj_gc_safe = reinterpret_cast<core::WrappedPointer_O*>(client);
    SMART_PTR_FIX(obj_gc_safe->_Class);
    size = obj_gc_safe->templatedSizeof();}
goto SCAN_ADVANCE;
obj_scan_KIND_TEMPLATED_LISPALLOC_core__Iterator_O:
{
    core::Iterator_O* obj_gc_safe = reinterpret_cast<core::Iterator_O*>(client);
    size = obj_gc_safe->templatedSizeof();}
goto SCAN_ADVANCE;
obj_scan_KIND_TEMPLATED_CLASSALLOC_core__Creator:
{
    core::Creator* obj_gc_safe = reinterpret_cast<core::Creator*>(client);
    size = obj_gc_safe->templatedSizeof();}
goto SCAN_ADVANCE;
obj_scan_KIND_TEMPLATED_CLASSALLOC_clbind__ConstructorCreator:
{
    clbind::ConstructorCreator* obj_gc_safe = reinterpret_cast<clbind::ConstructorCreator*>(client);
    SMART_PTR_FIX(obj_gc_safe->_mostDerivedClassSymbol);
    size = obj_gc_safe->templatedSizeof();}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyStretch_:
{
    gctools::GCVector_moveable<chem::EnergyStretch>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::EnergyStretch>*>(client);
    for (gctools::GCVector_moveable<chem::EnergyStretch>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    POINTER_REF_FIX(it->_Atom1.theObject);
    POINTER_REF_FIX(it->_Atom2.theObject);
    }
    typedef typename gctools::GCVector_moveable<chem::EnergyStretch> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyStretch_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyStretch_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFStretch_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::FFStretch_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFStretch_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::FFStretch_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::FFStretch_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFStretch_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFStretch_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Stereoisomer_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Stereoisomer_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Stereoisomer_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Stereoisomer_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyNonbond_:
{
    gctools::GCVector_moveable<chem::EnergyNonbond>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::EnergyNonbond>*>(client);
    for (gctools::GCVector_moveable<chem::EnergyNonbond>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    POINTER_REF_FIX(it->_Atom1.theObject);
    POINTER_REF_FIX(it->_Atom2.theObject);
    }
    typedef typename gctools::GCVector_moveable<chem::EnergyNonbond> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyNonbond_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyNonbond_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__RequiredArgument_:
{
    gctools::GCVector_moveable<core::RequiredArgument>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::RequiredArgument>*>(client);
    for (gctools::GCVector_moveable<core::RequiredArgument>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->_ArgTarget);
    }
    typedef typename gctools::GCVector_moveable<core::RequiredArgument> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__RequiredArgument_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__RequiredArgument_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Entity_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Entity_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Entity_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Entity_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Str_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Str_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Str_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Str_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Str_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Str_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Str_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomInfo_:
{
    gctools::GCVector_moveable<chem::AtomInfo>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::AtomInfo>*>(client);
    for (gctools::GCVector_moveable<chem::AtomInfo>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->_Atom);
    SMART_PTR_FIX(it->_Type);
    }
    typedef typename gctools::GCVector_moveable<chem::AtomInfo> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomInfo_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomInfo_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__RegMap__SymbolMatcherDescriptorPair_:
{
    gctools::GCVector_moveable<asttooling::RegMap::SymbolMatcherDescriptorPair>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<asttooling::RegMap::SymbolMatcherDescriptorPair>*>(client);
    for (gctools::GCVector_moveable<asttooling::RegMap::SymbolMatcherDescriptorPair>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->Name);
    TAGGED_POINTER_FIX(it->matcher);
    }
    typedef typename gctools::GCVector_moveable<asttooling::RegMap::SymbolMatcherDescriptorPair> type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__RegMap__SymbolMatcherDescriptorPair_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__RegMap__SymbolMatcherDescriptorPair_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFItor_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFItor_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFItor_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFItor_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFItor_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFItor_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFItor_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__FixedNonbondRestraint_:
{
    gctools::GCVector_moveable<chem::FixedNonbondRestraint>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::FixedNonbondRestraint>*>(client);
    for (gctools::GCVector_moveable<chem::FixedNonbondRestraint>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    POINTER_REF_FIX(it->_FixedAtom.theObject);
    }
    typedef typename gctools::GCVector_moveable<chem::FixedNonbondRestraint> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__FixedNonbondRestraint_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__FixedNonbondRestraint_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_asttooling__internal__MatcherDescriptor__:
{
    gctools::GCVector_moveable<gctools::tagged_pointer<asttooling::internal::MatcherDescriptor>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::tagged_pointer<asttooling::internal::MatcherDescriptor>>*>(client);
    for (gctools::GCVector_moveable<gctools::tagged_pointer<asttooling::internal::MatcherDescriptor>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          TAGGED_POINTER_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::tagged_pointer<asttooling::internal::MatcherDescriptor>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_asttooling__internal__MatcherDescriptor__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_asttooling__internal__MatcherDescriptor__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__2_:
{
    gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,2>* obj_gc_safe = reinterpret_cast<gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,2>*>(client);
    for (gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,2>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,2> type_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__2_;
    size = sizeof_container<type_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__2_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__ExceptionEntry_:
{
    gctools::GCVector_moveable<core::ExceptionEntry>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::ExceptionEntry>*>(client);
    for (gctools::GCVector_moveable<core::ExceptionEntry>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->_Key);
    }
    typedef typename gctools::GCVector_moveable<core::ExceptionEntry> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__ExceptionEntry_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__ExceptionEntry_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyDihedral_:
{
    gctools::GCVector_moveable<chem::EnergyDihedral>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::EnergyDihedral>*>(client);
    for (gctools::GCVector_moveable<chem::EnergyDihedral>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    POINTER_REF_FIX(it->_Atom1.theObject);
    POINTER_REF_FIX(it->_Atom2.theObject);
    POINTER_REF_FIX(it->_Atom3.theObject);
    POINTER_REF_FIX(it->_Atom4.theObject);
    }
    typedef typename gctools::GCVector_moveable<chem::EnergyDihedral> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyDihedral_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyDihedral_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ParserValue_:
{
    gctools::GCVector_moveable<asttooling::ParserValue>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<asttooling::ParserValue>*>(client);
    for (gctools::GCVector_moveable<asttooling::ParserValue>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->Range);
    }
    typedef typename gctools::GCVector_moveable<asttooling::ParserValue> type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ParserValue_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ParserValue_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCSTRING_gctools__GCString_moveable_char_:
{
    // Should never be invoked
}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__RingClosingMate_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::RingClosingMate_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::RingClosingMate_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::RingClosingMate_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::RingClosingMate_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__RingClosingMate_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__RingClosingMate_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolClassPair_:
{
    gctools::GCVector_moveable<core::SymbolClassPair>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::SymbolClassPair>*>(client);
    for (gctools::GCVector_moveable<core::SymbolClassPair>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->symbol);
    SMART_PTR_FIX(it->theClass);
    }
    typedef typename gctools::GCVector_moveable<core::SymbolClassPair> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolClassPair_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolClassPair_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__KeyEntry_:
{
    gctools::GCVector_moveable<chem::KeyEntry>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::KeyEntry>*>(client);
    for (gctools::GCVector_moveable<chem::KeyEntry>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->_Coupling);
    SMART_PTR_FIX(it->_Monomer);
    }
    typedef typename gctools::GCVector_moveable<chem::KeyEntry> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__KeyEntry_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__KeyEntry_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAtom_:
{
    gctools::GCVector_moveable<chem::EnergyAtom>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::EnergyAtom>*>(client);
    for (gctools::GCVector_moveable<chem::EnergyAtom>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->_SharedAtom);
    SMART_PTR_FIX(it->_AtomName);
    ARRAY_FIX(it->_AtomsAtRemove);
    }
    typedef typename gctools::GCVector_moveable<chem::EnergyAtom> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAtom_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAtom_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFPtor_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::FFPtor_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFPtor_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::FFPtor_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::FFPtor_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFPtor_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFPtor_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___:
{
    gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyImproperRestraint_:
{
    gctools::GCVector_moveable<chem::EnergyImproperRestraint>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::EnergyImproperRestraint>*>(client);
    for (gctools::GCVector_moveable<chem::EnergyImproperRestraint>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    POINTER_REF_FIX(it->_Atom1.theObject);
    POINTER_REF_FIX(it->_Atom2.theObject);
    POINTER_REF_FIX(it->_Atom3.theObject);
    POINTER_REF_FIX(it->_Atom4.theObject);
    }
    typedef typename gctools::GCVector_moveable<chem::EnergyImproperRestraint> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyImproperRestraint_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyImproperRestraint_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomPdbRec_:
{
    gctools::GCVector_moveable<chem::AtomPdbRec>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::AtomPdbRec>*>(client);
    for (gctools::GCVector_moveable<chem::AtomPdbRec>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->_name);
    SMART_PTR_FIX(it->_resName);
    SMART_PTR_FIX(it->_atom);
    }
    typedef typename gctools::GCVector_moveable<chem::AtomPdbRec> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomPdbRec_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomPdbRec_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFItor_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::FFItor_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFItor_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::FFItor_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::FFItor_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFItor_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFItor_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___:
{
    gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__1_:
{
    gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,1>* obj_gc_safe = reinterpret_cast<gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,1>*>(client);
    for (gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,1>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,1> type_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__1_;
    size = sizeof_container<type_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__1_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolStorage_:
{
    gctools::GCVector_moveable<core::SymbolStorage>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::SymbolStorage>*>(client);
    for (gctools::GCVector_moveable<core::SymbolStorage>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->_Symbol);
    }
    typedef typename gctools::GCVector_moveable<core::SymbolStorage> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolStorage_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolStorage_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ErrorContent_:
{
    gctools::GCVector_moveable<asttooling::ErrorContent>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<asttooling::ErrorContent>*>(client);
    for (gctools::GCVector_moveable<asttooling::ErrorContent>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    TAGGED_POINTER_FIX(it->ContextStack._Vector._Contents);
    TAGGED_POINTER_FIX(it->Messages._Vector._Contents);
    }
    typedef typename gctools::GCVector_moveable<asttooling::ErrorContent> type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ErrorContent_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ErrorContent_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyChiralRestraint_:
{
    gctools::GCVector_moveable<chem::EnergyChiralRestraint>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::EnergyChiralRestraint>*>(client);
    for (gctools::GCVector_moveable<chem::EnergyChiralRestraint>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    POINTER_REF_FIX(it->_Atom1.theObject);
    POINTER_REF_FIX(it->_Atom2.theObject);
    POINTER_REF_FIX(it->_Atom3.theObject);
    POINTER_REF_FIX(it->_Atom4.theObject);
    }
    typedef typename gctools::GCVector_moveable<chem::EnergyChiralRestraint> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyChiralRestraint_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyChiralRestraint_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second._ti);
    SMART_PTR_FIX(it->second._tj);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ContextFrame_:
{
    gctools::GCVector_moveable<asttooling::ContextFrame>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<asttooling::ContextFrame>*>(client);
    for (gctools::GCVector_moveable<asttooling::ContextFrame>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->Range);
    }
    typedef typename gctools::GCVector_moveable<asttooling::ContextFrame> type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ContextFrame_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ContextFrame_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_:
{
    gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>*>(client);
    for (gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    POINTER_REF_FIX(it->_MobileAtom.theObject);
    POINTER_REF_FIX(it->_FixedAtom.theObject);
    }
    typedef typename gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__OptionalArgument_:
{
    gctools::GCVector_moveable<core::OptionalArgument>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::OptionalArgument>*>(client);
    for (gctools::GCVector_moveable<core::OptionalArgument>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->_ArgTarget);
    SMART_PTR_FIX(it->_Default);
    SMART_PTR_FIX(it->_Sensor._ArgTarget);
    }
    typedef typename gctools::GCVector_moveable<core::OptionalArgument> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__OptionalArgument_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__OptionalArgument_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAngle_:
{
    gctools::GCVector_moveable<chem::EnergyAngle>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::EnergyAngle>*>(client);
    for (gctools::GCVector_moveable<chem::EnergyAngle>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    POINTER_REF_FIX(it->_Atom1.theObject);
    POINTER_REF_FIX(it->_Atom2.theObject);
    POINTER_REF_FIX(it->_Atom3.theObject);
    }
    typedef typename gctools::GCVector_moveable<chem::EnergyAngle> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAngle_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAngle_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__T_O_P_:
{
    gctools::GCVector_moveable<core::T_O *>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::T_O *>*>(client);
    for (gctools::GCVector_moveable<core::T_O *>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SIMPLE_POINTER_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<core::T_O *> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__T_O_P_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__T_O_P_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__DynamicBinding_:
{
    gctools::GCVector_moveable<core::DynamicBinding>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::DynamicBinding>*>(client);
    for (gctools::GCVector_moveable<core::DynamicBinding>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->_Var);
    SMART_PTR_FIX(it->_Val);
    }
    typedef typename gctools::GCVector_moveable<core::DynamicBinding> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__DynamicBinding_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__DynamicBinding_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFStretch_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFStretch_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFStretch_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFStretch_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFStretch_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFStretch_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFStretch_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__AuxArgument_:
{
    gctools::GCVector_moveable<core::AuxArgument>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::AuxArgument>*>(client);
    for (gctools::GCVector_moveable<core::AuxArgument>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->_ArgTarget);
    SMART_PTR_FIX(it->_Expression);
    }
    typedef typename gctools::GCVector_moveable<core::AuxArgument> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__AuxArgument_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__AuxArgument_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_core__SequenceStepper__:
{
    gctools::GCVector_moveable<gctools::tagged_pointer<core::SequenceStepper>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::tagged_pointer<core::SequenceStepper>>*>(client);
    for (gctools::GCVector_moveable<gctools::tagged_pointer<core::SequenceStepper>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          TAGGED_POINTER_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::tagged_pointer<core::SequenceStepper>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_core__SequenceStepper__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_core__SequenceStepper__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_:
{
    gctools::GCVector_moveable<chem::EnergyAnchorRestraint>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::EnergyAnchorRestraint>*>(client);
    for (gctools::GCVector_moveable<chem::EnergyAnchorRestraint>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    POINTER_REF_FIX(it->_Atom1.theObject);
    }
    typedef typename gctools::GCVector_moveable<chem::EnergyAnchorRestraint> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__0_:
{
    gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,0>* obj_gc_safe = reinterpret_cast<gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,0>*>(client);
    for (gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,0>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,0> type_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__0_;
    size = sizeof_container<type_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__0_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__KeywordArgument_:
{
    gctools::GCVector_moveable<core::KeywordArgument>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::KeywordArgument>*>(client);
    for (gctools::GCVector_moveable<core::KeywordArgument>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->_ArgTarget);
    SMART_PTR_FIX(it->_Default);
    SMART_PTR_FIX(it->_Keyword);
    SMART_PTR_FIX(it->_Sensor._ArgTarget);
    }
    typedef typename gctools::GCVector_moveable<core::KeywordArgument> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__KeywordArgument_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__KeywordArgument_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::StereoisomerAtoms_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::StereoisomerAtoms_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::StereoisomerAtoms_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::StereoisomerAtoms_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SourceFileInfo_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<core::SourceFileInfo_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<core::SourceFileInfo_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<core::SourceFileInfo_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<core::SourceFileInfo_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SourceFileInfo_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SourceFileInfo_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___:
{
    gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>*>(client);
    for (gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    TAGGED_POINTER_FIX(it->_Contents);
    }
    typedef typename gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__CacheRecord_:
{
    gctools::GCVector_moveable<core::CacheRecord>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<core::CacheRecord>*>(client);
    for (gctools::GCVector_moveable<core::CacheRecord>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->_key);
    SMART_PTR_FIX(it->_value);
    }
    typedef typename gctools::GCVector_moveable<core::CacheRecord> type_KIND_GCVECTOR_gctools__GCVector_moveable_core__CacheRecord_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_core__CacheRecord_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__ResidueOut_:
{
    gctools::GCVector_moveable<chem::ResidueOut>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<chem::ResidueOut>*>(client);
    for (gctools::GCVector_moveable<chem::ResidueOut>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->res);
    }
    typedef typename gctools::GCVector_moveable<chem::ResidueOut> type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__ResidueOut_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_chem__ResidueOut_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFPtor_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFPtor_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFPtor_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFPtor_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFPtor_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFPtor_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFPtor_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneTypeRule_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::OneTypeRule_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::OneTypeRule_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::OneTypeRule_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::OneTypeRule_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneTypeRule_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneTypeRule_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__Message_:
{
    gctools::GCVector_moveable<asttooling::Message>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<asttooling::Message>*>(client);
    for (gctools::GCVector_moveable<asttooling::Message>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->Range);
    }
    typedef typename gctools::GCVector_moveable<asttooling::Message> type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__Message_;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__Message_>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneMonomer_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::OneMonomer_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::OneMonomer_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::OneMonomer_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::OneMonomer_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneMonomer_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneMonomer_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFAngle_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFAngle_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFAngle_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFAngle_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFAngle_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFAngle_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFAngle_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_TEMPLATED_CLASSALLOC_core__BuiltinClosure:
{
    core::BuiltinClosure* obj_gc_safe = reinterpret_cast<core::BuiltinClosure*>(client);
    SMART_PTR_FIX(obj_gc_safe->name);
    SMART_PTR_FIX(obj_gc_safe->closedEnvironment);
    SMART_PTR_FIX(obj_gc_safe->kind);
    SMART_PTR_FIX(obj_gc_safe->_cleavir_ast);
    SMART_PTR_FIX(obj_gc_safe->_lambdaListHandler);
    size = obj_gc_safe->templatedSizeof();}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___:
{
    gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFAngle_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::FFAngle_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFAngle_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::FFAngle_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::FFAngle_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFAngle_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFAngle_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfo_O__:
{
    gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfo_O>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfo_O>>*>(client);
    for (gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfo_O>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
          SMART_PTR_FIX(*it);
    }
    typedef typename gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfo_O>> type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfo_O__;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfo_O__>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___:
{
    gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>* obj_gc_safe = reinterpret_cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>*>(client);
    for (gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>::iterator it = obj_gc_safe->begin(); it!=obj_gc_safe->end(); ++it) {
    SMART_PTR_FIX(it->first);
    SMART_PTR_FIX(it->second);
    }
    typedef typename gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>> type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___;
    size = sizeof_container<type_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___>(obj_gc_safe->capacity());}
goto SCAN_ADVANCE;
#endif // defined(GC_OBJ_SCAN)
#if defined(GC_OBJ_SCAN_HELPERS)
{ class_kind, KIND_ROOTCLASSALLOC_clbind__detail__class_map, "clbind::detail::class_map" },
{ class_size, sizeof(clbind::detail::class_map), "" },
 { field_fix, 0, "(m_classes _Vector _Contents)" },
{ class_kind, KIND_ROOTCLASSALLOC_core__Lisp_O, "core::Lisp_O" },
{ class_size, sizeof(core::Lisp_O), "" },
 { field_fix, 64, "(_Roots _BufferStringPool)" },
 { field_fix, 192, "(_Roots _ExceptionStack _Stack _Vector _Contents)" },
 { field_fix, 320, "(_Roots _TerminalIO)" },
 { field_fix, 384, "(_Roots _BformatStringOutputStream)" },
 { field_fix, 448, "(_Roots _BignumRegister0)" },
 { field_fix, 512, "(_Roots _BignumRegister1)" },
 { field_fix, 576, "(_Roots _BignumRegister2)" },
 { field_fix, 640, "(_Roots _IntegerOverflowAdjust)" },
 { field_fix, 1088, "(_Roots charInfo gIndexedCharacters _Vector _Contents)" },
 { field_fix, 1152, "(_Roots charInfo gCharacterNames _Vector _Contents)" },
 { field_fix, 1216, "(_Roots _ClassSymbolsHolder _Vector _Contents)" },
 { field_fix, 1280, "(_Roots _SystemProperties)" },
 { field_fix, 1344, "(_Roots _Bindings _Bindings _Vector _Contents)" },
 { field_fix, 1408, "(_Roots _SourceFiles _Vector _Contents)" },
 { field_fix, 1472, "(_Roots _CatchInfo)" },
 { field_fix, 1536, "(_Roots bootClassTable _Vector _Contents)" },
 { field_fix, 1600, "(_Roots _LoadTimeValueArrays)" },
 { field_fix, 1664, "(_Roots _CommandLineArguments)" },
 { field_fix, 1728, "(_Roots _Packages _Vector _Contents)" },
 { field_fix, 1792, "(_Roots _SetfDefinitions)" },
 { field_fix, 1856, "(_Roots _CorePackage)" },
 { field_fix, 1920, "(_Roots _KeywordPackage)" },
 { field_fix, 1984, "(_Roots _CommonLispPackage)" },
 { field_fix, 2048, "(_Roots _SpecialForms)" },
 { field_fix, 2112, "(_Roots _SingleDispatchGenericFunctionTable)" },
 { field_fix, 2176, "(_Roots _TrueObject)" },
 { field_fix, 2240, "(_Roots _SingleDispatchMethodCachePtr)" },
 { field_fix, 2304, "(_Roots _MethodCachePtr)" },
 { field_fix, 2368, "(_Roots _SlotCachePtr)" },
 { field_fix, 2432, "(_Roots _RehashSize)" },
 { field_fix, 2496, "(_Roots _RehashThreshold)" },
 { field_fix, 2560, "(_Roots _NullStream)" },
 { field_fix, 2624, "(_Roots _PathnameTranslations)" },
 { field_fix, 2688, "(_Roots _ImaginaryUnit)" },
 { field_fix, 2752, "(_Roots _ImaginaryUnitNegative)" },
 { field_fix, 2816, "(_Roots _PlusHalf)" },
 { field_fix, 2880, "(_Roots _MinusHalf)" },
 { field_fix, 2944, "(_Roots _SingleFloatMinusZero)" },
 { field_fix, 3008, "(_Roots _SingleFloatPlusZero)" },
 { field_fix, 3072, "(_Roots _DoubleFloatMinusZero)" },
 { field_fix, 3136, "(_Roots _DoubleFloatPlusZero)" },
 { field_fix, 3200, "(_Roots _SingleFloatOne)" },
 { field_fix, 3264, "(_Roots _DoubleFloatOne)" },
{ class_kind, KIND_BOOTSTRAP_core__T_O, "core::T_O" },
{ class_size, sizeof(core::T_O), "" },
{ class_kind, KIND_LISPALLOC_core__Regex_O, "core::Regex_O" },
{ class_size, sizeof(core::Regex_O), "" },
{ class_kind, KIND_LISPALLOC_core__WeakHashTable_O, "core::WeakHashTable_O" },
{ class_size, sizeof(core::WeakHashTable_O), "" },
{ class_kind, KIND_LISPALLOC_core__WeakKeyHashTable_O, "core::WeakKeyHashTable_O" },
{ class_size, sizeof(core::WeakKeyHashTable_O), "" },
 { field_fix, 64, "(_HashTable _Keys)" },
 { field_fix, 128, "(_HashTable _Values)" },
{ class_kind, KIND_LISPALLOC_core__Reader_O, "core::Reader_O" },
{ class_size, sizeof(core::Reader_O), "" },
 { field_fix, 64, "(_Input)" },
{ class_kind, KIND_LISPALLOC_core__CxxObject_O, "core::CxxObject_O" },
{ class_size, sizeof(core::CxxObject_O), "" },
{ class_kind, KIND_LISPALLOC_units__Unit_O, "units::Unit_O" },
{ class_size, sizeof(units::Unit_O), "" },
{ class_kind, KIND_LISPALLOC_units__NamedUnit_O, "units::NamedUnit_O" },
{ class_size, sizeof(units::NamedUnit_O), "" },
 { field_fix, 384, "(_Symbol)" },
{ class_kind, KIND_LISPALLOC_chem__AtomTable_O, "chem::AtomTable_O" },
{ class_size, sizeof(chem::AtomTable_O), "" },
 { field_fix, 64, "(_Atoms _Vector _Contents)" },
 { field_fix, 128, "(_AtomTableIndices)" },
{ class_kind, KIND_LISPALLOC_chem__Command_O, "chem::Command_O" },
{ class_size, sizeof(chem::Command_O), "" },
{ class_kind, KIND_LISPALLOC_chem__NVector_O, "chem::NVector_O" },
{ class_size, sizeof(chem::NVector_O), "" },
{ class_kind, KIND_LISPALLOC_geom__OVector2_O, "geom::OVector2_O" },
{ class_size, sizeof(geom::OVector2_O), "" },
{ class_kind, KIND_LISPALLOC_chem__MonomerContext_O, "chem::MonomerContext_O" },
{ class_size, sizeof(chem::MonomerContext_O), "" },
 { field_fix, 64, "(_Self)" },
 { field_fix, 128, "(_Neighbors _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__FFNonbondCrossTermTable_O, "chem::FFNonbondCrossTermTable_O" },
{ class_size, sizeof(chem::FFNonbondCrossTermTable_O), "" },
{ class_kind, KIND_LISPALLOC_chem__BondList_O, "chem::BondList_O" },
{ class_size, sizeof(chem::BondList_O), "" },
 { field_fix, 64, "(_Bonds _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__CDFragment_O, "chem::CDFragment_O" },
{ class_size, sizeof(chem::CDFragment_O), "" },
 { field_fix, 64, "(_ConstitutionName)" },
 { field_fix, 128, "(_Nodes _Contents)" },
 { field_fix, 192, "(_AtomsToNodes _Contents)" },
 { field_fix, 256, "(_Bonds _Vector _Contents)" },
 { field_fix, 384, "(_Molecule theObject)" },
{ class_kind, KIND_LISPALLOC_chem__ResidueList_O, "chem::ResidueList_O" },
{ class_size, sizeof(chem::ResidueList_O), "" },
{ class_kind, KIND_LISPALLOC_chem__Structure_Old_ListEntry_O, "chem::Structure_Old_ListEntry_O" },
{ class_size, sizeof(chem::Structure_Old_ListEntry_O), "" },
 { field_fix, 64, "(_WeakStructureList)" },
 { field_fix, 128, "(_AllCoordinates)" },
 { field_fix, 192, "(_SuperposeCoordinates)" },
 { field_fix, 256, "(_Data)" },
{ class_kind, KIND_LISPALLOC_chem__ReadAmberParameters_O, "chem::ReadAmberParameters_O" },
{ class_size, sizeof(chem::ReadAmberParameters_O), "" },
 { field_fix, 64, "(_Types)" },
 { field_fix, 128, "(_ForceField)" },
{ class_kind, KIND_LISPALLOC_chem__AtomIndexer_O, "chem::AtomIndexer_O" },
{ class_size, sizeof(chem::AtomIndexer_O), "" },
 { field_fix, 64, "(_Names _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__Structure_Old_List_O, "chem::Structure_Old_List_O" },
{ class_size, sizeof(chem::Structure_Old_List_O), "" },
 { field_fix, 64, "(_Matter)" },
 { field_fix, 128, "(_Entries _Vector _Contents)" },
 { field_fix, 192, "(_AllAtoms _Contents)" },
 { field_fix, 256, "(_SuperposeAtoms _Contents)" },
 { field_fix, 384, "(_Data)" },
{ class_kind, KIND_LISPALLOC_adapt__StringSet_O, "adapt::StringSet_O" },
{ class_size, sizeof(adapt::StringSet_O), "" },
{ class_kind, KIND_LISPALLOC_chem__ChemInfoMatch_O, "chem::ChemInfoMatch_O" },
{ class_size, sizeof(chem::ChemInfoMatch_O), "" },
 { field_fix, 128, "(_TagLookup)" },
 { field_fix, 192, "(_ClosestMatch)" },
{ class_kind, KIND_LISPALLOC_chem__SpanningLoop_O, "chem::SpanningLoop_O" },
{ class_size, sizeof(chem::SpanningLoop_O), "" },
 { field_fix, 192, "(top)" },
 { field_fix, 256, "(currentObject)" },
 { field_fix, 320, "(aCurSpan)" },
 { field_fix, 384, "(aLastSpan)" },
 { field_fix, 576, "(aLastCollision)" },
 { field_fix, 640, "(aInvisibleAtom)" },
{ class_kind, KIND_LISPALLOC_chem__CDBond_O, "chem::CDBond_O" },
{ class_size, sizeof(chem::CDBond_O), "" },
 { field_fix, 128, "(_BeginNode)" },
 { field_fix, 192, "(_EndNode)" },
{ class_kind, KIND_LISPALLOC_chem__ForceField_O, "chem::ForceField_O" },
{ class_size, sizeof(chem::ForceField_O), "" },
 { field_fix, 192, "(_SingleBondMultiBondDistinctions _Vector _Contents)" },
 { field_fix, 256, "(_Info)" },
 { field_fix, 320, "(_Types theObject)" },
 { field_fix, 384, "(_Stretches theObject)" },
 { field_fix, 448, "(_Angles theObject)" },
 { field_fix, 512, "(_Itors theObject)" },
 { field_fix, 576, "(_Ptors theObject)" },
 { field_fix, 640, "(_Nonbonds theObject)" },
 { field_fix, 704, "(_Vdws theObject)" },
{ class_kind, KIND_LISPALLOC_chem__OneMonomer_O, "chem::OneMonomer_O" },
{ class_size, sizeof(chem::OneMonomer_O), "" },
 { field_fix, 64, "(_Name)" },
{ class_kind, KIND_LISPALLOC_chem__ReportBase_O, "chem::ReportBase_O" },
{ class_size, sizeof(chem::ReportBase_O), "" },
{ class_kind, KIND_LISPALLOC_chem__MessageReport_O, "chem::MessageReport_O" },
{ class_size, sizeof(chem::MessageReport_O), "" },
{ class_kind, KIND_LISPALLOC_chem__ForceMatchReport_O, "chem::ForceMatchReport_O" },
{ class_size, sizeof(chem::ForceMatchReport_O), "" },
 { field_fix, 192, "(_AnalyticalForce)" },
 { field_fix, 256, "(_NumericalForce)" },
{ class_kind, KIND_LISPALLOC_chem__StepReport_O, "chem::StepReport_O" },
{ class_size, sizeof(chem::StepReport_O), "" },
 { field_fix, 960, "(_LineSearchPosition)" },
 { field_fix, 1024, "(_LineSearchDirection)" },
 { field_fix, 1088, "(_LineSearchForce)" },
 { field_fix, 1152, "(_TotalEnergyFn)" },
 { field_fix, 1216, "(_StretchEnergyFn)" },
 { field_fix, 1280, "(_AngleEnergyFn)" },
 { field_fix, 1344, "(_DihedralEnergyFn)" },
 { field_fix, 1408, "(_NonbondEnergyFn)" },
 { field_fix, 1472, "(_ImproperEnergyFn)" },
 { field_fix, 1536, "(_ChiralRestraintEnergyFn)" },
 { field_fix, 1600, "(_AnchorRestraintEnergyFn)" },
 { field_fix, 1664, "(_ImproperRestraintEnergyFn)" },
 { field_fix, 1728, "(_FixedNonbondRestraintEnergyFn)" },
{ class_kind, KIND_LISPALLOC_chem__PathMessage_O, "chem::PathMessage_O" },
{ class_size, sizeof(chem::PathMessage_O), "" },
 { field_fix, 64, "(_graph)" },
 { field_fix, 128, "(_beep theObject)" },
 { field_fix, 192, "(_firstVertex)" },
 { field_fix, 256, "(_firstEdge)" },
 { field_fix, 320, "(_lastVertex)" },
{ class_kind, KIND_LISPALLOC_chem__FrameRecognizer_O, "chem::FrameRecognizer_O" },
{ class_size, sizeof(chem::FrameRecognizer_O), "" },
 { field_fix, 64, "(_Name)" },
 { field_fix, 128, "(_GroupName)" },
 { field_fix, 256, "(_ChemInfo)" },
{ class_kind, KIND_LISPALLOC_chem__StereoisomerAtom_O, "chem::StereoisomerAtom_O" },
{ class_size, sizeof(chem::StereoisomerAtom_O), "" },
 { field_fix, 64, "(_AtomName)" },
 { field_fix, 256, "(_AtomType)" },
{ class_kind, KIND_LISPALLOC_chem__StereoisomerVirtualAtom_O, "chem::StereoisomerVirtualAtom_O" },
{ class_size, sizeof(chem::StereoisomerVirtualAtom_O), "" },
 { field_fix, 64, "(_AtomName)" },
 { field_fix, 256, "(_AtomType)" },
{ class_kind, KIND_LISPALLOC_chem__MonomerCoordinates_O, "chem::MonomerCoordinates_O" },
{ class_size, sizeof(chem::MonomerCoordinates_O), "" },
 { field_fix, 128, "(_Context)" },
 { field_fix, 256, "(_Rotamers _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__SearchStatistics_O, "chem::SearchStatistics_O" },
{ class_size, sizeof(chem::SearchStatistics_O), "" },
{ class_kind, KIND_LISPALLOC_chem__AtomId_O, "chem::AtomId_O" },
{ class_size, sizeof(chem::AtomId_O), "" },
{ class_kind, KIND_LISPALLOC_chem__TypeAssignmentRules_O, "chem::TypeAssignmentRules_O" },
{ class_size, sizeof(chem::TypeAssignmentRules_O), "" },
 { field_fix, 64, "(_WildElementDict)" },
 { field_fix, 128, "(_Rules _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__WildElementDict_O, "chem::WildElementDict_O" },
{ class_size, sizeof(chem::WildElementDict_O), "" },
 { field_fix, 64, "(_AtomWildCards)" },
{ class_kind, KIND_LISPALLOC_chem__SpecificContext_O, "chem::SpecificContext_O" },
{ class_size, sizeof(chem::SpecificContext_O), "" },
 { field_fix, 64, "(_SelfName)" },
 { field_fix, 128, "(_Neighbors _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__CDText_O, "chem::CDText_O" },
{ class_size, sizeof(chem::CDText_O), "" },
 { field_fix, 128, "(_Properties)" },
{ class_kind, KIND_LISPALLOC_chem__PdbMonomerConnectivity_O, "chem::PdbMonomerConnectivity_O" },
{ class_size, sizeof(chem::PdbMonomerConnectivity_O), "" },
 { field_fix, 64, "(_PdbName)" },
 { field_fix, 128, "(_LongNames)" },
 { field_fix, 192, "(_BondAtomPairs _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_units__Quantity_O, "units::Quantity_O" },
{ class_size, sizeof(units::Quantity_O), "" },
 { field_fix, 64, "(_Value)" },
 { field_fix, 128, "(_Unit)" },
{ class_kind, KIND_LISPALLOC_chem__Plug_O, "chem::Plug_O" },
{ class_size, sizeof(chem::Plug_O), "" },
 { field_fix, 64, "(_WeakConstitution)" },
 { field_fix, 128, "(_Name)" },
{ class_kind, KIND_LISPALLOC_chem__PlugWithMates_O, "chem::PlugWithMates_O" },
{ class_size, sizeof(chem::PlugWithMates_O), "" },
 { field_fix, 64, "(_WeakConstitution)" },
 { field_fix, 128, "(_Name)" },
 { field_fix, 192, "(_B0)" },
 { field_fix, 256, "(_B1)" },
 { field_fix, 320, "(_Mates _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__OutPlug_O, "chem::OutPlug_O" },
{ class_size, sizeof(chem::OutPlug_O), "" },
 { field_fix, 64, "(_WeakConstitution)" },
 { field_fix, 128, "(_Name)" },
 { field_fix, 192, "(_B0)" },
 { field_fix, 256, "(_B1)" },
 { field_fix, 320, "(_Mates _Vector _Contents)" },
 { field_fix, 384, "(_StubPivotAtom)" },
{ class_kind, KIND_LISPALLOC_chem__RingClosingPlug_O, "chem::RingClosingPlug_O" },
{ class_size, sizeof(chem::RingClosingPlug_O), "" },
 { field_fix, 64, "(_WeakConstitution)" },
 { field_fix, 128, "(_Name)" },
 { field_fix, 192, "(_B0)" },
 { field_fix, 256, "(_B1)" },
 { field_fix, 320, "(_Mates _Vector _Contents)" },
 { field_fix, 384, "(_StubPivotAtom)" },
 { field_fix, 448, "(_RingClosingMates _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__InPlug_O, "chem::InPlug_O" },
{ class_size, sizeof(chem::InPlug_O), "" },
 { field_fix, 64, "(_WeakConstitution)" },
 { field_fix, 128, "(_Name)" },
 { field_fix, 192, "(_B0)" },
 { field_fix, 256, "(_B1)" },
 { field_fix, 320, "(_Mates _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__JumpPlug_O, "chem::JumpPlug_O" },
{ class_size, sizeof(chem::JumpPlug_O), "" },
 { field_fix, 64, "(_WeakConstitution)" },
 { field_fix, 128, "(_Name)" },
 { field_fix, 192, "(_JumpAtomName)" },
{ class_kind, KIND_LISPALLOC_geom__BoundingBox_O, "geom::BoundingBox_O" },
{ class_size, sizeof(geom::BoundingBox_O), "" },
{ class_kind, KIND_LISPALLOC_chem__MinimizerLog_O, "chem::MinimizerLog_O" },
{ class_size, sizeof(chem::MinimizerLog_O), "" },
 { field_fix, 64, "(_Minimizer)" },
 { field_fix, 128, "(_Reports _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__ChemInfo_O, "chem::ChemInfo_O" },
{ class_size, sizeof(chem::ChemInfo_O), "" },
 { field_fix, 128, "(_Root theObject)" },
{ class_kind, KIND_LISPALLOC_chem__ZMatrixEntry_O, "chem::ZMatrixEntry_O" },
{ class_size, sizeof(chem::ZMatrixEntry_O), "" },
 { field_fix, 128, "(_Atom)" },
 { field_fix, 192, "(_Bond)" },
 { field_fix, 256, "(_Angle)" },
 { field_fix, 320, "(_Dihedral)" },
{ class_kind, KIND_LISPALLOC_chem__StereoInformation_O, "chem::StereoInformation_O" },
{ class_size, sizeof(chem::StereoInformation_O), "" },
 { field_fix, 64, "(_Stereoisomers _Vector _Contents)" },
 { field_fix, 128, "(_NameOrPdbToStereoisomer _Contents)" },
 { field_fix, 192, "(_ComplexRestraints _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__MacroModelFile_O, "chem::MacroModelFile_O" },
{ class_size, sizeof(chem::MacroModelFile_O), "" },
{ class_kind, KIND_LISPALLOC_chem__PdbWriter_O, "chem::PdbWriter_O" },
{ class_size, sizeof(chem::PdbWriter_O), "" },
 { field_fix, 64, "(_Out)" },
{ class_kind, KIND_LISPALLOC_chem__ChemDraw_O, "chem::ChemDraw_O" },
{ class_size, sizeof(chem::ChemDraw_O), "" },
 { field_fix, 64, "(_AllFragments _Vector _Contents)" },
 { field_fix, 128, "(_NamedFragments _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__AGEdge_O, "chem::AGEdge_O" },
{ class_size, sizeof(chem::AGEdge_O), "" },
 { field_fix, 64, "(_graph)" },
 { field_fix, 192, "(_vertex1)" },
 { field_fix, 256, "(_vertex2)" },
{ class_kind, KIND_LISPALLOC_chem__ConformationExplorerMatch_O, "chem::ConformationExplorerMatch_O" },
{ class_size, sizeof(chem::ConformationExplorerMatch_O), "" },
{ class_kind, KIND_LISPALLOC_chem__ImproperTorsion_O, "chem::ImproperTorsion_O" },
{ class_size, sizeof(chem::ImproperTorsion_O), "" },
 { field_fix, 64, "(_a1)" },
 { field_fix, 128, "(_a2)" },
 { field_fix, 192, "(_a3central)" },
 { field_fix, 256, "(_a4)" },
{ class_kind, KIND_LISPALLOC_chem__ConstitutionAtoms_O, "chem::ConstitutionAtoms_O" },
{ class_size, sizeof(chem::ConstitutionAtoms_O), "" },
 { field_fix, 64, "(_Atoms _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__CoordinateSystem_O, "chem::CoordinateSystem_O" },
{ class_size, sizeof(chem::CoordinateSystem_O), "" },
{ class_kind, KIND_LISPALLOC_chem__ConformationCollectionEntry_O, "chem::ConformationCollectionEntry_O" },
{ class_size, sizeof(chem::ConformationCollectionEntry_O), "" },
 { field_fix, 64, "(_WeakConformationCollection)" },
 { field_fix, 128, "(_AllCoordinates)" },
 { field_fix, 192, "(_Data)" },
{ class_kind, KIND_LISPALLOC_chem__Restraint_O, "chem::Restraint_O" },
{ class_size, sizeof(chem::Restraint_O), "" },
{ class_kind, KIND_LISPALLOC_chem__RestraintAngle_O, "chem::RestraintAngle_O" },
{ class_size, sizeof(chem::RestraintAngle_O), "" },
 { field_fix, 128, "(_A)" },
 { field_fix, 192, "(_B)" },
 { field_fix, 256, "(_C)" },
{ class_kind, KIND_LISPALLOC_chem__RestraintAnchor_O, "chem::RestraintAnchor_O" },
{ class_size, sizeof(chem::RestraintAnchor_O), "" },
 { field_fix, 128, "(_Atom)" },
{ class_kind, KIND_LISPALLOC_chem__RestraintFixedNonbond_O, "chem::RestraintFixedNonbond_O" },
{ class_size, sizeof(chem::RestraintFixedNonbond_O), "" },
 { field_fix, 128, "(_Matter)" },
{ class_kind, KIND_LISPALLOC_chem__RestraintChiral_O, "chem::RestraintChiral_O" },
{ class_size, sizeof(chem::RestraintChiral_O), "" },
 { field_fix, 128, "(_A)" },
{ class_kind, KIND_LISPALLOC_chem__RestraintDihedral_O, "chem::RestraintDihedral_O" },
{ class_size, sizeof(chem::RestraintDihedral_O), "" },
 { field_fix, 128, "(_A)" },
 { field_fix, 192, "(_B)" },
 { field_fix, 256, "(_C)" },
 { field_fix, 320, "(_D)" },
{ class_kind, KIND_LISPALLOC_chem__RestraintDistance_O, "chem::RestraintDistance_O" },
{ class_size, sizeof(chem::RestraintDistance_O), "" },
 { field_fix, 128, "(_A)" },
 { field_fix, 192, "(_B)" },
{ class_kind, KIND_LISPALLOC_chem__ChemInfoNode_O, "chem::ChemInfoNode_O" },
{ class_size, sizeof(chem::ChemInfoNode_O), "" },
{ class_kind, KIND_LISPALLOC_chem__RootMatchNode_O, "chem::RootMatchNode_O" },
{ class_size, sizeof(chem::RootMatchNode_O), "" },
{ class_kind, KIND_LISPALLOC_chem__AfterMatchBondTest_O, "chem::AfterMatchBondTest_O" },
{ class_size, sizeof(chem::AfterMatchBondTest_O), "" },
 { field_fix, 64, "(_AtomTag1)" },
 { field_fix, 128, "(_AtomTag2)" },
{ class_kind, KIND_LISPALLOC_chem__BondMatchNode_O, "chem::BondMatchNode_O" },
{ class_size, sizeof(chem::BondMatchNode_O), "" },
{ class_kind, KIND_LISPALLOC_chem__AtomOrBondMatchNode_O, "chem::AtomOrBondMatchNode_O" },
{ class_size, sizeof(chem::AtomOrBondMatchNode_O), "" },
{ class_kind, KIND_LISPALLOC_chem__TagSet_O, "chem::TagSet_O" },
{ class_size, sizeof(chem::TagSet_O), "" },
 { field_fix, 64, "(_RingTag)" },
 { field_fix, 128, "(_AtomTest theObject)" },
{ class_kind, KIND_LISPALLOC_chem__Root_O, "chem::Root_O" },
{ class_size, sizeof(chem::Root_O), "" },
 { field_fix, 64, "(_FirstTest theObject)" },
 { field_fix, 128, "(_Chain theObject)" },
 { field_fix, 192, "(_Tests)" },
 { field_fix, 256, "(_Match theObject)" },
{ class_kind, KIND_LISPALLOC_chem__SmartsRoot_O, "chem::SmartsRoot_O" },
{ class_size, sizeof(chem::SmartsRoot_O), "" },
 { field_fix, 64, "(_FirstTest theObject)" },
 { field_fix, 128, "(_Chain theObject)" },
 { field_fix, 192, "(_Tests)" },
 { field_fix, 256, "(_Match theObject)" },
{ class_kind, KIND_LISPALLOC_chem__AntechamberRoot_O, "chem::AntechamberRoot_O" },
{ class_size, sizeof(chem::AntechamberRoot_O), "" },
 { field_fix, 64, "(_FirstTest theObject)" },
 { field_fix, 128, "(_Chain theObject)" },
 { field_fix, 192, "(_Tests)" },
 { field_fix, 256, "(_Match theObject)" },
 { field_fix, 320, "(_AssignType)" },
 { field_fix, 384, "(_AfterMatchTests theObject)" },
 { field_fix, 448, "(_WildElementDictionary theObject)" },
{ class_kind, KIND_LISPALLOC_chem__ResidueTest_O, "chem::ResidueTest_O" },
{ class_size, sizeof(chem::ResidueTest_O), "" },
 { field_fix, 128, "(_RingTag)" },
 { field_fix, 192, "(_AtomTest theObject)" },
{ class_kind, KIND_LISPALLOC_chem__AntechamberFocusAtomMatch_O, "chem::AntechamberFocusAtomMatch_O" },
{ class_size, sizeof(chem::AntechamberFocusAtomMatch_O), "" },
 { field_fix, 64, "(_ResidueNames theObject)" },
 { field_fix, 256, "(_AtomicProperty theObject)" },
{ class_kind, KIND_LISPALLOC_chem__RingTest_O, "chem::RingTest_O" },
{ class_size, sizeof(chem::RingTest_O), "" },
 { field_fix, 128, "(_RingTag)" },
 { field_fix, 192, "(_AtomTest theObject)" },
{ class_kind, KIND_LISPALLOC_chem__AtomTest_O, "chem::AtomTest_O" },
{ class_size, sizeof(chem::AtomTest_O), "" },
 { field_fix, 256, "(_SymbolArg)" },
{ class_kind, KIND_LISPALLOC_chem__Logical_O, "chem::Logical_O" },
{ class_size, sizeof(chem::Logical_O), "" },
 { field_fix, 128, "(_Left theObject)" },
 { field_fix, 192, "(_Right theObject)" },
{ class_kind, KIND_LISPALLOC_chem__BondTest_O, "chem::BondTest_O" },
{ class_size, sizeof(chem::BondTest_O), "" },
 { field_fix, 128, "(_AtomTest theObject)" },
{ class_kind, KIND_LISPALLOC_chem__AntechamberBondTest_O, "chem::AntechamberBondTest_O" },
{ class_size, sizeof(chem::AntechamberBondTest_O), "" },
 { field_fix, 64, "(_Element)" },
 { field_fix, 192, "(_AtomProperties theObject)" },
 { field_fix, 256, "(_Tag)" },
{ class_kind, KIND_LISPALLOC_chem__BondListMatchNode_O, "chem::BondListMatchNode_O" },
{ class_size, sizeof(chem::BondListMatchNode_O), "" },
{ class_kind, KIND_LISPALLOC_chem__Branch_O, "chem::Branch_O" },
{ class_size, sizeof(chem::Branch_O), "" },
 { field_fix, 64, "(_Left theObject)" },
 { field_fix, 128, "(_Right theObject)" },
{ class_kind, KIND_LISPALLOC_chem__Chain_O, "chem::Chain_O" },
{ class_size, sizeof(chem::Chain_O), "" },
 { field_fix, 64, "(_Head theObject)" },
 { field_fix, 128, "(_Tail theObject)" },
{ class_kind, KIND_LISPALLOC_chem__Minimizer_O, "chem::Minimizer_O" },
{ class_size, sizeof(chem::Minimizer_O), "" },
 { field_fix, 512, "(_Log)" },
 { field_fix, 6656, "(_EnergyFunction)" },
 { field_fix, 6784, "(_StartTime)" },
 { field_fix, 7040, "(nvP1DSearchTemp1)" },
 { field_fix, 7104, "(nvP1DSearchTemp2)" },
 { field_fix, 7168, "(nvP1DSearchOrigin)" },
 { field_fix, 7232, "(nvP1DSearchDirection)" },
 { field_fix, 7296, "(_Position theObject)" },
 { field_fix, 7360, "(_Force theObject)" },
{ class_kind, KIND_LISPALLOC_chem__Oligomer_O, "chem::Oligomer_O" },
{ class_size, sizeof(chem::Oligomer_O), "" },
 { field_fix, 64, "(_Name)" },
 { field_fix, 128, "(_Monomers _Vector _Contents)" },
 { field_fix, 192, "(_Couplings _Vector _Contents)" },
 { field_fix, 320, "(_ErrorMessage)" },
 { field_fix, 384, "(_WeakLastMultiMonomerChanged)" },
{ class_kind, KIND_LISPALLOC_chem__ConstitutionBond_O, "chem::ConstitutionBond_O" },
{ class_size, sizeof(chem::ConstitutionBond_O), "" },
{ class_kind, KIND_LISPALLOC_chem__Entity_O, "chem::Entity_O" },
{ class_size, sizeof(chem::Entity_O), "" },
{ class_kind, KIND_LISPALLOC_chem__EntityNameSetBase_O, "chem::EntityNameSetBase_O" },
{ class_size, sizeof(chem::EntityNameSetBase_O), "" },
 { field_fix, 128, "(_EntityNames)" },
{ class_kind, KIND_LISPALLOC_chem__EntityNameSetWithCap_O, "chem::EntityNameSetWithCap_O" },
{ class_size, sizeof(chem::EntityNameSetWithCap_O), "" },
 { field_fix, 128, "(_EntityNames)" },
{ class_kind, KIND_LISPALLOC_chem__RingClosingMate_O, "chem::RingClosingMate_O" },
{ class_size, sizeof(chem::RingClosingMate_O), "" },
 { field_fix, 128, "(_EntityNames)" },
{ class_kind, KIND_LISPALLOC_chem__Mate_O, "chem::Mate_O" },
{ class_size, sizeof(chem::Mate_O), "" },
 { field_fix, 128, "(_EntityNames)" },
 { field_fix, 192, "(_Cap)" },
{ class_kind, KIND_LISPALLOC_chem__EntityNameSet_O, "chem::EntityNameSet_O" },
{ class_size, sizeof(chem::EntityNameSet_O), "" },
 { field_fix, 128, "(_EntityNames)" },
 { field_fix, 192, "(_Name)" },
{ class_kind, KIND_LISPALLOC_chem__RepresentedEntityNameSet_O, "chem::RepresentedEntityNameSet_O" },
{ class_size, sizeof(chem::RepresentedEntityNameSet_O), "" },
 { field_fix, 128, "(_EntityNames)" },
 { field_fix, 192, "(_Name)" },
 { field_fix, 256, "(_Representative)" },
{ class_kind, KIND_LISPALLOC_chem__MonomerPack_O, "chem::MonomerPack_O" },
{ class_size, sizeof(chem::MonomerPack_O), "" },
 { field_fix, 128, "(_EntityNames)" },
 { field_fix, 192, "(_Name)" },
 { field_fix, 256, "(_InterestingAtomAliases)" },
 { field_fix, 320, "(_AtomIndexers)" },
{ class_kind, KIND_LISPALLOC_chem__Monomer_O, "chem::Monomer_O" },
{ class_size, sizeof(chem::Monomer_O), "" },
 { field_fix, 64, "(_Oligomer)" },
 { field_fix, 128, "(_Id)" },
 { field_fix, 320, "(_Couplings _Contents)" },
 { field_fix, 384, "(_TempResidue)" },
 { field_fix, 512, "(_Aliases)" },
 { field_fix, 832, "(_Status)" },
{ class_kind, KIND_LISPALLOC_chem__MultiMonomer_O, "chem::MultiMonomer_O" },
{ class_size, sizeof(chem::MultiMonomer_O), "" },
 { field_fix, 64, "(_Oligomer)" },
 { field_fix, 128, "(_Id)" },
 { field_fix, 320, "(_Couplings _Contents)" },
 { field_fix, 384, "(_TempResidue)" },
 { field_fix, 512, "(_Aliases)" },
 { field_fix, 832, "(_Status)" },
 { field_fix, 960, "(_GroupName)" },
 { field_fix, 1024, "(_Monomers _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__Stereoisomer_O, "chem::Stereoisomer_O" },
{ class_size, sizeof(chem::Stereoisomer_O), "" },
 { field_fix, 64, "(_WeakConstitution)" },
 { field_fix, 128, "(_Name)" },
 { field_fix, 192, "(_Pdb)" },
 { field_fix, 256, "(_Enantiomer)" },
 { field_fix, 320, "(_Configurations _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__Constitution_O, "chem::Constitution_O" },
{ class_size, sizeof(chem::Constitution_O), "" },
 { field_fix, 64, "(_Name)" },
 { field_fix, 192, "(_MetaConstitution)" },
 { field_fix, 320, "(_ConstitutionAtoms)" },
 { field_fix, 384, "(_PlugsByName _Contents)" },
 { field_fix, 448, "(_Topologies _Contents)" },
 { field_fix, 512, "(_StereoInformation)" },
{ class_kind, KIND_LISPALLOC_units__Dimension_O, "units::Dimension_O" },
{ class_size, sizeof(units::Dimension_O), "" },
{ class_kind, KIND_LISPALLOC_geom__OMatrix_O, "geom::OMatrix_O" },
{ class_size, sizeof(geom::OMatrix_O), "" },
{ class_kind, KIND_LISPALLOC_chem__StereoisomerAtoms_O, "chem::StereoisomerAtoms_O" },
{ class_size, sizeof(chem::StereoisomerAtoms_O), "" },
 { field_fix, 64, "(_Atoms _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__ConformationExplorerEntry_O, "chem::ConformationExplorerEntry_O" },
{ class_size, sizeof(chem::ConformationExplorerEntry_O), "" },
 { field_fix, 64, "(_WeakConformationExplorer)" },
 { field_fix, 128, "(_Stages _Vector _Contents)" },
 { field_fix, 192, "(_SelectedStage)" },
 { field_fix, 320, "(_Binder)" },
{ class_kind, KIND_LISPALLOC_chem__AtomReferenceBase_O, "chem::AtomReferenceBase_O" },
{ class_size, sizeof(chem::AtomReferenceBase_O), "" },
{ class_kind, KIND_LISPALLOC_chem__AtomReference_O, "chem::AtomReference_O" },
{ class_size, sizeof(chem::AtomReference_O), "" },
{ class_kind, KIND_LISPALLOC_chem__CDNode_O, "chem::CDNode_O" },
{ class_size, sizeof(chem::CDNode_O), "" },
 { field_fix, 256, "(_Atom theObject)" },
 { field_fix, 320, "(_BackSpan theObject)" },
 { field_fix, 384, "(_NextSpan theObject)" },
 { field_fix, 448, "(_AtomProperties)" },
 { field_fix, 512, "(_ResidueProperties)" },
 { field_fix, 576, "(_MoleculeProperties)" },
{ class_kind, KIND_LISPALLOC_chem__TrajectoryFrame_O, "chem::TrajectoryFrame_O" },
{ class_size, sizeof(chem::TrajectoryFrame_O), "" },
 { field_fix, 64, "(_Coordinates)" },
{ class_kind, KIND_LISPALLOC_chem__EnergyComponent_O, "chem::EnergyComponent_O" },
{ class_size, sizeof(chem::EnergyComponent_O), "" },
{ class_kind, KIND_LISPALLOC_chem__EnergyChiralRestraint_O, "chem::EnergyChiralRestraint_O" },
{ class_size, sizeof(chem::EnergyChiralRestraint_O), "" },
 { field_fix, 3392, "(_Terms _Vector _Contents)" },
 { field_fix, 3456, "(_BeyondThresholdTerms _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__EnergyImproperRestraint_O, "chem::EnergyImproperRestraint_O" },
{ class_size, sizeof(chem::EnergyImproperRestraint_O), "" },
 { field_fix, 3392, "(_Terms _Vector _Contents)" },
 { field_fix, 3456, "(_BeyondThresholdTerms _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__EnergyAnchorRestraint_O, "chem::EnergyAnchorRestraint_O" },
{ class_size, sizeof(chem::EnergyAnchorRestraint_O), "" },
 { field_fix, 3392, "(_Terms _Vector _Contents)" },
 { field_fix, 3456, "(_BeyondThresholdTerms _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__EnergyAngle_O, "chem::EnergyAngle_O" },
{ class_size, sizeof(chem::EnergyAngle_O), "" },
 { field_fix, 3392, "(_Terms _Vector _Contents)" },
 { field_fix, 3456, "(_BeyondThresholdTerms _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__EnergyDihedral_O, "chem::EnergyDihedral_O" },
{ class_size, sizeof(chem::EnergyDihedral_O), "" },
 { field_fix, 3392, "(_Terms _Vector _Contents)" },
 { field_fix, 3456, "(_BeyondThresholdTerms _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__EnergyStretch_O, "chem::EnergyStretch_O" },
{ class_size, sizeof(chem::EnergyStretch_O), "" },
 { field_fix, 3392, "(_Terms _Vector _Contents)" },
 { field_fix, 3456, "(_BeyondThresholdTerms _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__EnergyNonbond_O, "chem::EnergyNonbond_O" },
{ class_size, sizeof(chem::EnergyNonbond_O), "" },
 { field_fix, 3712, "(_Terms _Vector _Contents)" },
 { field_fix, 3776, "(_BeyondThresholdTerms _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__EnergyFixedNonbondRestraint_O, "chem::EnergyFixedNonbondRestraint_O" },
{ class_size, sizeof(chem::EnergyFixedNonbondRestraint_O), "" },
 { field_fix, 3392, "(_MobileAtomTable)" },
 { field_fix, 3456, "(_NonbondCrossTermTable)" },
 { field_fix, 3840, "(_Terms _Vector _Contents)" },
 { field_fix, 3904, "(_BeyondThresholdTerms _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__PdbMonomerDatabase_O, "chem::PdbMonomerDatabase_O" },
{ class_size, sizeof(chem::PdbMonomerDatabase_O), "" },
 { field_fix, 64, "(_Database _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__Coupling_O, "chem::Coupling_O" },
{ class_size, sizeof(chem::Coupling_O), "" },
 { field_fix, 64, "(_Oligomer theObject)" },
{ class_kind, KIND_LISPALLOC_chem__DirectionalCoupling_O, "chem::DirectionalCoupling_O" },
{ class_size, sizeof(chem::DirectionalCoupling_O), "" },
 { field_fix, 64, "(_Oligomer theObject)" },
 { field_fix, 192, "(_InMonomer theObject)" },
 { field_fix, 256, "(_Name)" },
 { field_fix, 320, "(_OutMonomer theObject)" },
{ class_kind, KIND_LISPALLOC_chem__RingCoupling_O, "chem::RingCoupling_O" },
{ class_size, sizeof(chem::RingCoupling_O), "" },
 { field_fix, 64, "(_Oligomer theObject)" },
 { field_fix, 192, "(_Monomer1 theObject)" },
 { field_fix, 256, "(_Plug1)" },
 { field_fix, 320, "(_Monomer2 theObject)" },
 { field_fix, 384, "(_Plug2)" },
{ class_kind, KIND_LISPALLOC_chem__PdbReader_O, "chem::PdbReader_O" },
{ class_size, sizeof(chem::PdbReader_O), "" },
{ class_kind, KIND_LISPALLOC_chem__ZMatrixInternal_O, "chem::ZMatrixInternal_O" },
{ class_size, sizeof(chem::ZMatrixInternal_O), "" },
 { field_fix, 64, "(_WeakZMatrix)" },
{ class_kind, KIND_LISPALLOC_chem__ZMatrixBondInternal_O, "chem::ZMatrixBondInternal_O" },
{ class_size, sizeof(chem::ZMatrixBondInternal_O), "" },
 { field_fix, 64, "(_WeakZMatrix)" },
{ class_kind, KIND_LISPALLOC_chem__ZMatrixAngleInternal_O, "chem::ZMatrixAngleInternal_O" },
{ class_size, sizeof(chem::ZMatrixAngleInternal_O), "" },
 { field_fix, 64, "(_WeakZMatrix)" },
{ class_kind, KIND_LISPALLOC_chem__ZMatrixDihedralInternal_O, "chem::ZMatrixDihedralInternal_O" },
{ class_size, sizeof(chem::ZMatrixDihedralInternal_O), "" },
 { field_fix, 64, "(_WeakZMatrix)" },
{ class_kind, KIND_LISPALLOC_chem__CipPrioritizer_O, "chem::CipPrioritizer_O" },
{ class_size, sizeof(chem::CipPrioritizer_O), "" },
{ class_kind, KIND_LISPALLOC_chem__Matter_O, "chem::Matter_O" },
{ class_size, sizeof(chem::Matter_O), "" },
 { field_fix, 192, "(name)" },
 { field_fix, 256, "(containerContainedBy theObject)" },
 { field_fix, 320, "(_contents _Vector _Contents)" },
 { field_fix, 384, "(_Properties)" },
 { field_fix, 448, "(_Restraints theObject)" },
{ class_kind, KIND_LISPALLOC_chem__Residue_O, "chem::Residue_O" },
{ class_size, sizeof(chem::Residue_O), "" },
 { field_fix, 192, "(name)" },
 { field_fix, 256, "(containerContainedBy theObject)" },
 { field_fix, 320, "(_contents _Vector _Contents)" },
 { field_fix, 384, "(_Properties)" },
 { field_fix, 448, "(_Restraints theObject)" },
 { field_fix, 640, "(pdbName)" },
 { field_fix, 768, "(_UniqueLabel theObject)" },
 { field_fix, 832, "(_MonomerAliases theObject)" },
{ class_kind, KIND_LISPALLOC_chem__Aggregate_O, "chem::Aggregate_O" },
{ class_size, sizeof(chem::Aggregate_O), "" },
 { field_fix, 192, "(name)" },
 { field_fix, 256, "(containerContainedBy theObject)" },
 { field_fix, 320, "(_contents _Vector _Contents)" },
 { field_fix, 384, "(_Properties)" },
 { field_fix, 448, "(_Restraints theObject)" },
{ class_kind, KIND_LISPALLOC_chem__Atom_O, "chem::Atom_O" },
{ class_size, sizeof(chem::Atom_O), "" },
 { field_fix, 192, "(name)" },
 { field_fix, 256, "(containerContainedBy theObject)" },
 { field_fix, 320, "(_contents _Vector _Contents)" },
 { field_fix, 384, "(_Properties)" },
 { field_fix, 448, "(_Restraints theObject)" },
 { field_fix, 512, "(_Alias)" },
 { field_fix, 640, "(type)" },
 { field_fix, 1344, "(bonds _Vector _Contents)" },
 { field_fix, 1856, "(_Pert _Name)" },
 { field_fix, 1920, "(_Pert _Type)" },
 { field_fix, 2176, "(copyAtom)" },
 { field_fix, 2496, "(_BackSpan theObject)" },
 { field_fix, 2560, "(_NextSpan theObject)" },
 { field_fix, 2752, "(moeType)" },
{ class_kind, KIND_LISPALLOC_chem__VirtualAtom_O, "chem::VirtualAtom_O" },
{ class_size, sizeof(chem::VirtualAtom_O), "" },
 { field_fix, 192, "(name)" },
 { field_fix, 256, "(containerContainedBy theObject)" },
 { field_fix, 320, "(_contents _Vector _Contents)" },
 { field_fix, 384, "(_Properties)" },
 { field_fix, 448, "(_Restraints theObject)" },
 { field_fix, 512, "(_Alias)" },
 { field_fix, 640, "(type)" },
 { field_fix, 1344, "(bonds _Vector _Contents)" },
 { field_fix, 1856, "(_Pert _Name)" },
 { field_fix, 1920, "(_Pert _Type)" },
 { field_fix, 2176, "(copyAtom)" },
 { field_fix, 2496, "(_BackSpan theObject)" },
 { field_fix, 2560, "(_NextSpan theObject)" },
 { field_fix, 2752, "(moeType)" },
 { field_fix, 2816, "(_CalculatePosition)" },
{ class_kind, KIND_LISPALLOC_chem__Molecule_O, "chem::Molecule_O" },
{ class_size, sizeof(chem::Molecule_O), "" },
 { field_fix, 192, "(name)" },
 { field_fix, 256, "(containerContainedBy theObject)" },
 { field_fix, 320, "(_contents _Vector _Contents)" },
 { field_fix, 384, "(_Properties)" },
 { field_fix, 448, "(_Restraints theObject)" },
{ class_kind, KIND_LISPALLOC_chem__Bond_O, "chem::Bond_O" },
{ class_size, sizeof(chem::Bond_O), "" },
 { field_fix, 128, "(_Atom1)" },
 { field_fix, 192, "(_Atom2)" },
 { field_fix, 256, "(_Properties)" },
{ class_kind, KIND_LISPALLOC_chem__AGVertex_O, "chem::AGVertex_O" },
{ class_size, sizeof(chem::AGVertex_O), "" },
 { field_fix, 64, "(_graph)" },
 { field_fix, 128, "(_atom)" },
 { field_fix, 192, "(_edges _Vector _Contents)" },
 { field_fix, 384, "(_sendBuffer)" },
 { field_fix, 448, "(_receiveBuffer)" },
{ class_kind, KIND_LISPALLOC_chem__Alias_O, "chem::Alias_O" },
{ class_size, sizeof(chem::Alias_O), "" },
 { field_fix, 64, "(_MonomerAlias)" },
 { field_fix, 128, "(_AtomAlias)" },
{ class_kind, KIND_LISPALLOC_chem__CandoDatabase_O, "chem::CandoDatabase_O" },
{ class_size, sizeof(chem::CandoDatabase_O), "" },
 { field_fix, 64, "(_Name)" },
 { field_fix, 256, "(_frameRecognizers _Contents)" },
 { field_fix, 320, "(_MonomerCoordinates _Contents)" },
 { field_fix, 384, "(_Entities _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__ProperTorsion_O, "chem::ProperTorsion_O" },
{ class_size, sizeof(chem::ProperTorsion_O), "" },
 { field_fix, 64, "(_a1)" },
 { field_fix, 128, "(_a2)" },
 { field_fix, 192, "(_a3)" },
 { field_fix, 256, "(_a4)" },
{ class_kind, KIND_LISPALLOC_geom__OVector3_O, "geom::OVector3_O" },
{ class_size, sizeof(geom::OVector3_O), "" },
{ class_kind, KIND_LISPALLOC_chem__ComplexRestraint_O, "chem::ComplexRestraint_O" },
{ class_size, sizeof(chem::ComplexRestraint_O), "" },
{ class_kind, KIND_LISPALLOC_chem__RestrainedExoCyclicAtom_O, "chem::RestrainedExoCyclicAtom_O" },
{ class_size, sizeof(chem::RestrainedExoCyclicAtom_O), "" },
 { field_fix, 64, "(_ExoCyclicAtomName)" },
{ class_kind, KIND_LISPALLOC_chem__RestrainedPiBond_O, "chem::RestrainedPiBond_O" },
{ class_size, sizeof(chem::RestrainedPiBond_O), "" },
 { field_fix, 64, "(_Configuration)" },
 { field_fix, 128, "(_PiAtomX)" },
 { field_fix, 192, "(_PiAtomY)" },
{ class_kind, KIND_LISPALLOC_chem__EnergyFunction_O, "chem::EnergyFunction_O" },
{ class_size, sizeof(chem::EnergyFunction_O), "" },
 { field_fix, 128, "(_Matter)" },
 { field_fix, 192, "(_NonbondCrossTermTable)" },
 { field_fix, 256, "(_AtomTable)" },
 { field_fix, 320, "(_Stretch)" },
 { field_fix, 384, "(_Angle)" },
 { field_fix, 448, "(_Dihedral)" },
 { field_fix, 512, "(_Nonbond)" },
 { field_fix, 576, "(_ImproperRestraint)" },
 { field_fix, 640, "(_ChiralRestraint)" },
 { field_fix, 704, "(_AnchorRestraint)" },
 { field_fix, 768, "(_FixedNonbondRestraint)" },
 { field_fix, 1344, "(_MissingParameters)" },
{ class_kind, KIND_LISPALLOC_chem__ZMatrix_O, "chem::ZMatrix_O" },
{ class_size, sizeof(chem::ZMatrix_O), "" },
 { field_fix, 64, "(_Matter)" },
 { field_fix, 128, "(_ZMatrix _Vector _Contents)" },
 { field_fix, 192, "(_Internals _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__StatusTracker_O, "chem::StatusTracker_O" },
{ class_size, sizeof(chem::StatusTracker_O), "" },
{ class_kind, KIND_LISPALLOC_chem__OneTypeRule_O, "chem::OneTypeRule_O" },
{ class_size, sizeof(chem::OneTypeRule_O), "" },
 { field_fix, 64, "(_AssignTypeName)" },
 { field_fix, 128, "(_Match)" },
{ class_kind, KIND_LISPALLOC_chem__OligomerPart_Base_O, "chem::OligomerPart_Base_O" },
{ class_size, sizeof(chem::OligomerPart_Base_O), "" },
{ class_kind, KIND_LISPALLOC_chem__OligomerPart_Monomer_O, "chem::OligomerPart_Monomer_O" },
{ class_size, sizeof(chem::OligomerPart_Monomer_O), "" },
 { field_fix, 64, "(_MonomerId)" },
 { field_fix, 128, "(_GroupName)" },
 { field_fix, 192, "(_MonomerAliases)" },
{ class_kind, KIND_LISPALLOC_chem__OligomerPart_Link_O, "chem::OligomerPart_Link_O" },
{ class_size, sizeof(chem::OligomerPart_Link_O), "" },
 { field_fix, 64, "(_Monomer1Id)" },
 { field_fix, 128, "(_Coupling)" },
 { field_fix, 192, "(_Monomer2)" },
{ class_kind, KIND_LISPALLOC_adapt__SymbolList_O, "adapt::SymbolList_O" },
{ class_size, sizeof(adapt::SymbolList_O), "" },
 { field_fix, 64, "(_Contents _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__ConformationCollection_O, "chem::ConformationCollection_O" },
{ class_size, sizeof(chem::ConformationCollection_O), "" },
 { field_fix, 64, "(_Matter)" },
 { field_fix, 128, "(_Entries _Vector _Contents)" },
 { field_fix, 192, "(_AllAtoms _Contents)" },
 { field_fix, 256, "(_Data)" },
{ class_kind, KIND_LISPALLOC_chem__SuperposableConformationCollection_O, "chem::SuperposableConformationCollection_O" },
{ class_size, sizeof(chem::SuperposableConformationCollection_O), "" },
 { field_fix, 64, "(_Matter)" },
 { field_fix, 128, "(_Entries _Vector _Contents)" },
 { field_fix, 192, "(_AllAtoms _Contents)" },
 { field_fix, 256, "(_Data)" },
 { field_fix, 384, "(_SuperposeAtomIndices)" },
{ class_kind, KIND_LISPALLOC_chem__InfoDb_O, "chem::InfoDb_O" },
{ class_size, sizeof(chem::InfoDb_O), "" },
 { field_fix, 64, "(_database _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__ConformationExplorer_O, "chem::ConformationExplorer_O" },
{ class_size, sizeof(chem::ConformationExplorer_O), "" },
 { field_fix, 64, "(_Matter)" },
 { field_fix, 128, "(_Entries _Vector _Contents)" },
 { field_fix, 192, "(_AllAtoms _Contents)" },
 { field_fix, 256, "(_SuperposeAtomIndices)" },
 { field_fix, 320, "(_Binder)" },
{ class_kind, KIND_LISPALLOC_geom__Color_O, "geom::Color_O" },
{ class_size, sizeof(geom::Color_O), "" },
 { field_fix, 64, "(_ColorName)" },
{ class_kind, KIND_LISPALLOC_chem__ConstitutionAtom_O, "chem::ConstitutionAtom_O" },
{ class_size, sizeof(chem::ConstitutionAtom_O), "" },
 { field_fix, 64, "(_AtomName)" },
 { field_fix, 192, "(_Bonds _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__ConstitutionVirtualAtom_O, "chem::ConstitutionVirtualAtom_O" },
{ class_size, sizeof(chem::ConstitutionVirtualAtom_O), "" },
 { field_fix, 64, "(_AtomName)" },
 { field_fix, 192, "(_Bonds _Vector _Contents)" },
 { field_fix, 256, "(_CalculatePositionCode)" },
{ class_kind, KIND_LISPALLOC_chem__NumericalFunction_O, "chem::NumericalFunction_O" },
{ class_size, sizeof(chem::NumericalFunction_O), "" },
{ class_kind, KIND_LISPALLOC_chem__AbstractLargeSquareMatrix_O, "chem::AbstractLargeSquareMatrix_O" },
{ class_size, sizeof(chem::AbstractLargeSquareMatrix_O), "" },
{ class_kind, KIND_LISPALLOC_chem__SparseLargeSquareMatrix_O, "chem::SparseLargeSquareMatrix_O" },
{ class_size, sizeof(chem::SparseLargeSquareMatrix_O), "" },
{ class_kind, KIND_LISPALLOC_chem__FullLargeSquareMatrix_O, "chem::FullLargeSquareMatrix_O" },
{ class_size, sizeof(chem::FullLargeSquareMatrix_O), "" },
{ class_kind, KIND_LISPALLOC_chem__TwisterDriver_O, "chem::TwisterDriver_O" },
{ class_size, sizeof(chem::TwisterDriver_O), "" },
 { field_fix, 64, "(_Aggregate)" },
 { field_fix, 128, "(_Twisters _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__VirtualSphere_O, "chem::VirtualSphere_O" },
{ class_size, sizeof(chem::VirtualSphere_O), "" },
{ class_kind, KIND_LISPALLOC_chem__Rotamer_O, "chem::Rotamer_O" },
{ class_size, sizeof(chem::Rotamer_O), "" },
{ class_kind, KIND_LISPALLOC_chem__StereoConfiguration_O, "chem::StereoConfiguration_O" },
{ class_size, sizeof(chem::StereoConfiguration_O), "" },
 { field_fix, 64, "(_AtomName)" },
 { field_fix, 128, "(_Configuration)" },
{ class_kind, KIND_LISPALLOC_chem__Topology_O, "chem::Topology_O" },
{ class_size, sizeof(chem::Topology_O), "" },
 { field_fix, 64, "(_WeakConstitution)" },
 { field_fix, 128, "(_Name)" },
 { field_fix, 256, "(_Flags _Contents)" },
 { field_fix, 384, "(_StereoisomerAtomProperties _Contents)" },
 { field_fix, 448, "(_Properties)" },
 { field_fix, 512, "(_TemporaryObject)" },
 { field_fix, 576, "(_Plugs _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__Trajectory_O, "chem::Trajectory_O" },
{ class_size, sizeof(chem::Trajectory_O), "" },
 { field_fix, 64, "(_Matter)" },
 { field_fix, 128, "(_AtomList _Vector _Contents)" },
 { field_fix, 192, "(_Frames _Vector _Contents)" },
 { field_fix, 256, "(_Namespace)" },
{ class_kind, KIND_LISPALLOC_chem__MapOfMonomerNamesToAtomIndexers_O, "chem::MapOfMonomerNamesToAtomIndexers_O" },
{ class_size, sizeof(chem::MapOfMonomerNamesToAtomIndexers_O), "" },
 { field_fix, 64, "(_AtomIndexers _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__RingFinder_O, "chem::RingFinder_O" },
{ class_size, sizeof(chem::RingFinder_O), "" },
 { field_fix, 64, "(_vertices)" },
 { field_fix, 128, "(_edges _Vector _Contents)" },
 { field_fix, 192, "(_rings)" },
 { field_fix, 256, "(_finalRings _Vector _Contents)" },
 { field_fix, 320, "(_gaussian _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__Twister_O, "chem::Twister_O" },
{ class_size, sizeof(chem::Twister_O), "" },
 { field_fix, 64, "(_FixedRef)" },
 { field_fix, 128, "(_Fixed)" },
 { field_fix, 192, "(_Movable)" },
 { field_fix, 256, "(_MovableRef)" },
 { field_fix, 320, "(_Atoms _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__FFBaseDb_O, "chem::FFBaseDb_O" },
{ class_size, sizeof(chem::FFBaseDb_O), "" },
 { field_fix, 64, "(_ForceField)" },
{ class_kind, KIND_LISPALLOC_chem__FFStretchDb_O, "chem::FFStretchDb_O" },
{ class_size, sizeof(chem::FFStretchDb_O), "" },
 { field_fix, 64, "(_ForceField)" },
 { field_fix, 128, "(_Terms _Vector _Contents)" },
 { field_fix, 192, "(_Lookup _Contents)" },
 { field_fix, 256, "(_EstimateStretch _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__FFTypesDb_O, "chem::FFTypesDb_O" },
{ class_size, sizeof(chem::FFTypesDb_O), "" },
 { field_fix, 64, "(_ForceField)" },
 { field_fix, 128, "(_TypeAssignmentRules _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__FFPtorDb_O, "chem::FFPtorDb_O" },
{ class_size, sizeof(chem::FFPtorDb_O), "" },
 { field_fix, 64, "(_ForceField)" },
 { field_fix, 128, "(_Terms _Vector _Contents)" },
 { field_fix, 192, "(_Lookup _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__FFItorDb_O, "chem::FFItorDb_O" },
{ class_size, sizeof(chem::FFItorDb_O), "" },
 { field_fix, 64, "(_ForceField)" },
 { field_fix, 128, "(_Terms _Vector _Contents)" },
 { field_fix, 192, "(_Lookup _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__FFAngleDb_O, "chem::FFAngleDb_O" },
{ class_size, sizeof(chem::FFAngleDb_O), "" },
 { field_fix, 64, "(_ForceField)" },
 { field_fix, 192, "(_Terms _Vector _Contents)" },
 { field_fix, 256, "(_Lookup _Contents)" },
 { field_fix, 320, "(_ZConstants _Contents)" },
 { field_fix, 384, "(_CConstants _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__FFNonbondDb_O, "chem::FFNonbondDb_O" },
{ class_size, sizeof(chem::FFNonbondDb_O), "" },
 { field_fix, 64, "(_ForceField)" },
 { field_fix, 320, "(_EleChargeFcn)" },
 { field_fix, 576, "(_Terms _Vector _Contents)" },
 { field_fix, 640, "(_Lookup)" },
{ class_kind, KIND_LISPALLOC_chem__FFVdwDb_O, "chem::FFVdwDb_O" },
{ class_size, sizeof(chem::FFVdwDb_O), "" },
 { field_fix, 64, "(_ForceField)" },
 { field_fix, 128, "(_Terms _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__SuperposeEngine_O, "chem::SuperposeEngine_O" },
{ class_size, sizeof(chem::SuperposeEngine_O), "" },
 { field_fix, 64, "(_FixedIndices)" },
 { field_fix, 128, "(_FixedCoordinates)" },
 { field_fix, 192, "(_MoveableIndices)" },
 { field_fix, 256, "(_MoveableCoordinates)" },
{ class_kind, KIND_LISPALLOC_chem__SuperposeSelectedAtoms_O, "chem::SuperposeSelectedAtoms_O" },
{ class_size, sizeof(chem::SuperposeSelectedAtoms_O), "" },
 { field_fix, 64, "(_FixedIndices)" },
 { field_fix, 128, "(_FixedCoordinates)" },
 { field_fix, 192, "(_MoveableIndices)" },
 { field_fix, 256, "(_MoveableCoordinates)" },
 { field_fix, 1408, "(_Matter)" },
 { field_fix, 1472, "(_SuperposeAtoms _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__CalculatePosition_O, "chem::CalculatePosition_O" },
{ class_size, sizeof(chem::CalculatePosition_O), "" },
{ class_kind, KIND_LISPALLOC_chem__CalculatePositionUsingInternals_O, "chem::CalculatePositionUsingInternals_O" },
{ class_size, sizeof(chem::CalculatePositionUsingInternals_O), "" },
 { field_fix, 64, "(_DistanceAtomName)" },
 { field_fix, 128, "(_AngleAtomName)" },
 { field_fix, 192, "(_DihedralAtomName)" },
{ class_kind, KIND_LISPALLOC_chem__CalculatePositionRelativeToOrigin_O, "chem::CalculatePositionRelativeToOrigin_O" },
{ class_size, sizeof(chem::CalculatePositionRelativeToOrigin_O), "" },
 { field_fix, 64, "(_OriginAtomName)" },
 { field_fix, 128, "(_ToAtomName)" },
{ class_kind, KIND_LISPALLOC_chem__CalculatePositionAlongBond_O, "chem::CalculatePositionAlongBond_O" },
{ class_size, sizeof(chem::CalculatePositionAlongBond_O), "" },
 { field_fix, 64, "(_FromAtomName)" },
 { field_fix, 128, "(_ToAtomName)" },
{ class_kind, KIND_LISPALLOC_chem__FFParameter_O, "chem::FFParameter_O" },
{ class_size, sizeof(chem::FFParameter_O), "" },
{ class_kind, KIND_LISPALLOC_chem__FFStretch_O, "chem::FFStretch_O" },
{ class_size, sizeof(chem::FFStretch_O), "" },
 { field_fix, 128, "(_Type1)" },
 { field_fix, 192, "(_Type2)" },
{ class_kind, KIND_LISPALLOC_chem__FFAngle_O, "chem::FFAngle_O" },
{ class_size, sizeof(chem::FFAngle_O), "" },
 { field_fix, 128, "(_Type1)" },
 { field_fix, 192, "(_Type2)" },
 { field_fix, 256, "(_Type3)" },
{ class_kind, KIND_LISPALLOC_chem__FFVdw_O, "chem::FFVdw_O" },
{ class_size, sizeof(chem::FFVdw_O), "" },
{ class_kind, KIND_LISPALLOC_chem__FFNonbond_O, "chem::FFNonbond_O" },
{ class_size, sizeof(chem::FFNonbond_O), "" },
 { field_fix, 128, "(_Type)" },
{ class_kind, KIND_LISPALLOC_chem__FFPtor_O, "chem::FFPtor_O" },
{ class_size, sizeof(chem::FFPtor_O), "" },
 { field_fix, 128, "(_T1)" },
 { field_fix, 192, "(_T2)" },
 { field_fix, 256, "(_T3)" },
 { field_fix, 320, "(_T4)" },
{ class_kind, KIND_LISPALLOC_chem__FFItor_O, "chem::FFItor_O" },
{ class_size, sizeof(chem::FFItor_O), "" },
 { field_fix, 128, "(_T1)" },
 { field_fix, 192, "(_T2)" },
 { field_fix, 256, "(_T3)" },
 { field_fix, 320, "(_T4)" },
{ class_kind, KIND_LISPALLOC_chem__SpecificContextSet_O, "chem::SpecificContextSet_O" },
{ class_size, sizeof(chem::SpecificContextSet_O), "" },
 { field_fix, 64, "(_KeySets _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__ConformationExplorerEntryStage_O, "chem::ConformationExplorerEntryStage_O" },
{ class_size, sizeof(chem::ConformationExplorerEntryStage_O), "" },
 { field_fix, 256, "(_WeakConformationExplorerEntry)" },
 { field_fix, 320, "(_FinalCoordinates)" },
 { field_fix, 384, "(_Binder)" },
{ class_kind, KIND_LISPALLOC_chem__Angle_O, "chem::Angle_O" },
{ class_size, sizeof(chem::Angle_O), "" },
 { field_fix, 64, "(_a1)" },
 { field_fix, 128, "(_a2)" },
 { field_fix, 192, "(_a3)" },
{ class_kind, KIND_LISPALLOC_adapt__QDomNode_O, "adapt::QDomNode_O" },
{ class_size, sizeof(adapt::QDomNode_O), "" },
 { field_fix, 64, "(parent)" },
 { field_fix, 3264, "(_children _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__StructureComparer_O, "chem::StructureComparer_O" },
{ class_size, sizeof(chem::StructureComparer_O), "" },
 { field_fix, 64, "(_Matter)" },
 { field_fix, 128, "(_AllAtoms _Contents)" },
 { field_fix, 192, "(_SuperposeAtoms _Contents)" },
 { field_fix, 256, "(_FixedCoordinates)" },
{ class_kind, KIND_LISPALLOC_chem__AtomIdToAtomMap_O, "chem::AtomIdToAtomMap_O" },
{ class_size, sizeof(chem::AtomIdToAtomMap_O), "" },
 { field_fix, 64, "(_AtomIdMap _DefaultValue)" },
{ class_kind, KIND_LISPALLOC_core__Array_O, "core::Array_O" },
{ class_size, sizeof(core::Array_O), "" },
{ class_kind, KIND_LISPALLOC_core__ArrayDisplaced_O, "core::ArrayDisplaced_O" },
{ class_size, sizeof(core::ArrayDisplaced_O), "" },
 { field_fix, 256, "(_ElementType)" },
 { field_fix, 320, "(_Array)" },
{ class_kind, KIND_LISPALLOC_core__ArrayObjects_O, "core::ArrayObjects_O" },
{ class_size, sizeof(core::ArrayObjects_O), "" },
 { field_fix, 256, "(_ElementType)" },
 { field_fix, 320, "(_Values _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_core__Vector_O, "core::Vector_O" },
{ class_size, sizeof(core::Vector_O), "" },
{ class_kind, KIND_LISPALLOC_core__VectorDisplaced_O, "core::VectorDisplaced_O" },
{ class_size, sizeof(core::VectorDisplaced_O), "" },
 { field_fix, 64, "(_ElementType)" },
 { field_fix, 128, "(_Vector)" },
{ class_kind, KIND_LISPALLOC_core__VectorObjects_O, "core::VectorObjects_O" },
{ class_size, sizeof(core::VectorObjects_O), "" },
 { field_fix, 64, "(_ElementType)" },
 { field_fix, 192, "(_Values _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_core__VectorObjectsWithFillPtr_O, "core::VectorObjectsWithFillPtr_O" },
{ class_size, sizeof(core::VectorObjectsWithFillPtr_O), "" },
 { field_fix, 64, "(_ElementType)" },
 { field_fix, 192, "(_Values _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_core__BitVector_O, "core::BitVector_O" },
{ class_size, sizeof(core::BitVector_O), "" },
{ class_kind, KIND_LISPALLOC_core__BitVectorWithFillPtr_O, "core::BitVectorWithFillPtr_O" },
{ class_size, sizeof(core::BitVectorWithFillPtr_O), "" },
{ class_kind, KIND_LISPALLOC_core__SimpleBitVector_O, "core::SimpleBitVector_O" },
{ class_size, sizeof(core::SimpleBitVector_O), "" },
{ class_kind, KIND_LISPALLOC_core__String_O, "core::String_O" },
{ class_size, sizeof(core::String_O), "" },
{ class_kind, KIND_BOOTSTRAP_core__Str_O, "core::Str_O" },
{ class_size, sizeof(core::Str_O), "" },
 { field_fix, 64, "(_Contents _Contents)" },
{ class_kind, KIND_LISPALLOC_core__StrWithFillPtr_O, "core::StrWithFillPtr_O" },
{ class_size, sizeof(core::StrWithFillPtr_O), "" },
 { field_fix, 64, "(_Contents _Contents)" },
{ class_kind, KIND_LISPALLOC_geom__CoordinateArray_O, "geom::CoordinateArray_O" },
{ class_size, sizeof(geom::CoordinateArray_O), "" },
{ class_kind, KIND_LISPALLOC_geom__CoordinateArrayWithHash_O, "geom::CoordinateArrayWithHash_O" },
{ class_size, sizeof(geom::CoordinateArrayWithHash_O), "" },
{ class_kind, KIND_LISPALLOC_core__SNode_O, "core::SNode_O" },
{ class_size, sizeof(core::SNode_O), "" },
{ class_kind, KIND_LISPALLOC_core__BranchSNode_O, "core::BranchSNode_O" },
{ class_size, sizeof(core::BranchSNode_O), "" },
 { field_fix, 128, "(_Kind)" },
 { field_fix, 192, "(_SNodePList)" },
 { field_fix, 256, "(_VectorSNodes theObject)" },
{ class_kind, KIND_LISPALLOC_core__LeafSNode_O, "core::LeafSNode_O" },
{ class_size, sizeof(core::LeafSNode_O), "" },
 { field_fix, 128, "(_Object)" },
{ class_kind, KIND_LISPALLOC_asttooling__AstVisitor_O, "asttooling::AstVisitor_O" },
{ class_size, sizeof(asttooling::AstVisitor_O), "" },
 { field_fix, 64, "(_Target)" },
{ class_kind, KIND_LISPALLOC_llvmo__AttributeSet_O, "llvmo::AttributeSet_O" },
{ class_size, sizeof(llvmo::AttributeSet_O), "" },
{ class_kind, KIND_LISPALLOC_core__Package_O, "core::Package_O" },
{ class_size, sizeof(core::Package_O), "" },
 { field_fix, 64, "(_Name _Contents)" },
 { field_fix, 128, "(_InternalSymbols)" },
 { field_fix, 192, "(_ExternalSymbols)" },
 { field_fix, 256, "(_Shadowing)" },
 { field_fix, 320, "(_UsingPackages _Vector _Contents)" },
 { field_fix, 384, "(_PackagesUsedBy _Vector _Contents)" },
 { field_fix, 512, "(_Nicknames)" },
{ templated_class_kind, KIND_TEMPLATED_LISPALLOC_core__WrappedPointer_O, "core::WrappedPointer_O" },
{ templated_class_jump_table_index, 0, "" },
{ class_kind, KIND_LISPALLOC_core__RegexMatch_O, "core::RegexMatch_O" },
{ class_size, sizeof(core::RegexMatch_O), "" },
{ class_kind, KIND_LISPALLOC_core__DirectoryEntry_O, "core::DirectoryEntry_O" },
{ class_size, sizeof(core::DirectoryEntry_O), "" },
{ class_kind, KIND_LISPALLOC_clbind__ClassRegistry_O, "clbind::ClassRegistry_O" },
{ class_size, sizeof(clbind::ClassRegistry_O), "" },
 { field_fix, 64, "(m_classes)" },
{ class_kind, KIND_LISPALLOC_llvmo__DebugInfo_O, "llvmo::DebugInfo_O" },
{ class_size, sizeof(llvmo::DebugInfo_O), "" },
{ class_kind, KIND_LISPALLOC_llvmo__DISubprogram_O, "llvmo::DISubprogram_O" },
{ class_size, sizeof(llvmo::DISubprogram_O), "" },
{ class_kind, KIND_LISPALLOC_llvmo__DIDescriptor_O, "llvmo::DIDescriptor_O" },
{ class_size, sizeof(llvmo::DIDescriptor_O), "" },
{ class_kind, KIND_LISPALLOC_llvmo__DIType_O, "llvmo::DIType_O" },
{ class_size, sizeof(llvmo::DIType_O), "" },
{ class_kind, KIND_LISPALLOC_llvmo__DISubroutineType_O, "llvmo::DISubroutineType_O" },
{ class_size, sizeof(llvmo::DISubroutineType_O), "" },
{ class_kind, KIND_LISPALLOC_llvmo__DICompileUnit_O, "llvmo::DICompileUnit_O" },
{ class_size, sizeof(llvmo::DICompileUnit_O), "" },
{ class_kind, KIND_LISPALLOC_llvmo__DIDerivedType_O, "llvmo::DIDerivedType_O" },
{ class_size, sizeof(llvmo::DIDerivedType_O), "" },
{ class_kind, KIND_LISPALLOC_llvmo__DIArray_O, "llvmo::DIArray_O" },
{ class_size, sizeof(llvmo::DIArray_O), "" },
{ class_kind, KIND_LISPALLOC_llvmo__DIBasicType_O, "llvmo::DIBasicType_O" },
{ class_size, sizeof(llvmo::DIBasicType_O), "" },
{ class_kind, KIND_LISPALLOC_llvmo__DICompositeType_O, "llvmo::DICompositeType_O" },
{ class_size, sizeof(llvmo::DICompositeType_O), "" },
{ class_kind, KIND_LISPALLOC_llvmo__DITypeArray_O, "llvmo::DITypeArray_O" },
{ class_size, sizeof(llvmo::DITypeArray_O), "" },
{ class_kind, KIND_LISPALLOC_llvmo__DILexicalBlock_O, "llvmo::DILexicalBlock_O" },
{ class_size, sizeof(llvmo::DILexicalBlock_O), "" },
{ class_kind, KIND_LISPALLOC_llvmo__DIFile_O, "llvmo::DIFile_O" },
{ class_size, sizeof(llvmo::DIFile_O), "" },
{ class_kind, KIND_LISPALLOC_llvmo__DIScope_O, "llvmo::DIScope_O" },
{ class_size, sizeof(llvmo::DIScope_O), "" },
{ class_kind, KIND_BOOTSTRAP_core__StandardObject_O, "core::StandardObject_O" },
{ class_size, sizeof(core::StandardObject_O), "" },
{ class_kind, KIND_BOOTSTRAP_core__Metaobject_O, "core::Metaobject_O" },
{ class_size, sizeof(core::Metaobject_O), "" },
{ class_kind, KIND_BOOTSTRAP_core__Specializer_O, "core::Specializer_O" },
{ class_size, sizeof(core::Specializer_O), "" },
{ class_kind, KIND_BOOTSTRAP_core__Class_O, "core::Class_O" },
{ class_size, sizeof(core::Class_O), "" },
 { field_fix, 64, "(_Signature_ClassSlots)" },
 { field_fix, 128, "(_theCreator)" },
 { field_fix, 192, "(_MetaClassSlots _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_core__ForwardReferencedClass_O, "core::ForwardReferencedClass_O" },
{ class_size, sizeof(core::ForwardReferencedClass_O), "" },
 { field_fix, 64, "(_Signature_ClassSlots)" },
 { field_fix, 128, "(_theCreator)" },
 { field_fix, 192, "(_MetaClassSlots _Vector _Contents)" },
 { field_fix, 256, "(_InstanceCoreClass)" },
{ class_kind, KIND_LISPALLOC_core__CxxClass_O, "core::CxxClass_O" },
{ class_size, sizeof(core::CxxClass_O), "" },
 { field_fix, 64, "(_Signature_ClassSlots)" },
 { field_fix, 128, "(_theCreator)" },
 { field_fix, 192, "(_MetaClassSlots _Vector _Contents)" },
{ class_kind, KIND_BOOTSTRAP_core__StdClass_O, "core::StdClass_O" },
{ class_size, sizeof(core::StdClass_O), "" },
 { field_fix, 64, "(_Signature_ClassSlots)" },
 { field_fix, 128, "(_theCreator)" },
 { field_fix, 192, "(_MetaClassSlots _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_core__FuncallableStandardClass_O, "core::FuncallableStandardClass_O" },
{ class_size, sizeof(core::FuncallableStandardClass_O), "" },
 { field_fix, 64, "(_Signature_ClassSlots)" },
 { field_fix, 128, "(_theCreator)" },
 { field_fix, 192, "(_MetaClassSlots _Vector _Contents)" },
 { field_fix, 256, "(_InstanceCoreClass)" },
{ class_kind, KIND_BOOTSTRAP_core__StandardClass_O, "core::StandardClass_O" },
{ class_size, sizeof(core::StandardClass_O), "" },
 { field_fix, 64, "(_Signature_ClassSlots)" },
 { field_fix, 128, "(_theCreator)" },
 { field_fix, 192, "(_MetaClassSlots _Vector _Contents)" },
 { field_fix, 256, "(_InstanceCoreClass)" },
{ class_kind, KIND_BOOTSTRAP_core__StructureClass_O, "core::StructureClass_O" },
{ class_size, sizeof(core::StructureClass_O), "" },
 { field_fix, 64, "(_Signature_ClassSlots)" },
 { field_fix, 128, "(_theCreator)" },
 { field_fix, 192, "(_MetaClassSlots _Vector _Contents)" },
 { field_fix, 256, "(_InstanceCoreClass)" },
{ class_kind, KIND_BOOTSTRAP_core__BuiltInClass_O, "core::BuiltInClass_O" },
{ class_size, sizeof(core::BuiltInClass_O), "" },
 { field_fix, 64, "(_Signature_ClassSlots)" },
 { field_fix, 128, "(_theCreator)" },
 { field_fix, 192, "(_MetaClassSlots _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_clbind__ClassRep_O, "clbind::ClassRep_O" },
{ class_size, sizeof(clbind::ClassRep_O), "" },
 { field_fix, 64, "(_Signature_ClassSlots)" },
 { field_fix, 128, "(_theCreator)" },
 { field_fix, 192, "(_MetaClassSlots _Vector _Contents)" },
 { field_fix, 320, "(m_bases _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_core__LoadTimeValues_O, "core::LoadTimeValues_O" },
{ class_size, sizeof(core::LoadTimeValues_O), "" },
 { field_fix, 64, "(_Objects _Vector _Contents)" },
 { field_fix, 128, "(_Symbols _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_adapt__SymbolSet_O, "adapt::SymbolSet_O" },
{ class_size, sizeof(adapt::SymbolSet_O), "" },
 { field_fix, 64, "(_Symbols)" },
{ class_kind, KIND_LISPALLOC_core__SourcePosInfo_O, "core::SourcePosInfo_O" },
{ class_size, sizeof(core::SourcePosInfo_O), "" },
{ class_kind, KIND_LISPALLOC_core__MultiStringBuffer_O, "core::MultiStringBuffer_O" },
{ class_size, sizeof(core::MultiStringBuffer_O), "" },
{ templated_class_kind, KIND_TEMPLATED_LISPALLOC_core__Iterator_O, "core::Iterator_O" },
{ templated_class_jump_table_index, 1, "" },
{ class_kind, KIND_LISPALLOC_core__RecursiveDirectoryIterator_O, "core::RecursiveDirectoryIterator_O" },
{ class_size, sizeof(core::RecursiveDirectoryIterator_O), "" },
 { field_fix, 64, "(_Path)" },
{ class_kind, KIND_LISPALLOC_chem__IterateRestraints_O, "chem::IterateRestraints_O" },
{ class_size, sizeof(chem::IterateRestraints_O), "" },
 { field_fix, 64, "(_Top)" },
 { field_fix, 128, "(_Restraints)" },
 { field_fix, 192, "(_CurRestraint)" },
{ class_kind, KIND_LISPALLOC_chem__IterateMatter_O, "chem::IterateMatter_O" },
{ class_size, sizeof(chem::IterateMatter_O), "" },
 { field_fix, 64, "(_Top)" },
 { field_fix, 256, "(_Loop top)" },
 { field_fix, 320, "(_Loop currentObject)" },
 { field_fix, 448, "(_Loop subLoopTop)" },
 { field_fix, 768, "(_Loop subLoopIteratorCur)" },
 { field_fix, 1088, "(_Loop subLoopIteratorEnd)" },
 { field_fix, 1536, "(_Loop atoms)" },
 { field_fix, 1856, "(_Loop _Bond)" },
 { field_fix, 1920, "(_Loop aCurSpan)" },
 { field_fix, 1984, "(_Loop aLastSpan)" },
 { field_fix, 2176, "(_Loop aLastCollision)" },
 { field_fix, 2240, "(_Loop aInvisibleAtom)" },
 { field_fix, 2432, "(_Loop _Impropers _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__IterateResidues_O, "chem::IterateResidues_O" },
{ class_size, sizeof(chem::IterateResidues_O), "" },
 { field_fix, 64, "(_Top)" },
 { field_fix, 256, "(_Loop top)" },
 { field_fix, 320, "(_Loop currentObject)" },
 { field_fix, 448, "(_Loop subLoopTop)" },
 { field_fix, 768, "(_Loop subLoopIteratorCur)" },
 { field_fix, 1088, "(_Loop subLoopIteratorEnd)" },
 { field_fix, 1536, "(_Loop atoms)" },
 { field_fix, 1856, "(_Loop _Bond)" },
 { field_fix, 1920, "(_Loop aCurSpan)" },
 { field_fix, 1984, "(_Loop aLastSpan)" },
 { field_fix, 2176, "(_Loop aLastCollision)" },
 { field_fix, 2240, "(_Loop aInvisibleAtom)" },
 { field_fix, 2432, "(_Loop _Impropers _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__IterateBonds_O, "chem::IterateBonds_O" },
{ class_size, sizeof(chem::IterateBonds_O), "" },
 { field_fix, 64, "(_Top)" },
 { field_fix, 256, "(_Loop top)" },
 { field_fix, 320, "(_Loop currentObject)" },
 { field_fix, 448, "(_Loop subLoopTop)" },
 { field_fix, 768, "(_Loop subLoopIteratorCur)" },
 { field_fix, 1088, "(_Loop subLoopIteratorEnd)" },
 { field_fix, 1536, "(_Loop atoms)" },
 { field_fix, 1856, "(_Loop _Bond)" },
 { field_fix, 1920, "(_Loop aCurSpan)" },
 { field_fix, 1984, "(_Loop aLastSpan)" },
 { field_fix, 2176, "(_Loop aLastCollision)" },
 { field_fix, 2240, "(_Loop aInvisibleAtom)" },
 { field_fix, 2432, "(_Loop _Impropers _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_chem__IterateAtoms_O, "chem::IterateAtoms_O" },
{ class_size, sizeof(chem::IterateAtoms_O), "" },
 { field_fix, 64, "(_Top)" },
 { field_fix, 256, "(_Loop top)" },
 { field_fix, 320, "(_Loop currentObject)" },
 { field_fix, 448, "(_Loop subLoopTop)" },
 { field_fix, 768, "(_Loop subLoopIteratorCur)" },
 { field_fix, 1088, "(_Loop subLoopIteratorEnd)" },
 { field_fix, 1536, "(_Loop atoms)" },
 { field_fix, 1856, "(_Loop _Bond)" },
 { field_fix, 1920, "(_Loop aCurSpan)" },
 { field_fix, 1984, "(_Loop aLastSpan)" },
 { field_fix, 2176, "(_Loop aLastCollision)" },
 { field_fix, 2240, "(_Loop aInvisibleAtom)" },
 { field_fix, 2432, "(_Loop _Impropers _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_core__DirectoryIterator_O, "core::DirectoryIterator_O" },
{ class_size, sizeof(core::DirectoryIterator_O), "" },
 { field_fix, 64, "(_Path)" },
{ class_kind, KIND_LISPALLOC_adapt__IterateCons_O, "adapt::IterateCons_O" },
{ class_size, sizeof(adapt::IterateCons_O), "" },
 { field_fix, 64, "(_Begin)" },
 { field_fix, 128, "(_Cur)" },
{ class_kind, KIND_LISPALLOC_core__FileStatus_O, "core::FileStatus_O" },
{ class_size, sizeof(core::FileStatus_O), "" },
{ class_kind, KIND_LISPALLOC_adapt__StringList_O, "adapt::StringList_O" },
{ class_size, sizeof(adapt::StringList_O), "" },
{ class_kind, KIND_LISPALLOC_core__Stream_O, "core::Stream_O" },
{ class_size, sizeof(core::Stream_O), "" },
 { field_fix, 1728, "(_Format)" },
 { field_fix, 1856, "(_ByteStack)" },
 { field_fix, 2304, "(_ExternalFormat)" },
{ class_kind, KIND_LISPALLOC_core__AnsiStream_O, "core::AnsiStream_O" },
{ class_size, sizeof(core::AnsiStream_O), "" },
 { field_fix, 1728, "(_Format)" },
 { field_fix, 1856, "(_ByteStack)" },
 { field_fix, 2304, "(_ExternalFormat)" },
{ class_kind, KIND_LISPALLOC_core__EchoStream_O, "core::EchoStream_O" },
{ class_size, sizeof(core::EchoStream_O), "" },
 { field_fix, 1728, "(_Format)" },
 { field_fix, 1856, "(_ByteStack)" },
 { field_fix, 2304, "(_ExternalFormat)" },
 { field_fix, 2752, "(_In)" },
 { field_fix, 2816, "(_Out)" },
{ class_kind, KIND_LISPALLOC_core__SynonymStream_O, "core::SynonymStream_O" },
{ class_size, sizeof(core::SynonymStream_O), "" },
 { field_fix, 1728, "(_Format)" },
 { field_fix, 1856, "(_ByteStack)" },
 { field_fix, 2304, "(_ExternalFormat)" },
 { field_fix, 2752, "(_SynonymSymbol)" },
{ class_kind, KIND_LISPALLOC_core__BroadcastStream_O, "core::BroadcastStream_O" },
{ class_size, sizeof(core::BroadcastStream_O), "" },
 { field_fix, 1728, "(_Format)" },
 { field_fix, 1856, "(_ByteStack)" },
 { field_fix, 2304, "(_ExternalFormat)" },
 { field_fix, 2752, "(_Streams)" },
{ class_kind, KIND_LISPALLOC_core__StringStream_O, "core::StringStream_O" },
{ class_size, sizeof(core::StringStream_O), "" },
 { field_fix, 1728, "(_Format)" },
 { field_fix, 1856, "(_ByteStack)" },
 { field_fix, 2304, "(_ExternalFormat)" },
{ class_kind, KIND_LISPALLOC_core__StringInputStream_O, "core::StringInputStream_O" },
{ class_size, sizeof(core::StringInputStream_O), "" },
 { field_fix, 1728, "(_Format)" },
 { field_fix, 1856, "(_ByteStack)" },
 { field_fix, 2304, "(_ExternalFormat)" },
 { field_fix, 2752, "(_Contents)" },
{ class_kind, KIND_LISPALLOC_core__StringOutputStream_O, "core::StringOutputStream_O" },
{ class_size, sizeof(core::StringOutputStream_O), "" },
 { field_fix, 1728, "(_Format)" },
 { field_fix, 1856, "(_ByteStack)" },
 { field_fix, 2304, "(_ExternalFormat)" },
 { field_fix, 2752, "(_Contents)" },
{ class_kind, KIND_LISPALLOC_core__TwoWayStream_O, "core::TwoWayStream_O" },
{ class_size, sizeof(core::TwoWayStream_O), "" },
 { field_fix, 1728, "(_Format)" },
 { field_fix, 1856, "(_ByteStack)" },
 { field_fix, 2304, "(_ExternalFormat)" },
 { field_fix, 2752, "(_In)" },
 { field_fix, 2816, "(_Out)" },
{ class_kind, KIND_LISPALLOC_core__FileStream_O, "core::FileStream_O" },
{ class_size, sizeof(core::FileStream_O), "" },
 { field_fix, 1728, "(_Format)" },
 { field_fix, 1856, "(_ByteStack)" },
 { field_fix, 2304, "(_ExternalFormat)" },
 { field_fix, 2752, "(_Filename)" },
 { field_fix, 2816, "(_ElementType)" },
{ class_kind, KIND_LISPALLOC_core__IOStreamStream_O, "core::IOStreamStream_O" },
{ class_size, sizeof(core::IOStreamStream_O), "" },
 { field_fix, 1728, "(_Format)" },
 { field_fix, 1856, "(_ByteStack)" },
 { field_fix, 2304, "(_ExternalFormat)" },
 { field_fix, 2752, "(_Filename)" },
 { field_fix, 2816, "(_ElementType)" },
{ class_kind, KIND_LISPALLOC_core__IOFileStream_O, "core::IOFileStream_O" },
{ class_size, sizeof(core::IOFileStream_O), "" },
 { field_fix, 1728, "(_Format)" },
 { field_fix, 1856, "(_ByteStack)" },
 { field_fix, 2304, "(_ExternalFormat)" },
 { field_fix, 2752, "(_Filename)" },
 { field_fix, 2816, "(_ElementType)" },
{ class_kind, KIND_LISPALLOC_core__ConcatenatedStream_O, "core::ConcatenatedStream_O" },
{ class_size, sizeof(core::ConcatenatedStream_O), "" },
 { field_fix, 1728, "(_Format)" },
 { field_fix, 1856, "(_ByteStack)" },
 { field_fix, 2304, "(_ExternalFormat)" },
 { field_fix, 2752, "(_List)" },
{ class_kind, KIND_LISPALLOC_core__Cons_O, "core::Cons_O" },
{ class_size, sizeof(core::Cons_O), "" },
 { field_fix, 64, "(_Car)" },
 { field_fix, 128, "(_Cdr)" },
{ class_kind, KIND_LISPALLOC_cffi__Pointer_O, "cffi::Pointer_O" },
{ class_size, sizeof(cffi::Pointer_O), "" },
{ class_kind, KIND_LISPALLOC_core__SourceFileInfo_O, "core::SourceFileInfo_O" },
{ class_size, sizeof(core::SourceFileInfo_O), "" },
 { field_fix, 64, "(_pathname)" },
 { field_fix, 320, "(_SourceDebugNamestring)" },
{ class_kind, KIND_LISPALLOC_core__Path_O, "core::Path_O" },
{ class_size, sizeof(core::Path_O), "" },
{ class_kind, KIND_LISPALLOC_core__StructureObject_O, "core::StructureObject_O" },
{ class_size, sizeof(core::StructureObject_O), "" },
 { field_fix, 64, "(_Type)" },
 { field_fix, 128, "(_Slots _Vector _Contents)" },
{ class_kind, KIND_LISPALLOC_core__InvocationHistoryFrameIterator_O, "core::InvocationHistoryFrameIterator_O" },
{ class_size, sizeof(core::InvocationHistoryFrameIterator_O), "" },
{ class_kind, KIND_LISPALLOC_core__RandomState_O, "core::RandomState_O" },
{ class_size, sizeof(core::RandomState_O), "" },
{ class_kind, KIND_LISPALLOC_llvmo__DebugLoc_O, "llvmo::DebugLoc_O" },
{ class_size, sizeof(llvmo::DebugLoc_O), "" },
{ class_kind, KIND_LISPALLOC_core__Function_O, "core::Function_O" },
{ class_size, sizeof(core::Function_O), "" },
 { field_fix, 64, "(closure)" },
{ class_kind, KIND_LISPALLOC_core__SingleDispatchGenericFunction_O, "core::SingleDispatchGenericFunction_O" },
{ class_size, sizeof(core::SingleDispatchGenericFunction_O), "" },
 { field_fix, 64, "(closure)" },
{ class_kind, KIND_LISPALLOC_core__SpecialForm_O, "core::SpecialForm_O" },
{ class_size, sizeof(core::SpecialForm_O), "" },
 { field_fix, 64, "(closure)" },
 { field_fix, 128, "(_SpecialSymbol)" },
{ class_kind, KIND_LISPALLOC_core__Instance_O, "core::Instance_O" },
{ class_size, sizeof(core::Instance_O), "" },
 { field_fix, 64, "(closure)" },
 { field_fix, 192, "(_Class)" },
 { field_fix, 256, "(_Slots _Vector _Contents)" },
 { field_fix, 320, "(_Sig)" },
{ class_kind, KIND_LISPALLOC_core__CompiledFunction_O, "core::CompiledFunction_O" },
{ class_size, sizeof(core::CompiledFunction_O), "" },
 { field_fix, 64, "(closure)" },
{ class_kind, KIND_LISPALLOC_core__SingleDispatchEffectiveMethodFunction_O, "core::SingleDispatchEffectiveMethodFunction_O" },
{ class_size, sizeof(core::SingleDispatchEffectiveMethodFunction_O), "" },
 { field_fix, 64, "(closure)" },
 { field_fix, 128, "(_Methods)" },
{ class_kind, KIND_LISPALLOC_core__WeakPointer_O, "core::WeakPointer_O" },
{ class_size, sizeof(core::WeakPointer_O), "" },
 { field_fix, 128, "(_WeakObject pointer)" },
{ class_kind, KIND_LISPALLOC_core__Pointer_O, "core::Pointer_O" },
{ class_size, sizeof(core::Pointer_O), "" },
{ class_kind, KIND_LISPALLOC_core__VaList_dummy_O, "core::VaList_dummy_O" },
{ class_size, sizeof(core::VaList_dummy_O), "" },
{ class_kind, KIND_LISPALLOC_core__ExternalObject_O, "core::ExternalObject_O" },
{ class_size, sizeof(core::ExternalObject_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__TargetOptions_O, "llvmo::TargetOptions_O" },
{ class_size, sizeof(llvmo::TargetOptions_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__DIBuilder_O, "llvmo::DIBuilder_O" },
{ class_size, sizeof(llvmo::DIBuilder_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__Pass_O, "llvmo::Pass_O" },
{ class_size, sizeof(llvmo::Pass_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__ModulePass_O, "llvmo::ModulePass_O" },
{ class_size, sizeof(llvmo::ModulePass_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__ImmutablePass_O, "llvmo::ImmutablePass_O" },
{ class_size, sizeof(llvmo::ImmutablePass_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__DataLayoutPass_O, "llvmo::DataLayoutPass_O" },
{ class_size, sizeof(llvmo::DataLayoutPass_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__TargetLibraryInfo_O, "llvmo::TargetLibraryInfo_O" },
{ class_size, sizeof(llvmo::TargetLibraryInfo_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__FunctionPass_O, "llvmo::FunctionPass_O" },
{ class_size, sizeof(llvmo::FunctionPass_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__Linker_O, "llvmo::Linker_O" },
{ class_size, sizeof(llvmo::Linker_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__Module_O, "llvmo::Module_O" },
{ class_size, sizeof(llvmo::Module_O), "" },
 { field_fix, 64, "(_Class)" },
 { field_fix, 192, "(_UniqueGlobalVariableStrings)" },
{ class_kind, KIND_LISPALLOC_llvmo__APFloat_O, "llvmo::APFloat_O" },
{ class_size, sizeof(llvmo::APFloat_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__LLVMContext_O, "llvmo::LLVMContext_O" },
{ class_size, sizeof(llvmo::LLVMContext_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__Target_O, "llvmo::Target_O" },
{ class_size, sizeof(llvmo::Target_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__APInt_O, "llvmo::APInt_O" },
{ class_size, sizeof(llvmo::APInt_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__PassManagerBase_O, "llvmo::PassManagerBase_O" },
{ class_size, sizeof(llvmo::PassManagerBase_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__FunctionPassManager_O, "llvmo::FunctionPassManager_O" },
{ class_size, sizeof(llvmo::FunctionPassManager_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__PassManager_O, "llvmo::PassManager_O" },
{ class_size, sizeof(llvmo::PassManager_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__Value_O, "llvmo::Value_O" },
{ class_size, sizeof(llvmo::Value_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__Argument_O, "llvmo::Argument_O" },
{ class_size, sizeof(llvmo::Argument_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__User_O, "llvmo::User_O" },
{ class_size, sizeof(llvmo::User_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__Constant_O, "llvmo::Constant_O" },
{ class_size, sizeof(llvmo::Constant_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__ConstantInt_O, "llvmo::ConstantInt_O" },
{ class_size, sizeof(llvmo::ConstantInt_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__ConstantFP_O, "llvmo::ConstantFP_O" },
{ class_size, sizeof(llvmo::ConstantFP_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__GlobalValue_O, "llvmo::GlobalValue_O" },
{ class_size, sizeof(llvmo::GlobalValue_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__GlobalVariable_O, "llvmo::GlobalVariable_O" },
{ class_size, sizeof(llvmo::GlobalVariable_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__Function_O, "llvmo::Function_O" },
{ class_size, sizeof(llvmo::Function_O), "" },
 { field_fix, 64, "(_Class)" },
 { field_fix, 256, "(_RunTimeValues)" },
{ class_kind, KIND_LISPALLOC_llvmo__ConstantArray_O, "llvmo::ConstantArray_O" },
{ class_size, sizeof(llvmo::ConstantArray_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__ConstantStruct_O, "llvmo::ConstantStruct_O" },
{ class_size, sizeof(llvmo::ConstantStruct_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__UndefValue_O, "llvmo::UndefValue_O" },
{ class_size, sizeof(llvmo::UndefValue_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__ConstantPointerNull_O, "llvmo::ConstantPointerNull_O" },
{ class_size, sizeof(llvmo::ConstantPointerNull_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__ConstantExpr_O, "llvmo::ConstantExpr_O" },
{ class_size, sizeof(llvmo::ConstantExpr_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__BlockAddress_O, "llvmo::BlockAddress_O" },
{ class_size, sizeof(llvmo::BlockAddress_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__ConstantDataSequential_O, "llvmo::ConstantDataSequential_O" },
{ class_size, sizeof(llvmo::ConstantDataSequential_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__ConstantDataArray_O, "llvmo::ConstantDataArray_O" },
{ class_size, sizeof(llvmo::ConstantDataArray_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__Instruction_O, "llvmo::Instruction_O" },
{ class_size, sizeof(llvmo::Instruction_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__PHINode_O, "llvmo::PHINode_O" },
{ class_size, sizeof(llvmo::PHINode_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__LandingPadInst_O, "llvmo::LandingPadInst_O" },
{ class_size, sizeof(llvmo::LandingPadInst_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__AtomicCmpXchgInst_O, "llvmo::AtomicCmpXchgInst_O" },
{ class_size, sizeof(llvmo::AtomicCmpXchgInst_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__TerminatorInst_O, "llvmo::TerminatorInst_O" },
{ class_size, sizeof(llvmo::TerminatorInst_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__UnreachableInst_O, "llvmo::UnreachableInst_O" },
{ class_size, sizeof(llvmo::UnreachableInst_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__InvokeInst_O, "llvmo::InvokeInst_O" },
{ class_size, sizeof(llvmo::InvokeInst_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__BranchInst_O, "llvmo::BranchInst_O" },
{ class_size, sizeof(llvmo::BranchInst_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__IndirectBrInst_O, "llvmo::IndirectBrInst_O" },
{ class_size, sizeof(llvmo::IndirectBrInst_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__ResumeInst_O, "llvmo::ResumeInst_O" },
{ class_size, sizeof(llvmo::ResumeInst_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__SwitchInst_O, "llvmo::SwitchInst_O" },
{ class_size, sizeof(llvmo::SwitchInst_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__ReturnInst_O, "llvmo::ReturnInst_O" },
{ class_size, sizeof(llvmo::ReturnInst_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__FenceInst_O, "llvmo::FenceInst_O" },
{ class_size, sizeof(llvmo::FenceInst_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__AtomicRMWInst_O, "llvmo::AtomicRMWInst_O" },
{ class_size, sizeof(llvmo::AtomicRMWInst_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__StoreInst_O, "llvmo::StoreInst_O" },
{ class_size, sizeof(llvmo::StoreInst_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__UnaryInstruction_O, "llvmo::UnaryInstruction_O" },
{ class_size, sizeof(llvmo::UnaryInstruction_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__VAArgInst_O, "llvmo::VAArgInst_O" },
{ class_size, sizeof(llvmo::VAArgInst_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__AllocaInst_O, "llvmo::AllocaInst_O" },
{ class_size, sizeof(llvmo::AllocaInst_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__LoadInst_O, "llvmo::LoadInst_O" },
{ class_size, sizeof(llvmo::LoadInst_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__CallInst_O, "llvmo::CallInst_O" },
{ class_size, sizeof(llvmo::CallInst_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__BasicBlock_O, "llvmo::BasicBlock_O" },
{ class_size, sizeof(llvmo::BasicBlock_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__IRBuilderBase_O, "llvmo::IRBuilderBase_O" },
{ class_size, sizeof(llvmo::IRBuilderBase_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__IRBuilder_O, "llvmo::IRBuilder_O" },
{ class_size, sizeof(llvmo::IRBuilder_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__MCSubtargetInfo_O, "llvmo::MCSubtargetInfo_O" },
{ class_size, sizeof(llvmo::MCSubtargetInfo_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__TargetSubtargetInfo_O, "llvmo::TargetSubtargetInfo_O" },
{ class_size, sizeof(llvmo::TargetSubtargetInfo_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__EngineBuilder_O, "llvmo::EngineBuilder_O" },
{ class_size, sizeof(llvmo::EngineBuilder_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__DataLayout_O, "llvmo::DataLayout_O" },
{ class_size, sizeof(llvmo::DataLayout_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__Triple_O, "llvmo::Triple_O" },
{ class_size, sizeof(llvmo::Triple_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__TargetMachine_O, "llvmo::TargetMachine_O" },
{ class_size, sizeof(llvmo::TargetMachine_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__LLVMTargetMachine_O, "llvmo::LLVMTargetMachine_O" },
{ class_size, sizeof(llvmo::LLVMTargetMachine_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__Type_O, "llvmo::Type_O" },
{ class_size, sizeof(llvmo::Type_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__CompositeType_O, "llvmo::CompositeType_O" },
{ class_size, sizeof(llvmo::CompositeType_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__StructType_O, "llvmo::StructType_O" },
{ class_size, sizeof(llvmo::StructType_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__SequentialType_O, "llvmo::SequentialType_O" },
{ class_size, sizeof(llvmo::SequentialType_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__PointerType_O, "llvmo::PointerType_O" },
{ class_size, sizeof(llvmo::PointerType_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__ArrayType_O, "llvmo::ArrayType_O" },
{ class_size, sizeof(llvmo::ArrayType_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__VectorType_O, "llvmo::VectorType_O" },
{ class_size, sizeof(llvmo::VectorType_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__FunctionType_O, "llvmo::FunctionType_O" },
{ class_size, sizeof(llvmo::FunctionType_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__IntegerType_O, "llvmo::IntegerType_O" },
{ class_size, sizeof(llvmo::IntegerType_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__Metadata_O, "llvmo::Metadata_O" },
{ class_size, sizeof(llvmo::Metadata_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__ValueAsMetadata_O, "llvmo::ValueAsMetadata_O" },
{ class_size, sizeof(llvmo::ValueAsMetadata_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__MDString_O, "llvmo::MDString_O" },
{ class_size, sizeof(llvmo::MDString_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__MDNode_O, "llvmo::MDNode_O" },
{ class_size, sizeof(llvmo::MDNode_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__NamedMDNode_O, "llvmo::NamedMDNode_O" },
{ class_size, sizeof(llvmo::NamedMDNode_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_llvmo__ExecutionEngine_O, "llvmo::ExecutionEngine_O" },
{ class_size, sizeof(llvmo::ExecutionEngine_O), "" },
 { field_fix, 64, "(_Class)" },
 { field_fix, 192, "(_DependentModules)" },
{ class_kind, KIND_LISPALLOC_core__ForeignData_O, "core::ForeignData_O" },
{ class_size, sizeof(core::ForeignData_O), "" },
 { field_fix, 64, "(_Class)" },
 { field_fix, 128, "(_Kind)" },
{ class_kind, KIND_LISPALLOC_llvmo__PassManagerBuilder_O, "llvmo::PassManagerBuilder_O" },
{ class_size, sizeof(llvmo::PassManagerBuilder_O), "" },
 { field_fix, 64, "(_Class)" },
{ class_kind, KIND_LISPALLOC_adapt__ObjectSet_O, "adapt::ObjectSet_O" },
{ class_size, sizeof(adapt::ObjectSet_O), "" },
 { field_fix, 64, "(_Set)" },
{ class_kind, KIND_LISPALLOC_core__IntArray_O, "core::IntArray_O" },
{ class_size, sizeof(core::IntArray_O), "" },
{ class_kind, KIND_LISPALLOC_core__PosixTime_O, "core::PosixTime_O" },
{ class_size, sizeof(core::PosixTime_O), "" },
{ class_kind, KIND_BOOTSTRAP_core__Symbol_O, "core::Symbol_O" },
{ class_size, sizeof(core::Symbol_O), "" },
 { field_fix, 64, "(_Name)" },
 { field_fix, 128, "(_HomePackage)" },
 { field_fix, 192, "(_Value)" },
 { field_fix, 256, "(_Function)" },
 { field_fix, 320, "(_SetfFunction)" },
 { field_fix, 448, "(_PropertyList)" },
{ class_kind, KIND_LISPALLOC_core__Null_O, "core::Null_O" },
{ class_size, sizeof(core::Null_O), "" },
 { field_fix, 64, "(_Name)" },
 { field_fix, 128, "(_HomePackage)" },
 { field_fix, 192, "(_Value)" },
 { field_fix, 256, "(_Function)" },
 { field_fix, 320, "(_SetfFunction)" },
 { field_fix, 448, "(_PropertyList)" },
{ class_kind, KIND_LISPALLOC_adapt__IndexedObjectBag_O, "adapt::IndexedObjectBag_O" },
{ class_size, sizeof(adapt::IndexedObjectBag_O), "" },
 { field_fix, 64, "(_Bag theObject)" },
{ class_kind, KIND_LISPALLOC_core__PosixTimeDuration_O, "core::PosixTimeDuration_O" },
{ class_size, sizeof(core::PosixTimeDuration_O), "" },
{ class_kind, KIND_LISPALLOC_core__SymbolToEnumConverter_O, "core::SymbolToEnumConverter_O" },
{ class_size, sizeof(core::SymbolToEnumConverter_O), "" },
 { field_fix, 64, "(_WhatTheEnumsRepresent _Contents)" },
 { field_fix, 128, "(_EnumToSymbol)" },
 { field_fix, 192, "(_ArchiveSymbolToEnum)" },
 { field_fix, 256, "(_EnumToArchiveSymbol)" },
 { field_fix, 320, "(_SymbolToEnum)" },
{ class_kind, KIND_LISPALLOC_core__ReadTable_O, "core::ReadTable_O" },
{ class_size, sizeof(core::ReadTable_O), "" },
 { field_fix, 64, "(_Case)" },
 { field_fix, 128, "(_SyntaxTypes)" },
 { field_fix, 192, "(_MacroCharacters)" },
 { field_fix, 256, "(_DispatchMacroCharacters)" },
{ class_kind, KIND_LISPALLOC_core__Number_O, "core::Number_O" },
{ class_size, sizeof(core::Number_O), "" },
{ class_kind, KIND_LISPALLOC_core__Complex_O, "core::Complex_O" },
{ class_size, sizeof(core::Complex_O), "" },
 { field_fix, 64, "(_real)" },
 { field_fix, 128, "(_imaginary)" },
{ class_kind, KIND_LISPALLOC_core__Real_O, "core::Real_O" },
{ class_size, sizeof(core::Real_O), "" },
{ class_kind, KIND_LISPALLOC_core__Float_O, "core::Float_O" },
{ class_size, sizeof(core::Float_O), "" },
{ class_kind, KIND_LISPALLOC_core__SingleFloat_dummy_O, "core::SingleFloat_dummy_O" },
{ class_size, sizeof(core::SingleFloat_dummy_O), "" },
{ class_kind, KIND_LISPALLOC_core__LongFloat_O, "core::LongFloat_O" },
{ class_size, sizeof(core::LongFloat_O), "" },
{ class_kind, KIND_LISPALLOC_core__ShortFloat_O, "core::ShortFloat_O" },
{ class_size, sizeof(core::ShortFloat_O), "" },
{ class_kind, KIND_LISPALLOC_core__DoubleFloat_O, "core::DoubleFloat_O" },
{ class_size, sizeof(core::DoubleFloat_O), "" },
{ class_kind, KIND_LISPALLOC_core__Rational_O, "core::Rational_O" },
{ class_size, sizeof(core::Rational_O), "" },
{ class_kind, KIND_LISPALLOC_core__Integer_O, "core::Integer_O" },
{ class_size, sizeof(core::Integer_O), "" },
{ class_kind, KIND_LISPALLOC_core__Bignum_O, "core::Bignum_O" },
{ class_size, sizeof(core::Bignum_O), "" },
{ class_kind, KIND_LISPALLOC_core__Fixnum_dummy_O, "core::Fixnum_dummy_O" },
{ class_size, sizeof(core::Fixnum_dummy_O), "" },
{ class_kind, KIND_LISPALLOC_core__Ratio_O, "core::Ratio_O" },
{ class_size, sizeof(core::Ratio_O), "" },
 { field_fix, 64, "(_numerator)" },
 { field_fix, 128, "(_denominator)" },
{ class_kind, KIND_LISPALLOC_core__CandoException_O, "core::CandoException_O" },
{ class_size, sizeof(core::CandoException_O), "" },
 { field_fix, 64, "(_message _Contents)" },
{ class_kind, KIND_LISPALLOC_core__Archive_O, "core::Archive_O" },
{ class_size, sizeof(core::Archive_O), "" },
 { field_fix, 128, "(_TopNode theObject)" },
{ class_kind, KIND_LISPALLOC_core__LoadArchive_O, "core::LoadArchive_O" },
{ class_size, sizeof(core::LoadArchive_O), "" },
 { field_fix, 128, "(_TopNode theObject)" },
 { field_fix, 256, "(_ObjectForSNode)" },
 { field_fix, 320, "(_NodesToFinalize)" },
{ class_kind, KIND_LISPALLOC_core__SexpLoadArchive_O, "core::SexpLoadArchive_O" },
{ class_size, sizeof(core::SexpLoadArchive_O), "" },
 { field_fix, 128, "(_TopNode theObject)" },
 { field_fix, 256, "(_ObjectForSNode)" },
 { field_fix, 320, "(_NodesToFinalize)" },
{ class_kind, KIND_LISPALLOC_core__SaveArchive_O, "core::SaveArchive_O" },
{ class_size, sizeof(core::SaveArchive_O), "" },
 { field_fix, 128, "(_TopNode theObject)" },
 { field_fix, 256, "(_SNodeForObject)" },
{ class_kind, KIND_LISPALLOC_core__SexpSaveArchive_O, "core::SexpSaveArchive_O" },
{ class_size, sizeof(core::SexpSaveArchive_O), "" },
 { field_fix, 128, "(_TopNode theObject)" },
 { field_fix, 256, "(_SNodeForObject)" },
{ class_kind, KIND_LISPALLOC_core__HashTable_O, "core::HashTable_O" },
{ class_size, sizeof(core::HashTable_O), "" },
 { field_fix, 128, "(_RehashSize)" },
 { field_fix, 256, "(_HashTable)" },
{ class_kind, KIND_LISPALLOC_core__HashTableEq_O, "core::HashTableEq_O" },
{ class_size, sizeof(core::HashTableEq_O), "" },
 { field_fix, 128, "(_RehashSize)" },
 { field_fix, 256, "(_HashTable)" },
{ class_kind, KIND_LISPALLOC_core__HashTableEqual_O, "core::HashTableEqual_O" },
{ class_size, sizeof(core::HashTableEqual_O), "" },
 { field_fix, 128, "(_RehashSize)" },
 { field_fix, 256, "(_HashTable)" },
{ class_kind, KIND_LISPALLOC_core__HashTableEql_O, "core::HashTableEql_O" },
{ class_size, sizeof(core::HashTableEql_O), "" },
 { field_fix, 128, "(_RehashSize)" },
 { field_fix, 256, "(_HashTable)" },
{ class_kind, KIND_LISPALLOC_core__HashTableEqualp_O, "core::HashTableEqualp_O" },
{ class_size, sizeof(core::HashTableEqualp_O), "" },
 { field_fix, 128, "(_RehashSize)" },
 { field_fix, 256, "(_HashTable)" },
{ class_kind, KIND_LISPALLOC_core__Environment_O, "core::Environment_O" },
{ class_size, sizeof(core::Environment_O), "" },
{ class_kind, KIND_LISPALLOC_core__ActivationFrame_O, "core::ActivationFrame_O" },
{ class_size, sizeof(core::ActivationFrame_O), "" },
{ class_kind, KIND_LISPALLOC_core__FunctionFrame_O, "core::FunctionFrame_O" },
{ class_size, sizeof(core::FunctionFrame_O), "" },
 { field_fix, 128, "(_ParentFrame)" },
 { field_fix, 192, "(_Objects _Array _Contents)" },
{ class_kind, KIND_LISPALLOC_core__TagbodyFrame_O, "core::TagbodyFrame_O" },
{ class_size, sizeof(core::TagbodyFrame_O), "" },
 { field_fix, 128, "(_ParentFrame)" },
{ class_kind, KIND_LISPALLOC_core__ValueFrame_O, "core::ValueFrame_O" },
{ class_size, sizeof(core::ValueFrame_O), "" },
 { field_fix, 128, "(_ParentFrame)" },
 { field_fix, 192, "(_Objects _Array _Contents)" },
 { field_fix, 256, "(_DebuggingInfo)" },
{ class_kind, KIND_LISPALLOC_core__LexicalEnvironment_O, "core::LexicalEnvironment_O" },
{ class_size, sizeof(core::LexicalEnvironment_O), "" },
 { field_fix, 128, "(_ParentEnvironment)" },
 { field_fix, 192, "(_Metadata)" },
{ class_kind, KIND_LISPALLOC_core__CompileTimeEnvironment_O, "core::CompileTimeEnvironment_O" },
{ class_size, sizeof(core::CompileTimeEnvironment_O), "" },
 { field_fix, 128, "(_ParentEnvironment)" },
 { field_fix, 192, "(_Metadata)" },
{ class_kind, KIND_LISPALLOC_core__MacroletEnvironment_O, "core::MacroletEnvironment_O" },
{ class_size, sizeof(core::MacroletEnvironment_O), "" },
 { field_fix, 128, "(_ParentEnvironment)" },
 { field_fix, 192, "(_Metadata)" },
 { field_fix, 256, "(_Macros)" },
{ class_kind, KIND_LISPALLOC_core__FunctionContainerEnvironment_O, "core::FunctionContainerEnvironment_O" },
{ class_size, sizeof(core::FunctionContainerEnvironment_O), "" },
 { field_fix, 128, "(_ParentEnvironment)" },
 { field_fix, 192, "(_Metadata)" },
{ class_kind, KIND_LISPALLOC_core__UnwindProtectEnvironment_O, "core::UnwindProtectEnvironment_O" },
{ class_size, sizeof(core::UnwindProtectEnvironment_O), "" },
 { field_fix, 128, "(_ParentEnvironment)" },
 { field_fix, 192, "(_Metadata)" },
 { field_fix, 256, "(_CleanupForm)" },
{ class_kind, KIND_LISPALLOC_core__SymbolMacroletEnvironment_O, "core::SymbolMacroletEnvironment_O" },
{ class_size, sizeof(core::SymbolMacroletEnvironment_O), "" },
 { field_fix, 128, "(_ParentEnvironment)" },
 { field_fix, 192, "(_Metadata)" },
 { field_fix, 256, "(_Macros)" },
{ class_kind, KIND_LISPALLOC_core__StackValueEnvironment_O, "core::StackValueEnvironment_O" },
{ class_size, sizeof(core::StackValueEnvironment_O), "" },
 { field_fix, 128, "(_ParentEnvironment)" },
 { field_fix, 192, "(_Metadata)" },
 { field_fix, 256, "(_Values)" },
{ class_kind, KIND_LISPALLOC_core__BlockEnvironment_O, "core::BlockEnvironment_O" },
{ class_size, sizeof(core::BlockEnvironment_O), "" },
 { field_fix, 128, "(_ParentEnvironment)" },
 { field_fix, 192, "(_Metadata)" },
 { field_fix, 256, "(_BlockSymbol)" },
{ class_kind, KIND_LISPALLOC_core__CatchEnvironment_O, "core::CatchEnvironment_O" },
{ class_size, sizeof(core::CatchEnvironment_O), "" },
 { field_fix, 128, "(_ParentEnvironment)" },
 { field_fix, 192, "(_Metadata)" },
{ class_kind, KIND_LISPALLOC_core__RuntimeVisibleEnvironment_O, "core::RuntimeVisibleEnvironment_O" },
{ class_size, sizeof(core::RuntimeVisibleEnvironment_O), "" },
 { field_fix, 128, "(_ParentEnvironment)" },
 { field_fix, 192, "(_Metadata)" },
 { field_fix, 256, "(_RuntimeEnvironment)" },
{ class_kind, KIND_LISPALLOC_core__ValueEnvironment_O, "core::ValueEnvironment_O" },
{ class_size, sizeof(core::ValueEnvironment_O), "" },
 { field_fix, 128, "(_ParentEnvironment)" },
 { field_fix, 192, "(_Metadata)" },
 { field_fix, 256, "(_RuntimeEnvironment)" },
 { field_fix, 320, "(_SymbolIndex)" },
 { field_fix, 384, "(_ActivationFrame)" },
{ class_kind, KIND_LISPALLOC_core__FunctionValueEnvironment_O, "core::FunctionValueEnvironment_O" },
{ class_size, sizeof(core::FunctionValueEnvironment_O), "" },
 { field_fix, 128, "(_ParentEnvironment)" },
 { field_fix, 192, "(_Metadata)" },
 { field_fix, 256, "(_RuntimeEnvironment)" },
 { field_fix, 320, "(_FunctionIndices)" },
 { field_fix, 384, "(_FunctionFrame)" },
{ class_kind, KIND_LISPALLOC_core__TagbodyEnvironment_O, "core::TagbodyEnvironment_O" },
{ class_size, sizeof(core::TagbodyEnvironment_O), "" },
 { field_fix, 128, "(_ParentEnvironment)" },
 { field_fix, 192, "(_Metadata)" },
 { field_fix, 256, "(_RuntimeEnvironment)" },
 { field_fix, 320, "(_Tags)" },
 { field_fix, 384, "(_TagCode _Vector _Contents)" },
 { field_fix, 448, "(_ActivationFrame)" },
{ class_kind, KIND_LISPALLOC_core__GlueEnvironment_O, "core::GlueEnvironment_O" },
{ class_size, sizeof(core::GlueEnvironment_O), "" },
 { field_fix, 128, "(_Map)" },
 { field_fix, 192, "(_Args)" },
{ class_kind, KIND_LISPALLOC_core__WeakKeyMapping_O, "core::WeakKeyMapping_O" },
{ class_size, sizeof(core::WeakKeyMapping_O), "" },
 { field_fix, 64, "(_WeakObject Key)" },
 { field_fix, 128, "(_WeakObject Value)" },
{ class_kind, KIND_LISPALLOC_core__LambdaListHandler_O, "core::LambdaListHandler_O" },
{ class_size, sizeof(core::LambdaListHandler_O), "" },
 { field_fix, 128, "(_ClassifiedSymbolList)" },
 { field_fix, 192, "(_SpecialSymbolSet theObject)" },
 { field_fix, 256, "(_DeclareSpecifierList)" },
 { field_fix, 320, "(_RequiredArguments _Vector _Contents)" },
 { field_fix, 384, "(_OptionalArguments _Vector _Contents)" },
 { field_fix, 512, "(_RestArgument _ArgTarget)" },
 { field_fix, 640, "(_KeyFlag)" },
 { field_fix, 704, "(_KeywordArguments _Vector _Contents)" },
 { field_fix, 768, "(_AllowOtherKeys)" },
 { field_fix, 832, "(_AuxArguments _Vector _Contents)" },
 { field_fix, 896, "(_Comment _Contents)" },
 { field_fix, 1024, "(_LexicalVariableNamesForDebugging)" },
{ class_kind, KIND_LISPALLOC_llvmo__InsertPoint_O, "llvmo::InsertPoint_O" },
{ class_size, sizeof(llvmo::InsertPoint_O), "" },
{ class_kind, KIND_LISPALLOC_core__SingleDispatchMethod_O, "core::SingleDispatchMethod_O" },
{ class_size, sizeof(core::SingleDispatchMethod_O), "" },
 { field_fix, 64, "(_name)" },
 { field_fix, 128, "(_receiver_class)" },
 { field_fix, 192, "(code)" },
 { field_fix, 256, "(_argument_handler)" },
 { field_fix, 320, "(_declares)" },
 { field_fix, 384, "(_docstring)" },
{ class_kind, KIND_LISPALLOC_llvmo__Attribute_O, "llvmo::Attribute_O" },
{ class_size, sizeof(llvmo::Attribute_O), "" },
{ class_kind, KIND_LISPALLOC_core__Character_dummy_O, "core::Character_dummy_O" },
{ class_size, sizeof(core::Character_dummy_O), "" },
{ class_kind, KIND_LISPALLOC_core__SmallMultimap_O, "core::SmallMultimap_O" },
{ class_size, sizeof(core::SmallMultimap_O), "" },
 { field_fix, 64, "(map _Contents)" },
{ class_kind, KIND_LISPALLOC_core__Binder_O, "core::Binder_O" },
{ class_size, sizeof(core::Binder_O), "" },
 { field_fix, 64, "(_Bindings)" },
 { field_fix, 128, "(_Values)" },
{ class_kind, KIND_LISPALLOC_core__Pathname_O, "core::Pathname_O" },
{ class_size, sizeof(core::Pathname_O), "" },
 { field_fix, 64, "(_Host)" },
 { field_fix, 128, "(_Device)" },
 { field_fix, 192, "(_Directory)" },
 { field_fix, 256, "(_Name)" },
 { field_fix, 320, "(_Type)" },
 { field_fix, 384, "(_Version)" },
{ class_kind, KIND_LISPALLOC_core__LogicalPathname_O, "core::LogicalPathname_O" },
{ class_size, sizeof(core::LogicalPathname_O), "" },
 { field_fix, 64, "(_Host)" },
 { field_fix, 128, "(_Device)" },
 { field_fix, 192, "(_Directory)" },
 { field_fix, 256, "(_Name)" },
 { field_fix, 320, "(_Type)" },
 { field_fix, 384, "(_Version)" },
{ class_kind, KIND_LISPALLOC_core__SourceManager_O, "core::SourceManager_O" },
{ class_size, sizeof(core::SourceManager_O), "" },
 { field_fix, 64, "(_SourcePosInfo)" },
{ class_kind, KIND_LISPALLOC_core__Record_O, "core::Record_O" },
{ class_size, sizeof(core::Record_O), "" },
 { field_fix, 128, "(_alist)" },
 { field_fix, 192, "(_replacement_table)" },
 { field_fix, 256, "(_Seen)" },
{ class_kind, KIND_LISPALLOC_core__SmallMap_O, "core::SmallMap_O" },
{ class_size, sizeof(core::SmallMap_O), "" },
 { field_fix, 64, "(map _Contents)" },
{ class_kind, KIND_LISPALLOC_core__LightUserData_O, "core::LightUserData_O" },
{ class_size, sizeof(core::LightUserData_O), "" },
{ class_kind, KIND_LISPALLOC_core__UserData_O, "core::UserData_O" },
{ class_size, sizeof(core::UserData_O), "" },
{ class_kind, KIND_ROOTCLASSALLOC_asttooling__RegMap__RegistryMaps, "asttooling::RegMap::RegistryMaps" },
{ class_size, sizeof(asttooling::RegMap::RegistryMaps), "" },
 { field_fix, 64, "(Constructors _Vector _Contents)" },
{ class_kind, KIND_CLASSALLOC_core__Cache, "core::Cache" },
{ class_size, sizeof(core::Cache), "" },
 { field_fix, 192, "(_keys _Vector _Contents)" },
 { field_fix, 256, "(_table _Vector _Contents)" },
{ templated_class_kind, KIND_TEMPLATED_CLASSALLOC_core__Creator, "core::Creator" },
{ templated_class_jump_table_index, 2, "" },
{ class_kind, KIND_CLASSALLOC_core__InstanceCreator, "core::InstanceCreator" },
{ class_size, sizeof(core::InstanceCreator), "" },
 { field_fix, 64, "(_className)" },
{ templated_class_kind, KIND_TEMPLATED_CLASSALLOC_clbind__ConstructorCreator, "clbind::ConstructorCreator" },
{ templated_class_jump_table_index, 3, "" },
{ class_kind, KIND_CLASSALLOC_clbind__DummyCreator, "clbind::DummyCreator" },
{ class_size, sizeof(clbind::DummyCreator), "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>" },
{ container_jump_table_index, 4, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyStretch_, "gctools::GCVector_moveable<chem::EnergyStretch>" },
{ container_jump_table_index, 5, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFStretch_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::FFStretch_O>>" },
{ container_jump_table_index, 6, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>" },
{ container_jump_table_index, 7, "" },
{ class_kind, KIND_CLASSALLOC_core__SingleDispatchGenericFunctionClosure, "core::SingleDispatchGenericFunctionClosure" },
{ class_size, sizeof(core::SingleDispatchGenericFunctionClosure), "" },
 { field_fix, 64, "(name)" },
 { field_fix, 128, "(closedEnvironment)" },
 { field_fix, 192, "(kind)" },
 { field_fix, 256, "(_cleavir_ast)" },
 { field_fix, 576, "(_Methods)" },
 { field_fix, 640, "(_lambdaListHandler)" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Stereoisomer_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>" },
{ container_jump_table_index, 8, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyNonbond_, "gctools::GCVector_moveable<chem::EnergyNonbond>" },
{ container_jump_table_index, 9, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_core__RequiredArgument_, "gctools::GCVector_moveable<core::RequiredArgument>" },
{ container_jump_table_index, 10, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Entity_O>>>" },
{ container_jump_table_index, 11, "" },
{ class_kind, KIND_CLASSALLOC_llvmo__CompiledClosure, "llvmo::CompiledClosure" },
{ class_size, sizeof(llvmo::CompiledClosure), "" },
 { field_fix, 64, "(name)" },
 { field_fix, 128, "(closedEnvironment)" },
 { field_fix, 192, "(kind)" },
 { field_fix, 256, "(_cleavir_ast)" },
 { field_fix, 576, "(llvmFunction)" },
 { field_fix, 704, "(associatedFunctions)" },
 { field_fix, 768, "(_lambdaList)" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>" },
{ container_jump_table_index, 12, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Str_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Str_O>>>" },
{ container_jump_table_index, 13, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomInfo_, "gctools::GCVector_moveable<chem::AtomInfo>" },
{ container_jump_table_index, 14, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__RegMap__SymbolMatcherDescriptorPair_, "gctools::GCVector_moveable<asttooling::RegMap::SymbolMatcherDescriptorPair>" },
{ container_jump_table_index, 15, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>" },
{ container_jump_table_index, 16, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>" },
{ container_jump_table_index, 17, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFItor_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFItor_O>>>" },
{ container_jump_table_index, 18, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>" },
{ container_jump_table_index, 19, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>" },
{ container_jump_table_index, 20, "" },
{ class_kind, KIND_CLASSALLOC_asttooling__internal__OverloadedMatcherDescriptor, "asttooling::internal::OverloadedMatcherDescriptor" },
{ class_size, sizeof(asttooling::internal::OverloadedMatcherDescriptor), "" },
 { field_fix, 64, "(Overloads _Vector _Contents)" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>" },
{ container_jump_table_index, 21, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>" },
{ container_jump_table_index, 22, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>" },
{ container_jump_table_index, 23, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_chem__FixedNonbondRestraint_, "gctools::GCVector_moveable<chem::FixedNonbondRestraint>" },
{ container_jump_table_index, 24, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_asttooling__internal__MatcherDescriptor__, "gctools::GCVector_moveable<gctools::tagged_pointer<asttooling::internal::MatcherDescriptor>>" },
{ container_jump_table_index, 25, "" },
{ container_kind, KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__2_, "gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,2>" },
{ container_jump_table_index, 26, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>" },
{ container_jump_table_index, 27, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__, "gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>" },
{ container_jump_table_index, 28, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__, "gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>" },
{ container_jump_table_index, 29, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>" },
{ container_jump_table_index, 30, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>" },
{ container_jump_table_index, 31, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>" },
{ container_jump_table_index, 32, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_core__ExceptionEntry_, "gctools::GCVector_moveable<core::ExceptionEntry>" },
{ container_jump_table_index, 33, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>" },
{ container_jump_table_index, 34, "" },
{ class_kind, KIND_CLASSALLOC_core__MacroClosure, "core::MacroClosure" },
{ class_size, sizeof(core::MacroClosure), "" },
 { field_fix, 64, "(name)" },
 { field_fix, 128, "(closedEnvironment)" },
 { field_fix, 192, "(kind)" },
 { field_fix, 256, "(_cleavir_ast)" },
 { field_fix, 576, "(_lambdaListHandler)" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>" },
{ container_jump_table_index, 35, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>" },
{ container_jump_table_index, 36, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyDihedral_, "gctools::GCVector_moveable<chem::EnergyDihedral>" },
{ container_jump_table_index, 37, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ParserValue_, "gctools::GCVector_moveable<asttooling::ParserValue>" },
{ container_jump_table_index, 38, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>" },
{ container_jump_table_index, 39, "" },
{ container_kind, KIND_GCSTRING_gctools__GCString_moveable_char_, "gctools::GCString_moveable<char>" },
{ container_jump_table_index, 40, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__RingClosingMate_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::RingClosingMate_O>>" },
{ container_jump_table_index, 41, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolClassPair_, "gctools::GCVector_moveable<core::SymbolClassPair>" },
{ container_jump_table_index, 42, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>" },
{ container_jump_table_index, 43, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_chem__KeyEntry_, "gctools::GCVector_moveable<chem::KeyEntry>" },
{ container_jump_table_index, 44, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>" },
{ container_jump_table_index, 45, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAtom_, "gctools::GCVector_moveable<chem::EnergyAtom>" },
{ container_jump_table_index, 46, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFPtor_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::FFPtor_O>>" },
{ container_jump_table_index, 47, "" },
{ class_kind, KIND_CLASSALLOC_asttooling__internal__VariadicOperatorMatcherDescriptor, "asttooling::internal::VariadicOperatorMatcherDescriptor" },
{ class_size, sizeof(asttooling::internal::VariadicOperatorMatcherDescriptor), "" },
 { field_fix, 192, "(MatcherName)" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___, "gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>" },
{ container_jump_table_index, 48, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyImproperRestraint_, "gctools::GCVector_moveable<chem::EnergyImproperRestraint>" },
{ container_jump_table_index, 49, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>" },
{ container_jump_table_index, 50, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomPdbRec_, "gctools::GCVector_moveable<chem::AtomPdbRec>" },
{ container_jump_table_index, 51, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFItor_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::FFItor_O>>" },
{ container_jump_table_index, 52, "" },
{ class_kind, KIND_CLASSALLOC_core__InstanceClosure, "core::InstanceClosure" },
{ class_size, sizeof(core::InstanceClosure), "" },
 { field_fix, 64, "(name)" },
 { field_fix, 128, "(closedEnvironment)" },
 { field_fix, 192, "(kind)" },
 { field_fix, 256, "(_cleavir_ast)" },
 { field_fix, 640, "(instance)" },
 { field_fix, 704, "(lambda_list)" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>" },
{ container_jump_table_index, 53, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___, "gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>" },
{ container_jump_table_index, 54, "" },
{ container_kind, KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__1_, "gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,1>" },
{ container_jump_table_index, 55, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>" },
{ container_jump_table_index, 56, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>" },
{ container_jump_table_index, 57, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolStorage_, "gctools::GCVector_moveable<core::SymbolStorage>" },
{ container_jump_table_index, 58, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ErrorContent_, "gctools::GCVector_moveable<asttooling::ErrorContent>" },
{ container_jump_table_index, 59, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyChiralRestraint_, "gctools::GCVector_moveable<chem::EnergyChiralRestraint>" },
{ container_jump_table_index, 60, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>" },
{ container_jump_table_index, 61, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>" },
{ container_jump_table_index, 62, "" },
{ class_kind, KIND_CLASSALLOC_core__CoreExposer, "core::CoreExposer" },
{ class_size, sizeof(core::CoreExposer), "" },
 { field_fix, 64, "(_Package)" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>" },
{ container_jump_table_index, 63, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ContextFrame_, "gctools::GCVector_moveable<asttooling::ContextFrame>" },
{ container_jump_table_index, 64, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>" },
{ container_jump_table_index, 65, "" },
{ class_kind, KIND_CLASSALLOC_asttooling__internal__FixedArgCountMatcherDescriptor, "asttooling::internal::FixedArgCountMatcherDescriptor" },
{ class_size, sizeof(asttooling::internal::FixedArgCountMatcherDescriptor), "" },
 { field_fix, 192, "(MatcherName)" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_, "gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>" },
{ container_jump_table_index, 66, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_core__OptionalArgument_, "gctools::GCVector_moveable<core::OptionalArgument>" },
{ container_jump_table_index, 67, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__, "gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>" },
{ container_jump_table_index, 68, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAngle_, "gctools::GCVector_moveable<chem::EnergyAngle>" },
{ container_jump_table_index, 69, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_core__T_O_P_, "gctools::GCVector_moveable<core::T_O *>" },
{ container_jump_table_index, 70, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>" },
{ container_jump_table_index, 71, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>" },
{ container_jump_table_index, 72, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>" },
{ container_jump_table_index, 73, "" },
{ class_kind, KIND_CLASSALLOC_core__InterpretedClosure, "core::InterpretedClosure" },
{ class_size, sizeof(core::InterpretedClosure), "" },
 { field_fix, 64, "(name)" },
 { field_fix, 128, "(closedEnvironment)" },
 { field_fix, 192, "(kind)" },
 { field_fix, 256, "(_cleavir_ast)" },
 { field_fix, 576, "(_lambdaListHandler)" },
 { field_fix, 640, "(_declares)" },
 { field_fix, 704, "(_docstring)" },
 { field_fix, 768, "(_code)" },
{ class_kind, KIND_CLASSALLOC_asttooling__internal__FreeFuncMatcherDescriptor, "asttooling::internal::FreeFuncMatcherDescriptor" },
{ class_size, sizeof(asttooling::internal::FreeFuncMatcherDescriptor), "" },
 { field_fix, 128, "(MatcherName)" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_core__DynamicBinding_, "gctools::GCVector_moveable<core::DynamicBinding>" },
{ container_jump_table_index, 74, "" },
{ class_kind, KIND_CLASSALLOC_core__VectorStepper, "core::VectorStepper" },
{ class_size, sizeof(core::VectorStepper), "" },
 { field_fix, 64, "(_Domain)" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__, "gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>" },
{ container_jump_table_index, 75, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFStretch_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFStretch_O>>>" },
{ container_jump_table_index, 76, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__, "gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>" },
{ container_jump_table_index, 77, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_core__AuxArgument_, "gctools::GCVector_moveable<core::AuxArgument>" },
{ container_jump_table_index, 78, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>" },
{ container_jump_table_index, 79, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_core__SequenceStepper__, "gctools::GCVector_moveable<gctools::tagged_pointer<core::SequenceStepper>>" },
{ container_jump_table_index, 80, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_, "gctools::GCVector_moveable<chem::EnergyAnchorRestraint>" },
{ container_jump_table_index, 81, "" },
{ container_kind, KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__0_, "gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,0>" },
{ container_jump_table_index, 82, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_core__KeywordArgument_, "gctools::GCVector_moveable<core::KeywordArgument>" },
{ container_jump_table_index, 83, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__, "gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>" },
{ container_jump_table_index, 84, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>" },
{ container_jump_table_index, 85, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>" },
{ container_jump_table_index, 86, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::StereoisomerAtoms_O>>>" },
{ container_jump_table_index, 87, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>" },
{ container_jump_table_index, 88, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>" },
{ container_jump_table_index, 89, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__, "gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>" },
{ container_jump_table_index, 90, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>" },
{ container_jump_table_index, 91, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SourceFileInfo_O__, "gctools::GCVector_moveable<gctools::smart_ptr<core::SourceFileInfo_O>>" },
{ container_jump_table_index, 92, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>" },
{ container_jump_table_index, 93, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___, "gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>" },
{ container_jump_table_index, 94, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_core__CacheRecord_, "gctools::GCVector_moveable<core::CacheRecord>" },
{ container_jump_table_index, 95, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_chem__ResidueOut_, "gctools::GCVector_moveable<chem::ResidueOut>" },
{ container_jump_table_index, 96, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>" },
{ container_jump_table_index, 97, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>" },
{ container_jump_table_index, 98, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__, "gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>" },
{ container_jump_table_index, 99, "" },
{ class_kind, KIND_LISPALLOC_asttooling__DerivableFrontendActionFactory, "asttooling::DerivableFrontendActionFactory" },
{ class_size, sizeof(asttooling::DerivableFrontendActionFactory), "" },
 { field_fix, 64, "(closure)" },
 { field_fix, 192, "(_Class)" },
 { field_fix, 256, "(_Slots _Vector _Contents)" },
 { field_fix, 320, "(_Sig)" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>" },
{ container_jump_table_index, 100, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>" },
{ container_jump_table_index, 101, "" },
{ class_kind, KIND_LISPALLOC_asttooling__DerivableMatchCallback, "asttooling::DerivableMatchCallback" },
{ class_size, sizeof(asttooling::DerivableMatchCallback), "" },
 { field_fix, 64, "(closure)" },
 { field_fix, 192, "(_Class)" },
 { field_fix, 256, "(_Slots _Vector _Contents)" },
 { field_fix, 320, "(_Sig)" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFPtor_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFPtor_O>>>" },
{ container_jump_table_index, 102, "" },
{ class_kind, KIND_LISPALLOC_asttooling__DerivableASTFrontendAction, "asttooling::DerivableASTFrontendAction" },
{ class_size, sizeof(asttooling::DerivableASTFrontendAction), "" },
 { field_fix, 64, "(closure)" },
 { field_fix, 192, "(_Class)" },
 { field_fix, 256, "(_Slots _Vector _Contents)" },
 { field_fix, 320, "(_Sig)" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneTypeRule_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::OneTypeRule_O>>" },
{ container_jump_table_index, 103, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>" },
{ container_jump_table_index, 104, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__Message_, "gctools::GCVector_moveable<asttooling::Message>" },
{ container_jump_table_index, 105, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>" },
{ container_jump_table_index, 106, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>" },
{ container_jump_table_index, 107, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>" },
{ container_jump_table_index, 108, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__, "gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>" },
{ container_jump_table_index, 109, "" },
{ class_kind, KIND_LISPALLOC_asttooling__DerivableSyntaxOnlyAction, "asttooling::DerivableSyntaxOnlyAction" },
{ class_size, sizeof(asttooling::DerivableSyntaxOnlyAction), "" },
 { field_fix, 64, "(closure)" },
 { field_fix, 192, "(_Class)" },
 { field_fix, 256, "(_Slots _Vector _Contents)" },
 { field_fix, 320, "(_Sig)" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneMonomer_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::OneMonomer_O>>" },
{ container_jump_table_index, 110, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFAngle_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFAngle_O>>>" },
{ container_jump_table_index, 111, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>" },
{ container_jump_table_index, 112, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>" },
{ container_jump_table_index, 113, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>" },
{ container_jump_table_index, 114, "" },
{ templated_class_kind, KIND_TEMPLATED_CLASSALLOC_core__BuiltinClosure, "core::BuiltinClosure" },
{ templated_class_jump_table_index, 115, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___, "gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>" },
{ container_jump_table_index, 116, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFAngle_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::FFAngle_O>>" },
{ container_jump_table_index, 117, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>" },
{ container_jump_table_index, 118, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>" },
{ container_jump_table_index, 119, "" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfo_O__, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfo_O>>" },
{ container_jump_table_index, 120, "" },
{ class_kind, KIND_CLASSALLOC_core__ConsStepper, "core::ConsStepper" },
{ class_size, sizeof(core::ConsStepper), "" },
 { field_fix, 64, "(_Cur)" },
{ container_kind, KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>" },
{ container_jump_table_index, 121, "" },

#endif // defined(GC_OBJ_SCAN_HELPERS)
#if defined(GC_OBJ_SCAN_TABLE)
static void* OBJ_SCAN_table[] = { 
  /* 229 */ &&obj_scan_KIND_TEMPLATED_LISPALLOC_core__WrappedPointer_O,
  /* 263 */ &&obj_scan_KIND_TEMPLATED_LISPALLOC_core__Iterator_O,
  /* 455 */ &&obj_scan_KIND_TEMPLATED_CLASSALLOC_core__Creator,
  /* 457 */ &&obj_scan_KIND_TEMPLATED_CLASSALLOC_clbind__ConstructorCreator,
  /* 459 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__,
  /* 460 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyStretch_,
  /* 461 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFStretch_O__,
  /* 462 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___,
  /* 464 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Stereoisomer_O___,
  /* 465 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyNonbond_,
  /* 466 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__RequiredArgument_,
  /* 467 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___,
  /* 469 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__,
  /* 470 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Str_O___,
  /* 471 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomInfo_,
  /* 472 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__RegMap__SymbolMatcherDescriptorPair_,
  /* 473 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___,
  /* 474 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__,
  /* 475 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFItor_O___,
  /* 476 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___,
  /* 477 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__,
  /* 479 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___,
  /* 480 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__,
  /* 481 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__,
  /* 482 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__FixedNonbondRestraint_,
  /* 483 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_asttooling__internal__MatcherDescriptor__,
  /* 484 */ &&obj_scan_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__2_,
  /* 485 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__,
  /* 486 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__,
  /* 487 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__,
  /* 488 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__,
  /* 489 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__,
  /* 490 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___,
  /* 491 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__ExceptionEntry_,
  /* 492 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__,
  /* 494 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__,
  /* 495 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__,
  /* 496 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyDihedral_,
  /* 497 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ParserValue_,
  /* 498 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__,
  /* 499 */ &&obj_scan_KIND_GCSTRING_gctools__GCString_moveable_char_,
  /* 500 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__RingClosingMate_O__,
  /* 501 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolClassPair_,
  /* 502 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__,
  /* 503 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__KeyEntry_,
  /* 504 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__,
  /* 505 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAtom_,
  /* 506 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFPtor_O__,
  /* 508 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___,
  /* 509 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyImproperRestraint_,
  /* 510 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__,
  /* 511 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomPdbRec_,
  /* 512 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFItor_O__,
  /* 514 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___,
  /* 515 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___,
  /* 516 */ &&obj_scan_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__1_,
  /* 517 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___,
  /* 518 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__,
  /* 519 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolStorage_,
  /* 520 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ErrorContent_,
  /* 521 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyChiralRestraint_,
  /* 522 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__,
  /* 523 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__,
  /* 525 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__,
  /* 526 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ContextFrame_,
  /* 527 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__,
  /* 529 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_,
  /* 530 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__OptionalArgument_,
  /* 531 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__,
  /* 532 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAngle_,
  /* 533 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__T_O_P_,
  /* 534 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__,
  /* 535 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__,
  /* 536 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__,
  /* 539 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__DynamicBinding_,
  /* 541 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__,
  /* 542 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFStretch_O___,
  /* 543 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__,
  /* 544 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__AuxArgument_,
  /* 545 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__,
  /* 546 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_core__SequenceStepper__,
  /* 547 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_,
  /* 548 */ &&obj_scan_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__0_,
  /* 549 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__KeywordArgument_,
  /* 550 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__,
  /* 551 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__,
  /* 552 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__,
  /* 553 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___,
  /* 554 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___,
  /* 555 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__,
  /* 556 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__,
  /* 557 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___,
  /* 558 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SourceFileInfo_O__,
  /* 559 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__,
  /* 560 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___,
  /* 561 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_core__CacheRecord_,
  /* 562 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_chem__ResidueOut_,
  /* 563 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___,
  /* 564 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__,
  /* 565 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__,
  /* 567 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___,
  /* 568 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___,
  /* 570 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFPtor_O___,
  /* 572 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneTypeRule_O__,
  /* 573 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__,
  /* 574 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__Message_,
  /* 575 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___,
  /* 576 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__,
  /* 577 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__,
  /* 578 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__,
  /* 580 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneMonomer_O__,
  /* 581 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFAngle_O___,
  /* 582 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__,
  /* 583 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___,
  /* 584 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__,
  /* 585 */ &&obj_scan_KIND_TEMPLATED_CLASSALLOC_core__BuiltinClosure,
  /* 586 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___,
  /* 587 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFAngle_O__,
  /* 588 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__,
  /* 589 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___,
  /* 590 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfo_O__,
  /* 592 */ &&obj_scan_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___,
   NULL
};
#endif // defined(GC_OBJ_SCAN_TABLE)
#if defined(GC_OBJ_FINALIZE)
obj_finalize_KIND_ROOTCLASSALLOC_clbind__detail__class_map:
{
    clbind::detail::class_map* obj_gc_safe = reinterpret_cast<clbind::detail::class_map*>(client);
    obj_gc_safe->~class_map();
    return;
}
obj_finalize_KIND_ROOTCLASSALLOC_core__Lisp_O:
{
    core::Lisp_O* obj_gc_safe = reinterpret_cast<core::Lisp_O*>(client);
    obj_gc_safe->~Lisp_O();
    return;
}
obj_finalize_KIND_BOOTSTRAP_core__T_O:
{
    core::T_O* obj_gc_safe = reinterpret_cast<core::T_O*>(client);
    obj_gc_safe->~T_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Regex_O:
{
    core::Regex_O* obj_gc_safe = reinterpret_cast<core::Regex_O*>(client);
    obj_gc_safe->~Regex_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__WeakHashTable_O:
{
    core::WeakHashTable_O* obj_gc_safe = reinterpret_cast<core::WeakHashTable_O*>(client);
    obj_gc_safe->~WeakHashTable_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__WeakKeyHashTable_O:
{
    core::WeakKeyHashTable_O* obj_gc_safe = reinterpret_cast<core::WeakKeyHashTable_O*>(client);
    obj_gc_safe->~WeakKeyHashTable_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Reader_O:
{
    core::Reader_O* obj_gc_safe = reinterpret_cast<core::Reader_O*>(client);
    obj_gc_safe->~Reader_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__CxxObject_O:
{
    core::CxxObject_O* obj_gc_safe = reinterpret_cast<core::CxxObject_O*>(client);
    obj_gc_safe->~CxxObject_O();
    return;
}
obj_finalize_KIND_LISPALLOC_units__Unit_O:
{
    units::Unit_O* obj_gc_safe = reinterpret_cast<units::Unit_O*>(client);
    obj_gc_safe->~Unit_O();
    return;
}
obj_finalize_KIND_LISPALLOC_units__NamedUnit_O:
{
    units::NamedUnit_O* obj_gc_safe = reinterpret_cast<units::NamedUnit_O*>(client);
    obj_gc_safe->~NamedUnit_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__AtomTable_O:
{
    chem::AtomTable_O* obj_gc_safe = reinterpret_cast<chem::AtomTable_O*>(client);
    obj_gc_safe->~AtomTable_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Command_O:
{
    chem::Command_O* obj_gc_safe = reinterpret_cast<chem::Command_O*>(client);
    obj_gc_safe->~Command_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__NVector_O:
{
    chem::NVector_O* obj_gc_safe = reinterpret_cast<chem::NVector_O*>(client);
    obj_gc_safe->~NVector_O();
    return;
}
obj_finalize_KIND_LISPALLOC_geom__OVector2_O:
{
    geom::OVector2_O* obj_gc_safe = reinterpret_cast<geom::OVector2_O*>(client);
    obj_gc_safe->~OVector2_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__MonomerContext_O:
{
    chem::MonomerContext_O* obj_gc_safe = reinterpret_cast<chem::MonomerContext_O*>(client);
    obj_gc_safe->~MonomerContext_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FFNonbondCrossTermTable_O:
{
    chem::FFNonbondCrossTermTable_O* obj_gc_safe = reinterpret_cast<chem::FFNonbondCrossTermTable_O*>(client);
    obj_gc_safe->~FFNonbondCrossTermTable_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__BondList_O:
{
    chem::BondList_O* obj_gc_safe = reinterpret_cast<chem::BondList_O*>(client);
    obj_gc_safe->~BondList_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__CDFragment_O:
{
    chem::CDFragment_O* obj_gc_safe = reinterpret_cast<chem::CDFragment_O*>(client);
    obj_gc_safe->~CDFragment_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ResidueList_O:
{
    chem::ResidueList_O* obj_gc_safe = reinterpret_cast<chem::ResidueList_O*>(client);
    obj_gc_safe->~ResidueList_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Structure_Old_ListEntry_O:
{
    chem::Structure_Old_ListEntry_O* obj_gc_safe = reinterpret_cast<chem::Structure_Old_ListEntry_O*>(client);
    obj_gc_safe->~Structure_Old_ListEntry_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ReadAmberParameters_O:
{
    chem::ReadAmberParameters_O* obj_gc_safe = reinterpret_cast<chem::ReadAmberParameters_O*>(client);
    obj_gc_safe->~ReadAmberParameters_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__AtomIndexer_O:
{
    chem::AtomIndexer_O* obj_gc_safe = reinterpret_cast<chem::AtomIndexer_O*>(client);
    obj_gc_safe->~AtomIndexer_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Structure_Old_List_O:
{
    chem::Structure_Old_List_O* obj_gc_safe = reinterpret_cast<chem::Structure_Old_List_O*>(client);
    obj_gc_safe->~Structure_Old_List_O();
    return;
}
obj_finalize_KIND_LISPALLOC_adapt__StringSet_O:
{
    adapt::StringSet_O* obj_gc_safe = reinterpret_cast<adapt::StringSet_O*>(client);
    obj_gc_safe->~StringSet_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ChemInfoMatch_O:
{
    chem::ChemInfoMatch_O* obj_gc_safe = reinterpret_cast<chem::ChemInfoMatch_O*>(client);
    obj_gc_safe->~ChemInfoMatch_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__SpanningLoop_O:
{
    chem::SpanningLoop_O* obj_gc_safe = reinterpret_cast<chem::SpanningLoop_O*>(client);
    obj_gc_safe->~SpanningLoop_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__CDBond_O:
{
    chem::CDBond_O* obj_gc_safe = reinterpret_cast<chem::CDBond_O*>(client);
    obj_gc_safe->~CDBond_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ForceField_O:
{
    chem::ForceField_O* obj_gc_safe = reinterpret_cast<chem::ForceField_O*>(client);
    obj_gc_safe->~ForceField_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__OneMonomer_O:
{
    chem::OneMonomer_O* obj_gc_safe = reinterpret_cast<chem::OneMonomer_O*>(client);
    obj_gc_safe->~OneMonomer_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ReportBase_O:
{
    chem::ReportBase_O* obj_gc_safe = reinterpret_cast<chem::ReportBase_O*>(client);
    obj_gc_safe->~ReportBase_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__MessageReport_O:
{
    chem::MessageReport_O* obj_gc_safe = reinterpret_cast<chem::MessageReport_O*>(client);
    obj_gc_safe->~MessageReport_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ForceMatchReport_O:
{
    chem::ForceMatchReport_O* obj_gc_safe = reinterpret_cast<chem::ForceMatchReport_O*>(client);
    obj_gc_safe->~ForceMatchReport_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__StepReport_O:
{
    chem::StepReport_O* obj_gc_safe = reinterpret_cast<chem::StepReport_O*>(client);
    obj_gc_safe->~StepReport_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__PathMessage_O:
{
    chem::PathMessage_O* obj_gc_safe = reinterpret_cast<chem::PathMessage_O*>(client);
    obj_gc_safe->~PathMessage_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FrameRecognizer_O:
{
    chem::FrameRecognizer_O* obj_gc_safe = reinterpret_cast<chem::FrameRecognizer_O*>(client);
    obj_gc_safe->~FrameRecognizer_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__StereoisomerAtom_O:
{
    chem::StereoisomerAtom_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerAtom_O*>(client);
    obj_gc_safe->~StereoisomerAtom_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__StereoisomerVirtualAtom_O:
{
    chem::StereoisomerVirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerVirtualAtom_O*>(client);
    obj_gc_safe->~StereoisomerVirtualAtom_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__MonomerCoordinates_O:
{
    chem::MonomerCoordinates_O* obj_gc_safe = reinterpret_cast<chem::MonomerCoordinates_O*>(client);
    obj_gc_safe->~MonomerCoordinates_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__SearchStatistics_O:
{
    chem::SearchStatistics_O* obj_gc_safe = reinterpret_cast<chem::SearchStatistics_O*>(client);
    obj_gc_safe->~SearchStatistics_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__AtomId_O:
{
    chem::AtomId_O* obj_gc_safe = reinterpret_cast<chem::AtomId_O*>(client);
    obj_gc_safe->~AtomId_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__TypeAssignmentRules_O:
{
    chem::TypeAssignmentRules_O* obj_gc_safe = reinterpret_cast<chem::TypeAssignmentRules_O*>(client);
    obj_gc_safe->~TypeAssignmentRules_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__WildElementDict_O:
{
    chem::WildElementDict_O* obj_gc_safe = reinterpret_cast<chem::WildElementDict_O*>(client);
    obj_gc_safe->~WildElementDict_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__SpecificContext_O:
{
    chem::SpecificContext_O* obj_gc_safe = reinterpret_cast<chem::SpecificContext_O*>(client);
    obj_gc_safe->~SpecificContext_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__CDText_O:
{
    chem::CDText_O* obj_gc_safe = reinterpret_cast<chem::CDText_O*>(client);
    obj_gc_safe->~CDText_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__PdbMonomerConnectivity_O:
{
    chem::PdbMonomerConnectivity_O* obj_gc_safe = reinterpret_cast<chem::PdbMonomerConnectivity_O*>(client);
    obj_gc_safe->~PdbMonomerConnectivity_O();
    return;
}
obj_finalize_KIND_LISPALLOC_units__Quantity_O:
{
    units::Quantity_O* obj_gc_safe = reinterpret_cast<units::Quantity_O*>(client);
    obj_gc_safe->~Quantity_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Plug_O:
{
    chem::Plug_O* obj_gc_safe = reinterpret_cast<chem::Plug_O*>(client);
    obj_gc_safe->~Plug_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__PlugWithMates_O:
{
    chem::PlugWithMates_O* obj_gc_safe = reinterpret_cast<chem::PlugWithMates_O*>(client);
    obj_gc_safe->~PlugWithMates_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__OutPlug_O:
{
    chem::OutPlug_O* obj_gc_safe = reinterpret_cast<chem::OutPlug_O*>(client);
    obj_gc_safe->~OutPlug_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__RingClosingPlug_O:
{
    chem::RingClosingPlug_O* obj_gc_safe = reinterpret_cast<chem::RingClosingPlug_O*>(client);
    obj_gc_safe->~RingClosingPlug_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__InPlug_O:
{
    chem::InPlug_O* obj_gc_safe = reinterpret_cast<chem::InPlug_O*>(client);
    obj_gc_safe->~InPlug_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__JumpPlug_O:
{
    chem::JumpPlug_O* obj_gc_safe = reinterpret_cast<chem::JumpPlug_O*>(client);
    obj_gc_safe->~JumpPlug_O();
    return;
}
obj_finalize_KIND_LISPALLOC_geom__BoundingBox_O:
{
    geom::BoundingBox_O* obj_gc_safe = reinterpret_cast<geom::BoundingBox_O*>(client);
    obj_gc_safe->~BoundingBox_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__MinimizerLog_O:
{
    chem::MinimizerLog_O* obj_gc_safe = reinterpret_cast<chem::MinimizerLog_O*>(client);
    obj_gc_safe->~MinimizerLog_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ChemInfo_O:
{
    chem::ChemInfo_O* obj_gc_safe = reinterpret_cast<chem::ChemInfo_O*>(client);
    obj_gc_safe->~ChemInfo_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ZMatrixEntry_O:
{
    chem::ZMatrixEntry_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixEntry_O*>(client);
    obj_gc_safe->~ZMatrixEntry_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__StereoInformation_O:
{
    chem::StereoInformation_O* obj_gc_safe = reinterpret_cast<chem::StereoInformation_O*>(client);
    obj_gc_safe->~StereoInformation_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__MacroModelFile_O:
{
    chem::MacroModelFile_O* obj_gc_safe = reinterpret_cast<chem::MacroModelFile_O*>(client);
    obj_gc_safe->~MacroModelFile_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__PdbWriter_O:
{
    chem::PdbWriter_O* obj_gc_safe = reinterpret_cast<chem::PdbWriter_O*>(client);
    obj_gc_safe->~PdbWriter_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ChemDraw_O:
{
    chem::ChemDraw_O* obj_gc_safe = reinterpret_cast<chem::ChemDraw_O*>(client);
    obj_gc_safe->~ChemDraw_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__AGEdge_O:
{
    chem::AGEdge_O* obj_gc_safe = reinterpret_cast<chem::AGEdge_O*>(client);
    obj_gc_safe->~AGEdge_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ConformationExplorerMatch_O:
{
    chem::ConformationExplorerMatch_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerMatch_O*>(client);
    obj_gc_safe->~ConformationExplorerMatch_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ImproperTorsion_O:
{
    chem::ImproperTorsion_O* obj_gc_safe = reinterpret_cast<chem::ImproperTorsion_O*>(client);
    obj_gc_safe->~ImproperTorsion_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ConstitutionAtoms_O:
{
    chem::ConstitutionAtoms_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionAtoms_O*>(client);
    obj_gc_safe->~ConstitutionAtoms_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__CoordinateSystem_O:
{
    chem::CoordinateSystem_O* obj_gc_safe = reinterpret_cast<chem::CoordinateSystem_O*>(client);
    obj_gc_safe->~CoordinateSystem_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ConformationCollectionEntry_O:
{
    chem::ConformationCollectionEntry_O* obj_gc_safe = reinterpret_cast<chem::ConformationCollectionEntry_O*>(client);
    obj_gc_safe->~ConformationCollectionEntry_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Restraint_O:
{
    chem::Restraint_O* obj_gc_safe = reinterpret_cast<chem::Restraint_O*>(client);
    obj_gc_safe->~Restraint_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__RestraintAngle_O:
{
    chem::RestraintAngle_O* obj_gc_safe = reinterpret_cast<chem::RestraintAngle_O*>(client);
    obj_gc_safe->~RestraintAngle_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__RestraintAnchor_O:
{
    chem::RestraintAnchor_O* obj_gc_safe = reinterpret_cast<chem::RestraintAnchor_O*>(client);
    obj_gc_safe->~RestraintAnchor_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__RestraintFixedNonbond_O:
{
    chem::RestraintFixedNonbond_O* obj_gc_safe = reinterpret_cast<chem::RestraintFixedNonbond_O*>(client);
    obj_gc_safe->~RestraintFixedNonbond_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__RestraintChiral_O:
{
    chem::RestraintChiral_O* obj_gc_safe = reinterpret_cast<chem::RestraintChiral_O*>(client);
    obj_gc_safe->~RestraintChiral_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__RestraintDihedral_O:
{
    chem::RestraintDihedral_O* obj_gc_safe = reinterpret_cast<chem::RestraintDihedral_O*>(client);
    obj_gc_safe->~RestraintDihedral_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__RestraintDistance_O:
{
    chem::RestraintDistance_O* obj_gc_safe = reinterpret_cast<chem::RestraintDistance_O*>(client);
    obj_gc_safe->~RestraintDistance_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ChemInfoNode_O:
{
    chem::ChemInfoNode_O* obj_gc_safe = reinterpret_cast<chem::ChemInfoNode_O*>(client);
    obj_gc_safe->~ChemInfoNode_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__RootMatchNode_O:
{
    chem::RootMatchNode_O* obj_gc_safe = reinterpret_cast<chem::RootMatchNode_O*>(client);
    obj_gc_safe->~RootMatchNode_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__AfterMatchBondTest_O:
{
    chem::AfterMatchBondTest_O* obj_gc_safe = reinterpret_cast<chem::AfterMatchBondTest_O*>(client);
    obj_gc_safe->~AfterMatchBondTest_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__BondMatchNode_O:
{
    chem::BondMatchNode_O* obj_gc_safe = reinterpret_cast<chem::BondMatchNode_O*>(client);
    obj_gc_safe->~BondMatchNode_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__AtomOrBondMatchNode_O:
{
    chem::AtomOrBondMatchNode_O* obj_gc_safe = reinterpret_cast<chem::AtomOrBondMatchNode_O*>(client);
    obj_gc_safe->~AtomOrBondMatchNode_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__TagSet_O:
{
    chem::TagSet_O* obj_gc_safe = reinterpret_cast<chem::TagSet_O*>(client);
    obj_gc_safe->~TagSet_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Root_O:
{
    chem::Root_O* obj_gc_safe = reinterpret_cast<chem::Root_O*>(client);
    obj_gc_safe->~Root_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__SmartsRoot_O:
{
    chem::SmartsRoot_O* obj_gc_safe = reinterpret_cast<chem::SmartsRoot_O*>(client);
    obj_gc_safe->~SmartsRoot_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__AntechamberRoot_O:
{
    chem::AntechamberRoot_O* obj_gc_safe = reinterpret_cast<chem::AntechamberRoot_O*>(client);
    obj_gc_safe->~AntechamberRoot_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ResidueTest_O:
{
    chem::ResidueTest_O* obj_gc_safe = reinterpret_cast<chem::ResidueTest_O*>(client);
    obj_gc_safe->~ResidueTest_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__AntechamberFocusAtomMatch_O:
{
    chem::AntechamberFocusAtomMatch_O* obj_gc_safe = reinterpret_cast<chem::AntechamberFocusAtomMatch_O*>(client);
    obj_gc_safe->~AntechamberFocusAtomMatch_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__RingTest_O:
{
    chem::RingTest_O* obj_gc_safe = reinterpret_cast<chem::RingTest_O*>(client);
    obj_gc_safe->~RingTest_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__AtomTest_O:
{
    chem::AtomTest_O* obj_gc_safe = reinterpret_cast<chem::AtomTest_O*>(client);
    obj_gc_safe->~AtomTest_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Logical_O:
{
    chem::Logical_O* obj_gc_safe = reinterpret_cast<chem::Logical_O*>(client);
    obj_gc_safe->~Logical_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__BondTest_O:
{
    chem::BondTest_O* obj_gc_safe = reinterpret_cast<chem::BondTest_O*>(client);
    obj_gc_safe->~BondTest_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__AntechamberBondTest_O:
{
    chem::AntechamberBondTest_O* obj_gc_safe = reinterpret_cast<chem::AntechamberBondTest_O*>(client);
    obj_gc_safe->~AntechamberBondTest_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__BondListMatchNode_O:
{
    chem::BondListMatchNode_O* obj_gc_safe = reinterpret_cast<chem::BondListMatchNode_O*>(client);
    obj_gc_safe->~BondListMatchNode_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Branch_O:
{
    chem::Branch_O* obj_gc_safe = reinterpret_cast<chem::Branch_O*>(client);
    obj_gc_safe->~Branch_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Chain_O:
{
    chem::Chain_O* obj_gc_safe = reinterpret_cast<chem::Chain_O*>(client);
    obj_gc_safe->~Chain_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Minimizer_O:
{
    chem::Minimizer_O* obj_gc_safe = reinterpret_cast<chem::Minimizer_O*>(client);
    obj_gc_safe->~Minimizer_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Oligomer_O:
{
    chem::Oligomer_O* obj_gc_safe = reinterpret_cast<chem::Oligomer_O*>(client);
    obj_gc_safe->~Oligomer_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ConstitutionBond_O:
{
    chem::ConstitutionBond_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionBond_O*>(client);
    obj_gc_safe->~ConstitutionBond_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Entity_O:
{
    chem::Entity_O* obj_gc_safe = reinterpret_cast<chem::Entity_O*>(client);
    obj_gc_safe->~Entity_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__EntityNameSetBase_O:
{
    chem::EntityNameSetBase_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSetBase_O*>(client);
    obj_gc_safe->~EntityNameSetBase_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__EntityNameSetWithCap_O:
{
    chem::EntityNameSetWithCap_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSetWithCap_O*>(client);
    obj_gc_safe->~EntityNameSetWithCap_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__RingClosingMate_O:
{
    chem::RingClosingMate_O* obj_gc_safe = reinterpret_cast<chem::RingClosingMate_O*>(client);
    obj_gc_safe->~RingClosingMate_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Mate_O:
{
    chem::Mate_O* obj_gc_safe = reinterpret_cast<chem::Mate_O*>(client);
    obj_gc_safe->~Mate_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__EntityNameSet_O:
{
    chem::EntityNameSet_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSet_O*>(client);
    obj_gc_safe->~EntityNameSet_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__RepresentedEntityNameSet_O:
{
    chem::RepresentedEntityNameSet_O* obj_gc_safe = reinterpret_cast<chem::RepresentedEntityNameSet_O*>(client);
    obj_gc_safe->~RepresentedEntityNameSet_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__MonomerPack_O:
{
    chem::MonomerPack_O* obj_gc_safe = reinterpret_cast<chem::MonomerPack_O*>(client);
    obj_gc_safe->~MonomerPack_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Monomer_O:
{
    chem::Monomer_O* obj_gc_safe = reinterpret_cast<chem::Monomer_O*>(client);
    obj_gc_safe->~Monomer_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__MultiMonomer_O:
{
    chem::MultiMonomer_O* obj_gc_safe = reinterpret_cast<chem::MultiMonomer_O*>(client);
    obj_gc_safe->~MultiMonomer_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Stereoisomer_O:
{
    chem::Stereoisomer_O* obj_gc_safe = reinterpret_cast<chem::Stereoisomer_O*>(client);
    obj_gc_safe->~Stereoisomer_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Constitution_O:
{
    chem::Constitution_O* obj_gc_safe = reinterpret_cast<chem::Constitution_O*>(client);
    obj_gc_safe->~Constitution_O();
    return;
}
obj_finalize_KIND_LISPALLOC_units__Dimension_O:
{
    units::Dimension_O* obj_gc_safe = reinterpret_cast<units::Dimension_O*>(client);
    obj_gc_safe->~Dimension_O();
    return;
}
obj_finalize_KIND_LISPALLOC_geom__OMatrix_O:
{
    geom::OMatrix_O* obj_gc_safe = reinterpret_cast<geom::OMatrix_O*>(client);
    obj_gc_safe->~OMatrix_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__StereoisomerAtoms_O:
{
    chem::StereoisomerAtoms_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerAtoms_O*>(client);
    obj_gc_safe->~StereoisomerAtoms_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ConformationExplorerEntry_O:
{
    chem::ConformationExplorerEntry_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerEntry_O*>(client);
    obj_gc_safe->~ConformationExplorerEntry_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__AtomReferenceBase_O:
{
    chem::AtomReferenceBase_O* obj_gc_safe = reinterpret_cast<chem::AtomReferenceBase_O*>(client);
    obj_gc_safe->~AtomReferenceBase_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__AtomReference_O:
{
    chem::AtomReference_O* obj_gc_safe = reinterpret_cast<chem::AtomReference_O*>(client);
    obj_gc_safe->~AtomReference_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__CDNode_O:
{
    chem::CDNode_O* obj_gc_safe = reinterpret_cast<chem::CDNode_O*>(client);
    obj_gc_safe->~CDNode_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__TrajectoryFrame_O:
{
    chem::TrajectoryFrame_O* obj_gc_safe = reinterpret_cast<chem::TrajectoryFrame_O*>(client);
    obj_gc_safe->~TrajectoryFrame_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__EnergyComponent_O:
{
    chem::EnergyComponent_O* obj_gc_safe = reinterpret_cast<chem::EnergyComponent_O*>(client);
    obj_gc_safe->~EnergyComponent_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__EnergyChiralRestraint_O:
{
    chem::EnergyChiralRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyChiralRestraint_O*>(client);
    obj_gc_safe->~EnergyChiralRestraint_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__EnergyImproperRestraint_O:
{
    chem::EnergyImproperRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyImproperRestraint_O*>(client);
    obj_gc_safe->~EnergyImproperRestraint_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__EnergyAnchorRestraint_O:
{
    chem::EnergyAnchorRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyAnchorRestraint_O*>(client);
    obj_gc_safe->~EnergyAnchorRestraint_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__EnergyAngle_O:
{
    chem::EnergyAngle_O* obj_gc_safe = reinterpret_cast<chem::EnergyAngle_O*>(client);
    obj_gc_safe->~EnergyAngle_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__EnergyDihedral_O:
{
    chem::EnergyDihedral_O* obj_gc_safe = reinterpret_cast<chem::EnergyDihedral_O*>(client);
    obj_gc_safe->~EnergyDihedral_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__EnergyStretch_O:
{
    chem::EnergyStretch_O* obj_gc_safe = reinterpret_cast<chem::EnergyStretch_O*>(client);
    obj_gc_safe->~EnergyStretch_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__EnergyNonbond_O:
{
    chem::EnergyNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergyNonbond_O*>(client);
    obj_gc_safe->~EnergyNonbond_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__EnergyFixedNonbondRestraint_O:
{
    chem::EnergyFixedNonbondRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyFixedNonbondRestraint_O*>(client);
    obj_gc_safe->~EnergyFixedNonbondRestraint_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__PdbMonomerDatabase_O:
{
    chem::PdbMonomerDatabase_O* obj_gc_safe = reinterpret_cast<chem::PdbMonomerDatabase_O*>(client);
    obj_gc_safe->~PdbMonomerDatabase_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Coupling_O:
{
    chem::Coupling_O* obj_gc_safe = reinterpret_cast<chem::Coupling_O*>(client);
    obj_gc_safe->~Coupling_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__DirectionalCoupling_O:
{
    chem::DirectionalCoupling_O* obj_gc_safe = reinterpret_cast<chem::DirectionalCoupling_O*>(client);
    obj_gc_safe->~DirectionalCoupling_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__RingCoupling_O:
{
    chem::RingCoupling_O* obj_gc_safe = reinterpret_cast<chem::RingCoupling_O*>(client);
    obj_gc_safe->~RingCoupling_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__PdbReader_O:
{
    chem::PdbReader_O* obj_gc_safe = reinterpret_cast<chem::PdbReader_O*>(client);
    obj_gc_safe->~PdbReader_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ZMatrixInternal_O:
{
    chem::ZMatrixInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixInternal_O*>(client);
    obj_gc_safe->~ZMatrixInternal_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ZMatrixBondInternal_O:
{
    chem::ZMatrixBondInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixBondInternal_O*>(client);
    obj_gc_safe->~ZMatrixBondInternal_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ZMatrixAngleInternal_O:
{
    chem::ZMatrixAngleInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixAngleInternal_O*>(client);
    obj_gc_safe->~ZMatrixAngleInternal_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ZMatrixDihedralInternal_O:
{
    chem::ZMatrixDihedralInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixDihedralInternal_O*>(client);
    obj_gc_safe->~ZMatrixDihedralInternal_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__CipPrioritizer_O:
{
    chem::CipPrioritizer_O* obj_gc_safe = reinterpret_cast<chem::CipPrioritizer_O*>(client);
    obj_gc_safe->~CipPrioritizer_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Matter_O:
{
    chem::Matter_O* obj_gc_safe = reinterpret_cast<chem::Matter_O*>(client);
    obj_gc_safe->~Matter_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Residue_O:
{
    chem::Residue_O* obj_gc_safe = reinterpret_cast<chem::Residue_O*>(client);
    obj_gc_safe->~Residue_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Aggregate_O:
{
    chem::Aggregate_O* obj_gc_safe = reinterpret_cast<chem::Aggregate_O*>(client);
    obj_gc_safe->~Aggregate_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Atom_O:
{
    chem::Atom_O* obj_gc_safe = reinterpret_cast<chem::Atom_O*>(client);
    obj_gc_safe->~Atom_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__VirtualAtom_O:
{
    chem::VirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::VirtualAtom_O*>(client);
    obj_gc_safe->~VirtualAtom_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Molecule_O:
{
    chem::Molecule_O* obj_gc_safe = reinterpret_cast<chem::Molecule_O*>(client);
    obj_gc_safe->~Molecule_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Bond_O:
{
    chem::Bond_O* obj_gc_safe = reinterpret_cast<chem::Bond_O*>(client);
    obj_gc_safe->~Bond_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__AGVertex_O:
{
    chem::AGVertex_O* obj_gc_safe = reinterpret_cast<chem::AGVertex_O*>(client);
    obj_gc_safe->~AGVertex_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Alias_O:
{
    chem::Alias_O* obj_gc_safe = reinterpret_cast<chem::Alias_O*>(client);
    obj_gc_safe->~Alias_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__CandoDatabase_O:
{
    chem::CandoDatabase_O* obj_gc_safe = reinterpret_cast<chem::CandoDatabase_O*>(client);
    obj_gc_safe->~CandoDatabase_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ProperTorsion_O:
{
    chem::ProperTorsion_O* obj_gc_safe = reinterpret_cast<chem::ProperTorsion_O*>(client);
    obj_gc_safe->~ProperTorsion_O();
    return;
}
obj_finalize_KIND_LISPALLOC_geom__OVector3_O:
{
    geom::OVector3_O* obj_gc_safe = reinterpret_cast<geom::OVector3_O*>(client);
    obj_gc_safe->~OVector3_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ComplexRestraint_O:
{
    chem::ComplexRestraint_O* obj_gc_safe = reinterpret_cast<chem::ComplexRestraint_O*>(client);
    obj_gc_safe->~ComplexRestraint_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__RestrainedExoCyclicAtom_O:
{
    chem::RestrainedExoCyclicAtom_O* obj_gc_safe = reinterpret_cast<chem::RestrainedExoCyclicAtom_O*>(client);
    obj_gc_safe->~RestrainedExoCyclicAtom_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__RestrainedPiBond_O:
{
    chem::RestrainedPiBond_O* obj_gc_safe = reinterpret_cast<chem::RestrainedPiBond_O*>(client);
    obj_gc_safe->~RestrainedPiBond_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__EnergyFunction_O:
{
    chem::EnergyFunction_O* obj_gc_safe = reinterpret_cast<chem::EnergyFunction_O*>(client);
    obj_gc_safe->~EnergyFunction_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ZMatrix_O:
{
    chem::ZMatrix_O* obj_gc_safe = reinterpret_cast<chem::ZMatrix_O*>(client);
    obj_gc_safe->~ZMatrix_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__StatusTracker_O:
{
    chem::StatusTracker_O* obj_gc_safe = reinterpret_cast<chem::StatusTracker_O*>(client);
    obj_gc_safe->~StatusTracker_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__OneTypeRule_O:
{
    chem::OneTypeRule_O* obj_gc_safe = reinterpret_cast<chem::OneTypeRule_O*>(client);
    obj_gc_safe->~OneTypeRule_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__OligomerPart_Base_O:
{
    chem::OligomerPart_Base_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Base_O*>(client);
    obj_gc_safe->~OligomerPart_Base_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__OligomerPart_Monomer_O:
{
    chem::OligomerPart_Monomer_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Monomer_O*>(client);
    obj_gc_safe->~OligomerPart_Monomer_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__OligomerPart_Link_O:
{
    chem::OligomerPart_Link_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Link_O*>(client);
    obj_gc_safe->~OligomerPart_Link_O();
    return;
}
obj_finalize_KIND_LISPALLOC_adapt__SymbolList_O:
{
    adapt::SymbolList_O* obj_gc_safe = reinterpret_cast<adapt::SymbolList_O*>(client);
    obj_gc_safe->~SymbolList_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ConformationCollection_O:
{
    chem::ConformationCollection_O* obj_gc_safe = reinterpret_cast<chem::ConformationCollection_O*>(client);
    obj_gc_safe->~ConformationCollection_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__SuperposableConformationCollection_O:
{
    chem::SuperposableConformationCollection_O* obj_gc_safe = reinterpret_cast<chem::SuperposableConformationCollection_O*>(client);
    obj_gc_safe->~SuperposableConformationCollection_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__InfoDb_O:
{
    chem::InfoDb_O* obj_gc_safe = reinterpret_cast<chem::InfoDb_O*>(client);
    obj_gc_safe->~InfoDb_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ConformationExplorer_O:
{
    chem::ConformationExplorer_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorer_O*>(client);
    obj_gc_safe->~ConformationExplorer_O();
    return;
}
obj_finalize_KIND_LISPALLOC_geom__Color_O:
{
    geom::Color_O* obj_gc_safe = reinterpret_cast<geom::Color_O*>(client);
    obj_gc_safe->~Color_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ConstitutionAtom_O:
{
    chem::ConstitutionAtom_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionAtom_O*>(client);
    obj_gc_safe->~ConstitutionAtom_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ConstitutionVirtualAtom_O:
{
    chem::ConstitutionVirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionVirtualAtom_O*>(client);
    obj_gc_safe->~ConstitutionVirtualAtom_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__NumericalFunction_O:
{
    chem::NumericalFunction_O* obj_gc_safe = reinterpret_cast<chem::NumericalFunction_O*>(client);
    obj_gc_safe->~NumericalFunction_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__AbstractLargeSquareMatrix_O:
{
    chem::AbstractLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::AbstractLargeSquareMatrix_O*>(client);
    obj_gc_safe->~AbstractLargeSquareMatrix_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__SparseLargeSquareMatrix_O:
{
    chem::SparseLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::SparseLargeSquareMatrix_O*>(client);
    obj_gc_safe->~SparseLargeSquareMatrix_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FullLargeSquareMatrix_O:
{
    chem::FullLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::FullLargeSquareMatrix_O*>(client);
    obj_gc_safe->~FullLargeSquareMatrix_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__TwisterDriver_O:
{
    chem::TwisterDriver_O* obj_gc_safe = reinterpret_cast<chem::TwisterDriver_O*>(client);
    obj_gc_safe->~TwisterDriver_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__VirtualSphere_O:
{
    chem::VirtualSphere_O* obj_gc_safe = reinterpret_cast<chem::VirtualSphere_O*>(client);
    obj_gc_safe->~VirtualSphere_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Rotamer_O:
{
    chem::Rotamer_O* obj_gc_safe = reinterpret_cast<chem::Rotamer_O*>(client);
    obj_gc_safe->~Rotamer_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__StereoConfiguration_O:
{
    chem::StereoConfiguration_O* obj_gc_safe = reinterpret_cast<chem::StereoConfiguration_O*>(client);
    obj_gc_safe->~StereoConfiguration_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Topology_O:
{
    chem::Topology_O* obj_gc_safe = reinterpret_cast<chem::Topology_O*>(client);
    obj_gc_safe->~Topology_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Trajectory_O:
{
    chem::Trajectory_O* obj_gc_safe = reinterpret_cast<chem::Trajectory_O*>(client);
    obj_gc_safe->~Trajectory_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__MapOfMonomerNamesToAtomIndexers_O:
{
    chem::MapOfMonomerNamesToAtomIndexers_O* obj_gc_safe = reinterpret_cast<chem::MapOfMonomerNamesToAtomIndexers_O*>(client);
    obj_gc_safe->~MapOfMonomerNamesToAtomIndexers_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__RingFinder_O:
{
    chem::RingFinder_O* obj_gc_safe = reinterpret_cast<chem::RingFinder_O*>(client);
    obj_gc_safe->~RingFinder_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Twister_O:
{
    chem::Twister_O* obj_gc_safe = reinterpret_cast<chem::Twister_O*>(client);
    obj_gc_safe->~Twister_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FFBaseDb_O:
{
    chem::FFBaseDb_O* obj_gc_safe = reinterpret_cast<chem::FFBaseDb_O*>(client);
    obj_gc_safe->~FFBaseDb_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FFStretchDb_O:
{
    chem::FFStretchDb_O* obj_gc_safe = reinterpret_cast<chem::FFStretchDb_O*>(client);
    obj_gc_safe->~FFStretchDb_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FFTypesDb_O:
{
    chem::FFTypesDb_O* obj_gc_safe = reinterpret_cast<chem::FFTypesDb_O*>(client);
    obj_gc_safe->~FFTypesDb_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FFPtorDb_O:
{
    chem::FFPtorDb_O* obj_gc_safe = reinterpret_cast<chem::FFPtorDb_O*>(client);
    obj_gc_safe->~FFPtorDb_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FFItorDb_O:
{
    chem::FFItorDb_O* obj_gc_safe = reinterpret_cast<chem::FFItorDb_O*>(client);
    obj_gc_safe->~FFItorDb_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FFAngleDb_O:
{
    chem::FFAngleDb_O* obj_gc_safe = reinterpret_cast<chem::FFAngleDb_O*>(client);
    obj_gc_safe->~FFAngleDb_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FFNonbondDb_O:
{
    chem::FFNonbondDb_O* obj_gc_safe = reinterpret_cast<chem::FFNonbondDb_O*>(client);
    obj_gc_safe->~FFNonbondDb_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FFVdwDb_O:
{
    chem::FFVdwDb_O* obj_gc_safe = reinterpret_cast<chem::FFVdwDb_O*>(client);
    obj_gc_safe->~FFVdwDb_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__SuperposeEngine_O:
{
    chem::SuperposeEngine_O* obj_gc_safe = reinterpret_cast<chem::SuperposeEngine_O*>(client);
    obj_gc_safe->~SuperposeEngine_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__SuperposeSelectedAtoms_O:
{
    chem::SuperposeSelectedAtoms_O* obj_gc_safe = reinterpret_cast<chem::SuperposeSelectedAtoms_O*>(client);
    obj_gc_safe->~SuperposeSelectedAtoms_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__CalculatePosition_O:
{
    chem::CalculatePosition_O* obj_gc_safe = reinterpret_cast<chem::CalculatePosition_O*>(client);
    obj_gc_safe->~CalculatePosition_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__CalculatePositionUsingInternals_O:
{
    chem::CalculatePositionUsingInternals_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionUsingInternals_O*>(client);
    obj_gc_safe->~CalculatePositionUsingInternals_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__CalculatePositionRelativeToOrigin_O:
{
    chem::CalculatePositionRelativeToOrigin_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionRelativeToOrigin_O*>(client);
    obj_gc_safe->~CalculatePositionRelativeToOrigin_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__CalculatePositionAlongBond_O:
{
    chem::CalculatePositionAlongBond_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionAlongBond_O*>(client);
    obj_gc_safe->~CalculatePositionAlongBond_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FFParameter_O:
{
    chem::FFParameter_O* obj_gc_safe = reinterpret_cast<chem::FFParameter_O*>(client);
    obj_gc_safe->~FFParameter_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FFStretch_O:
{
    chem::FFStretch_O* obj_gc_safe = reinterpret_cast<chem::FFStretch_O*>(client);
    obj_gc_safe->~FFStretch_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FFAngle_O:
{
    chem::FFAngle_O* obj_gc_safe = reinterpret_cast<chem::FFAngle_O*>(client);
    obj_gc_safe->~FFAngle_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FFVdw_O:
{
    chem::FFVdw_O* obj_gc_safe = reinterpret_cast<chem::FFVdw_O*>(client);
    obj_gc_safe->~FFVdw_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FFNonbond_O:
{
    chem::FFNonbond_O* obj_gc_safe = reinterpret_cast<chem::FFNonbond_O*>(client);
    obj_gc_safe->~FFNonbond_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FFPtor_O:
{
    chem::FFPtor_O* obj_gc_safe = reinterpret_cast<chem::FFPtor_O*>(client);
    obj_gc_safe->~FFPtor_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__FFItor_O:
{
    chem::FFItor_O* obj_gc_safe = reinterpret_cast<chem::FFItor_O*>(client);
    obj_gc_safe->~FFItor_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__SpecificContextSet_O:
{
    chem::SpecificContextSet_O* obj_gc_safe = reinterpret_cast<chem::SpecificContextSet_O*>(client);
    obj_gc_safe->~SpecificContextSet_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__ConformationExplorerEntryStage_O:
{
    chem::ConformationExplorerEntryStage_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerEntryStage_O*>(client);
    obj_gc_safe->~ConformationExplorerEntryStage_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__Angle_O:
{
    chem::Angle_O* obj_gc_safe = reinterpret_cast<chem::Angle_O*>(client);
    obj_gc_safe->~Angle_O();
    return;
}
obj_finalize_KIND_LISPALLOC_adapt__QDomNode_O:
{
    adapt::QDomNode_O* obj_gc_safe = reinterpret_cast<adapt::QDomNode_O*>(client);
    obj_gc_safe->~QDomNode_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__StructureComparer_O:
{
    chem::StructureComparer_O* obj_gc_safe = reinterpret_cast<chem::StructureComparer_O*>(client);
    obj_gc_safe->~StructureComparer_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__AtomIdToAtomMap_O:
{
    chem::AtomIdToAtomMap_O* obj_gc_safe = reinterpret_cast<chem::AtomIdToAtomMap_O*>(client);
    obj_gc_safe->~AtomIdToAtomMap_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Array_O:
{
    core::Array_O* obj_gc_safe = reinterpret_cast<core::Array_O*>(client);
    obj_gc_safe->~Array_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__ArrayDisplaced_O:
{
    core::ArrayDisplaced_O* obj_gc_safe = reinterpret_cast<core::ArrayDisplaced_O*>(client);
    obj_gc_safe->~ArrayDisplaced_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__ArrayObjects_O:
{
    core::ArrayObjects_O* obj_gc_safe = reinterpret_cast<core::ArrayObjects_O*>(client);
    obj_gc_safe->~ArrayObjects_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Vector_O:
{
    core::Vector_O* obj_gc_safe = reinterpret_cast<core::Vector_O*>(client);
    obj_gc_safe->~Vector_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__VectorDisplaced_O:
{
    core::VectorDisplaced_O* obj_gc_safe = reinterpret_cast<core::VectorDisplaced_O*>(client);
    obj_gc_safe->~VectorDisplaced_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__VectorObjects_O:
{
    core::VectorObjects_O* obj_gc_safe = reinterpret_cast<core::VectorObjects_O*>(client);
    obj_gc_safe->~VectorObjects_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__VectorObjectsWithFillPtr_O:
{
    core::VectorObjectsWithFillPtr_O* obj_gc_safe = reinterpret_cast<core::VectorObjectsWithFillPtr_O*>(client);
    obj_gc_safe->~VectorObjectsWithFillPtr_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__BitVector_O:
{
    core::BitVector_O* obj_gc_safe = reinterpret_cast<core::BitVector_O*>(client);
    obj_gc_safe->~BitVector_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__BitVectorWithFillPtr_O:
{
    core::BitVectorWithFillPtr_O* obj_gc_safe = reinterpret_cast<core::BitVectorWithFillPtr_O*>(client);
    obj_gc_safe->~BitVectorWithFillPtr_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SimpleBitVector_O:
{
    core::SimpleBitVector_O* obj_gc_safe = reinterpret_cast<core::SimpleBitVector_O*>(client);
    obj_gc_safe->~SimpleBitVector_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__String_O:
{
    core::String_O* obj_gc_safe = reinterpret_cast<core::String_O*>(client);
    obj_gc_safe->~String_O();
    return;
}
obj_finalize_KIND_BOOTSTRAP_core__Str_O:
{
    core::Str_O* obj_gc_safe = reinterpret_cast<core::Str_O*>(client);
    obj_gc_safe->~Str_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__StrWithFillPtr_O:
{
    core::StrWithFillPtr_O* obj_gc_safe = reinterpret_cast<core::StrWithFillPtr_O*>(client);
    obj_gc_safe->~StrWithFillPtr_O();
    return;
}
obj_finalize_KIND_LISPALLOC_geom__CoordinateArray_O:
{
    geom::CoordinateArray_O* obj_gc_safe = reinterpret_cast<geom::CoordinateArray_O*>(client);
    obj_gc_safe->~CoordinateArray_O();
    return;
}
obj_finalize_KIND_LISPALLOC_geom__CoordinateArrayWithHash_O:
{
    geom::CoordinateArrayWithHash_O* obj_gc_safe = reinterpret_cast<geom::CoordinateArrayWithHash_O*>(client);
    obj_gc_safe->~CoordinateArrayWithHash_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SNode_O:
{
    core::SNode_O* obj_gc_safe = reinterpret_cast<core::SNode_O*>(client);
    obj_gc_safe->~SNode_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__BranchSNode_O:
{
    core::BranchSNode_O* obj_gc_safe = reinterpret_cast<core::BranchSNode_O*>(client);
    obj_gc_safe->~BranchSNode_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__LeafSNode_O:
{
    core::LeafSNode_O* obj_gc_safe = reinterpret_cast<core::LeafSNode_O*>(client);
    obj_gc_safe->~LeafSNode_O();
    return;
}
obj_finalize_KIND_LISPALLOC_asttooling__AstVisitor_O:
{
    asttooling::AstVisitor_O* obj_gc_safe = reinterpret_cast<asttooling::AstVisitor_O*>(client);
    obj_gc_safe->~AstVisitor_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__AttributeSet_O:
{
    llvmo::AttributeSet_O* obj_gc_safe = reinterpret_cast<llvmo::AttributeSet_O*>(client);
    obj_gc_safe->~AttributeSet_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Package_O:
{
    core::Package_O* obj_gc_safe = reinterpret_cast<core::Package_O*>(client);
    obj_gc_safe->~Package_O();
    return;
}
obj_finalize_KIND_TEMPLATED_LISPALLOC_core__WrappedPointer_O:
{
    core::WrappedPointer_O* obj_gc_safe = reinterpret_cast<core::WrappedPointer_O*>(client);
    obj_gc_safe->~WrappedPointer_O();
}
obj_finalize_KIND_LISPALLOC_core__RegexMatch_O:
{
    core::RegexMatch_O* obj_gc_safe = reinterpret_cast<core::RegexMatch_O*>(client);
    obj_gc_safe->~RegexMatch_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__DirectoryEntry_O:
{
    core::DirectoryEntry_O* obj_gc_safe = reinterpret_cast<core::DirectoryEntry_O*>(client);
    obj_gc_safe->~DirectoryEntry_O();
    return;
}
obj_finalize_KIND_LISPALLOC_clbind__ClassRegistry_O:
{
    clbind::ClassRegistry_O* obj_gc_safe = reinterpret_cast<clbind::ClassRegistry_O*>(client);
    obj_gc_safe->~ClassRegistry_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DebugInfo_O:
{
    llvmo::DebugInfo_O* obj_gc_safe = reinterpret_cast<llvmo::DebugInfo_O*>(client);
    obj_gc_safe->~DebugInfo_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DISubprogram_O:
{
    llvmo::DISubprogram_O* obj_gc_safe = reinterpret_cast<llvmo::DISubprogram_O*>(client);
    obj_gc_safe->~DISubprogram_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DIDescriptor_O:
{
    llvmo::DIDescriptor_O* obj_gc_safe = reinterpret_cast<llvmo::DIDescriptor_O*>(client);
    obj_gc_safe->~DIDescriptor_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DIType_O:
{
    llvmo::DIType_O* obj_gc_safe = reinterpret_cast<llvmo::DIType_O*>(client);
    obj_gc_safe->~DIType_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DISubroutineType_O:
{
    llvmo::DISubroutineType_O* obj_gc_safe = reinterpret_cast<llvmo::DISubroutineType_O*>(client);
    obj_gc_safe->~DISubroutineType_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DICompileUnit_O:
{
    llvmo::DICompileUnit_O* obj_gc_safe = reinterpret_cast<llvmo::DICompileUnit_O*>(client);
    obj_gc_safe->~DICompileUnit_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DIDerivedType_O:
{
    llvmo::DIDerivedType_O* obj_gc_safe = reinterpret_cast<llvmo::DIDerivedType_O*>(client);
    obj_gc_safe->~DIDerivedType_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DIArray_O:
{
    llvmo::DIArray_O* obj_gc_safe = reinterpret_cast<llvmo::DIArray_O*>(client);
    obj_gc_safe->~DIArray_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DIBasicType_O:
{
    llvmo::DIBasicType_O* obj_gc_safe = reinterpret_cast<llvmo::DIBasicType_O*>(client);
    obj_gc_safe->~DIBasicType_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DICompositeType_O:
{
    llvmo::DICompositeType_O* obj_gc_safe = reinterpret_cast<llvmo::DICompositeType_O*>(client);
    obj_gc_safe->~DICompositeType_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DITypeArray_O:
{
    llvmo::DITypeArray_O* obj_gc_safe = reinterpret_cast<llvmo::DITypeArray_O*>(client);
    obj_gc_safe->~DITypeArray_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DILexicalBlock_O:
{
    llvmo::DILexicalBlock_O* obj_gc_safe = reinterpret_cast<llvmo::DILexicalBlock_O*>(client);
    obj_gc_safe->~DILexicalBlock_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DIFile_O:
{
    llvmo::DIFile_O* obj_gc_safe = reinterpret_cast<llvmo::DIFile_O*>(client);
    obj_gc_safe->~DIFile_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DIScope_O:
{
    llvmo::DIScope_O* obj_gc_safe = reinterpret_cast<llvmo::DIScope_O*>(client);
    obj_gc_safe->~DIScope_O();
    return;
}
obj_finalize_KIND_BOOTSTRAP_core__StandardObject_O:
{
    core::StandardObject_O* obj_gc_safe = reinterpret_cast<core::StandardObject_O*>(client);
    obj_gc_safe->~StandardObject_O();
    return;
}
obj_finalize_KIND_BOOTSTRAP_core__Metaobject_O:
{
    core::Metaobject_O* obj_gc_safe = reinterpret_cast<core::Metaobject_O*>(client);
    obj_gc_safe->~Metaobject_O();
    return;
}
obj_finalize_KIND_BOOTSTRAP_core__Specializer_O:
{
    core::Specializer_O* obj_gc_safe = reinterpret_cast<core::Specializer_O*>(client);
    obj_gc_safe->~Specializer_O();
    return;
}
obj_finalize_KIND_BOOTSTRAP_core__Class_O:
{
    core::Class_O* obj_gc_safe = reinterpret_cast<core::Class_O*>(client);
    obj_gc_safe->~Class_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__ForwardReferencedClass_O:
{
    core::ForwardReferencedClass_O* obj_gc_safe = reinterpret_cast<core::ForwardReferencedClass_O*>(client);
    obj_gc_safe->~ForwardReferencedClass_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__CxxClass_O:
{
    core::CxxClass_O* obj_gc_safe = reinterpret_cast<core::CxxClass_O*>(client);
    obj_gc_safe->~CxxClass_O();
    return;
}
obj_finalize_KIND_BOOTSTRAP_core__StdClass_O:
{
    core::StdClass_O* obj_gc_safe = reinterpret_cast<core::StdClass_O*>(client);
    obj_gc_safe->~StdClass_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__FuncallableStandardClass_O:
{
    core::FuncallableStandardClass_O* obj_gc_safe = reinterpret_cast<core::FuncallableStandardClass_O*>(client);
    obj_gc_safe->~FuncallableStandardClass_O();
    return;
}
obj_finalize_KIND_BOOTSTRAP_core__StandardClass_O:
{
    core::StandardClass_O* obj_gc_safe = reinterpret_cast<core::StandardClass_O*>(client);
    obj_gc_safe->~StandardClass_O();
    return;
}
obj_finalize_KIND_BOOTSTRAP_core__StructureClass_O:
{
    core::StructureClass_O* obj_gc_safe = reinterpret_cast<core::StructureClass_O*>(client);
    obj_gc_safe->~StructureClass_O();
    return;
}
obj_finalize_KIND_BOOTSTRAP_core__BuiltInClass_O:
{
    core::BuiltInClass_O* obj_gc_safe = reinterpret_cast<core::BuiltInClass_O*>(client);
    obj_gc_safe->~BuiltInClass_O();
    return;
}
obj_finalize_KIND_LISPALLOC_clbind__ClassRep_O:
{
    clbind::ClassRep_O* obj_gc_safe = reinterpret_cast<clbind::ClassRep_O*>(client);
    obj_gc_safe->~ClassRep_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__LoadTimeValues_O:
{
    core::LoadTimeValues_O* obj_gc_safe = reinterpret_cast<core::LoadTimeValues_O*>(client);
    obj_gc_safe->~LoadTimeValues_O();
    return;
}
obj_finalize_KIND_LISPALLOC_adapt__SymbolSet_O:
{
    adapt::SymbolSet_O* obj_gc_safe = reinterpret_cast<adapt::SymbolSet_O*>(client);
    obj_gc_safe->~SymbolSet_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SourcePosInfo_O:
{
    core::SourcePosInfo_O* obj_gc_safe = reinterpret_cast<core::SourcePosInfo_O*>(client);
    obj_gc_safe->~SourcePosInfo_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__MultiStringBuffer_O:
{
    core::MultiStringBuffer_O* obj_gc_safe = reinterpret_cast<core::MultiStringBuffer_O*>(client);
    obj_gc_safe->~MultiStringBuffer_O();
    return;
}
obj_finalize_KIND_TEMPLATED_LISPALLOC_core__Iterator_O:
{
    core::Iterator_O* obj_gc_safe = reinterpret_cast<core::Iterator_O*>(client);
    obj_gc_safe->~Iterator_O();
}
obj_finalize_KIND_LISPALLOC_core__RecursiveDirectoryIterator_O:
{
    core::RecursiveDirectoryIterator_O* obj_gc_safe = reinterpret_cast<core::RecursiveDirectoryIterator_O*>(client);
    obj_gc_safe->~RecursiveDirectoryIterator_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__IterateRestraints_O:
{
    chem::IterateRestraints_O* obj_gc_safe = reinterpret_cast<chem::IterateRestraints_O*>(client);
    obj_gc_safe->~IterateRestraints_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__IterateMatter_O:
{
    chem::IterateMatter_O* obj_gc_safe = reinterpret_cast<chem::IterateMatter_O*>(client);
    obj_gc_safe->~IterateMatter_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__IterateResidues_O:
{
    chem::IterateResidues_O* obj_gc_safe = reinterpret_cast<chem::IterateResidues_O*>(client);
    obj_gc_safe->~IterateResidues_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__IterateBonds_O:
{
    chem::IterateBonds_O* obj_gc_safe = reinterpret_cast<chem::IterateBonds_O*>(client);
    obj_gc_safe->~IterateBonds_O();
    return;
}
obj_finalize_KIND_LISPALLOC_chem__IterateAtoms_O:
{
    chem::IterateAtoms_O* obj_gc_safe = reinterpret_cast<chem::IterateAtoms_O*>(client);
    obj_gc_safe->~IterateAtoms_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__DirectoryIterator_O:
{
    core::DirectoryIterator_O* obj_gc_safe = reinterpret_cast<core::DirectoryIterator_O*>(client);
    obj_gc_safe->~DirectoryIterator_O();
    return;
}
obj_finalize_KIND_LISPALLOC_adapt__IterateCons_O:
{
    adapt::IterateCons_O* obj_gc_safe = reinterpret_cast<adapt::IterateCons_O*>(client);
    obj_gc_safe->~IterateCons_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__FileStatus_O:
{
    core::FileStatus_O* obj_gc_safe = reinterpret_cast<core::FileStatus_O*>(client);
    obj_gc_safe->~FileStatus_O();
    return;
}
obj_finalize_KIND_LISPALLOC_adapt__StringList_O:
{
    adapt::StringList_O* obj_gc_safe = reinterpret_cast<adapt::StringList_O*>(client);
    obj_gc_safe->~StringList_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Stream_O:
{
    core::Stream_O* obj_gc_safe = reinterpret_cast<core::Stream_O*>(client);
    obj_gc_safe->~Stream_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__AnsiStream_O:
{
    core::AnsiStream_O* obj_gc_safe = reinterpret_cast<core::AnsiStream_O*>(client);
    obj_gc_safe->~AnsiStream_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__EchoStream_O:
{
    core::EchoStream_O* obj_gc_safe = reinterpret_cast<core::EchoStream_O*>(client);
    obj_gc_safe->~EchoStream_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SynonymStream_O:
{
    core::SynonymStream_O* obj_gc_safe = reinterpret_cast<core::SynonymStream_O*>(client);
    obj_gc_safe->~SynonymStream_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__BroadcastStream_O:
{
    core::BroadcastStream_O* obj_gc_safe = reinterpret_cast<core::BroadcastStream_O*>(client);
    obj_gc_safe->~BroadcastStream_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__StringStream_O:
{
    core::StringStream_O* obj_gc_safe = reinterpret_cast<core::StringStream_O*>(client);
    obj_gc_safe->~StringStream_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__StringInputStream_O:
{
    core::StringInputStream_O* obj_gc_safe = reinterpret_cast<core::StringInputStream_O*>(client);
    obj_gc_safe->~StringInputStream_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__StringOutputStream_O:
{
    core::StringOutputStream_O* obj_gc_safe = reinterpret_cast<core::StringOutputStream_O*>(client);
    obj_gc_safe->~StringOutputStream_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__TwoWayStream_O:
{
    core::TwoWayStream_O* obj_gc_safe = reinterpret_cast<core::TwoWayStream_O*>(client);
    obj_gc_safe->~TwoWayStream_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__FileStream_O:
{
    core::FileStream_O* obj_gc_safe = reinterpret_cast<core::FileStream_O*>(client);
    obj_gc_safe->~FileStream_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__IOStreamStream_O:
{
    core::IOStreamStream_O* obj_gc_safe = reinterpret_cast<core::IOStreamStream_O*>(client);
    obj_gc_safe->~IOStreamStream_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__IOFileStream_O:
{
    core::IOFileStream_O* obj_gc_safe = reinterpret_cast<core::IOFileStream_O*>(client);
    obj_gc_safe->~IOFileStream_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__ConcatenatedStream_O:
{
    core::ConcatenatedStream_O* obj_gc_safe = reinterpret_cast<core::ConcatenatedStream_O*>(client);
    obj_gc_safe->~ConcatenatedStream_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Cons_O:
{
    core::Cons_O* obj_gc_safe = reinterpret_cast<core::Cons_O*>(client);
    obj_gc_safe->~Cons_O();
    return;
}
obj_finalize_KIND_LISPALLOC_cffi__Pointer_O:
{
    cffi::Pointer_O* obj_gc_safe = reinterpret_cast<cffi::Pointer_O*>(client);
    obj_gc_safe->~Pointer_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SourceFileInfo_O:
{
    core::SourceFileInfo_O* obj_gc_safe = reinterpret_cast<core::SourceFileInfo_O*>(client);
    obj_gc_safe->~SourceFileInfo_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Path_O:
{
    core::Path_O* obj_gc_safe = reinterpret_cast<core::Path_O*>(client);
    obj_gc_safe->~Path_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__StructureObject_O:
{
    core::StructureObject_O* obj_gc_safe = reinterpret_cast<core::StructureObject_O*>(client);
    obj_gc_safe->~StructureObject_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__InvocationHistoryFrameIterator_O:
{
    core::InvocationHistoryFrameIterator_O* obj_gc_safe = reinterpret_cast<core::InvocationHistoryFrameIterator_O*>(client);
    obj_gc_safe->~InvocationHistoryFrameIterator_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__RandomState_O:
{
    core::RandomState_O* obj_gc_safe = reinterpret_cast<core::RandomState_O*>(client);
    obj_gc_safe->~RandomState_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DebugLoc_O:
{
    llvmo::DebugLoc_O* obj_gc_safe = reinterpret_cast<llvmo::DebugLoc_O*>(client);
    obj_gc_safe->~DebugLoc_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Function_O:
{
    core::Function_O* obj_gc_safe = reinterpret_cast<core::Function_O*>(client);
    obj_gc_safe->~Function_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SingleDispatchGenericFunction_O:
{
    core::SingleDispatchGenericFunction_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchGenericFunction_O*>(client);
    obj_gc_safe->~SingleDispatchGenericFunction_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SpecialForm_O:
{
    core::SpecialForm_O* obj_gc_safe = reinterpret_cast<core::SpecialForm_O*>(client);
    obj_gc_safe->~SpecialForm_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Instance_O:
{
    core::Instance_O* obj_gc_safe = reinterpret_cast<core::Instance_O*>(client);
    obj_gc_safe->~Instance_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__CompiledFunction_O:
{
    core::CompiledFunction_O* obj_gc_safe = reinterpret_cast<core::CompiledFunction_O*>(client);
    obj_gc_safe->~CompiledFunction_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SingleDispatchEffectiveMethodFunction_O:
{
    core::SingleDispatchEffectiveMethodFunction_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchEffectiveMethodFunction_O*>(client);
    obj_gc_safe->~SingleDispatchEffectiveMethodFunction_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__WeakPointer_O:
{
    core::WeakPointer_O* obj_gc_safe = reinterpret_cast<core::WeakPointer_O*>(client);
    obj_gc_safe->~WeakPointer_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Pointer_O:
{
    core::Pointer_O* obj_gc_safe = reinterpret_cast<core::Pointer_O*>(client);
    obj_gc_safe->~Pointer_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__VaList_dummy_O:
{
    core::VaList_dummy_O* obj_gc_safe = reinterpret_cast<core::VaList_dummy_O*>(client);
    obj_gc_safe->~VaList_dummy_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__ExternalObject_O:
{
    core::ExternalObject_O* obj_gc_safe = reinterpret_cast<core::ExternalObject_O*>(client);
    obj_gc_safe->~ExternalObject_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__TargetOptions_O:
{
    llvmo::TargetOptions_O* obj_gc_safe = reinterpret_cast<llvmo::TargetOptions_O*>(client);
    obj_gc_safe->~TargetOptions_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DIBuilder_O:
{
    llvmo::DIBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::DIBuilder_O*>(client);
    obj_gc_safe->~DIBuilder_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__Pass_O:
{
    llvmo::Pass_O* obj_gc_safe = reinterpret_cast<llvmo::Pass_O*>(client);
    obj_gc_safe->~Pass_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__ModulePass_O:
{
    llvmo::ModulePass_O* obj_gc_safe = reinterpret_cast<llvmo::ModulePass_O*>(client);
    obj_gc_safe->~ModulePass_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__ImmutablePass_O:
{
    llvmo::ImmutablePass_O* obj_gc_safe = reinterpret_cast<llvmo::ImmutablePass_O*>(client);
    obj_gc_safe->~ImmutablePass_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DataLayoutPass_O:
{
    llvmo::DataLayoutPass_O* obj_gc_safe = reinterpret_cast<llvmo::DataLayoutPass_O*>(client);
    obj_gc_safe->~DataLayoutPass_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__TargetLibraryInfo_O:
{
    llvmo::TargetLibraryInfo_O* obj_gc_safe = reinterpret_cast<llvmo::TargetLibraryInfo_O*>(client);
    obj_gc_safe->~TargetLibraryInfo_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__FunctionPass_O:
{
    llvmo::FunctionPass_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionPass_O*>(client);
    obj_gc_safe->~FunctionPass_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__Linker_O:
{
    llvmo::Linker_O* obj_gc_safe = reinterpret_cast<llvmo::Linker_O*>(client);
    obj_gc_safe->~Linker_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__Module_O:
{
    llvmo::Module_O* obj_gc_safe = reinterpret_cast<llvmo::Module_O*>(client);
    obj_gc_safe->~Module_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__APFloat_O:
{
    llvmo::APFloat_O* obj_gc_safe = reinterpret_cast<llvmo::APFloat_O*>(client);
    obj_gc_safe->~APFloat_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__LLVMContext_O:
{
    llvmo::LLVMContext_O* obj_gc_safe = reinterpret_cast<llvmo::LLVMContext_O*>(client);
    obj_gc_safe->~LLVMContext_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__Target_O:
{
    llvmo::Target_O* obj_gc_safe = reinterpret_cast<llvmo::Target_O*>(client);
    obj_gc_safe->~Target_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__APInt_O:
{
    llvmo::APInt_O* obj_gc_safe = reinterpret_cast<llvmo::APInt_O*>(client);
    obj_gc_safe->~APInt_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__PassManagerBase_O:
{
    llvmo::PassManagerBase_O* obj_gc_safe = reinterpret_cast<llvmo::PassManagerBase_O*>(client);
    obj_gc_safe->~PassManagerBase_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__FunctionPassManager_O:
{
    llvmo::FunctionPassManager_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionPassManager_O*>(client);
    obj_gc_safe->~FunctionPassManager_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__PassManager_O:
{
    llvmo::PassManager_O* obj_gc_safe = reinterpret_cast<llvmo::PassManager_O*>(client);
    obj_gc_safe->~PassManager_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__Value_O:
{
    llvmo::Value_O* obj_gc_safe = reinterpret_cast<llvmo::Value_O*>(client);
    obj_gc_safe->~Value_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__Argument_O:
{
    llvmo::Argument_O* obj_gc_safe = reinterpret_cast<llvmo::Argument_O*>(client);
    obj_gc_safe->~Argument_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__User_O:
{
    llvmo::User_O* obj_gc_safe = reinterpret_cast<llvmo::User_O*>(client);
    obj_gc_safe->~User_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__Constant_O:
{
    llvmo::Constant_O* obj_gc_safe = reinterpret_cast<llvmo::Constant_O*>(client);
    obj_gc_safe->~Constant_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__ConstantInt_O:
{
    llvmo::ConstantInt_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantInt_O*>(client);
    obj_gc_safe->~ConstantInt_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__ConstantFP_O:
{
    llvmo::ConstantFP_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantFP_O*>(client);
    obj_gc_safe->~ConstantFP_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__GlobalValue_O:
{
    llvmo::GlobalValue_O* obj_gc_safe = reinterpret_cast<llvmo::GlobalValue_O*>(client);
    obj_gc_safe->~GlobalValue_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__GlobalVariable_O:
{
    llvmo::GlobalVariable_O* obj_gc_safe = reinterpret_cast<llvmo::GlobalVariable_O*>(client);
    obj_gc_safe->~GlobalVariable_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__Function_O:
{
    llvmo::Function_O* obj_gc_safe = reinterpret_cast<llvmo::Function_O*>(client);
    obj_gc_safe->~Function_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__ConstantArray_O:
{
    llvmo::ConstantArray_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantArray_O*>(client);
    obj_gc_safe->~ConstantArray_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__ConstantStruct_O:
{
    llvmo::ConstantStruct_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantStruct_O*>(client);
    obj_gc_safe->~ConstantStruct_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__UndefValue_O:
{
    llvmo::UndefValue_O* obj_gc_safe = reinterpret_cast<llvmo::UndefValue_O*>(client);
    obj_gc_safe->~UndefValue_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__ConstantPointerNull_O:
{
    llvmo::ConstantPointerNull_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantPointerNull_O*>(client);
    obj_gc_safe->~ConstantPointerNull_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__ConstantExpr_O:
{
    llvmo::ConstantExpr_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantExpr_O*>(client);
    obj_gc_safe->~ConstantExpr_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__BlockAddress_O:
{
    llvmo::BlockAddress_O* obj_gc_safe = reinterpret_cast<llvmo::BlockAddress_O*>(client);
    obj_gc_safe->~BlockAddress_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__ConstantDataSequential_O:
{
    llvmo::ConstantDataSequential_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantDataSequential_O*>(client);
    obj_gc_safe->~ConstantDataSequential_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__ConstantDataArray_O:
{
    llvmo::ConstantDataArray_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantDataArray_O*>(client);
    obj_gc_safe->~ConstantDataArray_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__Instruction_O:
{
    llvmo::Instruction_O* obj_gc_safe = reinterpret_cast<llvmo::Instruction_O*>(client);
    obj_gc_safe->~Instruction_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__PHINode_O:
{
    llvmo::PHINode_O* obj_gc_safe = reinterpret_cast<llvmo::PHINode_O*>(client);
    obj_gc_safe->~PHINode_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__LandingPadInst_O:
{
    llvmo::LandingPadInst_O* obj_gc_safe = reinterpret_cast<llvmo::LandingPadInst_O*>(client);
    obj_gc_safe->~LandingPadInst_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__AtomicCmpXchgInst_O:
{
    llvmo::AtomicCmpXchgInst_O* obj_gc_safe = reinterpret_cast<llvmo::AtomicCmpXchgInst_O*>(client);
    obj_gc_safe->~AtomicCmpXchgInst_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__TerminatorInst_O:
{
    llvmo::TerminatorInst_O* obj_gc_safe = reinterpret_cast<llvmo::TerminatorInst_O*>(client);
    obj_gc_safe->~TerminatorInst_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__UnreachableInst_O:
{
    llvmo::UnreachableInst_O* obj_gc_safe = reinterpret_cast<llvmo::UnreachableInst_O*>(client);
    obj_gc_safe->~UnreachableInst_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__InvokeInst_O:
{
    llvmo::InvokeInst_O* obj_gc_safe = reinterpret_cast<llvmo::InvokeInst_O*>(client);
    obj_gc_safe->~InvokeInst_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__BranchInst_O:
{
    llvmo::BranchInst_O* obj_gc_safe = reinterpret_cast<llvmo::BranchInst_O*>(client);
    obj_gc_safe->~BranchInst_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__IndirectBrInst_O:
{
    llvmo::IndirectBrInst_O* obj_gc_safe = reinterpret_cast<llvmo::IndirectBrInst_O*>(client);
    obj_gc_safe->~IndirectBrInst_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__ResumeInst_O:
{
    llvmo::ResumeInst_O* obj_gc_safe = reinterpret_cast<llvmo::ResumeInst_O*>(client);
    obj_gc_safe->~ResumeInst_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__SwitchInst_O:
{
    llvmo::SwitchInst_O* obj_gc_safe = reinterpret_cast<llvmo::SwitchInst_O*>(client);
    obj_gc_safe->~SwitchInst_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__ReturnInst_O:
{
    llvmo::ReturnInst_O* obj_gc_safe = reinterpret_cast<llvmo::ReturnInst_O*>(client);
    obj_gc_safe->~ReturnInst_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__FenceInst_O:
{
    llvmo::FenceInst_O* obj_gc_safe = reinterpret_cast<llvmo::FenceInst_O*>(client);
    obj_gc_safe->~FenceInst_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__AtomicRMWInst_O:
{
    llvmo::AtomicRMWInst_O* obj_gc_safe = reinterpret_cast<llvmo::AtomicRMWInst_O*>(client);
    obj_gc_safe->~AtomicRMWInst_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__StoreInst_O:
{
    llvmo::StoreInst_O* obj_gc_safe = reinterpret_cast<llvmo::StoreInst_O*>(client);
    obj_gc_safe->~StoreInst_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__UnaryInstruction_O:
{
    llvmo::UnaryInstruction_O* obj_gc_safe = reinterpret_cast<llvmo::UnaryInstruction_O*>(client);
    obj_gc_safe->~UnaryInstruction_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__VAArgInst_O:
{
    llvmo::VAArgInst_O* obj_gc_safe = reinterpret_cast<llvmo::VAArgInst_O*>(client);
    obj_gc_safe->~VAArgInst_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__AllocaInst_O:
{
    llvmo::AllocaInst_O* obj_gc_safe = reinterpret_cast<llvmo::AllocaInst_O*>(client);
    obj_gc_safe->~AllocaInst_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__LoadInst_O:
{
    llvmo::LoadInst_O* obj_gc_safe = reinterpret_cast<llvmo::LoadInst_O*>(client);
    obj_gc_safe->~LoadInst_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__CallInst_O:
{
    llvmo::CallInst_O* obj_gc_safe = reinterpret_cast<llvmo::CallInst_O*>(client);
    obj_gc_safe->~CallInst_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__BasicBlock_O:
{
    llvmo::BasicBlock_O* obj_gc_safe = reinterpret_cast<llvmo::BasicBlock_O*>(client);
    obj_gc_safe->~BasicBlock_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__IRBuilderBase_O:
{
    llvmo::IRBuilderBase_O* obj_gc_safe = reinterpret_cast<llvmo::IRBuilderBase_O*>(client);
    obj_gc_safe->~IRBuilderBase_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__IRBuilder_O:
{
    llvmo::IRBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::IRBuilder_O*>(client);
    obj_gc_safe->~IRBuilder_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__MCSubtargetInfo_O:
{
    llvmo::MCSubtargetInfo_O* obj_gc_safe = reinterpret_cast<llvmo::MCSubtargetInfo_O*>(client);
    obj_gc_safe->~MCSubtargetInfo_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__TargetSubtargetInfo_O:
{
    llvmo::TargetSubtargetInfo_O* obj_gc_safe = reinterpret_cast<llvmo::TargetSubtargetInfo_O*>(client);
    obj_gc_safe->~TargetSubtargetInfo_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__EngineBuilder_O:
{
    llvmo::EngineBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::EngineBuilder_O*>(client);
    obj_gc_safe->~EngineBuilder_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__DataLayout_O:
{
    llvmo::DataLayout_O* obj_gc_safe = reinterpret_cast<llvmo::DataLayout_O*>(client);
    obj_gc_safe->~DataLayout_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__Triple_O:
{
    llvmo::Triple_O* obj_gc_safe = reinterpret_cast<llvmo::Triple_O*>(client);
    obj_gc_safe->~Triple_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__TargetMachine_O:
{
    llvmo::TargetMachine_O* obj_gc_safe = reinterpret_cast<llvmo::TargetMachine_O*>(client);
    obj_gc_safe->~TargetMachine_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__LLVMTargetMachine_O:
{
    llvmo::LLVMTargetMachine_O* obj_gc_safe = reinterpret_cast<llvmo::LLVMTargetMachine_O*>(client);
    obj_gc_safe->~LLVMTargetMachine_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__Type_O:
{
    llvmo::Type_O* obj_gc_safe = reinterpret_cast<llvmo::Type_O*>(client);
    obj_gc_safe->~Type_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__CompositeType_O:
{
    llvmo::CompositeType_O* obj_gc_safe = reinterpret_cast<llvmo::CompositeType_O*>(client);
    obj_gc_safe->~CompositeType_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__StructType_O:
{
    llvmo::StructType_O* obj_gc_safe = reinterpret_cast<llvmo::StructType_O*>(client);
    obj_gc_safe->~StructType_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__SequentialType_O:
{
    llvmo::SequentialType_O* obj_gc_safe = reinterpret_cast<llvmo::SequentialType_O*>(client);
    obj_gc_safe->~SequentialType_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__PointerType_O:
{
    llvmo::PointerType_O* obj_gc_safe = reinterpret_cast<llvmo::PointerType_O*>(client);
    obj_gc_safe->~PointerType_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__ArrayType_O:
{
    llvmo::ArrayType_O* obj_gc_safe = reinterpret_cast<llvmo::ArrayType_O*>(client);
    obj_gc_safe->~ArrayType_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__VectorType_O:
{
    llvmo::VectorType_O* obj_gc_safe = reinterpret_cast<llvmo::VectorType_O*>(client);
    obj_gc_safe->~VectorType_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__FunctionType_O:
{
    llvmo::FunctionType_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionType_O*>(client);
    obj_gc_safe->~FunctionType_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__IntegerType_O:
{
    llvmo::IntegerType_O* obj_gc_safe = reinterpret_cast<llvmo::IntegerType_O*>(client);
    obj_gc_safe->~IntegerType_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__Metadata_O:
{
    llvmo::Metadata_O* obj_gc_safe = reinterpret_cast<llvmo::Metadata_O*>(client);
    obj_gc_safe->~Metadata_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__ValueAsMetadata_O:
{
    llvmo::ValueAsMetadata_O* obj_gc_safe = reinterpret_cast<llvmo::ValueAsMetadata_O*>(client);
    obj_gc_safe->~ValueAsMetadata_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__MDString_O:
{
    llvmo::MDString_O* obj_gc_safe = reinterpret_cast<llvmo::MDString_O*>(client);
    obj_gc_safe->~MDString_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__MDNode_O:
{
    llvmo::MDNode_O* obj_gc_safe = reinterpret_cast<llvmo::MDNode_O*>(client);
    obj_gc_safe->~MDNode_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__NamedMDNode_O:
{
    llvmo::NamedMDNode_O* obj_gc_safe = reinterpret_cast<llvmo::NamedMDNode_O*>(client);
    obj_gc_safe->~NamedMDNode_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__ExecutionEngine_O:
{
    llvmo::ExecutionEngine_O* obj_gc_safe = reinterpret_cast<llvmo::ExecutionEngine_O*>(client);
    obj_gc_safe->~ExecutionEngine_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__ForeignData_O:
{
    core::ForeignData_O* obj_gc_safe = reinterpret_cast<core::ForeignData_O*>(client);
    obj_gc_safe->~ForeignData_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__PassManagerBuilder_O:
{
    llvmo::PassManagerBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::PassManagerBuilder_O*>(client);
    obj_gc_safe->~PassManagerBuilder_O();
    return;
}
obj_finalize_KIND_LISPALLOC_adapt__ObjectSet_O:
{
    adapt::ObjectSet_O* obj_gc_safe = reinterpret_cast<adapt::ObjectSet_O*>(client);
    obj_gc_safe->~ObjectSet_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__IntArray_O:
{
    core::IntArray_O* obj_gc_safe = reinterpret_cast<core::IntArray_O*>(client);
    obj_gc_safe->~IntArray_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__PosixTime_O:
{
    core::PosixTime_O* obj_gc_safe = reinterpret_cast<core::PosixTime_O*>(client);
    obj_gc_safe->~PosixTime_O();
    return;
}
obj_finalize_KIND_BOOTSTRAP_core__Symbol_O:
{
    core::Symbol_O* obj_gc_safe = reinterpret_cast<core::Symbol_O*>(client);
    obj_gc_safe->~Symbol_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Null_O:
{
    core::Null_O* obj_gc_safe = reinterpret_cast<core::Null_O*>(client);
    obj_gc_safe->~Null_O();
    return;
}
obj_finalize_KIND_LISPALLOC_adapt__IndexedObjectBag_O:
{
    adapt::IndexedObjectBag_O* obj_gc_safe = reinterpret_cast<adapt::IndexedObjectBag_O*>(client);
    obj_gc_safe->~IndexedObjectBag_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__PosixTimeDuration_O:
{
    core::PosixTimeDuration_O* obj_gc_safe = reinterpret_cast<core::PosixTimeDuration_O*>(client);
    obj_gc_safe->~PosixTimeDuration_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SymbolToEnumConverter_O:
{
    core::SymbolToEnumConverter_O* obj_gc_safe = reinterpret_cast<core::SymbolToEnumConverter_O*>(client);
    obj_gc_safe->~SymbolToEnumConverter_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__ReadTable_O:
{
    core::ReadTable_O* obj_gc_safe = reinterpret_cast<core::ReadTable_O*>(client);
    obj_gc_safe->~ReadTable_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Number_O:
{
    core::Number_O* obj_gc_safe = reinterpret_cast<core::Number_O*>(client);
    obj_gc_safe->~Number_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Complex_O:
{
    core::Complex_O* obj_gc_safe = reinterpret_cast<core::Complex_O*>(client);
    obj_gc_safe->~Complex_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Real_O:
{
    core::Real_O* obj_gc_safe = reinterpret_cast<core::Real_O*>(client);
    obj_gc_safe->~Real_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Float_O:
{
    core::Float_O* obj_gc_safe = reinterpret_cast<core::Float_O*>(client);
    obj_gc_safe->~Float_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SingleFloat_dummy_O:
{
    core::SingleFloat_dummy_O* obj_gc_safe = reinterpret_cast<core::SingleFloat_dummy_O*>(client);
    obj_gc_safe->~SingleFloat_dummy_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__LongFloat_O:
{
    core::LongFloat_O* obj_gc_safe = reinterpret_cast<core::LongFloat_O*>(client);
    obj_gc_safe->~LongFloat_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__ShortFloat_O:
{
    core::ShortFloat_O* obj_gc_safe = reinterpret_cast<core::ShortFloat_O*>(client);
    obj_gc_safe->~ShortFloat_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__DoubleFloat_O:
{
    core::DoubleFloat_O* obj_gc_safe = reinterpret_cast<core::DoubleFloat_O*>(client);
    obj_gc_safe->~DoubleFloat_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Rational_O:
{
    core::Rational_O* obj_gc_safe = reinterpret_cast<core::Rational_O*>(client);
    obj_gc_safe->~Rational_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Integer_O:
{
    core::Integer_O* obj_gc_safe = reinterpret_cast<core::Integer_O*>(client);
    obj_gc_safe->~Integer_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Bignum_O:
{
    core::Bignum_O* obj_gc_safe = reinterpret_cast<core::Bignum_O*>(client);
    obj_gc_safe->~Bignum_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Fixnum_dummy_O:
{
    core::Fixnum_dummy_O* obj_gc_safe = reinterpret_cast<core::Fixnum_dummy_O*>(client);
    obj_gc_safe->~Fixnum_dummy_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Ratio_O:
{
    core::Ratio_O* obj_gc_safe = reinterpret_cast<core::Ratio_O*>(client);
    obj_gc_safe->~Ratio_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__CandoException_O:
{
    core::CandoException_O* obj_gc_safe = reinterpret_cast<core::CandoException_O*>(client);
    obj_gc_safe->~CandoException_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Archive_O:
{
    core::Archive_O* obj_gc_safe = reinterpret_cast<core::Archive_O*>(client);
    obj_gc_safe->~Archive_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__LoadArchive_O:
{
    core::LoadArchive_O* obj_gc_safe = reinterpret_cast<core::LoadArchive_O*>(client);
    obj_gc_safe->~LoadArchive_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SexpLoadArchive_O:
{
    core::SexpLoadArchive_O* obj_gc_safe = reinterpret_cast<core::SexpLoadArchive_O*>(client);
    obj_gc_safe->~SexpLoadArchive_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SaveArchive_O:
{
    core::SaveArchive_O* obj_gc_safe = reinterpret_cast<core::SaveArchive_O*>(client);
    obj_gc_safe->~SaveArchive_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SexpSaveArchive_O:
{
    core::SexpSaveArchive_O* obj_gc_safe = reinterpret_cast<core::SexpSaveArchive_O*>(client);
    obj_gc_safe->~SexpSaveArchive_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__HashTable_O:
{
    core::HashTable_O* obj_gc_safe = reinterpret_cast<core::HashTable_O*>(client);
    obj_gc_safe->~HashTable_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__HashTableEq_O:
{
    core::HashTableEq_O* obj_gc_safe = reinterpret_cast<core::HashTableEq_O*>(client);
    obj_gc_safe->~HashTableEq_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__HashTableEqual_O:
{
    core::HashTableEqual_O* obj_gc_safe = reinterpret_cast<core::HashTableEqual_O*>(client);
    obj_gc_safe->~HashTableEqual_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__HashTableEql_O:
{
    core::HashTableEql_O* obj_gc_safe = reinterpret_cast<core::HashTableEql_O*>(client);
    obj_gc_safe->~HashTableEql_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__HashTableEqualp_O:
{
    core::HashTableEqualp_O* obj_gc_safe = reinterpret_cast<core::HashTableEqualp_O*>(client);
    obj_gc_safe->~HashTableEqualp_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Environment_O:
{
    core::Environment_O* obj_gc_safe = reinterpret_cast<core::Environment_O*>(client);
    obj_gc_safe->~Environment_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__ActivationFrame_O:
{
    core::ActivationFrame_O* obj_gc_safe = reinterpret_cast<core::ActivationFrame_O*>(client);
    obj_gc_safe->~ActivationFrame_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__FunctionFrame_O:
{
    core::FunctionFrame_O* obj_gc_safe = reinterpret_cast<core::FunctionFrame_O*>(client);
    obj_gc_safe->~FunctionFrame_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__TagbodyFrame_O:
{
    core::TagbodyFrame_O* obj_gc_safe = reinterpret_cast<core::TagbodyFrame_O*>(client);
    obj_gc_safe->~TagbodyFrame_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__ValueFrame_O:
{
    core::ValueFrame_O* obj_gc_safe = reinterpret_cast<core::ValueFrame_O*>(client);
    obj_gc_safe->~ValueFrame_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__LexicalEnvironment_O:
{
    core::LexicalEnvironment_O* obj_gc_safe = reinterpret_cast<core::LexicalEnvironment_O*>(client);
    obj_gc_safe->~LexicalEnvironment_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__CompileTimeEnvironment_O:
{
    core::CompileTimeEnvironment_O* obj_gc_safe = reinterpret_cast<core::CompileTimeEnvironment_O*>(client);
    obj_gc_safe->~CompileTimeEnvironment_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__MacroletEnvironment_O:
{
    core::MacroletEnvironment_O* obj_gc_safe = reinterpret_cast<core::MacroletEnvironment_O*>(client);
    obj_gc_safe->~MacroletEnvironment_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__FunctionContainerEnvironment_O:
{
    core::FunctionContainerEnvironment_O* obj_gc_safe = reinterpret_cast<core::FunctionContainerEnvironment_O*>(client);
    obj_gc_safe->~FunctionContainerEnvironment_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__UnwindProtectEnvironment_O:
{
    core::UnwindProtectEnvironment_O* obj_gc_safe = reinterpret_cast<core::UnwindProtectEnvironment_O*>(client);
    obj_gc_safe->~UnwindProtectEnvironment_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SymbolMacroletEnvironment_O:
{
    core::SymbolMacroletEnvironment_O* obj_gc_safe = reinterpret_cast<core::SymbolMacroletEnvironment_O*>(client);
    obj_gc_safe->~SymbolMacroletEnvironment_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__StackValueEnvironment_O:
{
    core::StackValueEnvironment_O* obj_gc_safe = reinterpret_cast<core::StackValueEnvironment_O*>(client);
    obj_gc_safe->~StackValueEnvironment_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__BlockEnvironment_O:
{
    core::BlockEnvironment_O* obj_gc_safe = reinterpret_cast<core::BlockEnvironment_O*>(client);
    obj_gc_safe->~BlockEnvironment_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__CatchEnvironment_O:
{
    core::CatchEnvironment_O* obj_gc_safe = reinterpret_cast<core::CatchEnvironment_O*>(client);
    obj_gc_safe->~CatchEnvironment_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__RuntimeVisibleEnvironment_O:
{
    core::RuntimeVisibleEnvironment_O* obj_gc_safe = reinterpret_cast<core::RuntimeVisibleEnvironment_O*>(client);
    obj_gc_safe->~RuntimeVisibleEnvironment_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__ValueEnvironment_O:
{
    core::ValueEnvironment_O* obj_gc_safe = reinterpret_cast<core::ValueEnvironment_O*>(client);
    obj_gc_safe->~ValueEnvironment_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__FunctionValueEnvironment_O:
{
    core::FunctionValueEnvironment_O* obj_gc_safe = reinterpret_cast<core::FunctionValueEnvironment_O*>(client);
    obj_gc_safe->~FunctionValueEnvironment_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__TagbodyEnvironment_O:
{
    core::TagbodyEnvironment_O* obj_gc_safe = reinterpret_cast<core::TagbodyEnvironment_O*>(client);
    obj_gc_safe->~TagbodyEnvironment_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__GlueEnvironment_O:
{
    core::GlueEnvironment_O* obj_gc_safe = reinterpret_cast<core::GlueEnvironment_O*>(client);
    obj_gc_safe->~GlueEnvironment_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__WeakKeyMapping_O:
{
    core::WeakKeyMapping_O* obj_gc_safe = reinterpret_cast<core::WeakKeyMapping_O*>(client);
    obj_gc_safe->~WeakKeyMapping_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__LambdaListHandler_O:
{
    core::LambdaListHandler_O* obj_gc_safe = reinterpret_cast<core::LambdaListHandler_O*>(client);
    obj_gc_safe->~LambdaListHandler_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__InsertPoint_O:
{
    llvmo::InsertPoint_O* obj_gc_safe = reinterpret_cast<llvmo::InsertPoint_O*>(client);
    obj_gc_safe->~InsertPoint_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SingleDispatchMethod_O:
{
    core::SingleDispatchMethod_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchMethod_O*>(client);
    obj_gc_safe->~SingleDispatchMethod_O();
    return;
}
obj_finalize_KIND_LISPALLOC_llvmo__Attribute_O:
{
    llvmo::Attribute_O* obj_gc_safe = reinterpret_cast<llvmo::Attribute_O*>(client);
    obj_gc_safe->~Attribute_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Character_dummy_O:
{
    core::Character_dummy_O* obj_gc_safe = reinterpret_cast<core::Character_dummy_O*>(client);
    obj_gc_safe->~Character_dummy_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SmallMultimap_O:
{
    core::SmallMultimap_O* obj_gc_safe = reinterpret_cast<core::SmallMultimap_O*>(client);
    obj_gc_safe->~SmallMultimap_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Binder_O:
{
    core::Binder_O* obj_gc_safe = reinterpret_cast<core::Binder_O*>(client);
    obj_gc_safe->~Binder_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Pathname_O:
{
    core::Pathname_O* obj_gc_safe = reinterpret_cast<core::Pathname_O*>(client);
    obj_gc_safe->~Pathname_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__LogicalPathname_O:
{
    core::LogicalPathname_O* obj_gc_safe = reinterpret_cast<core::LogicalPathname_O*>(client);
    obj_gc_safe->~LogicalPathname_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SourceManager_O:
{
    core::SourceManager_O* obj_gc_safe = reinterpret_cast<core::SourceManager_O*>(client);
    obj_gc_safe->~SourceManager_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__Record_O:
{
    core::Record_O* obj_gc_safe = reinterpret_cast<core::Record_O*>(client);
    obj_gc_safe->~Record_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__SmallMap_O:
{
    core::SmallMap_O* obj_gc_safe = reinterpret_cast<core::SmallMap_O*>(client);
    obj_gc_safe->~SmallMap_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__LightUserData_O:
{
    core::LightUserData_O* obj_gc_safe = reinterpret_cast<core::LightUserData_O*>(client);
    obj_gc_safe->~LightUserData_O();
    return;
}
obj_finalize_KIND_LISPALLOC_core__UserData_O:
{
    core::UserData_O* obj_gc_safe = reinterpret_cast<core::UserData_O*>(client);
    obj_gc_safe->~UserData_O();
    return;
}
obj_finalize_KIND_ROOTCLASSALLOC_asttooling__RegMap__RegistryMaps:
{
    asttooling::RegMap::RegistryMaps* obj_gc_safe = reinterpret_cast<asttooling::RegMap::RegistryMaps*>(client);
    obj_gc_safe->~RegistryMaps();
    return;
}
obj_finalize_KIND_CLASSALLOC_core__Cache:
{
    core::Cache* obj_gc_safe = reinterpret_cast<core::Cache*>(client);
    obj_gc_safe->~Cache();
    return;
}
obj_finalize_KIND_TEMPLATED_CLASSALLOC_core__Creator:
{
    core::Creator* obj_gc_safe = reinterpret_cast<core::Creator*>(client);
    obj_gc_safe->~Creator();
}
obj_finalize_KIND_CLASSALLOC_core__InstanceCreator:
{
    core::InstanceCreator* obj_gc_safe = reinterpret_cast<core::InstanceCreator*>(client);
    obj_gc_safe->~InstanceCreator();
    return;
}
obj_finalize_KIND_TEMPLATED_CLASSALLOC_clbind__ConstructorCreator:
{
    clbind::ConstructorCreator* obj_gc_safe = reinterpret_cast<clbind::ConstructorCreator*>(client);
    obj_gc_safe->~ConstructorCreator();
}
obj_finalize_KIND_CLASSALLOC_clbind__DummyCreator:
{
    clbind::DummyCreator* obj_gc_safe = reinterpret_cast<clbind::DummyCreator*>(client);
    obj_gc_safe->~DummyCreator();
    return;
}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyStretch_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyStretch>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFStretch_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFStretch_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>"));}
obj_finalize_KIND_CLASSALLOC_core__SingleDispatchGenericFunctionClosure:
{
    core::SingleDispatchGenericFunctionClosure* obj_gc_safe = reinterpret_cast<core::SingleDispatchGenericFunctionClosure*>(client);
    obj_gc_safe->~SingleDispatchGenericFunctionClosure();
    return;
}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Stereoisomer_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyNonbond_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyNonbond>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__RequiredArgument_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::RequiredArgument>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Entity_O>>>"));}
obj_finalize_KIND_CLASSALLOC_llvmo__CompiledClosure:
{
    llvmo::CompiledClosure* obj_gc_safe = reinterpret_cast<llvmo::CompiledClosure*>(client);
    obj_gc_safe->~CompiledClosure();
    return;
}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Str_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Str_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomInfo_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::AtomInfo>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__RegMap__SymbolMatcherDescriptorPair_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<asttooling::RegMap::SymbolMatcherDescriptorPair>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFItor_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFItor_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>"));}
obj_finalize_KIND_CLASSALLOC_asttooling__internal__OverloadedMatcherDescriptor:
{
    asttooling::internal::OverloadedMatcherDescriptor* obj_gc_safe = reinterpret_cast<asttooling::internal::OverloadedMatcherDescriptor*>(client);
    obj_gc_safe->~OverloadedMatcherDescriptor();
    return;
}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__FixedNonbondRestraint_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::FixedNonbondRestraint>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_asttooling__internal__MatcherDescriptor__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::tagged_pointer<asttooling::internal::MatcherDescriptor>>"));}
obj_finalize_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__2_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,2>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__ExceptionEntry_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::ExceptionEntry>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>"));}
obj_finalize_KIND_CLASSALLOC_core__MacroClosure:
{
    core::MacroClosure* obj_gc_safe = reinterpret_cast<core::MacroClosure*>(client);
    obj_gc_safe->~MacroClosure();
    return;
}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyDihedral_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyDihedral>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ParserValue_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<asttooling::ParserValue>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>"));}
obj_finalize_KIND_GCSTRING_gctools__GCString_moveable_char_:
{
    THROW_HARD_ERROR(BF("Should never finalize gcstrings gctools::GCString_moveable<char>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__RingClosingMate_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::RingClosingMate_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolClassPair_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::SymbolClassPair>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__KeyEntry_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::KeyEntry>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAtom_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyAtom>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFPtor_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFPtor_O>>"));}
obj_finalize_KIND_CLASSALLOC_asttooling__internal__VariadicOperatorMatcherDescriptor:
{
    asttooling::internal::VariadicOperatorMatcherDescriptor* obj_gc_safe = reinterpret_cast<asttooling::internal::VariadicOperatorMatcherDescriptor*>(client);
    obj_gc_safe->~VariadicOperatorMatcherDescriptor();
    return;
}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyImproperRestraint_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyImproperRestraint>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomPdbRec_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::AtomPdbRec>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFItor_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFItor_O>>"));}
obj_finalize_KIND_CLASSALLOC_core__InstanceClosure:
{
    core::InstanceClosure* obj_gc_safe = reinterpret_cast<core::InstanceClosure*>(client);
    obj_gc_safe->~InstanceClosure();
    return;
}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>"));}
obj_finalize_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__1_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,1>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolStorage_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::SymbolStorage>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ErrorContent_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<asttooling::ErrorContent>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyChiralRestraint_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyChiralRestraint>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>"));}
obj_finalize_KIND_CLASSALLOC_core__CoreExposer:
{
    core::CoreExposer* obj_gc_safe = reinterpret_cast<core::CoreExposer*>(client);
    obj_gc_safe->~CoreExposer();
    return;
}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ContextFrame_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<asttooling::ContextFrame>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>"));}
obj_finalize_KIND_CLASSALLOC_asttooling__internal__FixedArgCountMatcherDescriptor:
{
    asttooling::internal::FixedArgCountMatcherDescriptor* obj_gc_safe = reinterpret_cast<asttooling::internal::FixedArgCountMatcherDescriptor*>(client);
    obj_gc_safe->~FixedArgCountMatcherDescriptor();
    return;
}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__OptionalArgument_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::OptionalArgument>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAngle_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyAngle>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__T_O_P_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::T_O *>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>"));}
obj_finalize_KIND_CLASSALLOC_core__InterpretedClosure:
{
    core::InterpretedClosure* obj_gc_safe = reinterpret_cast<core::InterpretedClosure*>(client);
    obj_gc_safe->~InterpretedClosure();
    return;
}
obj_finalize_KIND_CLASSALLOC_asttooling__internal__FreeFuncMatcherDescriptor:
{
    asttooling::internal::FreeFuncMatcherDescriptor* obj_gc_safe = reinterpret_cast<asttooling::internal::FreeFuncMatcherDescriptor*>(client);
    obj_gc_safe->~FreeFuncMatcherDescriptor();
    return;
}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__DynamicBinding_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::DynamicBinding>"));}
obj_finalize_KIND_CLASSALLOC_core__VectorStepper:
{
    core::VectorStepper* obj_gc_safe = reinterpret_cast<core::VectorStepper*>(client);
    obj_gc_safe->~VectorStepper();
    return;
}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFStretch_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFStretch_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__AuxArgument_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::AuxArgument>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_core__SequenceStepper__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::tagged_pointer<core::SequenceStepper>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyAnchorRestraint>"));}
obj_finalize_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__0_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,0>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__KeywordArgument_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::KeywordArgument>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::StereoisomerAtoms_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SourceFileInfo_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::SourceFileInfo_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__CacheRecord_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::CacheRecord>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__ResidueOut_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::ResidueOut>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>"));}
obj_finalize_KIND_LISPALLOC_asttooling__DerivableFrontendActionFactory:
{
    asttooling::DerivableFrontendActionFactory* obj_gc_safe = reinterpret_cast<asttooling::DerivableFrontendActionFactory*>(client);
    obj_gc_safe->~DerivableFrontendActionFactory();
    return;
}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>"));}
obj_finalize_KIND_LISPALLOC_asttooling__DerivableMatchCallback:
{
    asttooling::DerivableMatchCallback* obj_gc_safe = reinterpret_cast<asttooling::DerivableMatchCallback*>(client);
    obj_gc_safe->~DerivableMatchCallback();
    return;
}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFPtor_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFPtor_O>>>"));}
obj_finalize_KIND_LISPALLOC_asttooling__DerivableASTFrontendAction:
{
    asttooling::DerivableASTFrontendAction* obj_gc_safe = reinterpret_cast<asttooling::DerivableASTFrontendAction*>(client);
    obj_gc_safe->~DerivableASTFrontendAction();
    return;
}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneTypeRule_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::OneTypeRule_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__Message_:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<asttooling::Message>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>"));}
obj_finalize_KIND_LISPALLOC_asttooling__DerivableSyntaxOnlyAction:
{
    asttooling::DerivableSyntaxOnlyAction* obj_gc_safe = reinterpret_cast<asttooling::DerivableSyntaxOnlyAction*>(client);
    obj_gc_safe->~DerivableSyntaxOnlyAction();
    return;
}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneMonomer_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::OneMonomer_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFAngle_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFAngle_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>"));}
obj_finalize_KIND_TEMPLATED_CLASSALLOC_core__BuiltinClosure:
{
    core::BuiltinClosure* obj_gc_safe = reinterpret_cast<core::BuiltinClosure*>(client);
    obj_gc_safe->~BuiltinClosure();
}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFAngle_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFAngle_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>"));}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfo_O__:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfo_O>>"));}
obj_finalize_KIND_CLASSALLOC_core__ConsStepper:
{
    core::ConsStepper* obj_gc_safe = reinterpret_cast<core::ConsStepper*>(client);
    obj_gc_safe->~ConsStepper();
    return;
}
obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___:
{
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>"));}
#endif // defined(GC_OBJ_FINALIZE)
#if defined(GC_OBJ_FINALIZE_HELPERS)

#endif // defined(GC_OBJ_FINALIZE_HELPERS)
#if defined(GC_OBJ_FINALIZE_TABLE)
static void* OBJ_FINALIZE_table[] = { 
  /* 4 */ &&obj_finalize_KIND_ROOTCLASSALLOC_clbind__detail__class_map,
  /* 5 */ &&obj_finalize_KIND_ROOTCLASSALLOC_core__Lisp_O,
  /* 6 */ &&obj_finalize_KIND_BOOTSTRAP_core__T_O,
  /* 7 */ &&obj_finalize_KIND_LISPALLOC_core__Regex_O,
  /* 8 */ &&obj_finalize_KIND_LISPALLOC_core__WeakHashTable_O,
  /* 9 */ &&obj_finalize_KIND_LISPALLOC_core__WeakKeyHashTable_O,
  /* 10 */ &&obj_finalize_KIND_LISPALLOC_core__Reader_O,
  /* 11 */ &&obj_finalize_KIND_LISPALLOC_core__CxxObject_O,
  /* 12 */ &&obj_finalize_KIND_LISPALLOC_units__Unit_O,
  /* 13 */ &&obj_finalize_KIND_LISPALLOC_units__NamedUnit_O,
  /* 14 */ &&obj_finalize_KIND_LISPALLOC_chem__AtomTable_O,
  /* 15 */ &&obj_finalize_KIND_LISPALLOC_chem__Command_O,
  /* 16 */ &&obj_finalize_KIND_LISPALLOC_chem__NVector_O,
  /* 17 */ &&obj_finalize_KIND_LISPALLOC_geom__OVector2_O,
  /* 18 */ &&obj_finalize_KIND_LISPALLOC_chem__MonomerContext_O,
  /* 19 */ &&obj_finalize_KIND_LISPALLOC_chem__FFNonbondCrossTermTable_O,
  /* 20 */ &&obj_finalize_KIND_LISPALLOC_chem__BondList_O,
  /* 21 */ &&obj_finalize_KIND_LISPALLOC_chem__CDFragment_O,
  /* 22 */ &&obj_finalize_KIND_LISPALLOC_chem__ResidueList_O,
  /* 23 */ &&obj_finalize_KIND_LISPALLOC_chem__Structure_Old_ListEntry_O,
  /* 24 */ &&obj_finalize_KIND_LISPALLOC_chem__ReadAmberParameters_O,
  /* 25 */ &&obj_finalize_KIND_LISPALLOC_chem__AtomIndexer_O,
  /* 26 */ &&obj_finalize_KIND_LISPALLOC_chem__Structure_Old_List_O,
  /* 27 */ &&obj_finalize_KIND_LISPALLOC_adapt__StringSet_O,
  /* 28 */ &&obj_finalize_KIND_LISPALLOC_chem__ChemInfoMatch_O,
  /* 29 */ &&obj_finalize_KIND_LISPALLOC_chem__SpanningLoop_O,
  /* 30 */ &&obj_finalize_KIND_LISPALLOC_chem__CDBond_O,
  /* 31 */ &&obj_finalize_KIND_LISPALLOC_chem__ForceField_O,
  /* 32 */ &&obj_finalize_KIND_LISPALLOC_chem__OneMonomer_O,
  /* 33 */ &&obj_finalize_KIND_LISPALLOC_chem__ReportBase_O,
  /* 34 */ &&obj_finalize_KIND_LISPALLOC_chem__MessageReport_O,
  /* 35 */ &&obj_finalize_KIND_LISPALLOC_chem__ForceMatchReport_O,
  /* 36 */ &&obj_finalize_KIND_LISPALLOC_chem__StepReport_O,
  /* 37 */ &&obj_finalize_KIND_LISPALLOC_chem__PathMessage_O,
  /* 38 */ &&obj_finalize_KIND_LISPALLOC_chem__FrameRecognizer_O,
  /* 39 */ &&obj_finalize_KIND_LISPALLOC_chem__StereoisomerAtom_O,
  /* 40 */ &&obj_finalize_KIND_LISPALLOC_chem__StereoisomerVirtualAtom_O,
  /* 41 */ &&obj_finalize_KIND_LISPALLOC_chem__MonomerCoordinates_O,
  /* 42 */ &&obj_finalize_KIND_LISPALLOC_chem__SearchStatistics_O,
  /* 43 */ &&obj_finalize_KIND_LISPALLOC_chem__AtomId_O,
  /* 44 */ &&obj_finalize_KIND_LISPALLOC_chem__TypeAssignmentRules_O,
  /* 45 */ &&obj_finalize_KIND_LISPALLOC_chem__WildElementDict_O,
  /* 46 */ &&obj_finalize_KIND_LISPALLOC_chem__SpecificContext_O,
  /* 47 */ &&obj_finalize_KIND_LISPALLOC_chem__CDText_O,
  /* 48 */ &&obj_finalize_KIND_LISPALLOC_chem__PdbMonomerConnectivity_O,
  /* 49 */ &&obj_finalize_KIND_LISPALLOC_units__Quantity_O,
  /* 50 */ &&obj_finalize_KIND_LISPALLOC_chem__Plug_O,
  /* 51 */ &&obj_finalize_KIND_LISPALLOC_chem__PlugWithMates_O,
  /* 52 */ &&obj_finalize_KIND_LISPALLOC_chem__OutPlug_O,
  /* 53 */ &&obj_finalize_KIND_LISPALLOC_chem__RingClosingPlug_O,
  /* 54 */ &&obj_finalize_KIND_LISPALLOC_chem__InPlug_O,
  /* 55 */ &&obj_finalize_KIND_LISPALLOC_chem__JumpPlug_O,
  /* 56 */ &&obj_finalize_KIND_LISPALLOC_geom__BoundingBox_O,
  /* 57 */ &&obj_finalize_KIND_LISPALLOC_chem__MinimizerLog_O,
  /* 58 */ &&obj_finalize_KIND_LISPALLOC_chem__ChemInfo_O,
  /* 59 */ &&obj_finalize_KIND_LISPALLOC_chem__ZMatrixEntry_O,
  /* 60 */ &&obj_finalize_KIND_LISPALLOC_chem__StereoInformation_O,
  /* 61 */ &&obj_finalize_KIND_LISPALLOC_chem__MacroModelFile_O,
  /* 62 */ &&obj_finalize_KIND_LISPALLOC_chem__PdbWriter_O,
  /* 63 */ &&obj_finalize_KIND_LISPALLOC_chem__ChemDraw_O,
  /* 64 */ &&obj_finalize_KIND_LISPALLOC_chem__AGEdge_O,
  /* 65 */ &&obj_finalize_KIND_LISPALLOC_chem__ConformationExplorerMatch_O,
  /* 66 */ &&obj_finalize_KIND_LISPALLOC_chem__ImproperTorsion_O,
  /* 67 */ &&obj_finalize_KIND_LISPALLOC_chem__ConstitutionAtoms_O,
  /* 68 */ &&obj_finalize_KIND_LISPALLOC_chem__CoordinateSystem_O,
  /* 69 */ &&obj_finalize_KIND_LISPALLOC_chem__ConformationCollectionEntry_O,
  /* 70 */ &&obj_finalize_KIND_LISPALLOC_chem__Restraint_O,
  /* 71 */ &&obj_finalize_KIND_LISPALLOC_chem__RestraintAngle_O,
  /* 72 */ &&obj_finalize_KIND_LISPALLOC_chem__RestraintAnchor_O,
  /* 73 */ &&obj_finalize_KIND_LISPALLOC_chem__RestraintFixedNonbond_O,
  /* 74 */ &&obj_finalize_KIND_LISPALLOC_chem__RestraintChiral_O,
  /* 75 */ &&obj_finalize_KIND_LISPALLOC_chem__RestraintDihedral_O,
  /* 76 */ &&obj_finalize_KIND_LISPALLOC_chem__RestraintDistance_O,
  /* 77 */ &&obj_finalize_KIND_LISPALLOC_chem__ChemInfoNode_O,
  /* 78 */ &&obj_finalize_KIND_LISPALLOC_chem__RootMatchNode_O,
  /* 79 */ &&obj_finalize_KIND_LISPALLOC_chem__AfterMatchBondTest_O,
  /* 80 */ &&obj_finalize_KIND_LISPALLOC_chem__BondMatchNode_O,
  /* 81 */ &&obj_finalize_KIND_LISPALLOC_chem__AtomOrBondMatchNode_O,
  /* 82 */ &&obj_finalize_KIND_LISPALLOC_chem__TagSet_O,
  /* 83 */ &&obj_finalize_KIND_LISPALLOC_chem__Root_O,
  /* 84 */ &&obj_finalize_KIND_LISPALLOC_chem__SmartsRoot_O,
  /* 85 */ &&obj_finalize_KIND_LISPALLOC_chem__AntechamberRoot_O,
  /* 86 */ &&obj_finalize_KIND_LISPALLOC_chem__ResidueTest_O,
  /* 87 */ &&obj_finalize_KIND_LISPALLOC_chem__AntechamberFocusAtomMatch_O,
  /* 88 */ &&obj_finalize_KIND_LISPALLOC_chem__RingTest_O,
  /* 89 */ &&obj_finalize_KIND_LISPALLOC_chem__AtomTest_O,
  /* 90 */ &&obj_finalize_KIND_LISPALLOC_chem__Logical_O,
  /* 91 */ &&obj_finalize_KIND_LISPALLOC_chem__BondTest_O,
  /* 92 */ &&obj_finalize_KIND_LISPALLOC_chem__AntechamberBondTest_O,
  /* 93 */ &&obj_finalize_KIND_LISPALLOC_chem__BondListMatchNode_O,
  /* 94 */ &&obj_finalize_KIND_LISPALLOC_chem__Branch_O,
  /* 95 */ &&obj_finalize_KIND_LISPALLOC_chem__Chain_O,
  /* 96 */ &&obj_finalize_KIND_LISPALLOC_chem__Minimizer_O,
  /* 97 */ &&obj_finalize_KIND_LISPALLOC_chem__Oligomer_O,
  /* 98 */ &&obj_finalize_KIND_LISPALLOC_chem__ConstitutionBond_O,
  /* 99 */ &&obj_finalize_KIND_LISPALLOC_chem__Entity_O,
  /* 100 */ &&obj_finalize_KIND_LISPALLOC_chem__EntityNameSetBase_O,
  /* 101 */ &&obj_finalize_KIND_LISPALLOC_chem__EntityNameSetWithCap_O,
  /* 102 */ &&obj_finalize_KIND_LISPALLOC_chem__RingClosingMate_O,
  /* 103 */ &&obj_finalize_KIND_LISPALLOC_chem__Mate_O,
  /* 104 */ &&obj_finalize_KIND_LISPALLOC_chem__EntityNameSet_O,
  /* 105 */ &&obj_finalize_KIND_LISPALLOC_chem__RepresentedEntityNameSet_O,
  /* 106 */ &&obj_finalize_KIND_LISPALLOC_chem__MonomerPack_O,
  /* 107 */ &&obj_finalize_KIND_LISPALLOC_chem__Monomer_O,
  /* 108 */ &&obj_finalize_KIND_LISPALLOC_chem__MultiMonomer_O,
  /* 109 */ &&obj_finalize_KIND_LISPALLOC_chem__Stereoisomer_O,
  /* 110 */ &&obj_finalize_KIND_LISPALLOC_chem__Constitution_O,
  /* 111 */ &&obj_finalize_KIND_LISPALLOC_units__Dimension_O,
  /* 112 */ &&obj_finalize_KIND_LISPALLOC_geom__OMatrix_O,
  /* 113 */ &&obj_finalize_KIND_LISPALLOC_chem__StereoisomerAtoms_O,
  /* 114 */ &&obj_finalize_KIND_LISPALLOC_chem__ConformationExplorerEntry_O,
  /* 115 */ &&obj_finalize_KIND_LISPALLOC_chem__AtomReferenceBase_O,
  /* 116 */ &&obj_finalize_KIND_LISPALLOC_chem__AtomReference_O,
  /* 117 */ &&obj_finalize_KIND_LISPALLOC_chem__CDNode_O,
  /* 118 */ &&obj_finalize_KIND_LISPALLOC_chem__TrajectoryFrame_O,
  /* 119 */ &&obj_finalize_KIND_LISPALLOC_chem__EnergyComponent_O,
  /* 120 */ &&obj_finalize_KIND_LISPALLOC_chem__EnergyChiralRestraint_O,
  /* 121 */ &&obj_finalize_KIND_LISPALLOC_chem__EnergyImproperRestraint_O,
  /* 122 */ &&obj_finalize_KIND_LISPALLOC_chem__EnergyAnchorRestraint_O,
  /* 123 */ &&obj_finalize_KIND_LISPALLOC_chem__EnergyAngle_O,
  /* 124 */ &&obj_finalize_KIND_LISPALLOC_chem__EnergyDihedral_O,
  /* 125 */ &&obj_finalize_KIND_LISPALLOC_chem__EnergyStretch_O,
  /* 126 */ &&obj_finalize_KIND_LISPALLOC_chem__EnergyNonbond_O,
  /* 127 */ &&obj_finalize_KIND_LISPALLOC_chem__EnergyFixedNonbondRestraint_O,
  /* 128 */ &&obj_finalize_KIND_LISPALLOC_chem__PdbMonomerDatabase_O,
  /* 129 */ &&obj_finalize_KIND_LISPALLOC_chem__Coupling_O,
  /* 130 */ &&obj_finalize_KIND_LISPALLOC_chem__DirectionalCoupling_O,
  /* 131 */ &&obj_finalize_KIND_LISPALLOC_chem__RingCoupling_O,
  /* 132 */ &&obj_finalize_KIND_LISPALLOC_chem__PdbReader_O,
  /* 133 */ &&obj_finalize_KIND_LISPALLOC_chem__ZMatrixInternal_O,
  /* 134 */ &&obj_finalize_KIND_LISPALLOC_chem__ZMatrixBondInternal_O,
  /* 135 */ &&obj_finalize_KIND_LISPALLOC_chem__ZMatrixAngleInternal_O,
  /* 136 */ &&obj_finalize_KIND_LISPALLOC_chem__ZMatrixDihedralInternal_O,
  /* 137 */ &&obj_finalize_KIND_LISPALLOC_chem__CipPrioritizer_O,
  /* 138 */ &&obj_finalize_KIND_LISPALLOC_chem__Matter_O,
  /* 139 */ &&obj_finalize_KIND_LISPALLOC_chem__Residue_O,
  /* 140 */ &&obj_finalize_KIND_LISPALLOC_chem__Aggregate_O,
  /* 141 */ &&obj_finalize_KIND_LISPALLOC_chem__Atom_O,
  /* 142 */ &&obj_finalize_KIND_LISPALLOC_chem__VirtualAtom_O,
  /* 143 */ &&obj_finalize_KIND_LISPALLOC_chem__Molecule_O,
  /* 144 */ &&obj_finalize_KIND_LISPALLOC_chem__Bond_O,
  /* 145 */ &&obj_finalize_KIND_LISPALLOC_chem__AGVertex_O,
  /* 146 */ &&obj_finalize_KIND_LISPALLOC_chem__Alias_O,
  /* 147 */ &&obj_finalize_KIND_LISPALLOC_chem__CandoDatabase_O,
  /* 148 */ &&obj_finalize_KIND_LISPALLOC_chem__ProperTorsion_O,
  /* 149 */ &&obj_finalize_KIND_LISPALLOC_geom__OVector3_O,
  /* 150 */ &&obj_finalize_KIND_LISPALLOC_chem__ComplexRestraint_O,
  /* 151 */ &&obj_finalize_KIND_LISPALLOC_chem__RestrainedExoCyclicAtom_O,
  /* 152 */ &&obj_finalize_KIND_LISPALLOC_chem__RestrainedPiBond_O,
  /* 153 */ &&obj_finalize_KIND_LISPALLOC_chem__EnergyFunction_O,
  /* 154 */ &&obj_finalize_KIND_LISPALLOC_chem__ZMatrix_O,
  /* 155 */ &&obj_finalize_KIND_LISPALLOC_chem__StatusTracker_O,
  /* 156 */ &&obj_finalize_KIND_LISPALLOC_chem__OneTypeRule_O,
  /* 157 */ &&obj_finalize_KIND_LISPALLOC_chem__OligomerPart_Base_O,
  /* 158 */ &&obj_finalize_KIND_LISPALLOC_chem__OligomerPart_Monomer_O,
  /* 159 */ &&obj_finalize_KIND_LISPALLOC_chem__OligomerPart_Link_O,
  /* 160 */ &&obj_finalize_KIND_LISPALLOC_adapt__SymbolList_O,
  /* 161 */ &&obj_finalize_KIND_LISPALLOC_chem__ConformationCollection_O,
  /* 162 */ &&obj_finalize_KIND_LISPALLOC_chem__SuperposableConformationCollection_O,
  /* 163 */ &&obj_finalize_KIND_LISPALLOC_chem__InfoDb_O,
  /* 164 */ &&obj_finalize_KIND_LISPALLOC_chem__ConformationExplorer_O,
  /* 165 */ &&obj_finalize_KIND_LISPALLOC_geom__Color_O,
  /* 166 */ &&obj_finalize_KIND_LISPALLOC_chem__ConstitutionAtom_O,
  /* 167 */ &&obj_finalize_KIND_LISPALLOC_chem__ConstitutionVirtualAtom_O,
  /* 168 */ &&obj_finalize_KIND_LISPALLOC_chem__NumericalFunction_O,
  /* 169 */ &&obj_finalize_KIND_LISPALLOC_chem__AbstractLargeSquareMatrix_O,
  /* 170 */ &&obj_finalize_KIND_LISPALLOC_chem__SparseLargeSquareMatrix_O,
  /* 171 */ &&obj_finalize_KIND_LISPALLOC_chem__FullLargeSquareMatrix_O,
  /* 172 */ &&obj_finalize_KIND_LISPALLOC_chem__TwisterDriver_O,
  /* 173 */ &&obj_finalize_KIND_LISPALLOC_chem__VirtualSphere_O,
  /* 174 */ &&obj_finalize_KIND_LISPALLOC_chem__Rotamer_O,
  /* 175 */ &&obj_finalize_KIND_LISPALLOC_chem__StereoConfiguration_O,
  /* 176 */ &&obj_finalize_KIND_LISPALLOC_chem__Topology_O,
  /* 177 */ &&obj_finalize_KIND_LISPALLOC_chem__Trajectory_O,
  /* 178 */ &&obj_finalize_KIND_LISPALLOC_chem__MapOfMonomerNamesToAtomIndexers_O,
  /* 179 */ &&obj_finalize_KIND_LISPALLOC_chem__RingFinder_O,
  /* 180 */ &&obj_finalize_KIND_LISPALLOC_chem__Twister_O,
  /* 181 */ &&obj_finalize_KIND_LISPALLOC_chem__FFBaseDb_O,
  /* 182 */ &&obj_finalize_KIND_LISPALLOC_chem__FFStretchDb_O,
  /* 183 */ &&obj_finalize_KIND_LISPALLOC_chem__FFTypesDb_O,
  /* 184 */ &&obj_finalize_KIND_LISPALLOC_chem__FFPtorDb_O,
  /* 185 */ &&obj_finalize_KIND_LISPALLOC_chem__FFItorDb_O,
  /* 186 */ &&obj_finalize_KIND_LISPALLOC_chem__FFAngleDb_O,
  /* 187 */ &&obj_finalize_KIND_LISPALLOC_chem__FFNonbondDb_O,
  /* 188 */ &&obj_finalize_KIND_LISPALLOC_chem__FFVdwDb_O,
  /* 189 */ &&obj_finalize_KIND_LISPALLOC_chem__SuperposeEngine_O,
  /* 190 */ &&obj_finalize_KIND_LISPALLOC_chem__SuperposeSelectedAtoms_O,
  /* 191 */ &&obj_finalize_KIND_LISPALLOC_chem__CalculatePosition_O,
  /* 192 */ &&obj_finalize_KIND_LISPALLOC_chem__CalculatePositionUsingInternals_O,
  /* 193 */ &&obj_finalize_KIND_LISPALLOC_chem__CalculatePositionRelativeToOrigin_O,
  /* 194 */ &&obj_finalize_KIND_LISPALLOC_chem__CalculatePositionAlongBond_O,
  /* 195 */ &&obj_finalize_KIND_LISPALLOC_chem__FFParameter_O,
  /* 196 */ &&obj_finalize_KIND_LISPALLOC_chem__FFStretch_O,
  /* 197 */ &&obj_finalize_KIND_LISPALLOC_chem__FFAngle_O,
  /* 198 */ &&obj_finalize_KIND_LISPALLOC_chem__FFVdw_O,
  /* 199 */ &&obj_finalize_KIND_LISPALLOC_chem__FFNonbond_O,
  /* 200 */ &&obj_finalize_KIND_LISPALLOC_chem__FFPtor_O,
  /* 201 */ &&obj_finalize_KIND_LISPALLOC_chem__FFItor_O,
  /* 202 */ &&obj_finalize_KIND_LISPALLOC_chem__SpecificContextSet_O,
  /* 203 */ &&obj_finalize_KIND_LISPALLOC_chem__ConformationExplorerEntryStage_O,
  /* 204 */ &&obj_finalize_KIND_LISPALLOC_chem__Angle_O,
  /* 205 */ &&obj_finalize_KIND_LISPALLOC_adapt__QDomNode_O,
  /* 206 */ &&obj_finalize_KIND_LISPALLOC_chem__StructureComparer_O,
  /* 207 */ &&obj_finalize_KIND_LISPALLOC_chem__AtomIdToAtomMap_O,
  /* 208 */ &&obj_finalize_KIND_LISPALLOC_core__Array_O,
  /* 209 */ &&obj_finalize_KIND_LISPALLOC_core__ArrayDisplaced_O,
  /* 210 */ &&obj_finalize_KIND_LISPALLOC_core__ArrayObjects_O,
  /* 211 */ &&obj_finalize_KIND_LISPALLOC_core__Vector_O,
  /* 212 */ &&obj_finalize_KIND_LISPALLOC_core__VectorDisplaced_O,
  /* 213 */ &&obj_finalize_KIND_LISPALLOC_core__VectorObjects_O,
  /* 214 */ &&obj_finalize_KIND_LISPALLOC_core__VectorObjectsWithFillPtr_O,
  /* 215 */ &&obj_finalize_KIND_LISPALLOC_core__BitVector_O,
  /* 216 */ &&obj_finalize_KIND_LISPALLOC_core__BitVectorWithFillPtr_O,
  /* 217 */ &&obj_finalize_KIND_LISPALLOC_core__SimpleBitVector_O,
  /* 218 */ &&obj_finalize_KIND_LISPALLOC_core__String_O,
  /* 219 */ &&obj_finalize_KIND_BOOTSTRAP_core__Str_O,
  /* 220 */ &&obj_finalize_KIND_LISPALLOC_core__StrWithFillPtr_O,
  /* 221 */ &&obj_finalize_KIND_LISPALLOC_geom__CoordinateArray_O,
  /* 222 */ &&obj_finalize_KIND_LISPALLOC_geom__CoordinateArrayWithHash_O,
  /* 223 */ &&obj_finalize_KIND_LISPALLOC_core__SNode_O,
  /* 224 */ &&obj_finalize_KIND_LISPALLOC_core__BranchSNode_O,
  /* 225 */ &&obj_finalize_KIND_LISPALLOC_core__LeafSNode_O,
  /* 226 */ &&obj_finalize_KIND_LISPALLOC_asttooling__AstVisitor_O,
  /* 227 */ &&obj_finalize_KIND_LISPALLOC_llvmo__AttributeSet_O,
  /* 228 */ &&obj_finalize_KIND_LISPALLOC_core__Package_O,
  /* 229 */ &&obj_finalize_KIND_TEMPLATED_LISPALLOC_core__WrappedPointer_O,
  /* 230 */ &&obj_finalize_KIND_LISPALLOC_core__RegexMatch_O,
  /* 231 */ &&obj_finalize_KIND_LISPALLOC_core__DirectoryEntry_O,
  /* 232 */ &&obj_finalize_KIND_LISPALLOC_clbind__ClassRegistry_O,
  /* 233 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DebugInfo_O,
  /* 234 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DISubprogram_O,
  /* 235 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DIDescriptor_O,
  /* 236 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DIType_O,
  /* 237 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DISubroutineType_O,
  /* 238 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DICompileUnit_O,
  /* 239 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DIDerivedType_O,
  /* 240 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DIArray_O,
  /* 241 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DIBasicType_O,
  /* 242 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DICompositeType_O,
  /* 243 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DITypeArray_O,
  /* 244 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DILexicalBlock_O,
  /* 245 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DIFile_O,
  /* 246 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DIScope_O,
  /* 247 */ &&obj_finalize_KIND_BOOTSTRAP_core__StandardObject_O,
  /* 248 */ &&obj_finalize_KIND_BOOTSTRAP_core__Metaobject_O,
  /* 249 */ &&obj_finalize_KIND_BOOTSTRAP_core__Specializer_O,
  /* 250 */ &&obj_finalize_KIND_BOOTSTRAP_core__Class_O,
  /* 251 */ &&obj_finalize_KIND_LISPALLOC_core__ForwardReferencedClass_O,
  /* 252 */ &&obj_finalize_KIND_LISPALLOC_core__CxxClass_O,
  /* 253 */ &&obj_finalize_KIND_BOOTSTRAP_core__StdClass_O,
  /* 254 */ &&obj_finalize_KIND_LISPALLOC_core__FuncallableStandardClass_O,
  /* 255 */ &&obj_finalize_KIND_BOOTSTRAP_core__StandardClass_O,
  /* 256 */ &&obj_finalize_KIND_BOOTSTRAP_core__StructureClass_O,
  /* 257 */ &&obj_finalize_KIND_BOOTSTRAP_core__BuiltInClass_O,
  /* 258 */ &&obj_finalize_KIND_LISPALLOC_clbind__ClassRep_O,
  /* 259 */ &&obj_finalize_KIND_LISPALLOC_core__LoadTimeValues_O,
  /* 260 */ &&obj_finalize_KIND_LISPALLOC_adapt__SymbolSet_O,
  /* 261 */ &&obj_finalize_KIND_LISPALLOC_core__SourcePosInfo_O,
  /* 262 */ &&obj_finalize_KIND_LISPALLOC_core__MultiStringBuffer_O,
  /* 263 */ &&obj_finalize_KIND_TEMPLATED_LISPALLOC_core__Iterator_O,
  /* 264 */ &&obj_finalize_KIND_LISPALLOC_core__RecursiveDirectoryIterator_O,
  /* 265 */ &&obj_finalize_KIND_LISPALLOC_chem__IterateRestraints_O,
  /* 266 */ &&obj_finalize_KIND_LISPALLOC_chem__IterateMatter_O,
  /* 267 */ &&obj_finalize_KIND_LISPALLOC_chem__IterateResidues_O,
  /* 268 */ &&obj_finalize_KIND_LISPALLOC_chem__IterateBonds_O,
  /* 269 */ &&obj_finalize_KIND_LISPALLOC_chem__IterateAtoms_O,
  /* 270 */ &&obj_finalize_KIND_LISPALLOC_core__DirectoryIterator_O,
  /* 271 */ &&obj_finalize_KIND_LISPALLOC_adapt__IterateCons_O,
  /* 272 */ &&obj_finalize_KIND_LISPALLOC_core__FileStatus_O,
  /* 273 */ &&obj_finalize_KIND_LISPALLOC_adapt__StringList_O,
  /* 274 */ &&obj_finalize_KIND_LISPALLOC_core__Stream_O,
  /* 275 */ &&obj_finalize_KIND_LISPALLOC_core__AnsiStream_O,
  /* 276 */ &&obj_finalize_KIND_LISPALLOC_core__EchoStream_O,
  /* 277 */ &&obj_finalize_KIND_LISPALLOC_core__SynonymStream_O,
  /* 278 */ &&obj_finalize_KIND_LISPALLOC_core__BroadcastStream_O,
  /* 279 */ &&obj_finalize_KIND_LISPALLOC_core__StringStream_O,
  /* 280 */ &&obj_finalize_KIND_LISPALLOC_core__StringInputStream_O,
  /* 281 */ &&obj_finalize_KIND_LISPALLOC_core__StringOutputStream_O,
  /* 282 */ &&obj_finalize_KIND_LISPALLOC_core__TwoWayStream_O,
  /* 283 */ &&obj_finalize_KIND_LISPALLOC_core__FileStream_O,
  /* 284 */ &&obj_finalize_KIND_LISPALLOC_core__IOStreamStream_O,
  /* 285 */ &&obj_finalize_KIND_LISPALLOC_core__IOFileStream_O,
  /* 286 */ &&obj_finalize_KIND_LISPALLOC_core__ConcatenatedStream_O,
  /* 287 */ &&obj_finalize_KIND_LISPALLOC_core__Cons_O,
  /* 288 */ &&obj_finalize_KIND_LISPALLOC_cffi__Pointer_O,
  /* 289 */ &&obj_finalize_KIND_LISPALLOC_core__SourceFileInfo_O,
  /* 290 */ &&obj_finalize_KIND_LISPALLOC_core__Path_O,
  /* 291 */ &&obj_finalize_KIND_LISPALLOC_core__StructureObject_O,
  /* 292 */ &&obj_finalize_KIND_LISPALLOC_core__InvocationHistoryFrameIterator_O,
  /* 293 */ &&obj_finalize_KIND_LISPALLOC_core__RandomState_O,
  /* 294 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DebugLoc_O,
  /* 295 */ &&obj_finalize_KIND_LISPALLOC_core__Function_O,
  /* 296 */ &&obj_finalize_KIND_LISPALLOC_core__SingleDispatchGenericFunction_O,
  /* 297 */ &&obj_finalize_KIND_LISPALLOC_core__SpecialForm_O,
  /* 298 */ &&obj_finalize_KIND_LISPALLOC_core__Instance_O,
  /* 299 */ &&obj_finalize_KIND_LISPALLOC_core__CompiledFunction_O,
  /* 300 */ &&obj_finalize_KIND_LISPALLOC_core__SingleDispatchEffectiveMethodFunction_O,
  /* 301 */ &&obj_finalize_KIND_LISPALLOC_core__WeakPointer_O,
  /* 302 */ &&obj_finalize_KIND_LISPALLOC_core__Pointer_O,
  /* 303 */ &&obj_finalize_KIND_LISPALLOC_core__VaList_dummy_O,
  /* 304 */ &&obj_finalize_KIND_LISPALLOC_core__ExternalObject_O,
  /* 305 */ &&obj_finalize_KIND_LISPALLOC_llvmo__TargetOptions_O,
  /* 306 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DIBuilder_O,
  /* 307 */ &&obj_finalize_KIND_LISPALLOC_llvmo__Pass_O,
  /* 308 */ &&obj_finalize_KIND_LISPALLOC_llvmo__ModulePass_O,
  /* 309 */ &&obj_finalize_KIND_LISPALLOC_llvmo__ImmutablePass_O,
  /* 310 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DataLayoutPass_O,
  /* 311 */ &&obj_finalize_KIND_LISPALLOC_llvmo__TargetLibraryInfo_O,
  /* 312 */ &&obj_finalize_KIND_LISPALLOC_llvmo__FunctionPass_O,
  /* 313 */ &&obj_finalize_KIND_LISPALLOC_llvmo__Linker_O,
  /* 314 */ &&obj_finalize_KIND_LISPALLOC_llvmo__Module_O,
  /* 315 */ &&obj_finalize_KIND_LISPALLOC_llvmo__APFloat_O,
  /* 316 */ &&obj_finalize_KIND_LISPALLOC_llvmo__LLVMContext_O,
  /* 317 */ &&obj_finalize_KIND_LISPALLOC_llvmo__Target_O,
  /* 318 */ &&obj_finalize_KIND_LISPALLOC_llvmo__APInt_O,
  /* 319 */ &&obj_finalize_KIND_LISPALLOC_llvmo__PassManagerBase_O,
  /* 320 */ &&obj_finalize_KIND_LISPALLOC_llvmo__FunctionPassManager_O,
  /* 321 */ &&obj_finalize_KIND_LISPALLOC_llvmo__PassManager_O,
  /* 322 */ &&obj_finalize_KIND_LISPALLOC_llvmo__Value_O,
  /* 323 */ &&obj_finalize_KIND_LISPALLOC_llvmo__Argument_O,
  /* 324 */ &&obj_finalize_KIND_LISPALLOC_llvmo__User_O,
  /* 325 */ &&obj_finalize_KIND_LISPALLOC_llvmo__Constant_O,
  /* 326 */ &&obj_finalize_KIND_LISPALLOC_llvmo__ConstantInt_O,
  /* 327 */ &&obj_finalize_KIND_LISPALLOC_llvmo__ConstantFP_O,
  /* 328 */ &&obj_finalize_KIND_LISPALLOC_llvmo__GlobalValue_O,
  /* 329 */ &&obj_finalize_KIND_LISPALLOC_llvmo__GlobalVariable_O,
  /* 330 */ &&obj_finalize_KIND_LISPALLOC_llvmo__Function_O,
  /* 331 */ &&obj_finalize_KIND_LISPALLOC_llvmo__ConstantArray_O,
  /* 332 */ &&obj_finalize_KIND_LISPALLOC_llvmo__ConstantStruct_O,
  /* 333 */ &&obj_finalize_KIND_LISPALLOC_llvmo__UndefValue_O,
  /* 334 */ &&obj_finalize_KIND_LISPALLOC_llvmo__ConstantPointerNull_O,
  /* 335 */ &&obj_finalize_KIND_LISPALLOC_llvmo__ConstantExpr_O,
  /* 336 */ &&obj_finalize_KIND_LISPALLOC_llvmo__BlockAddress_O,
  /* 337 */ &&obj_finalize_KIND_LISPALLOC_llvmo__ConstantDataSequential_O,
  /* 338 */ &&obj_finalize_KIND_LISPALLOC_llvmo__ConstantDataArray_O,
  /* 339 */ &&obj_finalize_KIND_LISPALLOC_llvmo__Instruction_O,
  /* 340 */ &&obj_finalize_KIND_LISPALLOC_llvmo__PHINode_O,
  /* 341 */ &&obj_finalize_KIND_LISPALLOC_llvmo__LandingPadInst_O,
  /* 342 */ &&obj_finalize_KIND_LISPALLOC_llvmo__AtomicCmpXchgInst_O,
  /* 343 */ &&obj_finalize_KIND_LISPALLOC_llvmo__TerminatorInst_O,
  /* 344 */ &&obj_finalize_KIND_LISPALLOC_llvmo__UnreachableInst_O,
  /* 345 */ &&obj_finalize_KIND_LISPALLOC_llvmo__InvokeInst_O,
  /* 346 */ &&obj_finalize_KIND_LISPALLOC_llvmo__BranchInst_O,
  /* 347 */ &&obj_finalize_KIND_LISPALLOC_llvmo__IndirectBrInst_O,
  /* 348 */ &&obj_finalize_KIND_LISPALLOC_llvmo__ResumeInst_O,
  /* 349 */ &&obj_finalize_KIND_LISPALLOC_llvmo__SwitchInst_O,
  /* 350 */ &&obj_finalize_KIND_LISPALLOC_llvmo__ReturnInst_O,
  /* 351 */ &&obj_finalize_KIND_LISPALLOC_llvmo__FenceInst_O,
  /* 352 */ &&obj_finalize_KIND_LISPALLOC_llvmo__AtomicRMWInst_O,
  /* 353 */ &&obj_finalize_KIND_LISPALLOC_llvmo__StoreInst_O,
  /* 354 */ &&obj_finalize_KIND_LISPALLOC_llvmo__UnaryInstruction_O,
  /* 355 */ &&obj_finalize_KIND_LISPALLOC_llvmo__VAArgInst_O,
  /* 356 */ &&obj_finalize_KIND_LISPALLOC_llvmo__AllocaInst_O,
  /* 357 */ &&obj_finalize_KIND_LISPALLOC_llvmo__LoadInst_O,
  /* 358 */ &&obj_finalize_KIND_LISPALLOC_llvmo__CallInst_O,
  /* 359 */ &&obj_finalize_KIND_LISPALLOC_llvmo__BasicBlock_O,
  /* 360 */ &&obj_finalize_KIND_LISPALLOC_llvmo__IRBuilderBase_O,
  /* 361 */ &&obj_finalize_KIND_LISPALLOC_llvmo__IRBuilder_O,
  /* 362 */ &&obj_finalize_KIND_LISPALLOC_llvmo__MCSubtargetInfo_O,
  /* 363 */ &&obj_finalize_KIND_LISPALLOC_llvmo__TargetSubtargetInfo_O,
  /* 364 */ &&obj_finalize_KIND_LISPALLOC_llvmo__EngineBuilder_O,
  /* 365 */ &&obj_finalize_KIND_LISPALLOC_llvmo__DataLayout_O,
  /* 366 */ &&obj_finalize_KIND_LISPALLOC_llvmo__Triple_O,
  /* 367 */ &&obj_finalize_KIND_LISPALLOC_llvmo__TargetMachine_O,
  /* 368 */ &&obj_finalize_KIND_LISPALLOC_llvmo__LLVMTargetMachine_O,
  /* 369 */ &&obj_finalize_KIND_LISPALLOC_llvmo__Type_O,
  /* 370 */ &&obj_finalize_KIND_LISPALLOC_llvmo__CompositeType_O,
  /* 371 */ &&obj_finalize_KIND_LISPALLOC_llvmo__StructType_O,
  /* 372 */ &&obj_finalize_KIND_LISPALLOC_llvmo__SequentialType_O,
  /* 373 */ &&obj_finalize_KIND_LISPALLOC_llvmo__PointerType_O,
  /* 374 */ &&obj_finalize_KIND_LISPALLOC_llvmo__ArrayType_O,
  /* 375 */ &&obj_finalize_KIND_LISPALLOC_llvmo__VectorType_O,
  /* 376 */ &&obj_finalize_KIND_LISPALLOC_llvmo__FunctionType_O,
  /* 377 */ &&obj_finalize_KIND_LISPALLOC_llvmo__IntegerType_O,
  /* 378 */ &&obj_finalize_KIND_LISPALLOC_llvmo__Metadata_O,
  /* 379 */ &&obj_finalize_KIND_LISPALLOC_llvmo__ValueAsMetadata_O,
  /* 380 */ &&obj_finalize_KIND_LISPALLOC_llvmo__MDString_O,
  /* 381 */ &&obj_finalize_KIND_LISPALLOC_llvmo__MDNode_O,
  /* 382 */ &&obj_finalize_KIND_LISPALLOC_llvmo__NamedMDNode_O,
  /* 383 */ &&obj_finalize_KIND_LISPALLOC_llvmo__ExecutionEngine_O,
  /* 384 */ &&obj_finalize_KIND_LISPALLOC_core__ForeignData_O,
  /* 385 */ &&obj_finalize_KIND_LISPALLOC_llvmo__PassManagerBuilder_O,
  /* 386 */ &&obj_finalize_KIND_LISPALLOC_adapt__ObjectSet_O,
  /* 387 */ &&obj_finalize_KIND_LISPALLOC_core__IntArray_O,
  /* 388 */ &&obj_finalize_KIND_LISPALLOC_core__PosixTime_O,
  /* 389 */ &&obj_finalize_KIND_BOOTSTRAP_core__Symbol_O,
  /* 390 */ &&obj_finalize_KIND_LISPALLOC_core__Null_O,
  /* 391 */ &&obj_finalize_KIND_LISPALLOC_adapt__IndexedObjectBag_O,
  /* 392 */ &&obj_finalize_KIND_LISPALLOC_core__PosixTimeDuration_O,
  /* 393 */ &&obj_finalize_KIND_LISPALLOC_core__SymbolToEnumConverter_O,
  /* 394 */ &&obj_finalize_KIND_LISPALLOC_core__ReadTable_O,
  /* 395 */ &&obj_finalize_KIND_LISPALLOC_core__Number_O,
  /* 396 */ &&obj_finalize_KIND_LISPALLOC_core__Complex_O,
  /* 397 */ &&obj_finalize_KIND_LISPALLOC_core__Real_O,
  /* 398 */ &&obj_finalize_KIND_LISPALLOC_core__Float_O,
  /* 399 */ &&obj_finalize_KIND_LISPALLOC_core__SingleFloat_dummy_O,
  /* 400 */ &&obj_finalize_KIND_LISPALLOC_core__LongFloat_O,
  /* 401 */ &&obj_finalize_KIND_LISPALLOC_core__ShortFloat_O,
  /* 402 */ &&obj_finalize_KIND_LISPALLOC_core__DoubleFloat_O,
  /* 403 */ &&obj_finalize_KIND_LISPALLOC_core__Rational_O,
  /* 404 */ &&obj_finalize_KIND_LISPALLOC_core__Integer_O,
  /* 405 */ &&obj_finalize_KIND_LISPALLOC_core__Bignum_O,
  /* 406 */ &&obj_finalize_KIND_LISPALLOC_core__Fixnum_dummy_O,
  /* 407 */ &&obj_finalize_KIND_LISPALLOC_core__Ratio_O,
  /* 408 */ &&obj_finalize_KIND_LISPALLOC_core__CandoException_O,
  /* 409 */ &&obj_finalize_KIND_LISPALLOC_core__Archive_O,
  /* 410 */ &&obj_finalize_KIND_LISPALLOC_core__LoadArchive_O,
  /* 411 */ &&obj_finalize_KIND_LISPALLOC_core__SexpLoadArchive_O,
  /* 412 */ &&obj_finalize_KIND_LISPALLOC_core__SaveArchive_O,
  /* 413 */ &&obj_finalize_KIND_LISPALLOC_core__SexpSaveArchive_O,
  /* 414 */ &&obj_finalize_KIND_LISPALLOC_core__HashTable_O,
  /* 415 */ &&obj_finalize_KIND_LISPALLOC_core__HashTableEq_O,
  /* 416 */ &&obj_finalize_KIND_LISPALLOC_core__HashTableEqual_O,
  /* 417 */ &&obj_finalize_KIND_LISPALLOC_core__HashTableEql_O,
  /* 418 */ &&obj_finalize_KIND_LISPALLOC_core__HashTableEqualp_O,
  /* 419 */ &&obj_finalize_KIND_LISPALLOC_core__Environment_O,
  /* 420 */ &&obj_finalize_KIND_LISPALLOC_core__ActivationFrame_O,
  /* 421 */ &&obj_finalize_KIND_LISPALLOC_core__FunctionFrame_O,
  /* 422 */ &&obj_finalize_KIND_LISPALLOC_core__TagbodyFrame_O,
  /* 423 */ &&obj_finalize_KIND_LISPALLOC_core__ValueFrame_O,
  /* 424 */ &&obj_finalize_KIND_LISPALLOC_core__LexicalEnvironment_O,
  /* 425 */ &&obj_finalize_KIND_LISPALLOC_core__CompileTimeEnvironment_O,
  /* 426 */ &&obj_finalize_KIND_LISPALLOC_core__MacroletEnvironment_O,
  /* 427 */ &&obj_finalize_KIND_LISPALLOC_core__FunctionContainerEnvironment_O,
  /* 428 */ &&obj_finalize_KIND_LISPALLOC_core__UnwindProtectEnvironment_O,
  /* 429 */ &&obj_finalize_KIND_LISPALLOC_core__SymbolMacroletEnvironment_O,
  /* 430 */ &&obj_finalize_KIND_LISPALLOC_core__StackValueEnvironment_O,
  /* 431 */ &&obj_finalize_KIND_LISPALLOC_core__BlockEnvironment_O,
  /* 432 */ &&obj_finalize_KIND_LISPALLOC_core__CatchEnvironment_O,
  /* 433 */ &&obj_finalize_KIND_LISPALLOC_core__RuntimeVisibleEnvironment_O,
  /* 434 */ &&obj_finalize_KIND_LISPALLOC_core__ValueEnvironment_O,
  /* 435 */ &&obj_finalize_KIND_LISPALLOC_core__FunctionValueEnvironment_O,
  /* 436 */ &&obj_finalize_KIND_LISPALLOC_core__TagbodyEnvironment_O,
  /* 437 */ &&obj_finalize_KIND_LISPALLOC_core__GlueEnvironment_O,
  /* 438 */ &&obj_finalize_KIND_LISPALLOC_core__WeakKeyMapping_O,
  /* 439 */ &&obj_finalize_KIND_LISPALLOC_core__LambdaListHandler_O,
  /* 440 */ &&obj_finalize_KIND_LISPALLOC_llvmo__InsertPoint_O,
  /* 441 */ &&obj_finalize_KIND_LISPALLOC_core__SingleDispatchMethod_O,
  /* 442 */ &&obj_finalize_KIND_LISPALLOC_llvmo__Attribute_O,
  /* 443 */ &&obj_finalize_KIND_LISPALLOC_core__Character_dummy_O,
  /* 444 */ &&obj_finalize_KIND_LISPALLOC_core__SmallMultimap_O,
  /* 445 */ &&obj_finalize_KIND_LISPALLOC_core__Binder_O,
  /* 446 */ &&obj_finalize_KIND_LISPALLOC_core__Pathname_O,
  /* 447 */ &&obj_finalize_KIND_LISPALLOC_core__LogicalPathname_O,
  /* 448 */ &&obj_finalize_KIND_LISPALLOC_core__SourceManager_O,
  /* 449 */ &&obj_finalize_KIND_LISPALLOC_core__Record_O,
  /* 450 */ &&obj_finalize_KIND_LISPALLOC_core__SmallMap_O,
  /* 451 */ &&obj_finalize_KIND_LISPALLOC_core__LightUserData_O,
  /* 452 */ &&obj_finalize_KIND_LISPALLOC_core__UserData_O,
  /* 453 */ &&obj_finalize_KIND_ROOTCLASSALLOC_asttooling__RegMap__RegistryMaps,
  /* 454 */ &&obj_finalize_KIND_CLASSALLOC_core__Cache,
  /* 455 */ &&obj_finalize_KIND_TEMPLATED_CLASSALLOC_core__Creator,
  /* 456 */ &&obj_finalize_KIND_CLASSALLOC_core__InstanceCreator,
  /* 457 */ &&obj_finalize_KIND_TEMPLATED_CLASSALLOC_clbind__ConstructorCreator,
  /* 458 */ &&obj_finalize_KIND_CLASSALLOC_clbind__DummyCreator,
  /* 459 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__,
  /* 460 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyStretch_,
  /* 461 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFStretch_O__,
  /* 462 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___,
  /* 463 */ &&obj_finalize_KIND_CLASSALLOC_core__SingleDispatchGenericFunctionClosure,
  /* 464 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Stereoisomer_O___,
  /* 465 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyNonbond_,
  /* 466 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__RequiredArgument_,
  /* 467 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___,
  /* 468 */ &&obj_finalize_KIND_CLASSALLOC_llvmo__CompiledClosure,
  /* 469 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__,
  /* 470 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Str_O___,
  /* 471 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomInfo_,
  /* 472 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__RegMap__SymbolMatcherDescriptorPair_,
  /* 473 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___,
  /* 474 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__,
  /* 475 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFItor_O___,
  /* 476 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___,
  /* 477 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__,
  /* 478 */ &&obj_finalize_KIND_CLASSALLOC_asttooling__internal__OverloadedMatcherDescriptor,
  /* 479 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___,
  /* 480 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__,
  /* 481 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__,
  /* 482 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__FixedNonbondRestraint_,
  /* 483 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_asttooling__internal__MatcherDescriptor__,
  /* 484 */ &&obj_finalize_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__2_,
  /* 485 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__,
  /* 486 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__,
  /* 487 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__,
  /* 488 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__,
  /* 489 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__,
  /* 490 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___,
  /* 491 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__ExceptionEntry_,
  /* 492 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__,
  /* 493 */ &&obj_finalize_KIND_CLASSALLOC_core__MacroClosure,
  /* 494 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__,
  /* 495 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__,
  /* 496 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyDihedral_,
  /* 497 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ParserValue_,
  /* 498 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__,
  /* 499 */ &&obj_finalize_KIND_GCSTRING_gctools__GCString_moveable_char_,
  /* 500 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__RingClosingMate_O__,
  /* 501 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolClassPair_,
  /* 502 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__,
  /* 503 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__KeyEntry_,
  /* 504 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__,
  /* 505 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAtom_,
  /* 506 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFPtor_O__,
  /* 507 */ &&obj_finalize_KIND_CLASSALLOC_asttooling__internal__VariadicOperatorMatcherDescriptor,
  /* 508 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___,
  /* 509 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyImproperRestraint_,
  /* 510 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__,
  /* 511 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomPdbRec_,
  /* 512 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFItor_O__,
  /* 513 */ &&obj_finalize_KIND_CLASSALLOC_core__InstanceClosure,
  /* 514 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___,
  /* 515 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___,
  /* 516 */ &&obj_finalize_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__1_,
  /* 517 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___,
  /* 518 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__,
  /* 519 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolStorage_,
  /* 520 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ErrorContent_,
  /* 521 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyChiralRestraint_,
  /* 522 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__,
  /* 523 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__,
  /* 524 */ &&obj_finalize_KIND_CLASSALLOC_core__CoreExposer,
  /* 525 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__,
  /* 526 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ContextFrame_,
  /* 527 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__,
  /* 528 */ &&obj_finalize_KIND_CLASSALLOC_asttooling__internal__FixedArgCountMatcherDescriptor,
  /* 529 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_,
  /* 530 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__OptionalArgument_,
  /* 531 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__,
  /* 532 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAngle_,
  /* 533 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__T_O_P_,
  /* 534 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__,
  /* 535 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__,
  /* 536 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__,
  /* 537 */ &&obj_finalize_KIND_CLASSALLOC_core__InterpretedClosure,
  /* 538 */ &&obj_finalize_KIND_CLASSALLOC_asttooling__internal__FreeFuncMatcherDescriptor,
  /* 539 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__DynamicBinding_,
  /* 540 */ &&obj_finalize_KIND_CLASSALLOC_core__VectorStepper,
  /* 541 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__,
  /* 542 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFStretch_O___,
  /* 543 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__,
  /* 544 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__AuxArgument_,
  /* 545 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__,
  /* 546 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_core__SequenceStepper__,
  /* 547 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_,
  /* 548 */ &&obj_finalize_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__0_,
  /* 549 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__KeywordArgument_,
  /* 550 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__,
  /* 551 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__,
  /* 552 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__,
  /* 553 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___,
  /* 554 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___,
  /* 555 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__,
  /* 556 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__,
  /* 557 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___,
  /* 558 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SourceFileInfo_O__,
  /* 559 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__,
  /* 560 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___,
  /* 561 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_core__CacheRecord_,
  /* 562 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_chem__ResidueOut_,
  /* 563 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___,
  /* 564 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__,
  /* 565 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__,
  /* 566 */ &&obj_finalize_KIND_LISPALLOC_asttooling__DerivableFrontendActionFactory,
  /* 567 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___,
  /* 568 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___,
  /* 569 */ &&obj_finalize_KIND_LISPALLOC_asttooling__DerivableMatchCallback,
  /* 570 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFPtor_O___,
  /* 571 */ &&obj_finalize_KIND_LISPALLOC_asttooling__DerivableASTFrontendAction,
  /* 572 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneTypeRule_O__,
  /* 573 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__,
  /* 574 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__Message_,
  /* 575 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___,
  /* 576 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__,
  /* 577 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__,
  /* 578 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__,
  /* 579 */ &&obj_finalize_KIND_LISPALLOC_asttooling__DerivableSyntaxOnlyAction,
  /* 580 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneMonomer_O__,
  /* 581 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFAngle_O___,
  /* 582 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__,
  /* 583 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___,
  /* 584 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__,
  /* 585 */ &&obj_finalize_KIND_TEMPLATED_CLASSALLOC_core__BuiltinClosure,
  /* 586 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___,
  /* 587 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFAngle_O__,
  /* 588 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__,
  /* 589 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___,
  /* 590 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfo_O__,
  /* 591 */ &&obj_finalize_KIND_CLASSALLOC_core__ConsStepper,
  /* 592 */ &&obj_finalize_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___,
   NULL
};
#endif // defined(GC_OBJ_FINALIZE_TABLE)
#if defined(GC_OBJ_DEALLOCATOR)
obj_deallocate_unmanaged_instance_KIND_ROOTCLASSALLOC_clbind__detail__class_map:
{
    clbind::detail::class_map* obj_gc_safe = reinterpret_cast<clbind::detail::class_map*>(client);
    GCObjectAllocator<clbind::detail::class_map>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_ROOTCLASSALLOC_core__Lisp_O:
{
    core::Lisp_O* obj_gc_safe = reinterpret_cast<core::Lisp_O*>(client);
    GCObjectAllocator<core::Lisp_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__T_O:
{
    core::T_O* obj_gc_safe = reinterpret_cast<core::T_O*>(client);
    GCObjectAllocator<core::T_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Regex_O:
{
    core::Regex_O* obj_gc_safe = reinterpret_cast<core::Regex_O*>(client);
    GCObjectAllocator<core::Regex_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__WeakHashTable_O:
{
    core::WeakHashTable_O* obj_gc_safe = reinterpret_cast<core::WeakHashTable_O*>(client);
    GCObjectAllocator<core::WeakHashTable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__WeakKeyHashTable_O:
{
    core::WeakKeyHashTable_O* obj_gc_safe = reinterpret_cast<core::WeakKeyHashTable_O*>(client);
    GCObjectAllocator<core::WeakKeyHashTable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Reader_O:
{
    core::Reader_O* obj_gc_safe = reinterpret_cast<core::Reader_O*>(client);
    GCObjectAllocator<core::Reader_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__CxxObject_O:
{
    core::CxxObject_O* obj_gc_safe = reinterpret_cast<core::CxxObject_O*>(client);
    GCObjectAllocator<core::CxxObject_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_units__Unit_O:
{
    units::Unit_O* obj_gc_safe = reinterpret_cast<units::Unit_O*>(client);
    GCObjectAllocator<units::Unit_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_units__NamedUnit_O:
{
    units::NamedUnit_O* obj_gc_safe = reinterpret_cast<units::NamedUnit_O*>(client);
    GCObjectAllocator<units::NamedUnit_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AtomTable_O:
{
    chem::AtomTable_O* obj_gc_safe = reinterpret_cast<chem::AtomTable_O*>(client);
    GCObjectAllocator<chem::AtomTable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Command_O:
{
    chem::Command_O* obj_gc_safe = reinterpret_cast<chem::Command_O*>(client);
    GCObjectAllocator<chem::Command_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__NVector_O:
{
    chem::NVector_O* obj_gc_safe = reinterpret_cast<chem::NVector_O*>(client);
    GCObjectAllocator<chem::NVector_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_geom__OVector2_O:
{
    geom::OVector2_O* obj_gc_safe = reinterpret_cast<geom::OVector2_O*>(client);
    GCObjectAllocator<geom::OVector2_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__MonomerContext_O:
{
    chem::MonomerContext_O* obj_gc_safe = reinterpret_cast<chem::MonomerContext_O*>(client);
    GCObjectAllocator<chem::MonomerContext_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFNonbondCrossTermTable_O:
{
    chem::FFNonbondCrossTermTable_O* obj_gc_safe = reinterpret_cast<chem::FFNonbondCrossTermTable_O*>(client);
    GCObjectAllocator<chem::FFNonbondCrossTermTable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__BondList_O:
{
    chem::BondList_O* obj_gc_safe = reinterpret_cast<chem::BondList_O*>(client);
    GCObjectAllocator<chem::BondList_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CDFragment_O:
{
    chem::CDFragment_O* obj_gc_safe = reinterpret_cast<chem::CDFragment_O*>(client);
    GCObjectAllocator<chem::CDFragment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ResidueList_O:
{
    chem::ResidueList_O* obj_gc_safe = reinterpret_cast<chem::ResidueList_O*>(client);
    GCObjectAllocator<chem::ResidueList_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Structure_Old_ListEntry_O:
{
    chem::Structure_Old_ListEntry_O* obj_gc_safe = reinterpret_cast<chem::Structure_Old_ListEntry_O*>(client);
    GCObjectAllocator<chem::Structure_Old_ListEntry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ReadAmberParameters_O:
{
    chem::ReadAmberParameters_O* obj_gc_safe = reinterpret_cast<chem::ReadAmberParameters_O*>(client);
    GCObjectAllocator<chem::ReadAmberParameters_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AtomIndexer_O:
{
    chem::AtomIndexer_O* obj_gc_safe = reinterpret_cast<chem::AtomIndexer_O*>(client);
    GCObjectAllocator<chem::AtomIndexer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Structure_Old_List_O:
{
    chem::Structure_Old_List_O* obj_gc_safe = reinterpret_cast<chem::Structure_Old_List_O*>(client);
    GCObjectAllocator<chem::Structure_Old_List_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_adapt__StringSet_O:
{
    adapt::StringSet_O* obj_gc_safe = reinterpret_cast<adapt::StringSet_O*>(client);
    GCObjectAllocator<adapt::StringSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ChemInfoMatch_O:
{
    chem::ChemInfoMatch_O* obj_gc_safe = reinterpret_cast<chem::ChemInfoMatch_O*>(client);
    GCObjectAllocator<chem::ChemInfoMatch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SpanningLoop_O:
{
    chem::SpanningLoop_O* obj_gc_safe = reinterpret_cast<chem::SpanningLoop_O*>(client);
    GCObjectAllocator<chem::SpanningLoop_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CDBond_O:
{
    chem::CDBond_O* obj_gc_safe = reinterpret_cast<chem::CDBond_O*>(client);
    GCObjectAllocator<chem::CDBond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ForceField_O:
{
    chem::ForceField_O* obj_gc_safe = reinterpret_cast<chem::ForceField_O*>(client);
    GCObjectAllocator<chem::ForceField_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__OneMonomer_O:
{
    chem::OneMonomer_O* obj_gc_safe = reinterpret_cast<chem::OneMonomer_O*>(client);
    GCObjectAllocator<chem::OneMonomer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ReportBase_O:
{
    chem::ReportBase_O* obj_gc_safe = reinterpret_cast<chem::ReportBase_O*>(client);
    GCObjectAllocator<chem::ReportBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__MessageReport_O:
{
    chem::MessageReport_O* obj_gc_safe = reinterpret_cast<chem::MessageReport_O*>(client);
    GCObjectAllocator<chem::MessageReport_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ForceMatchReport_O:
{
    chem::ForceMatchReport_O* obj_gc_safe = reinterpret_cast<chem::ForceMatchReport_O*>(client);
    GCObjectAllocator<chem::ForceMatchReport_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__StepReport_O:
{
    chem::StepReport_O* obj_gc_safe = reinterpret_cast<chem::StepReport_O*>(client);
    GCObjectAllocator<chem::StepReport_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__PathMessage_O:
{
    chem::PathMessage_O* obj_gc_safe = reinterpret_cast<chem::PathMessage_O*>(client);
    GCObjectAllocator<chem::PathMessage_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FrameRecognizer_O:
{
    chem::FrameRecognizer_O* obj_gc_safe = reinterpret_cast<chem::FrameRecognizer_O*>(client);
    GCObjectAllocator<chem::FrameRecognizer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__StereoisomerAtom_O:
{
    chem::StereoisomerAtom_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerAtom_O*>(client);
    GCObjectAllocator<chem::StereoisomerAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__StereoisomerVirtualAtom_O:
{
    chem::StereoisomerVirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerVirtualAtom_O*>(client);
    GCObjectAllocator<chem::StereoisomerVirtualAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__MonomerCoordinates_O:
{
    chem::MonomerCoordinates_O* obj_gc_safe = reinterpret_cast<chem::MonomerCoordinates_O*>(client);
    GCObjectAllocator<chem::MonomerCoordinates_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SearchStatistics_O:
{
    chem::SearchStatistics_O* obj_gc_safe = reinterpret_cast<chem::SearchStatistics_O*>(client);
    GCObjectAllocator<chem::SearchStatistics_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AtomId_O:
{
    chem::AtomId_O* obj_gc_safe = reinterpret_cast<chem::AtomId_O*>(client);
    GCObjectAllocator<chem::AtomId_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__TypeAssignmentRules_O:
{
    chem::TypeAssignmentRules_O* obj_gc_safe = reinterpret_cast<chem::TypeAssignmentRules_O*>(client);
    GCObjectAllocator<chem::TypeAssignmentRules_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__WildElementDict_O:
{
    chem::WildElementDict_O* obj_gc_safe = reinterpret_cast<chem::WildElementDict_O*>(client);
    GCObjectAllocator<chem::WildElementDict_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SpecificContext_O:
{
    chem::SpecificContext_O* obj_gc_safe = reinterpret_cast<chem::SpecificContext_O*>(client);
    GCObjectAllocator<chem::SpecificContext_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CDText_O:
{
    chem::CDText_O* obj_gc_safe = reinterpret_cast<chem::CDText_O*>(client);
    GCObjectAllocator<chem::CDText_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__PdbMonomerConnectivity_O:
{
    chem::PdbMonomerConnectivity_O* obj_gc_safe = reinterpret_cast<chem::PdbMonomerConnectivity_O*>(client);
    GCObjectAllocator<chem::PdbMonomerConnectivity_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_units__Quantity_O:
{
    units::Quantity_O* obj_gc_safe = reinterpret_cast<units::Quantity_O*>(client);
    GCObjectAllocator<units::Quantity_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Plug_O:
{
    chem::Plug_O* obj_gc_safe = reinterpret_cast<chem::Plug_O*>(client);
    GCObjectAllocator<chem::Plug_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__PlugWithMates_O:
{
    chem::PlugWithMates_O* obj_gc_safe = reinterpret_cast<chem::PlugWithMates_O*>(client);
    GCObjectAllocator<chem::PlugWithMates_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__OutPlug_O:
{
    chem::OutPlug_O* obj_gc_safe = reinterpret_cast<chem::OutPlug_O*>(client);
    GCObjectAllocator<chem::OutPlug_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RingClosingPlug_O:
{
    chem::RingClosingPlug_O* obj_gc_safe = reinterpret_cast<chem::RingClosingPlug_O*>(client);
    GCObjectAllocator<chem::RingClosingPlug_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__InPlug_O:
{
    chem::InPlug_O* obj_gc_safe = reinterpret_cast<chem::InPlug_O*>(client);
    GCObjectAllocator<chem::InPlug_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__JumpPlug_O:
{
    chem::JumpPlug_O* obj_gc_safe = reinterpret_cast<chem::JumpPlug_O*>(client);
    GCObjectAllocator<chem::JumpPlug_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_geom__BoundingBox_O:
{
    geom::BoundingBox_O* obj_gc_safe = reinterpret_cast<geom::BoundingBox_O*>(client);
    GCObjectAllocator<geom::BoundingBox_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__MinimizerLog_O:
{
    chem::MinimizerLog_O* obj_gc_safe = reinterpret_cast<chem::MinimizerLog_O*>(client);
    GCObjectAllocator<chem::MinimizerLog_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ChemInfo_O:
{
    chem::ChemInfo_O* obj_gc_safe = reinterpret_cast<chem::ChemInfo_O*>(client);
    GCObjectAllocator<chem::ChemInfo_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ZMatrixEntry_O:
{
    chem::ZMatrixEntry_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixEntry_O*>(client);
    GCObjectAllocator<chem::ZMatrixEntry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__StereoInformation_O:
{
    chem::StereoInformation_O* obj_gc_safe = reinterpret_cast<chem::StereoInformation_O*>(client);
    GCObjectAllocator<chem::StereoInformation_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__MacroModelFile_O:
{
    chem::MacroModelFile_O* obj_gc_safe = reinterpret_cast<chem::MacroModelFile_O*>(client);
    GCObjectAllocator<chem::MacroModelFile_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__PdbWriter_O:
{
    chem::PdbWriter_O* obj_gc_safe = reinterpret_cast<chem::PdbWriter_O*>(client);
    GCObjectAllocator<chem::PdbWriter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ChemDraw_O:
{
    chem::ChemDraw_O* obj_gc_safe = reinterpret_cast<chem::ChemDraw_O*>(client);
    GCObjectAllocator<chem::ChemDraw_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AGEdge_O:
{
    chem::AGEdge_O* obj_gc_safe = reinterpret_cast<chem::AGEdge_O*>(client);
    GCObjectAllocator<chem::AGEdge_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConformationExplorerMatch_O:
{
    chem::ConformationExplorerMatch_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerMatch_O*>(client);
    GCObjectAllocator<chem::ConformationExplorerMatch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ImproperTorsion_O:
{
    chem::ImproperTorsion_O* obj_gc_safe = reinterpret_cast<chem::ImproperTorsion_O*>(client);
    GCObjectAllocator<chem::ImproperTorsion_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConstitutionAtoms_O:
{
    chem::ConstitutionAtoms_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionAtoms_O*>(client);
    GCObjectAllocator<chem::ConstitutionAtoms_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CoordinateSystem_O:
{
    chem::CoordinateSystem_O* obj_gc_safe = reinterpret_cast<chem::CoordinateSystem_O*>(client);
    GCObjectAllocator<chem::CoordinateSystem_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConformationCollectionEntry_O:
{
    chem::ConformationCollectionEntry_O* obj_gc_safe = reinterpret_cast<chem::ConformationCollectionEntry_O*>(client);
    GCObjectAllocator<chem::ConformationCollectionEntry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Restraint_O:
{
    chem::Restraint_O* obj_gc_safe = reinterpret_cast<chem::Restraint_O*>(client);
    GCObjectAllocator<chem::Restraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RestraintAngle_O:
{
    chem::RestraintAngle_O* obj_gc_safe = reinterpret_cast<chem::RestraintAngle_O*>(client);
    GCObjectAllocator<chem::RestraintAngle_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RestraintAnchor_O:
{
    chem::RestraintAnchor_O* obj_gc_safe = reinterpret_cast<chem::RestraintAnchor_O*>(client);
    GCObjectAllocator<chem::RestraintAnchor_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RestraintFixedNonbond_O:
{
    chem::RestraintFixedNonbond_O* obj_gc_safe = reinterpret_cast<chem::RestraintFixedNonbond_O*>(client);
    GCObjectAllocator<chem::RestraintFixedNonbond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RestraintChiral_O:
{
    chem::RestraintChiral_O* obj_gc_safe = reinterpret_cast<chem::RestraintChiral_O*>(client);
    GCObjectAllocator<chem::RestraintChiral_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RestraintDihedral_O:
{
    chem::RestraintDihedral_O* obj_gc_safe = reinterpret_cast<chem::RestraintDihedral_O*>(client);
    GCObjectAllocator<chem::RestraintDihedral_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RestraintDistance_O:
{
    chem::RestraintDistance_O* obj_gc_safe = reinterpret_cast<chem::RestraintDistance_O*>(client);
    GCObjectAllocator<chem::RestraintDistance_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ChemInfoNode_O:
{
    chem::ChemInfoNode_O* obj_gc_safe = reinterpret_cast<chem::ChemInfoNode_O*>(client);
    GCObjectAllocator<chem::ChemInfoNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RootMatchNode_O:
{
    chem::RootMatchNode_O* obj_gc_safe = reinterpret_cast<chem::RootMatchNode_O*>(client);
    GCObjectAllocator<chem::RootMatchNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AfterMatchBondTest_O:
{
    chem::AfterMatchBondTest_O* obj_gc_safe = reinterpret_cast<chem::AfterMatchBondTest_O*>(client);
    GCObjectAllocator<chem::AfterMatchBondTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__BondMatchNode_O:
{
    chem::BondMatchNode_O* obj_gc_safe = reinterpret_cast<chem::BondMatchNode_O*>(client);
    GCObjectAllocator<chem::BondMatchNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AtomOrBondMatchNode_O:
{
    chem::AtomOrBondMatchNode_O* obj_gc_safe = reinterpret_cast<chem::AtomOrBondMatchNode_O*>(client);
    GCObjectAllocator<chem::AtomOrBondMatchNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__TagSet_O:
{
    chem::TagSet_O* obj_gc_safe = reinterpret_cast<chem::TagSet_O*>(client);
    GCObjectAllocator<chem::TagSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Root_O:
{
    chem::Root_O* obj_gc_safe = reinterpret_cast<chem::Root_O*>(client);
    GCObjectAllocator<chem::Root_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SmartsRoot_O:
{
    chem::SmartsRoot_O* obj_gc_safe = reinterpret_cast<chem::SmartsRoot_O*>(client);
    GCObjectAllocator<chem::SmartsRoot_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AntechamberRoot_O:
{
    chem::AntechamberRoot_O* obj_gc_safe = reinterpret_cast<chem::AntechamberRoot_O*>(client);
    GCObjectAllocator<chem::AntechamberRoot_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ResidueTest_O:
{
    chem::ResidueTest_O* obj_gc_safe = reinterpret_cast<chem::ResidueTest_O*>(client);
    GCObjectAllocator<chem::ResidueTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AntechamberFocusAtomMatch_O:
{
    chem::AntechamberFocusAtomMatch_O* obj_gc_safe = reinterpret_cast<chem::AntechamberFocusAtomMatch_O*>(client);
    GCObjectAllocator<chem::AntechamberFocusAtomMatch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RingTest_O:
{
    chem::RingTest_O* obj_gc_safe = reinterpret_cast<chem::RingTest_O*>(client);
    GCObjectAllocator<chem::RingTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AtomTest_O:
{
    chem::AtomTest_O* obj_gc_safe = reinterpret_cast<chem::AtomTest_O*>(client);
    GCObjectAllocator<chem::AtomTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Logical_O:
{
    chem::Logical_O* obj_gc_safe = reinterpret_cast<chem::Logical_O*>(client);
    GCObjectAllocator<chem::Logical_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__BondTest_O:
{
    chem::BondTest_O* obj_gc_safe = reinterpret_cast<chem::BondTest_O*>(client);
    GCObjectAllocator<chem::BondTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AntechamberBondTest_O:
{
    chem::AntechamberBondTest_O* obj_gc_safe = reinterpret_cast<chem::AntechamberBondTest_O*>(client);
    GCObjectAllocator<chem::AntechamberBondTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__BondListMatchNode_O:
{
    chem::BondListMatchNode_O* obj_gc_safe = reinterpret_cast<chem::BondListMatchNode_O*>(client);
    GCObjectAllocator<chem::BondListMatchNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Branch_O:
{
    chem::Branch_O* obj_gc_safe = reinterpret_cast<chem::Branch_O*>(client);
    GCObjectAllocator<chem::Branch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Chain_O:
{
    chem::Chain_O* obj_gc_safe = reinterpret_cast<chem::Chain_O*>(client);
    GCObjectAllocator<chem::Chain_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Minimizer_O:
{
    chem::Minimizer_O* obj_gc_safe = reinterpret_cast<chem::Minimizer_O*>(client);
    GCObjectAllocator<chem::Minimizer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Oligomer_O:
{
    chem::Oligomer_O* obj_gc_safe = reinterpret_cast<chem::Oligomer_O*>(client);
    GCObjectAllocator<chem::Oligomer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConstitutionBond_O:
{
    chem::ConstitutionBond_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionBond_O*>(client);
    GCObjectAllocator<chem::ConstitutionBond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Entity_O:
{
    chem::Entity_O* obj_gc_safe = reinterpret_cast<chem::Entity_O*>(client);
    GCObjectAllocator<chem::Entity_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EntityNameSetBase_O:
{
    chem::EntityNameSetBase_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSetBase_O*>(client);
    GCObjectAllocator<chem::EntityNameSetBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EntityNameSetWithCap_O:
{
    chem::EntityNameSetWithCap_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSetWithCap_O*>(client);
    GCObjectAllocator<chem::EntityNameSetWithCap_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RingClosingMate_O:
{
    chem::RingClosingMate_O* obj_gc_safe = reinterpret_cast<chem::RingClosingMate_O*>(client);
    GCObjectAllocator<chem::RingClosingMate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Mate_O:
{
    chem::Mate_O* obj_gc_safe = reinterpret_cast<chem::Mate_O*>(client);
    GCObjectAllocator<chem::Mate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EntityNameSet_O:
{
    chem::EntityNameSet_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSet_O*>(client);
    GCObjectAllocator<chem::EntityNameSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RepresentedEntityNameSet_O:
{
    chem::RepresentedEntityNameSet_O* obj_gc_safe = reinterpret_cast<chem::RepresentedEntityNameSet_O*>(client);
    GCObjectAllocator<chem::RepresentedEntityNameSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__MonomerPack_O:
{
    chem::MonomerPack_O* obj_gc_safe = reinterpret_cast<chem::MonomerPack_O*>(client);
    GCObjectAllocator<chem::MonomerPack_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Monomer_O:
{
    chem::Monomer_O* obj_gc_safe = reinterpret_cast<chem::Monomer_O*>(client);
    GCObjectAllocator<chem::Monomer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__MultiMonomer_O:
{
    chem::MultiMonomer_O* obj_gc_safe = reinterpret_cast<chem::MultiMonomer_O*>(client);
    GCObjectAllocator<chem::MultiMonomer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Stereoisomer_O:
{
    chem::Stereoisomer_O* obj_gc_safe = reinterpret_cast<chem::Stereoisomer_O*>(client);
    GCObjectAllocator<chem::Stereoisomer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Constitution_O:
{
    chem::Constitution_O* obj_gc_safe = reinterpret_cast<chem::Constitution_O*>(client);
    GCObjectAllocator<chem::Constitution_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_units__Dimension_O:
{
    units::Dimension_O* obj_gc_safe = reinterpret_cast<units::Dimension_O*>(client);
    GCObjectAllocator<units::Dimension_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_geom__OMatrix_O:
{
    geom::OMatrix_O* obj_gc_safe = reinterpret_cast<geom::OMatrix_O*>(client);
    GCObjectAllocator<geom::OMatrix_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__StereoisomerAtoms_O:
{
    chem::StereoisomerAtoms_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerAtoms_O*>(client);
    GCObjectAllocator<chem::StereoisomerAtoms_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConformationExplorerEntry_O:
{
    chem::ConformationExplorerEntry_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerEntry_O*>(client);
    GCObjectAllocator<chem::ConformationExplorerEntry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AtomReferenceBase_O:
{
    chem::AtomReferenceBase_O* obj_gc_safe = reinterpret_cast<chem::AtomReferenceBase_O*>(client);
    GCObjectAllocator<chem::AtomReferenceBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AtomReference_O:
{
    chem::AtomReference_O* obj_gc_safe = reinterpret_cast<chem::AtomReference_O*>(client);
    GCObjectAllocator<chem::AtomReference_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CDNode_O:
{
    chem::CDNode_O* obj_gc_safe = reinterpret_cast<chem::CDNode_O*>(client);
    GCObjectAllocator<chem::CDNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__TrajectoryFrame_O:
{
    chem::TrajectoryFrame_O* obj_gc_safe = reinterpret_cast<chem::TrajectoryFrame_O*>(client);
    GCObjectAllocator<chem::TrajectoryFrame_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyComponent_O:
{
    chem::EnergyComponent_O* obj_gc_safe = reinterpret_cast<chem::EnergyComponent_O*>(client);
    GCObjectAllocator<chem::EnergyComponent_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyChiralRestraint_O:
{
    chem::EnergyChiralRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyChiralRestraint_O*>(client);
    GCObjectAllocator<chem::EnergyChiralRestraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyImproperRestraint_O:
{
    chem::EnergyImproperRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyImproperRestraint_O*>(client);
    GCObjectAllocator<chem::EnergyImproperRestraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyAnchorRestraint_O:
{
    chem::EnergyAnchorRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyAnchorRestraint_O*>(client);
    GCObjectAllocator<chem::EnergyAnchorRestraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyAngle_O:
{
    chem::EnergyAngle_O* obj_gc_safe = reinterpret_cast<chem::EnergyAngle_O*>(client);
    GCObjectAllocator<chem::EnergyAngle_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyDihedral_O:
{
    chem::EnergyDihedral_O* obj_gc_safe = reinterpret_cast<chem::EnergyDihedral_O*>(client);
    GCObjectAllocator<chem::EnergyDihedral_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyStretch_O:
{
    chem::EnergyStretch_O* obj_gc_safe = reinterpret_cast<chem::EnergyStretch_O*>(client);
    GCObjectAllocator<chem::EnergyStretch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyNonbond_O:
{
    chem::EnergyNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergyNonbond_O*>(client);
    GCObjectAllocator<chem::EnergyNonbond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyFixedNonbondRestraint_O:
{
    chem::EnergyFixedNonbondRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyFixedNonbondRestraint_O*>(client);
    GCObjectAllocator<chem::EnergyFixedNonbondRestraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__PdbMonomerDatabase_O:
{
    chem::PdbMonomerDatabase_O* obj_gc_safe = reinterpret_cast<chem::PdbMonomerDatabase_O*>(client);
    GCObjectAllocator<chem::PdbMonomerDatabase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Coupling_O:
{
    chem::Coupling_O* obj_gc_safe = reinterpret_cast<chem::Coupling_O*>(client);
    GCObjectAllocator<chem::Coupling_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__DirectionalCoupling_O:
{
    chem::DirectionalCoupling_O* obj_gc_safe = reinterpret_cast<chem::DirectionalCoupling_O*>(client);
    GCObjectAllocator<chem::DirectionalCoupling_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RingCoupling_O:
{
    chem::RingCoupling_O* obj_gc_safe = reinterpret_cast<chem::RingCoupling_O*>(client);
    GCObjectAllocator<chem::RingCoupling_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__PdbReader_O:
{
    chem::PdbReader_O* obj_gc_safe = reinterpret_cast<chem::PdbReader_O*>(client);
    GCObjectAllocator<chem::PdbReader_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ZMatrixInternal_O:
{
    chem::ZMatrixInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixInternal_O*>(client);
    GCObjectAllocator<chem::ZMatrixInternal_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ZMatrixBondInternal_O:
{
    chem::ZMatrixBondInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixBondInternal_O*>(client);
    GCObjectAllocator<chem::ZMatrixBondInternal_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ZMatrixAngleInternal_O:
{
    chem::ZMatrixAngleInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixAngleInternal_O*>(client);
    GCObjectAllocator<chem::ZMatrixAngleInternal_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ZMatrixDihedralInternal_O:
{
    chem::ZMatrixDihedralInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixDihedralInternal_O*>(client);
    GCObjectAllocator<chem::ZMatrixDihedralInternal_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CipPrioritizer_O:
{
    chem::CipPrioritizer_O* obj_gc_safe = reinterpret_cast<chem::CipPrioritizer_O*>(client);
    GCObjectAllocator<chem::CipPrioritizer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Matter_O:
{
    chem::Matter_O* obj_gc_safe = reinterpret_cast<chem::Matter_O*>(client);
    GCObjectAllocator<chem::Matter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Residue_O:
{
    chem::Residue_O* obj_gc_safe = reinterpret_cast<chem::Residue_O*>(client);
    GCObjectAllocator<chem::Residue_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Aggregate_O:
{
    chem::Aggregate_O* obj_gc_safe = reinterpret_cast<chem::Aggregate_O*>(client);
    GCObjectAllocator<chem::Aggregate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Atom_O:
{
    chem::Atom_O* obj_gc_safe = reinterpret_cast<chem::Atom_O*>(client);
    GCObjectAllocator<chem::Atom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__VirtualAtom_O:
{
    chem::VirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::VirtualAtom_O*>(client);
    GCObjectAllocator<chem::VirtualAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Molecule_O:
{
    chem::Molecule_O* obj_gc_safe = reinterpret_cast<chem::Molecule_O*>(client);
    GCObjectAllocator<chem::Molecule_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Bond_O:
{
    chem::Bond_O* obj_gc_safe = reinterpret_cast<chem::Bond_O*>(client);
    GCObjectAllocator<chem::Bond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AGVertex_O:
{
    chem::AGVertex_O* obj_gc_safe = reinterpret_cast<chem::AGVertex_O*>(client);
    GCObjectAllocator<chem::AGVertex_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Alias_O:
{
    chem::Alias_O* obj_gc_safe = reinterpret_cast<chem::Alias_O*>(client);
    GCObjectAllocator<chem::Alias_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CandoDatabase_O:
{
    chem::CandoDatabase_O* obj_gc_safe = reinterpret_cast<chem::CandoDatabase_O*>(client);
    GCObjectAllocator<chem::CandoDatabase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ProperTorsion_O:
{
    chem::ProperTorsion_O* obj_gc_safe = reinterpret_cast<chem::ProperTorsion_O*>(client);
    GCObjectAllocator<chem::ProperTorsion_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_geom__OVector3_O:
{
    geom::OVector3_O* obj_gc_safe = reinterpret_cast<geom::OVector3_O*>(client);
    GCObjectAllocator<geom::OVector3_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ComplexRestraint_O:
{
    chem::ComplexRestraint_O* obj_gc_safe = reinterpret_cast<chem::ComplexRestraint_O*>(client);
    GCObjectAllocator<chem::ComplexRestraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RestrainedExoCyclicAtom_O:
{
    chem::RestrainedExoCyclicAtom_O* obj_gc_safe = reinterpret_cast<chem::RestrainedExoCyclicAtom_O*>(client);
    GCObjectAllocator<chem::RestrainedExoCyclicAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RestrainedPiBond_O:
{
    chem::RestrainedPiBond_O* obj_gc_safe = reinterpret_cast<chem::RestrainedPiBond_O*>(client);
    GCObjectAllocator<chem::RestrainedPiBond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyFunction_O:
{
    chem::EnergyFunction_O* obj_gc_safe = reinterpret_cast<chem::EnergyFunction_O*>(client);
    GCObjectAllocator<chem::EnergyFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ZMatrix_O:
{
    chem::ZMatrix_O* obj_gc_safe = reinterpret_cast<chem::ZMatrix_O*>(client);
    GCObjectAllocator<chem::ZMatrix_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__StatusTracker_O:
{
    chem::StatusTracker_O* obj_gc_safe = reinterpret_cast<chem::StatusTracker_O*>(client);
    GCObjectAllocator<chem::StatusTracker_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__OneTypeRule_O:
{
    chem::OneTypeRule_O* obj_gc_safe = reinterpret_cast<chem::OneTypeRule_O*>(client);
    GCObjectAllocator<chem::OneTypeRule_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__OligomerPart_Base_O:
{
    chem::OligomerPart_Base_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Base_O*>(client);
    GCObjectAllocator<chem::OligomerPart_Base_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__OligomerPart_Monomer_O:
{
    chem::OligomerPart_Monomer_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Monomer_O*>(client);
    GCObjectAllocator<chem::OligomerPart_Monomer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__OligomerPart_Link_O:
{
    chem::OligomerPart_Link_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Link_O*>(client);
    GCObjectAllocator<chem::OligomerPart_Link_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_adapt__SymbolList_O:
{
    adapt::SymbolList_O* obj_gc_safe = reinterpret_cast<adapt::SymbolList_O*>(client);
    GCObjectAllocator<adapt::SymbolList_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConformationCollection_O:
{
    chem::ConformationCollection_O* obj_gc_safe = reinterpret_cast<chem::ConformationCollection_O*>(client);
    GCObjectAllocator<chem::ConformationCollection_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SuperposableConformationCollection_O:
{
    chem::SuperposableConformationCollection_O* obj_gc_safe = reinterpret_cast<chem::SuperposableConformationCollection_O*>(client);
    GCObjectAllocator<chem::SuperposableConformationCollection_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__InfoDb_O:
{
    chem::InfoDb_O* obj_gc_safe = reinterpret_cast<chem::InfoDb_O*>(client);
    GCObjectAllocator<chem::InfoDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConformationExplorer_O:
{
    chem::ConformationExplorer_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorer_O*>(client);
    GCObjectAllocator<chem::ConformationExplorer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_geom__Color_O:
{
    geom::Color_O* obj_gc_safe = reinterpret_cast<geom::Color_O*>(client);
    GCObjectAllocator<geom::Color_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConstitutionAtom_O:
{
    chem::ConstitutionAtom_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionAtom_O*>(client);
    GCObjectAllocator<chem::ConstitutionAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConstitutionVirtualAtom_O:
{
    chem::ConstitutionVirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionVirtualAtom_O*>(client);
    GCObjectAllocator<chem::ConstitutionVirtualAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__NumericalFunction_O:
{
    chem::NumericalFunction_O* obj_gc_safe = reinterpret_cast<chem::NumericalFunction_O*>(client);
    GCObjectAllocator<chem::NumericalFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AbstractLargeSquareMatrix_O:
{
    chem::AbstractLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::AbstractLargeSquareMatrix_O*>(client);
    GCObjectAllocator<chem::AbstractLargeSquareMatrix_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SparseLargeSquareMatrix_O:
{
    chem::SparseLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::SparseLargeSquareMatrix_O*>(client);
    GCObjectAllocator<chem::SparseLargeSquareMatrix_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FullLargeSquareMatrix_O:
{
    chem::FullLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::FullLargeSquareMatrix_O*>(client);
    GCObjectAllocator<chem::FullLargeSquareMatrix_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__TwisterDriver_O:
{
    chem::TwisterDriver_O* obj_gc_safe = reinterpret_cast<chem::TwisterDriver_O*>(client);
    GCObjectAllocator<chem::TwisterDriver_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__VirtualSphere_O:
{
    chem::VirtualSphere_O* obj_gc_safe = reinterpret_cast<chem::VirtualSphere_O*>(client);
    GCObjectAllocator<chem::VirtualSphere_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Rotamer_O:
{
    chem::Rotamer_O* obj_gc_safe = reinterpret_cast<chem::Rotamer_O*>(client);
    GCObjectAllocator<chem::Rotamer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__StereoConfiguration_O:
{
    chem::StereoConfiguration_O* obj_gc_safe = reinterpret_cast<chem::StereoConfiguration_O*>(client);
    GCObjectAllocator<chem::StereoConfiguration_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Topology_O:
{
    chem::Topology_O* obj_gc_safe = reinterpret_cast<chem::Topology_O*>(client);
    GCObjectAllocator<chem::Topology_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Trajectory_O:
{
    chem::Trajectory_O* obj_gc_safe = reinterpret_cast<chem::Trajectory_O*>(client);
    GCObjectAllocator<chem::Trajectory_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__MapOfMonomerNamesToAtomIndexers_O:
{
    chem::MapOfMonomerNamesToAtomIndexers_O* obj_gc_safe = reinterpret_cast<chem::MapOfMonomerNamesToAtomIndexers_O*>(client);
    GCObjectAllocator<chem::MapOfMonomerNamesToAtomIndexers_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RingFinder_O:
{
    chem::RingFinder_O* obj_gc_safe = reinterpret_cast<chem::RingFinder_O*>(client);
    GCObjectAllocator<chem::RingFinder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Twister_O:
{
    chem::Twister_O* obj_gc_safe = reinterpret_cast<chem::Twister_O*>(client);
    GCObjectAllocator<chem::Twister_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFBaseDb_O:
{
    chem::FFBaseDb_O* obj_gc_safe = reinterpret_cast<chem::FFBaseDb_O*>(client);
    GCObjectAllocator<chem::FFBaseDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFStretchDb_O:
{
    chem::FFStretchDb_O* obj_gc_safe = reinterpret_cast<chem::FFStretchDb_O*>(client);
    GCObjectAllocator<chem::FFStretchDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFTypesDb_O:
{
    chem::FFTypesDb_O* obj_gc_safe = reinterpret_cast<chem::FFTypesDb_O*>(client);
    GCObjectAllocator<chem::FFTypesDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFPtorDb_O:
{
    chem::FFPtorDb_O* obj_gc_safe = reinterpret_cast<chem::FFPtorDb_O*>(client);
    GCObjectAllocator<chem::FFPtorDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFItorDb_O:
{
    chem::FFItorDb_O* obj_gc_safe = reinterpret_cast<chem::FFItorDb_O*>(client);
    GCObjectAllocator<chem::FFItorDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFAngleDb_O:
{
    chem::FFAngleDb_O* obj_gc_safe = reinterpret_cast<chem::FFAngleDb_O*>(client);
    GCObjectAllocator<chem::FFAngleDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFNonbondDb_O:
{
    chem::FFNonbondDb_O* obj_gc_safe = reinterpret_cast<chem::FFNonbondDb_O*>(client);
    GCObjectAllocator<chem::FFNonbondDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFVdwDb_O:
{
    chem::FFVdwDb_O* obj_gc_safe = reinterpret_cast<chem::FFVdwDb_O*>(client);
    GCObjectAllocator<chem::FFVdwDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SuperposeEngine_O:
{
    chem::SuperposeEngine_O* obj_gc_safe = reinterpret_cast<chem::SuperposeEngine_O*>(client);
    GCObjectAllocator<chem::SuperposeEngine_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SuperposeSelectedAtoms_O:
{
    chem::SuperposeSelectedAtoms_O* obj_gc_safe = reinterpret_cast<chem::SuperposeSelectedAtoms_O*>(client);
    GCObjectAllocator<chem::SuperposeSelectedAtoms_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CalculatePosition_O:
{
    chem::CalculatePosition_O* obj_gc_safe = reinterpret_cast<chem::CalculatePosition_O*>(client);
    GCObjectAllocator<chem::CalculatePosition_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CalculatePositionUsingInternals_O:
{
    chem::CalculatePositionUsingInternals_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionUsingInternals_O*>(client);
    GCObjectAllocator<chem::CalculatePositionUsingInternals_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CalculatePositionRelativeToOrigin_O:
{
    chem::CalculatePositionRelativeToOrigin_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionRelativeToOrigin_O*>(client);
    GCObjectAllocator<chem::CalculatePositionRelativeToOrigin_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CalculatePositionAlongBond_O:
{
    chem::CalculatePositionAlongBond_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionAlongBond_O*>(client);
    GCObjectAllocator<chem::CalculatePositionAlongBond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFParameter_O:
{
    chem::FFParameter_O* obj_gc_safe = reinterpret_cast<chem::FFParameter_O*>(client);
    GCObjectAllocator<chem::FFParameter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFStretch_O:
{
    chem::FFStretch_O* obj_gc_safe = reinterpret_cast<chem::FFStretch_O*>(client);
    GCObjectAllocator<chem::FFStretch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFAngle_O:
{
    chem::FFAngle_O* obj_gc_safe = reinterpret_cast<chem::FFAngle_O*>(client);
    GCObjectAllocator<chem::FFAngle_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFVdw_O:
{
    chem::FFVdw_O* obj_gc_safe = reinterpret_cast<chem::FFVdw_O*>(client);
    GCObjectAllocator<chem::FFVdw_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFNonbond_O:
{
    chem::FFNonbond_O* obj_gc_safe = reinterpret_cast<chem::FFNonbond_O*>(client);
    GCObjectAllocator<chem::FFNonbond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFPtor_O:
{
    chem::FFPtor_O* obj_gc_safe = reinterpret_cast<chem::FFPtor_O*>(client);
    GCObjectAllocator<chem::FFPtor_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFItor_O:
{
    chem::FFItor_O* obj_gc_safe = reinterpret_cast<chem::FFItor_O*>(client);
    GCObjectAllocator<chem::FFItor_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SpecificContextSet_O:
{
    chem::SpecificContextSet_O* obj_gc_safe = reinterpret_cast<chem::SpecificContextSet_O*>(client);
    GCObjectAllocator<chem::SpecificContextSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConformationExplorerEntryStage_O:
{
    chem::ConformationExplorerEntryStage_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerEntryStage_O*>(client);
    GCObjectAllocator<chem::ConformationExplorerEntryStage_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Angle_O:
{
    chem::Angle_O* obj_gc_safe = reinterpret_cast<chem::Angle_O*>(client);
    GCObjectAllocator<chem::Angle_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_adapt__QDomNode_O:
{
    adapt::QDomNode_O* obj_gc_safe = reinterpret_cast<adapt::QDomNode_O*>(client);
    GCObjectAllocator<adapt::QDomNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__StructureComparer_O:
{
    chem::StructureComparer_O* obj_gc_safe = reinterpret_cast<chem::StructureComparer_O*>(client);
    GCObjectAllocator<chem::StructureComparer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AtomIdToAtomMap_O:
{
    chem::AtomIdToAtomMap_O* obj_gc_safe = reinterpret_cast<chem::AtomIdToAtomMap_O*>(client);
    GCObjectAllocator<chem::AtomIdToAtomMap_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Array_O:
{
    core::Array_O* obj_gc_safe = reinterpret_cast<core::Array_O*>(client);
    GCObjectAllocator<core::Array_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ArrayDisplaced_O:
{
    core::ArrayDisplaced_O* obj_gc_safe = reinterpret_cast<core::ArrayDisplaced_O*>(client);
    GCObjectAllocator<core::ArrayDisplaced_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ArrayObjects_O:
{
    core::ArrayObjects_O* obj_gc_safe = reinterpret_cast<core::ArrayObjects_O*>(client);
    GCObjectAllocator<core::ArrayObjects_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Vector_O:
{
    core::Vector_O* obj_gc_safe = reinterpret_cast<core::Vector_O*>(client);
    GCObjectAllocator<core::Vector_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__VectorDisplaced_O:
{
    core::VectorDisplaced_O* obj_gc_safe = reinterpret_cast<core::VectorDisplaced_O*>(client);
    GCObjectAllocator<core::VectorDisplaced_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__VectorObjects_O:
{
    core::VectorObjects_O* obj_gc_safe = reinterpret_cast<core::VectorObjects_O*>(client);
    GCObjectAllocator<core::VectorObjects_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__VectorObjectsWithFillPtr_O:
{
    core::VectorObjectsWithFillPtr_O* obj_gc_safe = reinterpret_cast<core::VectorObjectsWithFillPtr_O*>(client);
    GCObjectAllocator<core::VectorObjectsWithFillPtr_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__BitVector_O:
{
    core::BitVector_O* obj_gc_safe = reinterpret_cast<core::BitVector_O*>(client);
    GCObjectAllocator<core::BitVector_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__BitVectorWithFillPtr_O:
{
    core::BitVectorWithFillPtr_O* obj_gc_safe = reinterpret_cast<core::BitVectorWithFillPtr_O*>(client);
    GCObjectAllocator<core::BitVectorWithFillPtr_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SimpleBitVector_O:
{
    core::SimpleBitVector_O* obj_gc_safe = reinterpret_cast<core::SimpleBitVector_O*>(client);
    GCObjectAllocator<core::SimpleBitVector_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__String_O:
{
    core::String_O* obj_gc_safe = reinterpret_cast<core::String_O*>(client);
    GCObjectAllocator<core::String_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__Str_O:
{
    core::Str_O* obj_gc_safe = reinterpret_cast<core::Str_O*>(client);
    GCObjectAllocator<core::Str_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__StrWithFillPtr_O:
{
    core::StrWithFillPtr_O* obj_gc_safe = reinterpret_cast<core::StrWithFillPtr_O*>(client);
    GCObjectAllocator<core::StrWithFillPtr_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_geom__CoordinateArray_O:
{
    geom::CoordinateArray_O* obj_gc_safe = reinterpret_cast<geom::CoordinateArray_O*>(client);
    GCObjectAllocator<geom::CoordinateArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_geom__CoordinateArrayWithHash_O:
{
    geom::CoordinateArrayWithHash_O* obj_gc_safe = reinterpret_cast<geom::CoordinateArrayWithHash_O*>(client);
    GCObjectAllocator<geom::CoordinateArrayWithHash_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SNode_O:
{
    core::SNode_O* obj_gc_safe = reinterpret_cast<core::SNode_O*>(client);
    GCObjectAllocator<core::SNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__BranchSNode_O:
{
    core::BranchSNode_O* obj_gc_safe = reinterpret_cast<core::BranchSNode_O*>(client);
    GCObjectAllocator<core::BranchSNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__LeafSNode_O:
{
    core::LeafSNode_O* obj_gc_safe = reinterpret_cast<core::LeafSNode_O*>(client);
    GCObjectAllocator<core::LeafSNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_asttooling__AstVisitor_O:
{
    asttooling::AstVisitor_O* obj_gc_safe = reinterpret_cast<asttooling::AstVisitor_O*>(client);
    GCObjectAllocator<asttooling::AstVisitor_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__AttributeSet_O:
{
    llvmo::AttributeSet_O* obj_gc_safe = reinterpret_cast<llvmo::AttributeSet_O*>(client);
    GCObjectAllocator<llvmo::AttributeSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Package_O:
{
    core::Package_O* obj_gc_safe = reinterpret_cast<core::Package_O*>(client);
    GCObjectAllocator<core::Package_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_TEMPLATED_LISPALLOC_core__WrappedPointer_O:
{
    core::WrappedPointer_O* obj_gc_safe = reinterpret_cast<core::WrappedPointer_O*>(client);
    GCObjectAllocator<core::WrappedPointer_O>::deallocate_unmanaged_instance(obj_gc_safe);
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__RegexMatch_O:
{
    core::RegexMatch_O* obj_gc_safe = reinterpret_cast<core::RegexMatch_O*>(client);
    GCObjectAllocator<core::RegexMatch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__DirectoryEntry_O:
{
    core::DirectoryEntry_O* obj_gc_safe = reinterpret_cast<core::DirectoryEntry_O*>(client);
    GCObjectAllocator<core::DirectoryEntry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_clbind__ClassRegistry_O:
{
    clbind::ClassRegistry_O* obj_gc_safe = reinterpret_cast<clbind::ClassRegistry_O*>(client);
    GCObjectAllocator<clbind::ClassRegistry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DebugInfo_O:
{
    llvmo::DebugInfo_O* obj_gc_safe = reinterpret_cast<llvmo::DebugInfo_O*>(client);
    GCObjectAllocator<llvmo::DebugInfo_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DISubprogram_O:
{
    llvmo::DISubprogram_O* obj_gc_safe = reinterpret_cast<llvmo::DISubprogram_O*>(client);
    GCObjectAllocator<llvmo::DISubprogram_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DIDescriptor_O:
{
    llvmo::DIDescriptor_O* obj_gc_safe = reinterpret_cast<llvmo::DIDescriptor_O*>(client);
    GCObjectAllocator<llvmo::DIDescriptor_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DIType_O:
{
    llvmo::DIType_O* obj_gc_safe = reinterpret_cast<llvmo::DIType_O*>(client);
    GCObjectAllocator<llvmo::DIType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DISubroutineType_O:
{
    llvmo::DISubroutineType_O* obj_gc_safe = reinterpret_cast<llvmo::DISubroutineType_O*>(client);
    GCObjectAllocator<llvmo::DISubroutineType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DICompileUnit_O:
{
    llvmo::DICompileUnit_O* obj_gc_safe = reinterpret_cast<llvmo::DICompileUnit_O*>(client);
    GCObjectAllocator<llvmo::DICompileUnit_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DIDerivedType_O:
{
    llvmo::DIDerivedType_O* obj_gc_safe = reinterpret_cast<llvmo::DIDerivedType_O*>(client);
    GCObjectAllocator<llvmo::DIDerivedType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DIArray_O:
{
    llvmo::DIArray_O* obj_gc_safe = reinterpret_cast<llvmo::DIArray_O*>(client);
    GCObjectAllocator<llvmo::DIArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DIBasicType_O:
{
    llvmo::DIBasicType_O* obj_gc_safe = reinterpret_cast<llvmo::DIBasicType_O*>(client);
    GCObjectAllocator<llvmo::DIBasicType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DICompositeType_O:
{
    llvmo::DICompositeType_O* obj_gc_safe = reinterpret_cast<llvmo::DICompositeType_O*>(client);
    GCObjectAllocator<llvmo::DICompositeType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DITypeArray_O:
{
    llvmo::DITypeArray_O* obj_gc_safe = reinterpret_cast<llvmo::DITypeArray_O*>(client);
    GCObjectAllocator<llvmo::DITypeArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DILexicalBlock_O:
{
    llvmo::DILexicalBlock_O* obj_gc_safe = reinterpret_cast<llvmo::DILexicalBlock_O*>(client);
    GCObjectAllocator<llvmo::DILexicalBlock_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DIFile_O:
{
    llvmo::DIFile_O* obj_gc_safe = reinterpret_cast<llvmo::DIFile_O*>(client);
    GCObjectAllocator<llvmo::DIFile_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DIScope_O:
{
    llvmo::DIScope_O* obj_gc_safe = reinterpret_cast<llvmo::DIScope_O*>(client);
    GCObjectAllocator<llvmo::DIScope_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__StandardObject_O:
{
    core::StandardObject_O* obj_gc_safe = reinterpret_cast<core::StandardObject_O*>(client);
    GCObjectAllocator<core::StandardObject_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__Metaobject_O:
{
    core::Metaobject_O* obj_gc_safe = reinterpret_cast<core::Metaobject_O*>(client);
    GCObjectAllocator<core::Metaobject_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__Specializer_O:
{
    core::Specializer_O* obj_gc_safe = reinterpret_cast<core::Specializer_O*>(client);
    GCObjectAllocator<core::Specializer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__Class_O:
{
    core::Class_O* obj_gc_safe = reinterpret_cast<core::Class_O*>(client);
    GCObjectAllocator<core::Class_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ForwardReferencedClass_O:
{
    core::ForwardReferencedClass_O* obj_gc_safe = reinterpret_cast<core::ForwardReferencedClass_O*>(client);
    GCObjectAllocator<core::ForwardReferencedClass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__CxxClass_O:
{
    core::CxxClass_O* obj_gc_safe = reinterpret_cast<core::CxxClass_O*>(client);
    GCObjectAllocator<core::CxxClass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__StdClass_O:
{
    core::StdClass_O* obj_gc_safe = reinterpret_cast<core::StdClass_O*>(client);
    GCObjectAllocator<core::StdClass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__FuncallableStandardClass_O:
{
    core::FuncallableStandardClass_O* obj_gc_safe = reinterpret_cast<core::FuncallableStandardClass_O*>(client);
    GCObjectAllocator<core::FuncallableStandardClass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__StandardClass_O:
{
    core::StandardClass_O* obj_gc_safe = reinterpret_cast<core::StandardClass_O*>(client);
    GCObjectAllocator<core::StandardClass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__StructureClass_O:
{
    core::StructureClass_O* obj_gc_safe = reinterpret_cast<core::StructureClass_O*>(client);
    GCObjectAllocator<core::StructureClass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__BuiltInClass_O:
{
    core::BuiltInClass_O* obj_gc_safe = reinterpret_cast<core::BuiltInClass_O*>(client);
    GCObjectAllocator<core::BuiltInClass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_clbind__ClassRep_O:
{
    clbind::ClassRep_O* obj_gc_safe = reinterpret_cast<clbind::ClassRep_O*>(client);
    GCObjectAllocator<clbind::ClassRep_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__LoadTimeValues_O:
{
    core::LoadTimeValues_O* obj_gc_safe = reinterpret_cast<core::LoadTimeValues_O*>(client);
    GCObjectAllocator<core::LoadTimeValues_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_adapt__SymbolSet_O:
{
    adapt::SymbolSet_O* obj_gc_safe = reinterpret_cast<adapt::SymbolSet_O*>(client);
    GCObjectAllocator<adapt::SymbolSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SourcePosInfo_O:
{
    core::SourcePosInfo_O* obj_gc_safe = reinterpret_cast<core::SourcePosInfo_O*>(client);
    GCObjectAllocator<core::SourcePosInfo_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__MultiStringBuffer_O:
{
    core::MultiStringBuffer_O* obj_gc_safe = reinterpret_cast<core::MultiStringBuffer_O*>(client);
    GCObjectAllocator<core::MultiStringBuffer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_TEMPLATED_LISPALLOC_core__Iterator_O:
{
    core::Iterator_O* obj_gc_safe = reinterpret_cast<core::Iterator_O*>(client);
    GCObjectAllocator<core::Iterator_O>::deallocate_unmanaged_instance(obj_gc_safe);
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__RecursiveDirectoryIterator_O:
{
    core::RecursiveDirectoryIterator_O* obj_gc_safe = reinterpret_cast<core::RecursiveDirectoryIterator_O*>(client);
    GCObjectAllocator<core::RecursiveDirectoryIterator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__IterateRestraints_O:
{
    chem::IterateRestraints_O* obj_gc_safe = reinterpret_cast<chem::IterateRestraints_O*>(client);
    GCObjectAllocator<chem::IterateRestraints_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__IterateMatter_O:
{
    chem::IterateMatter_O* obj_gc_safe = reinterpret_cast<chem::IterateMatter_O*>(client);
    GCObjectAllocator<chem::IterateMatter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__IterateResidues_O:
{
    chem::IterateResidues_O* obj_gc_safe = reinterpret_cast<chem::IterateResidues_O*>(client);
    GCObjectAllocator<chem::IterateResidues_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__IterateBonds_O:
{
    chem::IterateBonds_O* obj_gc_safe = reinterpret_cast<chem::IterateBonds_O*>(client);
    GCObjectAllocator<chem::IterateBonds_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__IterateAtoms_O:
{
    chem::IterateAtoms_O* obj_gc_safe = reinterpret_cast<chem::IterateAtoms_O*>(client);
    GCObjectAllocator<chem::IterateAtoms_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__DirectoryIterator_O:
{
    core::DirectoryIterator_O* obj_gc_safe = reinterpret_cast<core::DirectoryIterator_O*>(client);
    GCObjectAllocator<core::DirectoryIterator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_adapt__IterateCons_O:
{
    adapt::IterateCons_O* obj_gc_safe = reinterpret_cast<adapt::IterateCons_O*>(client);
    GCObjectAllocator<adapt::IterateCons_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__FileStatus_O:
{
    core::FileStatus_O* obj_gc_safe = reinterpret_cast<core::FileStatus_O*>(client);
    GCObjectAllocator<core::FileStatus_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_adapt__StringList_O:
{
    adapt::StringList_O* obj_gc_safe = reinterpret_cast<adapt::StringList_O*>(client);
    GCObjectAllocator<adapt::StringList_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Stream_O:
{
    core::Stream_O* obj_gc_safe = reinterpret_cast<core::Stream_O*>(client);
    GCObjectAllocator<core::Stream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__AnsiStream_O:
{
    core::AnsiStream_O* obj_gc_safe = reinterpret_cast<core::AnsiStream_O*>(client);
    GCObjectAllocator<core::AnsiStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__EchoStream_O:
{
    core::EchoStream_O* obj_gc_safe = reinterpret_cast<core::EchoStream_O*>(client);
    GCObjectAllocator<core::EchoStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SynonymStream_O:
{
    core::SynonymStream_O* obj_gc_safe = reinterpret_cast<core::SynonymStream_O*>(client);
    GCObjectAllocator<core::SynonymStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__BroadcastStream_O:
{
    core::BroadcastStream_O* obj_gc_safe = reinterpret_cast<core::BroadcastStream_O*>(client);
    GCObjectAllocator<core::BroadcastStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__StringStream_O:
{
    core::StringStream_O* obj_gc_safe = reinterpret_cast<core::StringStream_O*>(client);
    GCObjectAllocator<core::StringStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__StringInputStream_O:
{
    core::StringInputStream_O* obj_gc_safe = reinterpret_cast<core::StringInputStream_O*>(client);
    GCObjectAllocator<core::StringInputStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__StringOutputStream_O:
{
    core::StringOutputStream_O* obj_gc_safe = reinterpret_cast<core::StringOutputStream_O*>(client);
    GCObjectAllocator<core::StringOutputStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__TwoWayStream_O:
{
    core::TwoWayStream_O* obj_gc_safe = reinterpret_cast<core::TwoWayStream_O*>(client);
    GCObjectAllocator<core::TwoWayStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__FileStream_O:
{
    core::FileStream_O* obj_gc_safe = reinterpret_cast<core::FileStream_O*>(client);
    GCObjectAllocator<core::FileStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__IOStreamStream_O:
{
    core::IOStreamStream_O* obj_gc_safe = reinterpret_cast<core::IOStreamStream_O*>(client);
    GCObjectAllocator<core::IOStreamStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__IOFileStream_O:
{
    core::IOFileStream_O* obj_gc_safe = reinterpret_cast<core::IOFileStream_O*>(client);
    GCObjectAllocator<core::IOFileStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ConcatenatedStream_O:
{
    core::ConcatenatedStream_O* obj_gc_safe = reinterpret_cast<core::ConcatenatedStream_O*>(client);
    GCObjectAllocator<core::ConcatenatedStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Cons_O:
{
    core::Cons_O* obj_gc_safe = reinterpret_cast<core::Cons_O*>(client);
    GCObjectAllocator<core::Cons_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_cffi__Pointer_O:
{
    cffi::Pointer_O* obj_gc_safe = reinterpret_cast<cffi::Pointer_O*>(client);
    GCObjectAllocator<cffi::Pointer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SourceFileInfo_O:
{
    core::SourceFileInfo_O* obj_gc_safe = reinterpret_cast<core::SourceFileInfo_O*>(client);
    GCObjectAllocator<core::SourceFileInfo_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Path_O:
{
    core::Path_O* obj_gc_safe = reinterpret_cast<core::Path_O*>(client);
    GCObjectAllocator<core::Path_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__StructureObject_O:
{
    core::StructureObject_O* obj_gc_safe = reinterpret_cast<core::StructureObject_O*>(client);
    GCObjectAllocator<core::StructureObject_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__InvocationHistoryFrameIterator_O:
{
    core::InvocationHistoryFrameIterator_O* obj_gc_safe = reinterpret_cast<core::InvocationHistoryFrameIterator_O*>(client);
    GCObjectAllocator<core::InvocationHistoryFrameIterator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__RandomState_O:
{
    core::RandomState_O* obj_gc_safe = reinterpret_cast<core::RandomState_O*>(client);
    GCObjectAllocator<core::RandomState_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DebugLoc_O:
{
    llvmo::DebugLoc_O* obj_gc_safe = reinterpret_cast<llvmo::DebugLoc_O*>(client);
    GCObjectAllocator<llvmo::DebugLoc_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Function_O:
{
    core::Function_O* obj_gc_safe = reinterpret_cast<core::Function_O*>(client);
    GCObjectAllocator<core::Function_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SingleDispatchGenericFunction_O:
{
    core::SingleDispatchGenericFunction_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchGenericFunction_O*>(client);
    GCObjectAllocator<core::SingleDispatchGenericFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SpecialForm_O:
{
    core::SpecialForm_O* obj_gc_safe = reinterpret_cast<core::SpecialForm_O*>(client);
    GCObjectAllocator<core::SpecialForm_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Instance_O:
{
    core::Instance_O* obj_gc_safe = reinterpret_cast<core::Instance_O*>(client);
    GCObjectAllocator<core::Instance_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__CompiledFunction_O:
{
    core::CompiledFunction_O* obj_gc_safe = reinterpret_cast<core::CompiledFunction_O*>(client);
    GCObjectAllocator<core::CompiledFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SingleDispatchEffectiveMethodFunction_O:
{
    core::SingleDispatchEffectiveMethodFunction_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchEffectiveMethodFunction_O*>(client);
    GCObjectAllocator<core::SingleDispatchEffectiveMethodFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__WeakPointer_O:
{
    core::WeakPointer_O* obj_gc_safe = reinterpret_cast<core::WeakPointer_O*>(client);
    GCObjectAllocator<core::WeakPointer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Pointer_O:
{
    core::Pointer_O* obj_gc_safe = reinterpret_cast<core::Pointer_O*>(client);
    GCObjectAllocator<core::Pointer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__VaList_dummy_O:
{
    core::VaList_dummy_O* obj_gc_safe = reinterpret_cast<core::VaList_dummy_O*>(client);
    GCObjectAllocator<core::VaList_dummy_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ExternalObject_O:
{
    core::ExternalObject_O* obj_gc_safe = reinterpret_cast<core::ExternalObject_O*>(client);
    GCObjectAllocator<core::ExternalObject_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__TargetOptions_O:
{
    llvmo::TargetOptions_O* obj_gc_safe = reinterpret_cast<llvmo::TargetOptions_O*>(client);
    GCObjectAllocator<llvmo::TargetOptions_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DIBuilder_O:
{
    llvmo::DIBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::DIBuilder_O*>(client);
    GCObjectAllocator<llvmo::DIBuilder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Pass_O:
{
    llvmo::Pass_O* obj_gc_safe = reinterpret_cast<llvmo::Pass_O*>(client);
    GCObjectAllocator<llvmo::Pass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ModulePass_O:
{
    llvmo::ModulePass_O* obj_gc_safe = reinterpret_cast<llvmo::ModulePass_O*>(client);
    GCObjectAllocator<llvmo::ModulePass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ImmutablePass_O:
{
    llvmo::ImmutablePass_O* obj_gc_safe = reinterpret_cast<llvmo::ImmutablePass_O*>(client);
    GCObjectAllocator<llvmo::ImmutablePass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DataLayoutPass_O:
{
    llvmo::DataLayoutPass_O* obj_gc_safe = reinterpret_cast<llvmo::DataLayoutPass_O*>(client);
    GCObjectAllocator<llvmo::DataLayoutPass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__TargetLibraryInfo_O:
{
    llvmo::TargetLibraryInfo_O* obj_gc_safe = reinterpret_cast<llvmo::TargetLibraryInfo_O*>(client);
    GCObjectAllocator<llvmo::TargetLibraryInfo_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__FunctionPass_O:
{
    llvmo::FunctionPass_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionPass_O*>(client);
    GCObjectAllocator<llvmo::FunctionPass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Linker_O:
{
    llvmo::Linker_O* obj_gc_safe = reinterpret_cast<llvmo::Linker_O*>(client);
    GCObjectAllocator<llvmo::Linker_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Module_O:
{
    llvmo::Module_O* obj_gc_safe = reinterpret_cast<llvmo::Module_O*>(client);
    GCObjectAllocator<llvmo::Module_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__APFloat_O:
{
    llvmo::APFloat_O* obj_gc_safe = reinterpret_cast<llvmo::APFloat_O*>(client);
    GCObjectAllocator<llvmo::APFloat_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__LLVMContext_O:
{
    llvmo::LLVMContext_O* obj_gc_safe = reinterpret_cast<llvmo::LLVMContext_O*>(client);
    GCObjectAllocator<llvmo::LLVMContext_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Target_O:
{
    llvmo::Target_O* obj_gc_safe = reinterpret_cast<llvmo::Target_O*>(client);
    GCObjectAllocator<llvmo::Target_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__APInt_O:
{
    llvmo::APInt_O* obj_gc_safe = reinterpret_cast<llvmo::APInt_O*>(client);
    GCObjectAllocator<llvmo::APInt_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__PassManagerBase_O:
{
    llvmo::PassManagerBase_O* obj_gc_safe = reinterpret_cast<llvmo::PassManagerBase_O*>(client);
    GCObjectAllocator<llvmo::PassManagerBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__FunctionPassManager_O:
{
    llvmo::FunctionPassManager_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionPassManager_O*>(client);
    GCObjectAllocator<llvmo::FunctionPassManager_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__PassManager_O:
{
    llvmo::PassManager_O* obj_gc_safe = reinterpret_cast<llvmo::PassManager_O*>(client);
    GCObjectAllocator<llvmo::PassManager_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Value_O:
{
    llvmo::Value_O* obj_gc_safe = reinterpret_cast<llvmo::Value_O*>(client);
    GCObjectAllocator<llvmo::Value_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Argument_O:
{
    llvmo::Argument_O* obj_gc_safe = reinterpret_cast<llvmo::Argument_O*>(client);
    GCObjectAllocator<llvmo::Argument_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__User_O:
{
    llvmo::User_O* obj_gc_safe = reinterpret_cast<llvmo::User_O*>(client);
    GCObjectAllocator<llvmo::User_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Constant_O:
{
    llvmo::Constant_O* obj_gc_safe = reinterpret_cast<llvmo::Constant_O*>(client);
    GCObjectAllocator<llvmo::Constant_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ConstantInt_O:
{
    llvmo::ConstantInt_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantInt_O*>(client);
    GCObjectAllocator<llvmo::ConstantInt_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ConstantFP_O:
{
    llvmo::ConstantFP_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantFP_O*>(client);
    GCObjectAllocator<llvmo::ConstantFP_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__GlobalValue_O:
{
    llvmo::GlobalValue_O* obj_gc_safe = reinterpret_cast<llvmo::GlobalValue_O*>(client);
    GCObjectAllocator<llvmo::GlobalValue_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__GlobalVariable_O:
{
    llvmo::GlobalVariable_O* obj_gc_safe = reinterpret_cast<llvmo::GlobalVariable_O*>(client);
    GCObjectAllocator<llvmo::GlobalVariable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Function_O:
{
    llvmo::Function_O* obj_gc_safe = reinterpret_cast<llvmo::Function_O*>(client);
    GCObjectAllocator<llvmo::Function_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ConstantArray_O:
{
    llvmo::ConstantArray_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantArray_O*>(client);
    GCObjectAllocator<llvmo::ConstantArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ConstantStruct_O:
{
    llvmo::ConstantStruct_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantStruct_O*>(client);
    GCObjectAllocator<llvmo::ConstantStruct_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__UndefValue_O:
{
    llvmo::UndefValue_O* obj_gc_safe = reinterpret_cast<llvmo::UndefValue_O*>(client);
    GCObjectAllocator<llvmo::UndefValue_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ConstantPointerNull_O:
{
    llvmo::ConstantPointerNull_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantPointerNull_O*>(client);
    GCObjectAllocator<llvmo::ConstantPointerNull_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ConstantExpr_O:
{
    llvmo::ConstantExpr_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantExpr_O*>(client);
    GCObjectAllocator<llvmo::ConstantExpr_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__BlockAddress_O:
{
    llvmo::BlockAddress_O* obj_gc_safe = reinterpret_cast<llvmo::BlockAddress_O*>(client);
    GCObjectAllocator<llvmo::BlockAddress_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ConstantDataSequential_O:
{
    llvmo::ConstantDataSequential_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantDataSequential_O*>(client);
    GCObjectAllocator<llvmo::ConstantDataSequential_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ConstantDataArray_O:
{
    llvmo::ConstantDataArray_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantDataArray_O*>(client);
    GCObjectAllocator<llvmo::ConstantDataArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Instruction_O:
{
    llvmo::Instruction_O* obj_gc_safe = reinterpret_cast<llvmo::Instruction_O*>(client);
    GCObjectAllocator<llvmo::Instruction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__PHINode_O:
{
    llvmo::PHINode_O* obj_gc_safe = reinterpret_cast<llvmo::PHINode_O*>(client);
    GCObjectAllocator<llvmo::PHINode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__LandingPadInst_O:
{
    llvmo::LandingPadInst_O* obj_gc_safe = reinterpret_cast<llvmo::LandingPadInst_O*>(client);
    GCObjectAllocator<llvmo::LandingPadInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__AtomicCmpXchgInst_O:
{
    llvmo::AtomicCmpXchgInst_O* obj_gc_safe = reinterpret_cast<llvmo::AtomicCmpXchgInst_O*>(client);
    GCObjectAllocator<llvmo::AtomicCmpXchgInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__TerminatorInst_O:
{
    llvmo::TerminatorInst_O* obj_gc_safe = reinterpret_cast<llvmo::TerminatorInst_O*>(client);
    GCObjectAllocator<llvmo::TerminatorInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__UnreachableInst_O:
{
    llvmo::UnreachableInst_O* obj_gc_safe = reinterpret_cast<llvmo::UnreachableInst_O*>(client);
    GCObjectAllocator<llvmo::UnreachableInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__InvokeInst_O:
{
    llvmo::InvokeInst_O* obj_gc_safe = reinterpret_cast<llvmo::InvokeInst_O*>(client);
    GCObjectAllocator<llvmo::InvokeInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__BranchInst_O:
{
    llvmo::BranchInst_O* obj_gc_safe = reinterpret_cast<llvmo::BranchInst_O*>(client);
    GCObjectAllocator<llvmo::BranchInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__IndirectBrInst_O:
{
    llvmo::IndirectBrInst_O* obj_gc_safe = reinterpret_cast<llvmo::IndirectBrInst_O*>(client);
    GCObjectAllocator<llvmo::IndirectBrInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ResumeInst_O:
{
    llvmo::ResumeInst_O* obj_gc_safe = reinterpret_cast<llvmo::ResumeInst_O*>(client);
    GCObjectAllocator<llvmo::ResumeInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__SwitchInst_O:
{
    llvmo::SwitchInst_O* obj_gc_safe = reinterpret_cast<llvmo::SwitchInst_O*>(client);
    GCObjectAllocator<llvmo::SwitchInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ReturnInst_O:
{
    llvmo::ReturnInst_O* obj_gc_safe = reinterpret_cast<llvmo::ReturnInst_O*>(client);
    GCObjectAllocator<llvmo::ReturnInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__FenceInst_O:
{
    llvmo::FenceInst_O* obj_gc_safe = reinterpret_cast<llvmo::FenceInst_O*>(client);
    GCObjectAllocator<llvmo::FenceInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__AtomicRMWInst_O:
{
    llvmo::AtomicRMWInst_O* obj_gc_safe = reinterpret_cast<llvmo::AtomicRMWInst_O*>(client);
    GCObjectAllocator<llvmo::AtomicRMWInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__StoreInst_O:
{
    llvmo::StoreInst_O* obj_gc_safe = reinterpret_cast<llvmo::StoreInst_O*>(client);
    GCObjectAllocator<llvmo::StoreInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__UnaryInstruction_O:
{
    llvmo::UnaryInstruction_O* obj_gc_safe = reinterpret_cast<llvmo::UnaryInstruction_O*>(client);
    GCObjectAllocator<llvmo::UnaryInstruction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__VAArgInst_O:
{
    llvmo::VAArgInst_O* obj_gc_safe = reinterpret_cast<llvmo::VAArgInst_O*>(client);
    GCObjectAllocator<llvmo::VAArgInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__AllocaInst_O:
{
    llvmo::AllocaInst_O* obj_gc_safe = reinterpret_cast<llvmo::AllocaInst_O*>(client);
    GCObjectAllocator<llvmo::AllocaInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__LoadInst_O:
{
    llvmo::LoadInst_O* obj_gc_safe = reinterpret_cast<llvmo::LoadInst_O*>(client);
    GCObjectAllocator<llvmo::LoadInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__CallInst_O:
{
    llvmo::CallInst_O* obj_gc_safe = reinterpret_cast<llvmo::CallInst_O*>(client);
    GCObjectAllocator<llvmo::CallInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__BasicBlock_O:
{
    llvmo::BasicBlock_O* obj_gc_safe = reinterpret_cast<llvmo::BasicBlock_O*>(client);
    GCObjectAllocator<llvmo::BasicBlock_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__IRBuilderBase_O:
{
    llvmo::IRBuilderBase_O* obj_gc_safe = reinterpret_cast<llvmo::IRBuilderBase_O*>(client);
    GCObjectAllocator<llvmo::IRBuilderBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__IRBuilder_O:
{
    llvmo::IRBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::IRBuilder_O*>(client);
    GCObjectAllocator<llvmo::IRBuilder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__MCSubtargetInfo_O:
{
    llvmo::MCSubtargetInfo_O* obj_gc_safe = reinterpret_cast<llvmo::MCSubtargetInfo_O*>(client);
    GCObjectAllocator<llvmo::MCSubtargetInfo_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__TargetSubtargetInfo_O:
{
    llvmo::TargetSubtargetInfo_O* obj_gc_safe = reinterpret_cast<llvmo::TargetSubtargetInfo_O*>(client);
    GCObjectAllocator<llvmo::TargetSubtargetInfo_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__EngineBuilder_O:
{
    llvmo::EngineBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::EngineBuilder_O*>(client);
    GCObjectAllocator<llvmo::EngineBuilder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DataLayout_O:
{
    llvmo::DataLayout_O* obj_gc_safe = reinterpret_cast<llvmo::DataLayout_O*>(client);
    GCObjectAllocator<llvmo::DataLayout_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Triple_O:
{
    llvmo::Triple_O* obj_gc_safe = reinterpret_cast<llvmo::Triple_O*>(client);
    GCObjectAllocator<llvmo::Triple_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__TargetMachine_O:
{
    llvmo::TargetMachine_O* obj_gc_safe = reinterpret_cast<llvmo::TargetMachine_O*>(client);
    GCObjectAllocator<llvmo::TargetMachine_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__LLVMTargetMachine_O:
{
    llvmo::LLVMTargetMachine_O* obj_gc_safe = reinterpret_cast<llvmo::LLVMTargetMachine_O*>(client);
    GCObjectAllocator<llvmo::LLVMTargetMachine_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Type_O:
{
    llvmo::Type_O* obj_gc_safe = reinterpret_cast<llvmo::Type_O*>(client);
    GCObjectAllocator<llvmo::Type_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__CompositeType_O:
{
    llvmo::CompositeType_O* obj_gc_safe = reinterpret_cast<llvmo::CompositeType_O*>(client);
    GCObjectAllocator<llvmo::CompositeType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__StructType_O:
{
    llvmo::StructType_O* obj_gc_safe = reinterpret_cast<llvmo::StructType_O*>(client);
    GCObjectAllocator<llvmo::StructType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__SequentialType_O:
{
    llvmo::SequentialType_O* obj_gc_safe = reinterpret_cast<llvmo::SequentialType_O*>(client);
    GCObjectAllocator<llvmo::SequentialType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__PointerType_O:
{
    llvmo::PointerType_O* obj_gc_safe = reinterpret_cast<llvmo::PointerType_O*>(client);
    GCObjectAllocator<llvmo::PointerType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ArrayType_O:
{
    llvmo::ArrayType_O* obj_gc_safe = reinterpret_cast<llvmo::ArrayType_O*>(client);
    GCObjectAllocator<llvmo::ArrayType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__VectorType_O:
{
    llvmo::VectorType_O* obj_gc_safe = reinterpret_cast<llvmo::VectorType_O*>(client);
    GCObjectAllocator<llvmo::VectorType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__FunctionType_O:
{
    llvmo::FunctionType_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionType_O*>(client);
    GCObjectAllocator<llvmo::FunctionType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__IntegerType_O:
{
    llvmo::IntegerType_O* obj_gc_safe = reinterpret_cast<llvmo::IntegerType_O*>(client);
    GCObjectAllocator<llvmo::IntegerType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Metadata_O:
{
    llvmo::Metadata_O* obj_gc_safe = reinterpret_cast<llvmo::Metadata_O*>(client);
    GCObjectAllocator<llvmo::Metadata_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ValueAsMetadata_O:
{
    llvmo::ValueAsMetadata_O* obj_gc_safe = reinterpret_cast<llvmo::ValueAsMetadata_O*>(client);
    GCObjectAllocator<llvmo::ValueAsMetadata_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__MDString_O:
{
    llvmo::MDString_O* obj_gc_safe = reinterpret_cast<llvmo::MDString_O*>(client);
    GCObjectAllocator<llvmo::MDString_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__MDNode_O:
{
    llvmo::MDNode_O* obj_gc_safe = reinterpret_cast<llvmo::MDNode_O*>(client);
    GCObjectAllocator<llvmo::MDNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__NamedMDNode_O:
{
    llvmo::NamedMDNode_O* obj_gc_safe = reinterpret_cast<llvmo::NamedMDNode_O*>(client);
    GCObjectAllocator<llvmo::NamedMDNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ExecutionEngine_O:
{
    llvmo::ExecutionEngine_O* obj_gc_safe = reinterpret_cast<llvmo::ExecutionEngine_O*>(client);
    GCObjectAllocator<llvmo::ExecutionEngine_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ForeignData_O:
{
    core::ForeignData_O* obj_gc_safe = reinterpret_cast<core::ForeignData_O*>(client);
    GCObjectAllocator<core::ForeignData_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__PassManagerBuilder_O:
{
    llvmo::PassManagerBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::PassManagerBuilder_O*>(client);
    GCObjectAllocator<llvmo::PassManagerBuilder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_adapt__ObjectSet_O:
{
    adapt::ObjectSet_O* obj_gc_safe = reinterpret_cast<adapt::ObjectSet_O*>(client);
    GCObjectAllocator<adapt::ObjectSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__IntArray_O:
{
    core::IntArray_O* obj_gc_safe = reinterpret_cast<core::IntArray_O*>(client);
    GCObjectAllocator<core::IntArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__PosixTime_O:
{
    core::PosixTime_O* obj_gc_safe = reinterpret_cast<core::PosixTime_O*>(client);
    GCObjectAllocator<core::PosixTime_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__Symbol_O:
{
    core::Symbol_O* obj_gc_safe = reinterpret_cast<core::Symbol_O*>(client);
    GCObjectAllocator<core::Symbol_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Null_O:
{
    core::Null_O* obj_gc_safe = reinterpret_cast<core::Null_O*>(client);
    GCObjectAllocator<core::Null_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_adapt__IndexedObjectBag_O:
{
    adapt::IndexedObjectBag_O* obj_gc_safe = reinterpret_cast<adapt::IndexedObjectBag_O*>(client);
    GCObjectAllocator<adapt::IndexedObjectBag_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__PosixTimeDuration_O:
{
    core::PosixTimeDuration_O* obj_gc_safe = reinterpret_cast<core::PosixTimeDuration_O*>(client);
    GCObjectAllocator<core::PosixTimeDuration_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SymbolToEnumConverter_O:
{
    core::SymbolToEnumConverter_O* obj_gc_safe = reinterpret_cast<core::SymbolToEnumConverter_O*>(client);
    GCObjectAllocator<core::SymbolToEnumConverter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ReadTable_O:
{
    core::ReadTable_O* obj_gc_safe = reinterpret_cast<core::ReadTable_O*>(client);
    GCObjectAllocator<core::ReadTable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Number_O:
{
    core::Number_O* obj_gc_safe = reinterpret_cast<core::Number_O*>(client);
    GCObjectAllocator<core::Number_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Complex_O:
{
    core::Complex_O* obj_gc_safe = reinterpret_cast<core::Complex_O*>(client);
    GCObjectAllocator<core::Complex_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Real_O:
{
    core::Real_O* obj_gc_safe = reinterpret_cast<core::Real_O*>(client);
    GCObjectAllocator<core::Real_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Float_O:
{
    core::Float_O* obj_gc_safe = reinterpret_cast<core::Float_O*>(client);
    GCObjectAllocator<core::Float_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SingleFloat_dummy_O:
{
    core::SingleFloat_dummy_O* obj_gc_safe = reinterpret_cast<core::SingleFloat_dummy_O*>(client);
    GCObjectAllocator<core::SingleFloat_dummy_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__LongFloat_O:
{
    core::LongFloat_O* obj_gc_safe = reinterpret_cast<core::LongFloat_O*>(client);
    GCObjectAllocator<core::LongFloat_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ShortFloat_O:
{
    core::ShortFloat_O* obj_gc_safe = reinterpret_cast<core::ShortFloat_O*>(client);
    GCObjectAllocator<core::ShortFloat_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__DoubleFloat_O:
{
    core::DoubleFloat_O* obj_gc_safe = reinterpret_cast<core::DoubleFloat_O*>(client);
    GCObjectAllocator<core::DoubleFloat_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Rational_O:
{
    core::Rational_O* obj_gc_safe = reinterpret_cast<core::Rational_O*>(client);
    GCObjectAllocator<core::Rational_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Integer_O:
{
    core::Integer_O* obj_gc_safe = reinterpret_cast<core::Integer_O*>(client);
    GCObjectAllocator<core::Integer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Bignum_O:
{
    core::Bignum_O* obj_gc_safe = reinterpret_cast<core::Bignum_O*>(client);
    GCObjectAllocator<core::Bignum_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Fixnum_dummy_O:
{
    core::Fixnum_dummy_O* obj_gc_safe = reinterpret_cast<core::Fixnum_dummy_O*>(client);
    GCObjectAllocator<core::Fixnum_dummy_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Ratio_O:
{
    core::Ratio_O* obj_gc_safe = reinterpret_cast<core::Ratio_O*>(client);
    GCObjectAllocator<core::Ratio_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__CandoException_O:
{
    core::CandoException_O* obj_gc_safe = reinterpret_cast<core::CandoException_O*>(client);
    GCObjectAllocator<core::CandoException_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Archive_O:
{
    core::Archive_O* obj_gc_safe = reinterpret_cast<core::Archive_O*>(client);
    GCObjectAllocator<core::Archive_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__LoadArchive_O:
{
    core::LoadArchive_O* obj_gc_safe = reinterpret_cast<core::LoadArchive_O*>(client);
    GCObjectAllocator<core::LoadArchive_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SexpLoadArchive_O:
{
    core::SexpLoadArchive_O* obj_gc_safe = reinterpret_cast<core::SexpLoadArchive_O*>(client);
    GCObjectAllocator<core::SexpLoadArchive_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SaveArchive_O:
{
    core::SaveArchive_O* obj_gc_safe = reinterpret_cast<core::SaveArchive_O*>(client);
    GCObjectAllocator<core::SaveArchive_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SexpSaveArchive_O:
{
    core::SexpSaveArchive_O* obj_gc_safe = reinterpret_cast<core::SexpSaveArchive_O*>(client);
    GCObjectAllocator<core::SexpSaveArchive_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__HashTable_O:
{
    core::HashTable_O* obj_gc_safe = reinterpret_cast<core::HashTable_O*>(client);
    GCObjectAllocator<core::HashTable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__HashTableEq_O:
{
    core::HashTableEq_O* obj_gc_safe = reinterpret_cast<core::HashTableEq_O*>(client);
    GCObjectAllocator<core::HashTableEq_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__HashTableEqual_O:
{
    core::HashTableEqual_O* obj_gc_safe = reinterpret_cast<core::HashTableEqual_O*>(client);
    GCObjectAllocator<core::HashTableEqual_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__HashTableEql_O:
{
    core::HashTableEql_O* obj_gc_safe = reinterpret_cast<core::HashTableEql_O*>(client);
    GCObjectAllocator<core::HashTableEql_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__HashTableEqualp_O:
{
    core::HashTableEqualp_O* obj_gc_safe = reinterpret_cast<core::HashTableEqualp_O*>(client);
    GCObjectAllocator<core::HashTableEqualp_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Environment_O:
{
    core::Environment_O* obj_gc_safe = reinterpret_cast<core::Environment_O*>(client);
    GCObjectAllocator<core::Environment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ActivationFrame_O:
{
    core::ActivationFrame_O* obj_gc_safe = reinterpret_cast<core::ActivationFrame_O*>(client);
    GCObjectAllocator<core::ActivationFrame_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__FunctionFrame_O:
{
    core::FunctionFrame_O* obj_gc_safe = reinterpret_cast<core::FunctionFrame_O*>(client);
    GCObjectAllocator<core::FunctionFrame_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__TagbodyFrame_O:
{
    core::TagbodyFrame_O* obj_gc_safe = reinterpret_cast<core::TagbodyFrame_O*>(client);
    GCObjectAllocator<core::TagbodyFrame_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ValueFrame_O:
{
    core::ValueFrame_O* obj_gc_safe = reinterpret_cast<core::ValueFrame_O*>(client);
    GCObjectAllocator<core::ValueFrame_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__LexicalEnvironment_O:
{
    core::LexicalEnvironment_O* obj_gc_safe = reinterpret_cast<core::LexicalEnvironment_O*>(client);
    GCObjectAllocator<core::LexicalEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__CompileTimeEnvironment_O:
{
    core::CompileTimeEnvironment_O* obj_gc_safe = reinterpret_cast<core::CompileTimeEnvironment_O*>(client);
    GCObjectAllocator<core::CompileTimeEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__MacroletEnvironment_O:
{
    core::MacroletEnvironment_O* obj_gc_safe = reinterpret_cast<core::MacroletEnvironment_O*>(client);
    GCObjectAllocator<core::MacroletEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__FunctionContainerEnvironment_O:
{
    core::FunctionContainerEnvironment_O* obj_gc_safe = reinterpret_cast<core::FunctionContainerEnvironment_O*>(client);
    GCObjectAllocator<core::FunctionContainerEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__UnwindProtectEnvironment_O:
{
    core::UnwindProtectEnvironment_O* obj_gc_safe = reinterpret_cast<core::UnwindProtectEnvironment_O*>(client);
    GCObjectAllocator<core::UnwindProtectEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SymbolMacroletEnvironment_O:
{
    core::SymbolMacroletEnvironment_O* obj_gc_safe = reinterpret_cast<core::SymbolMacroletEnvironment_O*>(client);
    GCObjectAllocator<core::SymbolMacroletEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__StackValueEnvironment_O:
{
    core::StackValueEnvironment_O* obj_gc_safe = reinterpret_cast<core::StackValueEnvironment_O*>(client);
    GCObjectAllocator<core::StackValueEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__BlockEnvironment_O:
{
    core::BlockEnvironment_O* obj_gc_safe = reinterpret_cast<core::BlockEnvironment_O*>(client);
    GCObjectAllocator<core::BlockEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__CatchEnvironment_O:
{
    core::CatchEnvironment_O* obj_gc_safe = reinterpret_cast<core::CatchEnvironment_O*>(client);
    GCObjectAllocator<core::CatchEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__RuntimeVisibleEnvironment_O:
{
    core::RuntimeVisibleEnvironment_O* obj_gc_safe = reinterpret_cast<core::RuntimeVisibleEnvironment_O*>(client);
    GCObjectAllocator<core::RuntimeVisibleEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ValueEnvironment_O:
{
    core::ValueEnvironment_O* obj_gc_safe = reinterpret_cast<core::ValueEnvironment_O*>(client);
    GCObjectAllocator<core::ValueEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__FunctionValueEnvironment_O:
{
    core::FunctionValueEnvironment_O* obj_gc_safe = reinterpret_cast<core::FunctionValueEnvironment_O*>(client);
    GCObjectAllocator<core::FunctionValueEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__TagbodyEnvironment_O:
{
    core::TagbodyEnvironment_O* obj_gc_safe = reinterpret_cast<core::TagbodyEnvironment_O*>(client);
    GCObjectAllocator<core::TagbodyEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__GlueEnvironment_O:
{
    core::GlueEnvironment_O* obj_gc_safe = reinterpret_cast<core::GlueEnvironment_O*>(client);
    GCObjectAllocator<core::GlueEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__WeakKeyMapping_O:
{
    core::WeakKeyMapping_O* obj_gc_safe = reinterpret_cast<core::WeakKeyMapping_O*>(client);
    GCObjectAllocator<core::WeakKeyMapping_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__LambdaListHandler_O:
{
    core::LambdaListHandler_O* obj_gc_safe = reinterpret_cast<core::LambdaListHandler_O*>(client);
    GCObjectAllocator<core::LambdaListHandler_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__InsertPoint_O:
{
    llvmo::InsertPoint_O* obj_gc_safe = reinterpret_cast<llvmo::InsertPoint_O*>(client);
    GCObjectAllocator<llvmo::InsertPoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SingleDispatchMethod_O:
{
    core::SingleDispatchMethod_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchMethod_O*>(client);
    GCObjectAllocator<core::SingleDispatchMethod_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Attribute_O:
{
    llvmo::Attribute_O* obj_gc_safe = reinterpret_cast<llvmo::Attribute_O*>(client);
    GCObjectAllocator<llvmo::Attribute_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Character_dummy_O:
{
    core::Character_dummy_O* obj_gc_safe = reinterpret_cast<core::Character_dummy_O*>(client);
    GCObjectAllocator<core::Character_dummy_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SmallMultimap_O:
{
    core::SmallMultimap_O* obj_gc_safe = reinterpret_cast<core::SmallMultimap_O*>(client);
    GCObjectAllocator<core::SmallMultimap_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Binder_O:
{
    core::Binder_O* obj_gc_safe = reinterpret_cast<core::Binder_O*>(client);
    GCObjectAllocator<core::Binder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Pathname_O:
{
    core::Pathname_O* obj_gc_safe = reinterpret_cast<core::Pathname_O*>(client);
    GCObjectAllocator<core::Pathname_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__LogicalPathname_O:
{
    core::LogicalPathname_O* obj_gc_safe = reinterpret_cast<core::LogicalPathname_O*>(client);
    GCObjectAllocator<core::LogicalPathname_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SourceManager_O:
{
    core::SourceManager_O* obj_gc_safe = reinterpret_cast<core::SourceManager_O*>(client);
    GCObjectAllocator<core::SourceManager_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Record_O:
{
    core::Record_O* obj_gc_safe = reinterpret_cast<core::Record_O*>(client);
    GCObjectAllocator<core::Record_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SmallMap_O:
{
    core::SmallMap_O* obj_gc_safe = reinterpret_cast<core::SmallMap_O*>(client);
    GCObjectAllocator<core::SmallMap_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__LightUserData_O:
{
    core::LightUserData_O* obj_gc_safe = reinterpret_cast<core::LightUserData_O*>(client);
    GCObjectAllocator<core::LightUserData_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__UserData_O:
{
    core::UserData_O* obj_gc_safe = reinterpret_cast<core::UserData_O*>(client);
    GCObjectAllocator<core::UserData_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_ROOTCLASSALLOC_asttooling__RegMap__RegistryMaps:
{
    asttooling::RegMap::RegistryMaps* obj_gc_safe = reinterpret_cast<asttooling::RegMap::RegistryMaps*>(client);
    GCObjectAllocator<asttooling::RegMap::RegistryMaps>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__Cache:
{
    core::Cache* obj_gc_safe = reinterpret_cast<core::Cache*>(client);
    GCObjectAllocator<core::Cache>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_TEMPLATED_CLASSALLOC_core__Creator:
{
    core::Creator* obj_gc_safe = reinterpret_cast<core::Creator*>(client);
    GCObjectAllocator<core::Creator>::deallocate_unmanaged_instance(obj_gc_safe);
}
obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__InstanceCreator:
{
    core::InstanceCreator* obj_gc_safe = reinterpret_cast<core::InstanceCreator*>(client);
    GCObjectAllocator<core::InstanceCreator>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_TEMPLATED_CLASSALLOC_clbind__ConstructorCreator:
{
    clbind::ConstructorCreator* obj_gc_safe = reinterpret_cast<clbind::ConstructorCreator*>(client);
    GCObjectAllocator<clbind::ConstructorCreator>::deallocate_unmanaged_instance(obj_gc_safe);
}
obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_clbind__DummyCreator:
{
    clbind::DummyCreator* obj_gc_safe = reinterpret_cast<clbind::DummyCreator*>(client);
    GCObjectAllocator<clbind::DummyCreator>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyStretch_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyStretch>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFStretch_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFStretch_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__SingleDispatchGenericFunctionClosure:
{
    core::SingleDispatchGenericFunctionClosure* obj_gc_safe = reinterpret_cast<core::SingleDispatchGenericFunctionClosure*>(client);
    GCObjectAllocator<core::SingleDispatchGenericFunctionClosure>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Stereoisomer_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyNonbond_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyNonbond>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__RequiredArgument_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::RequiredArgument>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Entity_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_llvmo__CompiledClosure:
{
    llvmo::CompiledClosure* obj_gc_safe = reinterpret_cast<llvmo::CompiledClosure*>(client);
    GCObjectAllocator<llvmo::CompiledClosure>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Str_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Str_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomInfo_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::AtomInfo>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__RegMap__SymbolMatcherDescriptorPair_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<asttooling::RegMap::SymbolMatcherDescriptorPair>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFItor_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFItor_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>"));}
obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_asttooling__internal__OverloadedMatcherDescriptor:
{
    asttooling::internal::OverloadedMatcherDescriptor* obj_gc_safe = reinterpret_cast<asttooling::internal::OverloadedMatcherDescriptor*>(client);
    GCObjectAllocator<asttooling::internal::OverloadedMatcherDescriptor>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__FixedNonbondRestraint_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::FixedNonbondRestraint>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_asttooling__internal__MatcherDescriptor__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::tagged_pointer<asttooling::internal::MatcherDescriptor>>"));}
obj_deallocate_unmanaged_instance_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__2_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,2>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__ExceptionEntry_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::ExceptionEntry>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>"));}
obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__MacroClosure:
{
    core::MacroClosure* obj_gc_safe = reinterpret_cast<core::MacroClosure*>(client);
    GCObjectAllocator<core::MacroClosure>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyDihedral_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyDihedral>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ParserValue_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<asttooling::ParserValue>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>"));}
obj_deallocate_unmanaged_instance_KIND_GCSTRING_gctools__GCString_moveable_char_:
{
    THROW_HARD_ERROR(BF("Should never deallocate gcstrings gctools::GCString_moveable<char>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__RingClosingMate_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::RingClosingMate_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolClassPair_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::SymbolClassPair>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__KeyEntry_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::KeyEntry>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAtom_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyAtom>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFPtor_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFPtor_O>>"));}
obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_asttooling__internal__VariadicOperatorMatcherDescriptor:
{
    asttooling::internal::VariadicOperatorMatcherDescriptor* obj_gc_safe = reinterpret_cast<asttooling::internal::VariadicOperatorMatcherDescriptor*>(client);
    GCObjectAllocator<asttooling::internal::VariadicOperatorMatcherDescriptor>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyImproperRestraint_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyImproperRestraint>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomPdbRec_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::AtomPdbRec>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFItor_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFItor_O>>"));}
obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__InstanceClosure:
{
    core::InstanceClosure* obj_gc_safe = reinterpret_cast<core::InstanceClosure*>(client);
    GCObjectAllocator<core::InstanceClosure>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__1_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,1>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolStorage_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::SymbolStorage>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ErrorContent_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<asttooling::ErrorContent>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyChiralRestraint_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyChiralRestraint>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>"));}
obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__CoreExposer:
{
    core::CoreExposer* obj_gc_safe = reinterpret_cast<core::CoreExposer*>(client);
    GCObjectAllocator<core::CoreExposer>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ContextFrame_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<asttooling::ContextFrame>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>"));}
obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_asttooling__internal__FixedArgCountMatcherDescriptor:
{
    asttooling::internal::FixedArgCountMatcherDescriptor* obj_gc_safe = reinterpret_cast<asttooling::internal::FixedArgCountMatcherDescriptor*>(client);
    GCObjectAllocator<asttooling::internal::FixedArgCountMatcherDescriptor>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__OptionalArgument_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::OptionalArgument>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAngle_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyAngle>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__T_O_P_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::T_O *>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>"));}
obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__InterpretedClosure:
{
    core::InterpretedClosure* obj_gc_safe = reinterpret_cast<core::InterpretedClosure*>(client);
    GCObjectAllocator<core::InterpretedClosure>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_asttooling__internal__FreeFuncMatcherDescriptor:
{
    asttooling::internal::FreeFuncMatcherDescriptor* obj_gc_safe = reinterpret_cast<asttooling::internal::FreeFuncMatcherDescriptor*>(client);
    GCObjectAllocator<asttooling::internal::FreeFuncMatcherDescriptor>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__DynamicBinding_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::DynamicBinding>"));}
obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__VectorStepper:
{
    core::VectorStepper* obj_gc_safe = reinterpret_cast<core::VectorStepper*>(client);
    GCObjectAllocator<core::VectorStepper>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFStretch_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFStretch_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__AuxArgument_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::AuxArgument>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_core__SequenceStepper__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::tagged_pointer<core::SequenceStepper>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyAnchorRestraint>"));}
obj_deallocate_unmanaged_instance_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__0_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>,0>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__KeywordArgument_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::KeywordArgument>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::StereoisomerAtoms_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SourceFileInfo_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::SourceFileInfo_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__CacheRecord_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::CacheRecord>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__ResidueOut_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::ResidueOut>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>"));}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_asttooling__DerivableFrontendActionFactory:
{
    asttooling::DerivableFrontendActionFactory* obj_gc_safe = reinterpret_cast<asttooling::DerivableFrontendActionFactory*>(client);
    GCObjectAllocator<asttooling::DerivableFrontendActionFactory>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_asttooling__DerivableMatchCallback:
{
    asttooling::DerivableMatchCallback* obj_gc_safe = reinterpret_cast<asttooling::DerivableMatchCallback*>(client);
    GCObjectAllocator<asttooling::DerivableMatchCallback>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFPtor_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFPtor_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_asttooling__DerivableASTFrontendAction:
{
    asttooling::DerivableASTFrontendAction* obj_gc_safe = reinterpret_cast<asttooling::DerivableASTFrontendAction*>(client);
    GCObjectAllocator<asttooling::DerivableASTFrontendAction>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneTypeRule_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::OneTypeRule_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__Message_:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<asttooling::Message>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>"));}
obj_deallocate_unmanaged_instance_KIND_LISPALLOC_asttooling__DerivableSyntaxOnlyAction:
{
    asttooling::DerivableSyntaxOnlyAction* obj_gc_safe = reinterpret_cast<asttooling::DerivableSyntaxOnlyAction*>(client);
    GCObjectAllocator<asttooling::DerivableSyntaxOnlyAction>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneMonomer_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::OneMonomer_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFAngle_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FFAngle_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>"));}
obj_deallocate_unmanaged_instance_KIND_TEMPLATED_CLASSALLOC_core__BuiltinClosure:
{
    core::BuiltinClosure* obj_gc_safe = reinterpret_cast<core::BuiltinClosure*>(client);
    GCObjectAllocator<core::BuiltinClosure>::deallocate_unmanaged_instance(obj_gc_safe);
}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFAngle_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFAngle_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>"));}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfo_O__:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfo_O>>"));}
obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__ConsStepper:
{
    core::ConsStepper* obj_gc_safe = reinterpret_cast<core::ConsStepper*>(client);
    GCObjectAllocator<core::ConsStepper>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___:
{
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>"));}
#endif // defined(GC_OBJ_DEALLOCATOR)
#if defined(GC_OBJ_DEALLOCATOR_HELPERS)

#endif // defined(GC_OBJ_DEALLOCATOR_HELPERS)
#if defined(GC_OBJ_DEALLOCATOR_TABLE)
static void* OBJ_DEALLOCATOR_table[] = { 
  /* 4 */ &&obj_deallocate_unmanaged_instance_KIND_ROOTCLASSALLOC_clbind__detail__class_map,
  /* 5 */ &&obj_deallocate_unmanaged_instance_KIND_ROOTCLASSALLOC_core__Lisp_O,
  /* 6 */ &&obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__T_O,
  /* 7 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Regex_O,
  /* 8 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__WeakHashTable_O,
  /* 9 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__WeakKeyHashTable_O,
  /* 10 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Reader_O,
  /* 11 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__CxxObject_O,
  /* 12 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_units__Unit_O,
  /* 13 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_units__NamedUnit_O,
  /* 14 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AtomTable_O,
  /* 15 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Command_O,
  /* 16 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__NVector_O,
  /* 17 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_geom__OVector2_O,
  /* 18 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__MonomerContext_O,
  /* 19 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFNonbondCrossTermTable_O,
  /* 20 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__BondList_O,
  /* 21 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CDFragment_O,
  /* 22 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ResidueList_O,
  /* 23 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Structure_Old_ListEntry_O,
  /* 24 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ReadAmberParameters_O,
  /* 25 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AtomIndexer_O,
  /* 26 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Structure_Old_List_O,
  /* 27 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_adapt__StringSet_O,
  /* 28 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ChemInfoMatch_O,
  /* 29 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SpanningLoop_O,
  /* 30 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CDBond_O,
  /* 31 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ForceField_O,
  /* 32 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__OneMonomer_O,
  /* 33 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ReportBase_O,
  /* 34 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__MessageReport_O,
  /* 35 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ForceMatchReport_O,
  /* 36 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__StepReport_O,
  /* 37 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__PathMessage_O,
  /* 38 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FrameRecognizer_O,
  /* 39 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__StereoisomerAtom_O,
  /* 40 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__StereoisomerVirtualAtom_O,
  /* 41 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__MonomerCoordinates_O,
  /* 42 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SearchStatistics_O,
  /* 43 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AtomId_O,
  /* 44 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__TypeAssignmentRules_O,
  /* 45 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__WildElementDict_O,
  /* 46 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SpecificContext_O,
  /* 47 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CDText_O,
  /* 48 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__PdbMonomerConnectivity_O,
  /* 49 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_units__Quantity_O,
  /* 50 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Plug_O,
  /* 51 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__PlugWithMates_O,
  /* 52 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__OutPlug_O,
  /* 53 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RingClosingPlug_O,
  /* 54 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__InPlug_O,
  /* 55 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__JumpPlug_O,
  /* 56 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_geom__BoundingBox_O,
  /* 57 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__MinimizerLog_O,
  /* 58 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ChemInfo_O,
  /* 59 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ZMatrixEntry_O,
  /* 60 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__StereoInformation_O,
  /* 61 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__MacroModelFile_O,
  /* 62 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__PdbWriter_O,
  /* 63 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ChemDraw_O,
  /* 64 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AGEdge_O,
  /* 65 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConformationExplorerMatch_O,
  /* 66 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ImproperTorsion_O,
  /* 67 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConstitutionAtoms_O,
  /* 68 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CoordinateSystem_O,
  /* 69 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConformationCollectionEntry_O,
  /* 70 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Restraint_O,
  /* 71 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RestraintAngle_O,
  /* 72 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RestraintAnchor_O,
  /* 73 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RestraintFixedNonbond_O,
  /* 74 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RestraintChiral_O,
  /* 75 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RestraintDihedral_O,
  /* 76 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RestraintDistance_O,
  /* 77 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ChemInfoNode_O,
  /* 78 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RootMatchNode_O,
  /* 79 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AfterMatchBondTest_O,
  /* 80 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__BondMatchNode_O,
  /* 81 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AtomOrBondMatchNode_O,
  /* 82 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__TagSet_O,
  /* 83 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Root_O,
  /* 84 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SmartsRoot_O,
  /* 85 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AntechamberRoot_O,
  /* 86 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ResidueTest_O,
  /* 87 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AntechamberFocusAtomMatch_O,
  /* 88 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RingTest_O,
  /* 89 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AtomTest_O,
  /* 90 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Logical_O,
  /* 91 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__BondTest_O,
  /* 92 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AntechamberBondTest_O,
  /* 93 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__BondListMatchNode_O,
  /* 94 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Branch_O,
  /* 95 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Chain_O,
  /* 96 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Minimizer_O,
  /* 97 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Oligomer_O,
  /* 98 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConstitutionBond_O,
  /* 99 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Entity_O,
  /* 100 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EntityNameSetBase_O,
  /* 101 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EntityNameSetWithCap_O,
  /* 102 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RingClosingMate_O,
  /* 103 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Mate_O,
  /* 104 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EntityNameSet_O,
  /* 105 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RepresentedEntityNameSet_O,
  /* 106 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__MonomerPack_O,
  /* 107 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Monomer_O,
  /* 108 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__MultiMonomer_O,
  /* 109 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Stereoisomer_O,
  /* 110 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Constitution_O,
  /* 111 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_units__Dimension_O,
  /* 112 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_geom__OMatrix_O,
  /* 113 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__StereoisomerAtoms_O,
  /* 114 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConformationExplorerEntry_O,
  /* 115 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AtomReferenceBase_O,
  /* 116 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AtomReference_O,
  /* 117 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CDNode_O,
  /* 118 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__TrajectoryFrame_O,
  /* 119 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyComponent_O,
  /* 120 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyChiralRestraint_O,
  /* 121 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyImproperRestraint_O,
  /* 122 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyAnchorRestraint_O,
  /* 123 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyAngle_O,
  /* 124 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyDihedral_O,
  /* 125 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyStretch_O,
  /* 126 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyNonbond_O,
  /* 127 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyFixedNonbondRestraint_O,
  /* 128 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__PdbMonomerDatabase_O,
  /* 129 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Coupling_O,
  /* 130 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__DirectionalCoupling_O,
  /* 131 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RingCoupling_O,
  /* 132 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__PdbReader_O,
  /* 133 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ZMatrixInternal_O,
  /* 134 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ZMatrixBondInternal_O,
  /* 135 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ZMatrixAngleInternal_O,
  /* 136 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ZMatrixDihedralInternal_O,
  /* 137 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CipPrioritizer_O,
  /* 138 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Matter_O,
  /* 139 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Residue_O,
  /* 140 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Aggregate_O,
  /* 141 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Atom_O,
  /* 142 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__VirtualAtom_O,
  /* 143 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Molecule_O,
  /* 144 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Bond_O,
  /* 145 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AGVertex_O,
  /* 146 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Alias_O,
  /* 147 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CandoDatabase_O,
  /* 148 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ProperTorsion_O,
  /* 149 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_geom__OVector3_O,
  /* 150 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ComplexRestraint_O,
  /* 151 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RestrainedExoCyclicAtom_O,
  /* 152 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RestrainedPiBond_O,
  /* 153 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__EnergyFunction_O,
  /* 154 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ZMatrix_O,
  /* 155 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__StatusTracker_O,
  /* 156 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__OneTypeRule_O,
  /* 157 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__OligomerPart_Base_O,
  /* 158 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__OligomerPart_Monomer_O,
  /* 159 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__OligomerPart_Link_O,
  /* 160 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_adapt__SymbolList_O,
  /* 161 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConformationCollection_O,
  /* 162 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SuperposableConformationCollection_O,
  /* 163 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__InfoDb_O,
  /* 164 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConformationExplorer_O,
  /* 165 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_geom__Color_O,
  /* 166 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConstitutionAtom_O,
  /* 167 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConstitutionVirtualAtom_O,
  /* 168 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__NumericalFunction_O,
  /* 169 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AbstractLargeSquareMatrix_O,
  /* 170 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SparseLargeSquareMatrix_O,
  /* 171 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FullLargeSquareMatrix_O,
  /* 172 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__TwisterDriver_O,
  /* 173 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__VirtualSphere_O,
  /* 174 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Rotamer_O,
  /* 175 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__StereoConfiguration_O,
  /* 176 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Topology_O,
  /* 177 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Trajectory_O,
  /* 178 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__MapOfMonomerNamesToAtomIndexers_O,
  /* 179 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__RingFinder_O,
  /* 180 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Twister_O,
  /* 181 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFBaseDb_O,
  /* 182 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFStretchDb_O,
  /* 183 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFTypesDb_O,
  /* 184 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFPtorDb_O,
  /* 185 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFItorDb_O,
  /* 186 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFAngleDb_O,
  /* 187 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFNonbondDb_O,
  /* 188 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFVdwDb_O,
  /* 189 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SuperposeEngine_O,
  /* 190 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SuperposeSelectedAtoms_O,
  /* 191 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CalculatePosition_O,
  /* 192 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CalculatePositionUsingInternals_O,
  /* 193 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CalculatePositionRelativeToOrigin_O,
  /* 194 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__CalculatePositionAlongBond_O,
  /* 195 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFParameter_O,
  /* 196 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFStretch_O,
  /* 197 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFAngle_O,
  /* 198 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFVdw_O,
  /* 199 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFNonbond_O,
  /* 200 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFPtor_O,
  /* 201 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__FFItor_O,
  /* 202 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__SpecificContextSet_O,
  /* 203 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__ConformationExplorerEntryStage_O,
  /* 204 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__Angle_O,
  /* 205 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_adapt__QDomNode_O,
  /* 206 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__StructureComparer_O,
  /* 207 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__AtomIdToAtomMap_O,
  /* 208 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Array_O,
  /* 209 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ArrayDisplaced_O,
  /* 210 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ArrayObjects_O,
  /* 211 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Vector_O,
  /* 212 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__VectorDisplaced_O,
  /* 213 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__VectorObjects_O,
  /* 214 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__VectorObjectsWithFillPtr_O,
  /* 215 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__BitVector_O,
  /* 216 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__BitVectorWithFillPtr_O,
  /* 217 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SimpleBitVector_O,
  /* 218 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__String_O,
  /* 219 */ &&obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__Str_O,
  /* 220 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__StrWithFillPtr_O,
  /* 221 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_geom__CoordinateArray_O,
  /* 222 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_geom__CoordinateArrayWithHash_O,
  /* 223 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SNode_O,
  /* 224 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__BranchSNode_O,
  /* 225 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__LeafSNode_O,
  /* 226 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_asttooling__AstVisitor_O,
  /* 227 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__AttributeSet_O,
  /* 228 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Package_O,
  /* 229 */ &&obj_deallocate_unmanaged_instance_KIND_TEMPLATED_LISPALLOC_core__WrappedPointer_O,
  /* 230 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__RegexMatch_O,
  /* 231 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__DirectoryEntry_O,
  /* 232 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_clbind__ClassRegistry_O,
  /* 233 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DebugInfo_O,
  /* 234 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DISubprogram_O,
  /* 235 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DIDescriptor_O,
  /* 236 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DIType_O,
  /* 237 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DISubroutineType_O,
  /* 238 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DICompileUnit_O,
  /* 239 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DIDerivedType_O,
  /* 240 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DIArray_O,
  /* 241 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DIBasicType_O,
  /* 242 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DICompositeType_O,
  /* 243 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DITypeArray_O,
  /* 244 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DILexicalBlock_O,
  /* 245 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DIFile_O,
  /* 246 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DIScope_O,
  /* 247 */ &&obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__StandardObject_O,
  /* 248 */ &&obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__Metaobject_O,
  /* 249 */ &&obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__Specializer_O,
  /* 250 */ &&obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__Class_O,
  /* 251 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ForwardReferencedClass_O,
  /* 252 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__CxxClass_O,
  /* 253 */ &&obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__StdClass_O,
  /* 254 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__FuncallableStandardClass_O,
  /* 255 */ &&obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__StandardClass_O,
  /* 256 */ &&obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__StructureClass_O,
  /* 257 */ &&obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__BuiltInClass_O,
  /* 258 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_clbind__ClassRep_O,
  /* 259 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__LoadTimeValues_O,
  /* 260 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_adapt__SymbolSet_O,
  /* 261 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SourcePosInfo_O,
  /* 262 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__MultiStringBuffer_O,
  /* 263 */ &&obj_deallocate_unmanaged_instance_KIND_TEMPLATED_LISPALLOC_core__Iterator_O,
  /* 264 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__RecursiveDirectoryIterator_O,
  /* 265 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__IterateRestraints_O,
  /* 266 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__IterateMatter_O,
  /* 267 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__IterateResidues_O,
  /* 268 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__IterateBonds_O,
  /* 269 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_chem__IterateAtoms_O,
  /* 270 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__DirectoryIterator_O,
  /* 271 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_adapt__IterateCons_O,
  /* 272 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__FileStatus_O,
  /* 273 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_adapt__StringList_O,
  /* 274 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Stream_O,
  /* 275 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__AnsiStream_O,
  /* 276 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__EchoStream_O,
  /* 277 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SynonymStream_O,
  /* 278 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__BroadcastStream_O,
  /* 279 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__StringStream_O,
  /* 280 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__StringInputStream_O,
  /* 281 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__StringOutputStream_O,
  /* 282 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__TwoWayStream_O,
  /* 283 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__FileStream_O,
  /* 284 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__IOStreamStream_O,
  /* 285 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__IOFileStream_O,
  /* 286 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ConcatenatedStream_O,
  /* 287 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Cons_O,
  /* 288 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_cffi__Pointer_O,
  /* 289 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SourceFileInfo_O,
  /* 290 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Path_O,
  /* 291 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__StructureObject_O,
  /* 292 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__InvocationHistoryFrameIterator_O,
  /* 293 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__RandomState_O,
  /* 294 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DebugLoc_O,
  /* 295 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Function_O,
  /* 296 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SingleDispatchGenericFunction_O,
  /* 297 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SpecialForm_O,
  /* 298 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Instance_O,
  /* 299 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__CompiledFunction_O,
  /* 300 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SingleDispatchEffectiveMethodFunction_O,
  /* 301 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__WeakPointer_O,
  /* 302 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Pointer_O,
  /* 303 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__VaList_dummy_O,
  /* 304 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ExternalObject_O,
  /* 305 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__TargetOptions_O,
  /* 306 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DIBuilder_O,
  /* 307 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Pass_O,
  /* 308 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ModulePass_O,
  /* 309 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ImmutablePass_O,
  /* 310 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DataLayoutPass_O,
  /* 311 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__TargetLibraryInfo_O,
  /* 312 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__FunctionPass_O,
  /* 313 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Linker_O,
  /* 314 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Module_O,
  /* 315 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__APFloat_O,
  /* 316 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__LLVMContext_O,
  /* 317 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Target_O,
  /* 318 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__APInt_O,
  /* 319 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__PassManagerBase_O,
  /* 320 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__FunctionPassManager_O,
  /* 321 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__PassManager_O,
  /* 322 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Value_O,
  /* 323 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Argument_O,
  /* 324 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__User_O,
  /* 325 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Constant_O,
  /* 326 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ConstantInt_O,
  /* 327 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ConstantFP_O,
  /* 328 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__GlobalValue_O,
  /* 329 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__GlobalVariable_O,
  /* 330 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Function_O,
  /* 331 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ConstantArray_O,
  /* 332 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ConstantStruct_O,
  /* 333 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__UndefValue_O,
  /* 334 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ConstantPointerNull_O,
  /* 335 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ConstantExpr_O,
  /* 336 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__BlockAddress_O,
  /* 337 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ConstantDataSequential_O,
  /* 338 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ConstantDataArray_O,
  /* 339 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Instruction_O,
  /* 340 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__PHINode_O,
  /* 341 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__LandingPadInst_O,
  /* 342 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__AtomicCmpXchgInst_O,
  /* 343 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__TerminatorInst_O,
  /* 344 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__UnreachableInst_O,
  /* 345 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__InvokeInst_O,
  /* 346 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__BranchInst_O,
  /* 347 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__IndirectBrInst_O,
  /* 348 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ResumeInst_O,
  /* 349 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__SwitchInst_O,
  /* 350 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ReturnInst_O,
  /* 351 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__FenceInst_O,
  /* 352 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__AtomicRMWInst_O,
  /* 353 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__StoreInst_O,
  /* 354 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__UnaryInstruction_O,
  /* 355 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__VAArgInst_O,
  /* 356 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__AllocaInst_O,
  /* 357 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__LoadInst_O,
  /* 358 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__CallInst_O,
  /* 359 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__BasicBlock_O,
  /* 360 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__IRBuilderBase_O,
  /* 361 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__IRBuilder_O,
  /* 362 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__MCSubtargetInfo_O,
  /* 363 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__TargetSubtargetInfo_O,
  /* 364 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__EngineBuilder_O,
  /* 365 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__DataLayout_O,
  /* 366 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Triple_O,
  /* 367 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__TargetMachine_O,
  /* 368 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__LLVMTargetMachine_O,
  /* 369 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Type_O,
  /* 370 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__CompositeType_O,
  /* 371 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__StructType_O,
  /* 372 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__SequentialType_O,
  /* 373 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__PointerType_O,
  /* 374 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ArrayType_O,
  /* 375 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__VectorType_O,
  /* 376 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__FunctionType_O,
  /* 377 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__IntegerType_O,
  /* 378 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Metadata_O,
  /* 379 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ValueAsMetadata_O,
  /* 380 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__MDString_O,
  /* 381 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__MDNode_O,
  /* 382 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__NamedMDNode_O,
  /* 383 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__ExecutionEngine_O,
  /* 384 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ForeignData_O,
  /* 385 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__PassManagerBuilder_O,
  /* 386 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_adapt__ObjectSet_O,
  /* 387 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__IntArray_O,
  /* 388 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__PosixTime_O,
  /* 389 */ &&obj_deallocate_unmanaged_instance_KIND_BOOTSTRAP_core__Symbol_O,
  /* 390 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Null_O,
  /* 391 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_adapt__IndexedObjectBag_O,
  /* 392 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__PosixTimeDuration_O,
  /* 393 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SymbolToEnumConverter_O,
  /* 394 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ReadTable_O,
  /* 395 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Number_O,
  /* 396 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Complex_O,
  /* 397 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Real_O,
  /* 398 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Float_O,
  /* 399 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SingleFloat_dummy_O,
  /* 400 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__LongFloat_O,
  /* 401 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ShortFloat_O,
  /* 402 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__DoubleFloat_O,
  /* 403 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Rational_O,
  /* 404 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Integer_O,
  /* 405 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Bignum_O,
  /* 406 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Fixnum_dummy_O,
  /* 407 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Ratio_O,
  /* 408 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__CandoException_O,
  /* 409 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Archive_O,
  /* 410 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__LoadArchive_O,
  /* 411 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SexpLoadArchive_O,
  /* 412 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SaveArchive_O,
  /* 413 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SexpSaveArchive_O,
  /* 414 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__HashTable_O,
  /* 415 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__HashTableEq_O,
  /* 416 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__HashTableEqual_O,
  /* 417 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__HashTableEql_O,
  /* 418 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__HashTableEqualp_O,
  /* 419 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Environment_O,
  /* 420 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ActivationFrame_O,
  /* 421 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__FunctionFrame_O,
  /* 422 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__TagbodyFrame_O,
  /* 423 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ValueFrame_O,
  /* 424 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__LexicalEnvironment_O,
  /* 425 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__CompileTimeEnvironment_O,
  /* 426 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__MacroletEnvironment_O,
  /* 427 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__FunctionContainerEnvironment_O,
  /* 428 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__UnwindProtectEnvironment_O,
  /* 429 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SymbolMacroletEnvironment_O,
  /* 430 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__StackValueEnvironment_O,
  /* 431 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__BlockEnvironment_O,
  /* 432 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__CatchEnvironment_O,
  /* 433 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__RuntimeVisibleEnvironment_O,
  /* 434 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__ValueEnvironment_O,
  /* 435 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__FunctionValueEnvironment_O,
  /* 436 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__TagbodyEnvironment_O,
  /* 437 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__GlueEnvironment_O,
  /* 438 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__WeakKeyMapping_O,
  /* 439 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__LambdaListHandler_O,
  /* 440 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__InsertPoint_O,
  /* 441 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SingleDispatchMethod_O,
  /* 442 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_llvmo__Attribute_O,
  /* 443 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Character_dummy_O,
  /* 444 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SmallMultimap_O,
  /* 445 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Binder_O,
  /* 446 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Pathname_O,
  /* 447 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__LogicalPathname_O,
  /* 448 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SourceManager_O,
  /* 449 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__Record_O,
  /* 450 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__SmallMap_O,
  /* 451 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__LightUserData_O,
  /* 452 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_core__UserData_O,
  /* 453 */ &&obj_deallocate_unmanaged_instance_KIND_ROOTCLASSALLOC_asttooling__RegMap__RegistryMaps,
  /* 454 */ &&obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__Cache,
  /* 455 */ &&obj_deallocate_unmanaged_instance_KIND_TEMPLATED_CLASSALLOC_core__Creator,
  /* 456 */ &&obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__InstanceCreator,
  /* 457 */ &&obj_deallocate_unmanaged_instance_KIND_TEMPLATED_CLASSALLOC_clbind__ConstructorCreator,
  /* 458 */ &&obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_clbind__DummyCreator,
  /* 459 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__,
  /* 460 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyStretch_,
  /* 461 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFStretch_O__,
  /* 462 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___,
  /* 463 */ &&obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__SingleDispatchGenericFunctionClosure,
  /* 464 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Stereoisomer_O___,
  /* 465 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyNonbond_,
  /* 466 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__RequiredArgument_,
  /* 467 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___,
  /* 468 */ &&obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_llvmo__CompiledClosure,
  /* 469 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__,
  /* 470 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Str_O___,
  /* 471 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomInfo_,
  /* 472 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__RegMap__SymbolMatcherDescriptorPair_,
  /* 473 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___,
  /* 474 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__,
  /* 475 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFItor_O___,
  /* 476 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___,
  /* 477 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__,
  /* 478 */ &&obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_asttooling__internal__OverloadedMatcherDescriptor,
  /* 479 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___,
  /* 480 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__,
  /* 481 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__,
  /* 482 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__FixedNonbondRestraint_,
  /* 483 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_asttooling__internal__MatcherDescriptor__,
  /* 484 */ &&obj_deallocate_unmanaged_instance_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__2_,
  /* 485 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__,
  /* 486 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__,
  /* 487 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__,
  /* 488 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__,
  /* 489 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__,
  /* 490 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___,
  /* 491 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__ExceptionEntry_,
  /* 492 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__,
  /* 493 */ &&obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__MacroClosure,
  /* 494 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__,
  /* 495 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__,
  /* 496 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyDihedral_,
  /* 497 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ParserValue_,
  /* 498 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__,
  /* 499 */ &&obj_deallocate_unmanaged_instance_KIND_GCSTRING_gctools__GCString_moveable_char_,
  /* 500 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__RingClosingMate_O__,
  /* 501 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolClassPair_,
  /* 502 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__,
  /* 503 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__KeyEntry_,
  /* 504 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__,
  /* 505 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAtom_,
  /* 506 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFPtor_O__,
  /* 507 */ &&obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_asttooling__internal__VariadicOperatorMatcherDescriptor,
  /* 508 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___,
  /* 509 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyImproperRestraint_,
  /* 510 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__,
  /* 511 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__AtomPdbRec_,
  /* 512 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFItor_O__,
  /* 513 */ &&obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__InstanceClosure,
  /* 514 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___,
  /* 515 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___,
  /* 516 */ &&obj_deallocate_unmanaged_instance_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__1_,
  /* 517 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___,
  /* 518 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__,
  /* 519 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__SymbolStorage_,
  /* 520 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ErrorContent_,
  /* 521 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyChiralRestraint_,
  /* 522 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__,
  /* 523 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__,
  /* 524 */ &&obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__CoreExposer,
  /* 525 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__,
  /* 526 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__ContextFrame_,
  /* 527 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__,
  /* 528 */ &&obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_asttooling__internal__FixedArgCountMatcherDescriptor,
  /* 529 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_,
  /* 530 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__OptionalArgument_,
  /* 531 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__,
  /* 532 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAngle_,
  /* 533 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__T_O_P_,
  /* 534 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__,
  /* 535 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__,
  /* 536 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__,
  /* 537 */ &&obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__InterpretedClosure,
  /* 538 */ &&obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_asttooling__internal__FreeFuncMatcherDescriptor,
  /* 539 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__DynamicBinding_,
  /* 540 */ &&obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__VectorStepper,
  /* 541 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__,
  /* 542 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFStretch_O___,
  /* 543 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__,
  /* 544 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__AuxArgument_,
  /* 545 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__,
  /* 546 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__tagged_pointer_core__SequenceStepper__,
  /* 547 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_,
  /* 548 */ &&obj_deallocate_unmanaged_instance_KIND_GCARRAY_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__0_,
  /* 549 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__KeywordArgument_,
  /* 550 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__,
  /* 551 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__,
  /* 552 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__,
  /* 553 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___,
  /* 554 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___,
  /* 555 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__,
  /* 556 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__,
  /* 557 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___,
  /* 558 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__SourceFileInfo_O__,
  /* 559 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__,
  /* 560 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___,
  /* 561 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_core__CacheRecord_,
  /* 562 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_chem__ResidueOut_,
  /* 563 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___,
  /* 564 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__,
  /* 565 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__,
  /* 566 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_asttooling__DerivableFrontendActionFactory,
  /* 567 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___,
  /* 568 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___,
  /* 569 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_asttooling__DerivableMatchCallback,
  /* 570 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFPtor_O___,
  /* 571 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_asttooling__DerivableASTFrontendAction,
  /* 572 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneTypeRule_O__,
  /* 573 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__,
  /* 574 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_asttooling__Message_,
  /* 575 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___,
  /* 576 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__,
  /* 577 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__,
  /* 578 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__,
  /* 579 */ &&obj_deallocate_unmanaged_instance_KIND_LISPALLOC_asttooling__DerivableSyntaxOnlyAction,
  /* 580 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__OneMonomer_O__,
  /* 581 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FFAngle_O___,
  /* 582 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__,
  /* 583 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___,
  /* 584 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__,
  /* 585 */ &&obj_deallocate_unmanaged_instance_KIND_TEMPLATED_CLASSALLOC_core__BuiltinClosure,
  /* 586 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___,
  /* 587 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFAngle_O__,
  /* 588 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__,
  /* 589 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___,
  /* 590 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfo_O__,
  /* 591 */ &&obj_deallocate_unmanaged_instance_KIND_CLASSALLOC_core__ConsStepper,
  /* 592 */ &&obj_deallocate_unmanaged_instance_KIND_GCVECTOR_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___,
   NULL
};
#endif // defined(GC_OBJ_DEALLOCATOR_TABLE)
#if defined(GC_GLOBALS)
 SMART_PTR_FIX(core::ExternalObject_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::BasicBlock_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::Archive_O::static_creator);
 SMART_PTR_FIX(core::CxxObject_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::Reader_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::ConstantDataSequential_O::static_creator);
 TAGGED_POINTER_FIX(chem::ConstitutionVirtualAtom_O::static_creator);
 TAGGED_POINTER_FIX(cffi::Pointer_O::static_creator);
 SMART_PTR_FIX(core::ValueEnvironment_O::static_class_symbol);
 SMART_PTR_FIX(core::Number_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::FunctionType_O::static_class_symbol);
 SMART_PTR_FIX(chem::FFAngleDb_O::static_class);
 SMART_PTR_FIX(core::Iterator_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::SuperposeEngine_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::ExecutionEngine_O::static_creator);
 SMART_PTR_FIX(core::TagbodyFrame_O::static_class_symbol);
 SMART_PTR_FIX(adapt::ObjectSet_O::static_class);
 TAGGED_POINTER_FIX(core::SynonymStream_O::static_creator);
 SMART_PTR_FIX(core::SaveArchive_O::static_class_symbol);
 SMART_PTR_FIX(core::SingleDispatchMethod_O::static_class_symbol);
 SMART_PTR_FIX(chem::AGVertex_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::RestrainedPiBond_O::static_creator);
 SMART_PTR_FIX(llvmo::CompositeType_O::static_class);
 SMART_PTR_FIX(chem::Command_O::static_class);
 TAGGED_POINTER_FIX(core::GlueEnvironment_O::static_creator);
 SMART_PTR_FIX(chem::EntityNameSetBase_O::static_class);
 SMART_PTR_FIX(llvmo::ImmutablePass_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::IntegerType_O::static_creator);
 SMART_PTR_FIX(cffi::Pointer_O::static_class);
 TAGGED_POINTER_FIX(chem::EnergyChiralRestraint_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::Type_O::static_creator);
 TAGGED_POINTER_FIX(core::TwoWayStream_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::DICompileUnit_O::static_creator);
 SMART_PTR_FIX(chem::ForceMatchReport_O::static_class);
 SMART_PTR_FIX(chem::FFAngle_O::static_class_symbol);
 SIMPLE_POINTER_FIX(gctools::global_tagged_Symbol_OP_nil);
 SMART_PTR_FIX(llvmo::ConstantArray_O::static_class);
 SMART_PTR_FIX(llvmo::GlobalVariable_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::MultiMonomer_O::static_creator);
 TAGGED_POINTER_FIX(core::CandoException_O::static_creator);
 TAGGED_POINTER_FIX(core::T_O::static_creator);
 SMART_PTR_FIX(core::WeakPointer_O::static_class_symbol);
 SMART_PTR_FIX(chem::SpecificContextSet_O::static_class);
 SMART_PTR_FIX(core::SourcePosInfo_O::static_class_symbol);
 SMART_PTR_FIX(chem::RestraintChiral_O::static_class_symbol);
 SMART_PTR_FIX(chem::FFNonbondDb_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::DebugInfo_O::static_creator);
 SMART_PTR_FIX(chem::Atom_O::static_class_symbol);
 SMART_PTR_FIX(chem::TypeAssignmentRules_O::static_class);
 SMART_PTR_FIX(chem::RestraintFixedNonbond_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::RingTest_O::static_creator);
 SMART_PTR_FIX(core::RuntimeVisibleEnvironment_O::static_class_symbol);
 SMART_PTR_FIX(core::TwoWayStream_O::static_class);
 TAGGED_POINTER_FIX(chem::BondTest_O::static_creator);
 SMART_PTR_FIX(llvmo::DIFile_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::Attribute_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::Character_dummy_O::static_creator);
 SMART_PTR_FIX(chem::EnergyStretch_O::static_class);
 TAGGED_POINTER_FIX(chem::InPlug_O::static_creator);
 TAGGED_POINTER_FIX(geom::Color_O::static_creator);
 SMART_PTR_FIX(chem::OligomerPart_Link_O::static_class);
 SMART_PTR_FIX(chem::CDFragment_O::static_class);
 SMART_PTR_FIX(chem::MapOfMonomerNamesToAtomIndexers_O::static_class_symbol);
 SMART_PTR_FIX(chem::ConformationCollection_O::static_class_symbol);
 SMART_PTR_FIX(core::Instance_O::static_class);
 SMART_PTR_FIX(core::RuntimeVisibleEnvironment_O::static_class);
 SMART_PTR_FIX(core::Real_O::static_class_symbol);
 SMART_PTR_FIX(geom::CoordinateArray_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::ConstantExpr_O::static_creator);
 TAGGED_POINTER_FIX(core::SymbolToEnumConverter_O::static_creator);
 TAGGED_POINTER_FIX(chem::EnergyAngle_O::static_creator);
 SMART_PTR_FIX(llvmo::Type_O::static_class);
 SMART_PTR_FIX(adapt::StringList_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::ConformationExplorerMatch_O::static_creator);
 SMART_PTR_FIX(core::Function_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::AttributeSet_O::static_class_symbol);
 SMART_PTR_FIX(chem::EntityNameSetWithCap_O::static_class_symbol);
 SMART_PTR_FIX(chem::IterateAtoms_O::static_class);
 TAGGED_POINTER_FIX(llvmo::DISubprogram_O::static_creator);
 SMART_PTR_FIX(llvmo::DataLayoutPass_O::static_class);
 SMART_PTR_FIX(llvmo::ConstantDataSequential_O::static_class);
 TAGGED_POINTER_FIX(chem::ConformationExplorerEntryStage_O::static_creator);
 SMART_PTR_FIX(core::ArrayDisplaced_O::static_class);
 SMART_PTR_FIX(chem::Angle_O::static_class_symbol);
 SMART_PTR_FIX(core::ReadTable_O::static_class);
 SMART_PTR_FIX(core::Binder_O::static_class);
 SMART_PTR_FIX(core::IOFileStream_O::static_class);
 SMART_PTR_FIX(chem::FFStretch_O::static_class);
 SMART_PTR_FIX(llvmo::ModulePass_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::LambdaListHandler_O::static_creator);
 SMART_PTR_FIX(chem::Chain_O::static_class_symbol);
 SMART_PTR_FIX(core::Pointer_O::static_class);
 SMART_PTR_FIX(llvmo::FenceInst_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::StepReport_O::static_creator);
 TAGGED_POINTER_FIX(chem::OutPlug_O::static_creator);
 SMART_PTR_FIX(llvmo::Linker_O::static_class);
 TAGGED_POINTER_FIX(core::SNode_O::static_creator);
 SMART_PTR_FIX(core::SourceFileInfo_O::static_class);
 SMART_PTR_FIX(core::SexpLoadArchive_O::static_class_symbol);
 SMART_PTR_FIX(chem::WildElementDict_O::static_class);
 TAGGED_POINTER_FIX(core::ShortFloat_O::static_creator);
 SMART_PTR_FIX(chem::PathMessage_O::static_class_symbol);
 SMART_PTR_FIX(chem::Root_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::StringInputStream_O::static_creator);
 SMART_PTR_FIX(core::ArrayDisplaced_O::static_class_symbol);
 SMART_PTR_FIX(core::Archive_O::static_class);
 TAGGED_POINTER_FIX(llvmo::PHINode_O::static_creator);
 SMART_PTR_FIX(chem::OneMonomer_O::static_class);
 SMART_PTR_FIX(core::SynonymStream_O::static_class_symbol);
 SMART_PTR_FIX(core::Specializer_O::static_class_symbol);
 TAGGED_POINTER_FIX(geom::BoundingBox_O::static_creator);
 TAGGED_POINTER_FIX(chem::FFNonbondCrossTermTable_O::static_creator);
 SMART_PTR_FIX(llvmo::LandingPadInst_O::static_class);
 SMART_PTR_FIX(core::BitVectorWithFillPtr_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::BranchInst_O::static_class);
 TAGGED_POINTER_FIX(llvmo::DICompositeType_O::static_creator);
 TAGGED_POINTER_FIX(chem::RestraintFixedNonbond_O::static_creator);
 SMART_PTR_FIX(chem::FFAngleDb_O::static_class_symbol);
 SMART_PTR_FIX(core::InvocationHistoryFrameIterator_O::static_class);
 SMART_PTR_FIX(llvmo::User_O::static_class);
 TAGGED_POINTER_FIX(chem::ChemInfoMatch_O::static_creator);
 TAGGED_POINTER_FIX(core::Pathname_O::static_creator);
 SMART_PTR_FIX(chem::ZMatrixEntry_O::static_class);
 SMART_PTR_FIX(chem::EnergyAngle_O::static_class);
 SMART_PTR_FIX(llvmo::APFloat_O::static_class);
 SMART_PTR_FIX(core::RandomState_O::static_class);
 SMART_PTR_FIX(chem::RingFinder_O::static_class_symbol);
 SMART_PTR_FIX(chem::ResidueList_O::static_class);
 SMART_PTR_FIX(core::MacroletEnvironment_O::static_class);
 SMART_PTR_FIX(chem::ConstitutionAtoms_O::static_class);
 SMART_PTR_FIX(adapt::StringList_O::static_class);
 TAGGED_POINTER_FIX(core::HashTableEqualp_O::static_creator);
 SMART_PTR_FIX(llvmo::VectorType_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::Cons_O::static_creator);
 SMART_PTR_FIX(llvmo::InvokeInst_O::static_class);
 TAGGED_POINTER_FIX(adapt::StringSet_O::static_creator);
 SMART_PTR_FIX(chem::FFNonbond_O::static_class);
 SMART_PTR_FIX(core::UnwindProtectEnvironment_O::static_class_symbol);
 SMART_PTR_FIX(chem::EnergyNonbond_O::static_class);
 SMART_PTR_FIX(chem::Alias_O::static_class);
 SMART_PTR_FIX(chem::RestrainedExoCyclicAtom_O::_AtomExoToSixMemberedRing);
 SMART_PTR_FIX(core::UnwindProtectEnvironment_O::static_class);
 SMART_PTR_FIX(chem::ProperTorsion_O::static_class_symbol);
 SMART_PTR_FIX(core::ArrayObjects_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::APInt_O::static_class);
 SMART_PTR_FIX(llvmo::TargetMachine_O::static_class);
 SMART_PTR_FIX(chem::PdbMonomerConnectivity_O::static_class_symbol);
 SMART_PTR_FIX(chem::ChemDraw_O::static_class);
 SMART_PTR_FIX(units::Quantity_O::static_class_symbol);
 SMART_PTR_FIX(chem::InPlug_O::static_class);
 SMART_PTR_FIX(chem::ConformationExplorer_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::DIBuilder_O::static_creator);
 SMART_PTR_FIX(chem::EnergyAngle_O::static_class_symbol);
 SMART_PTR_FIX(chem::FFVdw_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::InsertPoint_O::static_creator);
 SMART_PTR_FIX(core::MultiStringBuffer_O::static_class);
 SMART_PTR_FIX(units::Quantity_O::static_class);
 TAGGED_POINTER_FIX(chem::MinimizerLog_O::static_creator);
 SMART_PTR_FIX(chem::Restraint_O::static_class_symbol);
 SMART_PTR_FIX(chem::MacroModelFile_O::static_class);
 TAGGED_POINTER_FIX(core::VectorDisplaced_O::static_creator);
 TAGGED_POINTER_FIX(chem::ZMatrixBondInternal_O::static_creator);
 SMART_PTR_FIX(llvmo::PassManagerBase_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::RandomState_O::static_creator);
 TAGGED_POINTER_FIX(chem::RingFinder_O::static_creator);
 SMART_PTR_FIX(core::Class_O::static_class);
 TAGGED_POINTER_FIX(geom::CoordinateArrayWithHash_O::static_creator);
 SMART_PTR_FIX(core::CompileTimeEnvironment_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::Real_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::ReturnInst_O::static_creator);
 SMART_PTR_FIX(llvmo::SequentialType_O::static_class);
 SMART_PTR_FIX(chem::PathMessage_O::static_class);
 SMART_PTR_FIX(core::Character_dummy_O::static_class);
 SMART_PTR_FIX(chem::ChemInfoNode_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::PosixTimeDuration_O::static_creator);
 SMART_PTR_FIX(llvmo::GlobalValue_O::static_class_symbol);
 SMART_PTR_FIX(core::StructureClass_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::ArrayDisplaced_O::static_creator);
 SMART_PTR_FIX(chem::MonomerPack_O::static_class_symbol);
 SMART_PTR_FIX(core::Record_O::static_class);
 SMART_PTR_FIX(chem::FFStretch_O::static_class_symbol);
 SMART_PTR_FIX(core::ValueFrame_O::static_class);
 SMART_PTR_FIX(llvmo::ConstantPointerNull_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::StereoInformation_O::static_creator);
 SMART_PTR_FIX(chem::OligomerPart_Monomer_O::static_class);
 SMART_PTR_FIX(chem::Trajectory_O::static_class);
 SMART_PTR_FIX(chem::OligomerPart_Link_O::static_class_symbol);
 SMART_PTR_FIX(core::SexpLoadArchive_O::static_class);
 SMART_PTR_FIX(chem::SuperposableConformationCollection_O::static_class);
 SMART_PTR_FIX(llvmo::ResumeInst_O::static_class);
 TAGGED_POINTER_FIX(core::UnwindProtectEnvironment_O::static_creator);
 TAGGED_POINTER_FIX(core::DirectoryIterator_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::UnaryInstruction_O::static_creator);
 SMART_PTR_FIX(units::NamedUnit_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::ConcatenatedStream_O::static_creator);
 TAGGED_POINTER_FIX(core::VectorObjectsWithFillPtr_O::static_creator);
 SMART_PTR_FIX(llvmo::ConstantInt_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::Instance_O::static_creator);
 TAGGED_POINTER_FIX(chem::BondListMatchNode_O::static_creator);
 TAGGED_POINTER_FIX(chem::ConstitutionBond_O::static_creator);
 SMART_PTR_FIX(chem::CDNode_O::static_class);
 SMART_PTR_FIX(core::Symbol_O::static_class);
 SMART_PTR_FIX(chem::RingFinder_O::static_class);
 SMART_PTR_FIX(chem::EnergyAnchorRestraint_O::static_class);
 SMART_PTR_FIX(chem::StereoisomerVirtualAtom_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::FenceInst_O::static_creator);
 SMART_PTR_FIX(chem::ConstitutionBond_O::static_class);
 TAGGED_POINTER_FIX(core::HashTableEq_O::static_creator);
 SMART_PTR_FIX(chem::PdbMonomerDatabase_O::static_class_symbol);
 SMART_PTR_FIX(chem::FFParameter_O::static_class);
 TAGGED_POINTER_FIX(chem::Constitution_O::static_creator);
 TAGGED_POINTER_FIX(core::Specializer_O::static_creator);
 TAGGED_POINTER_FIX(chem::Atom_O::static_creator);
 SMART_PTR_FIX(core::StdClass_O::static_class_symbol);
 SMART_PTR_FIX(core::StructureObject_O::static_class);
 SMART_PTR_FIX(chem::CoordinateSystem_O::static_class);
 SMART_PTR_FIX(chem::IterateResidues_O::static_class);
 SMART_PTR_FIX(core::Record_O::static_class_symbol);
 SMART_PTR_FIX(core::VectorDisplaced_O::static_class_symbol);
 SMART_PTR_FIX(chem::ZMatrixInternal_O::static_class_symbol);
 SMART_PTR_FIX(core::BuiltInClass_O::static_class_symbol);
 SMART_PTR_FIX(core::Bignum_O::static_class);
 SMART_PTR_FIX(chem::SuperposeEngine_O::static_class);
 SMART_PTR_FIX(llvmo::IndirectBrInst_O::static_class);
 SMART_PTR_FIX(chem::EntityNameSetWithCap_O::static_class);
 TAGGED_POINTER_FIX(chem::ConformationExplorerEntry_O::static_creator);
 SMART_PTR_FIX(chem::FFParameter_O::static_class_symbol);
 SMART_PTR_FIX(core::FuncallableStandardClass_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::ReadAmberParameters_O::static_creator);
 SMART_PTR_FIX(core::Rational_O::static_class);
 TAGGED_POINTER_FIX(llvmo::TargetOptions_O::static_creator);
 SMART_PTR_FIX(core::T_O::static_class_symbol);
 SMART_PTR_FIX(chem::FullLargeSquareMatrix_O::static_class_symbol);
 SMART_PTR_FIX(chem::AbstractLargeSquareMatrix_O::static_class);
 SMART_PTR_FIX(llvmo::Triple_O::static_class);
 SMART_PTR_FIX(chem::PdbReader_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::LoadInst_O::static_class);
 TAGGED_POINTER_FIX(core::CatchEnvironment_O::static_creator);
 SMART_PTR_FIX(geom::OVector2_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::Constant_O::static_class);
 TAGGED_POINTER_FIX(chem::AntechamberRoot_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::DebugLoc_O::static_creator);
 TAGGED_POINTER_FIX(chem::FrameRecognizer_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::IRBuilder_O::static_creator);
 SMART_PTR_FIX(core::Fixnum_dummy_O::static_class);
 SMART_PTR_FIX(chem::PdbMonomerConnectivity_O::static_class);
 TAGGED_POINTER_FIX(chem::CDText_O::static_creator);
 SMART_PTR_FIX(chem::MonomerContext_O::static_class_symbol);
 SMART_PTR_FIX(chem::sybylRules);
 TAGGED_POINTER_FIX(llvmo::IndirectBrInst_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::CallInst_O::static_creator);
 SMART_PTR_FIX(core::EchoStream_O::static_class);
 TAGGED_POINTER_FIX(chem::ChemInfo_O::static_creator);
 SMART_PTR_FIX(chem::ZMatrix_O::static_class_symbol);
 SMART_PTR_FIX(chem::RestraintAngle_O::static_class);
 SMART_PTR_FIX(core::BranchSNode_O::static_class_symbol);
 SMART_PTR_FIX(units::Unit_O::static_class);
 SMART_PTR_FIX(core::LoadTimeValues_O::static_class);
 TAGGED_POINTER_FIX(llvmo::AtomicCmpXchgInst_O::static_creator);
 SMART_PTR_FIX(chem::ForceField_O::static_class_symbol);
 SMART_PTR_FIX(core::Complex_O::static_class_symbol);
 SMART_PTR_FIX(chem::MessageReport_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::Angle_O::static_creator);
 SMART_PTR_FIX(chem::BondListMatchNode_O::static_class);
 SMART_PTR_FIX(core::MacroletEnvironment_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::FileStatus_O::static_creator);
 TAGGED_POINTER_FIX(chem::PdbWriter_O::static_creator);
 SMART_PTR_FIX(core::ActivationFrame_O::static_class_symbol);
 TAGGED_POINTER_FIX(units::NamedUnit_O::static_creator);
 SMART_PTR_FIX(geom::CoordinateArrayWithHash_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::DebugLoc_O::static_class);
 SMART_PTR_FIX(adapt::StringSet_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::PointerType_O::static_creator);
 SMART_PTR_FIX(chem::AtomIdToAtomMap_O::static_class_symbol);
 TAGGED_POINTER_FIX(geom::OVector2_O::static_creator);
 SMART_PTR_FIX(core::SNode_O::static_class_symbol);
 SMART_PTR_FIX(chem::AtomOrBondMatchNode_O::static_class);
 SMART_PTR_FIX(chem::ChemInfoMatch_O::static_class);
 SMART_PTR_FIX(llvmo::UndefValue_O::static_class_symbol);
 SMART_PTR_FIX(core::String_O::static_class_symbol);
 SMART_PTR_FIX(chem::AtomReference_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::ForwardReferencedClass_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::AttributeSet_O::static_creator);
 SMART_PTR_FIX(core::SingleFloat_dummy_O::static_class);
 SMART_PTR_FIX(llvmo::ModulePass_O::static_class);
 SMART_PTR_FIX(core::DirectoryEntry_O::static_class);
 SMART_PTR_FIX(chem::VirtualSphere_O::static_class);
 SMART_PTR_FIX(core::AnsiStream_O::static_class_symbol);
 SMART_PTR_FIX(chem::RingCoupling_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::PdbMonomerConnectivity_O::static_creator);
 TAGGED_POINTER_FIX(chem::NumericalFunction_O::static_creator);
 SMART_PTR_FIX(chem::Residue_O::static_class);
 TAGGED_POINTER_FIX(llvmo::ValueAsMetadata_O::static_creator);
 SMART_PTR_FIX(core::ConcatenatedStream_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::VirtualSphere_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::Argument_O::static_creator);
 SMART_PTR_FIX(core::DoubleFloat_O::static_class);
 SMART_PTR_FIX(chem::RestraintAngle_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::EnergyFunction_O::static_creator);
 SMART_PTR_FIX(chem::FFBaseDb_O::static_class);
 SMART_PTR_FIX(chem::FFStretchDb_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::NamedMDNode_O::static_class_symbol);
 TAGGED_POINTER_FIX(adapt::IndexedObjectBag_O::static_creator);
 SMART_PTR_FIX(core::CxxClass_O::static_class);
 TAGGED_POINTER_FIX(llvmo::LoadInst_O::static_creator);
 TAGGED_POINTER_FIX(core::Array_O::static_creator);
 TAGGED_POINTER_FIX(core::IOStreamStream_O::static_creator);
 SMART_PTR_FIX(llvmo::BranchInst_O::static_class_symbol);
 SMART_PTR_FIX(clbind::ClassRep_O::static_class);
 SMART_PTR_FIX(core::ShortFloat_O::static_class);
 TAGGED_POINTER_FIX(chem::InfoDb_O::static_creator);
 SMART_PTR_FIX(core::HashTableEqualp_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::ZMatrix_O::static_creator);
 SMART_PTR_FIX(chem::ComplexRestraint_O::static_class);
 TAGGED_POINTER_FIX(llvmo::BlockAddress_O::static_creator);
 TAGGED_POINTER_FIX(chem::StereoConfiguration_O::static_creator);
 SIMPLE_POINTER_FIX(globalTaggedRunTimeValues);
 SMART_PTR_FIX(core::LogicalPathname_O::static_class);
 SMART_PTR_FIX(chem::RestraintDistance_O::static_class_symbol);
 SMART_PTR_FIX(core::SpecialForm_O::static_class);
 SMART_PTR_FIX(llvmo::PassManager_O::static_class_symbol);
 SMART_PTR_FIX(cffi::Pointer_O::static_class_symbol);
 SMART_PTR_FIX(chem::AntechamberFocusAtomMatch_O::static_class);
 SMART_PTR_FIX(chem::TrajectoryFrame_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::BondMatchNode_O::static_creator);
 SMART_PTR_FIX(chem::FFItor_O::static_class);
 TAGGED_POINTER_FIX(chem::Root_O::static_creator);
 SMART_PTR_FIX(chem::AntechamberBondTest_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::Rational_O::static_creator);
 SMART_PTR_FIX(core::SingleDispatchGenericFunction_O::static_class_symbol);
 SMART_PTR_FIX(core::LeafSNode_O::static_class);
 SMART_PTR_FIX(core::Package_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::IRBuilderBase_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::EnergyImproperRestraint_O::static_creator);
 SMART_PTR_FIX(core::StringInputStream_O::static_class_symbol);
 SMART_PTR_FIX(chem::EnergyFixedNonbondRestraint_O::static_class_symbol);
 SMART_PTR_FIX(core::Pointer_O::static_class_symbol);
 SMART_PTR_FIX(chem::RestrainedExoCyclicAtom_O::static_class_symbol);
 SMART_PTR_FIX(chem::InfoDb_O::static_class);
 SMART_PTR_FIX(units::Unit_O::static_class_symbol);
 SIMPLE_POINTER_FIX(gctools::global_tagged_Symbol_OP_sameAsKey);
 TAGGED_POINTER_FIX(chem::StereoisomerAtoms_O::static_creator);
 SMART_PTR_FIX(core::Symbol_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::DIBasicType_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::AtomicCmpXchgInst_O::static_class);
 SMART_PTR_FIX(llvmo::DIBuilder_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::Instruction_O::static_creator);
 SMART_PTR_FIX(core::BlockEnvironment_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::PointerType_O::static_class);
 TAGGED_POINTER_FIX(chem::AtomReference_O::static_creator);
 SMART_PTR_FIX(core::Ratio_O::static_class_symbol);
 SMART_PTR_FIX(chem::MapOfMonomerNamesToAtomIndexers_O::static_class);
 TAGGED_POINTER_FIX(core::Iterator_O::static_creator);
 SMART_PTR_FIX(llvmo::GlobalValue_O::static_class);
 TAGGED_POINTER_FIX(chem::ZMatrixAngleInternal_O::static_creator);
 SMART_PTR_FIX(chem::SearchStatistics_O::static_class);
 SMART_PTR_FIX(core::WeakHashTable_O::static_class);
 SMART_PTR_FIX(chem::AntechamberFocusAtomMatch_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::DataLayoutPass_O::static_creator);
 TAGGED_POINTER_FIX(core::FunctionFrame_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::Constant_O::static_creator);
 SMART_PTR_FIX(llvmo::Instruction_O::static_class_symbol);
 SMART_PTR_FIX(chem::Oligomer_O::static_class);
 SMART_PTR_FIX(llvmo::LLVMTargetMachine_O::static_class);
 TAGGED_POINTER_FIX(chem::FFItor_O::static_creator);
 SMART_PTR_FIX(chem::MinimizerLog_O::static_class);
 SMART_PTR_FIX(chem::Root_O::static_class);
 SMART_PTR_FIX(llvmo::Function_O::static_class);
 TAGGED_POINTER_FIX(clbind::ClassRep_O::static_creator);
 SMART_PTR_FIX(core::IOStreamStream_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::MapOfMonomerNamesToAtomIndexers_O::static_creator);
 TAGGED_POINTER_FIX(chem::Matter_O::static_creator);
 SMART_PTR_FIX(core::CandoException_O::static_class_symbol);
 SMART_PTR_FIX(chem::ConformationExplorerMatch_O::static_class);
 TAGGED_POINTER_FIX(chem::DirectionalCoupling_O::static_creator);
 SMART_PTR_FIX(core::Pathname_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::CxxObject_O::static_creator);
 SMART_PTR_FIX(chem::AGEdge_O::static_class);
 TAGGED_POINTER_FIX(chem::SpecificContext_O::static_creator);
 SMART_PTR_FIX(chem::OligomerPart_Monomer_O::static_class_symbol);
 SMART_PTR_FIX(core::Number_O::static_class);
 TAGGED_POINTER_FIX(llvmo::SequentialType_O::static_creator);
 SMART_PTR_FIX(chem::EnergyImproperRestraint_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::ValueAsMetadata_O::static_class_symbol);
 SMART_PTR_FIX(chem::SuperposeSelectedAtoms_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::Pointer_O::static_creator);
 SMART_PTR_FIX(chem::IterateMatter_O::static_class);
 SMART_PTR_FIX(chem::CalculatePositionUsingInternals_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::ExternalObject_O::static_creator);
 SMART_PTR_FIX(core::VaList_dummy_O::static_class);
 SMART_PTR_FIX(core::ForwardReferencedClass_O::static_class_symbol);
 SMART_PTR_FIX(core::Complex_O::static_class);
 SMART_PTR_FIX(chem::OutPlug_O::static_class_symbol);
 SMART_PTR_FIX(chem::IterateRestraints_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::FFNonbondDb_O::static_creator);
 TAGGED_POINTER_FIX(chem::PdbMonomerDatabase_O::static_creator);
 SMART_PTR_FIX(chem::ResidueTest_O::static_class);
 SMART_PTR_FIX(chem::JumpPlug_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::MonomerPack_O::static_creator);
 TAGGED_POINTER_FIX(chem::AGVertex_O::static_creator);
 SIMPLE_POINTER_FIX(gctools::global_tagged_Symbol_OP_unbound);
 TAGGED_POINTER_FIX(chem::SmartsRoot_O::static_creator);
 SMART_PTR_FIX(llvmo::IntegerType_O::static_class);
 TAGGED_POINTER_FIX(core::IOFileStream_O::static_creator);
 SMART_PTR_FIX(chem::CalculatePositionRelativeToOrigin_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::DebugInfo_O::static_class);
 SMART_PTR_FIX(core::SmallMap_O::static_class_symbol);
 SMART_PTR_FIX(chem::RingClosingMate_O::static_class);
 SMART_PTR_FIX(core::SaveArchive_O::static_class);
 SMART_PTR_FIX(llvmo::Triple_O::static_class_symbol);
 SMART_PTR_FIX(core::SourceFileInfo_O::static_class_symbol);
 SMART_PTR_FIX(core::Array_O::static_class_symbol);
 SMART_PTR_FIX(chem::FrameRecognizer_O::static_class_symbol);
 SMART_PTR_FIX(core::DoubleFloat_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::NamedMDNode_O::static_creator);
 SMART_PTR_FIX(core::Array_O::static_class);
 SMART_PTR_FIX(chem::Entity_O::static_class);
 SMART_PTR_FIX(llvmo::MDString_O::static_class_symbol);
 SMART_PTR_FIX(chem::AfterMatchBondTest_O::static_class);
 TAGGED_POINTER_FIX(core::SingleDispatchMethod_O::static_creator);
 SMART_PTR_FIX(chem::EntityNameSet_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::TargetSubtargetInfo_O::static_creator);
 TAGGED_POINTER_FIX(chem::Rotamer_O::static_creator);
 SMART_PTR_FIX(chem::EnergyChiralRestraint_O::static_class);
 TAGGED_POINTER_FIX(chem::EntityNameSetWithCap_O::static_creator);
 SMART_PTR_FIX(chem::RestraintDihedral_O::static_class);
 SMART_PTR_FIX(chem::secondaryAmide);
 SMART_PTR_FIX(llvmo::StructType_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::LLVMTargetMachine_O::static_creator);
 SIMPLE_POINTER_FIX(gctools::global_tagged_Symbol_OP_deleted);
 SMART_PTR_FIX(llvmo::MDNode_O::static_class);
 TAGGED_POINTER_FIX(chem::FFNonbond_O::static_creator);
 TAGGED_POINTER_FIX(chem::EnergyStretch_O::static_creator);
 SMART_PTR_FIX(chem::AtomOrBondMatchNode_O::static_class_symbol);
 SMART_PTR_FIX(chem::InfoDb_O::static_class_symbol);
 SMART_PTR_FIX(chem::Monomer_O::static_class_symbol);
 SMART_PTR_FIX(chem::StatusTracker_O::static_class);
 TAGGED_POINTER_FIX(chem::ForceField_O::static_creator);
 SMART_PTR_FIX(core::VectorObjectsWithFillPtr_O::static_class);
 SMART_PTR_FIX(core::PosixTime_O::static_class);
 SMART_PTR_FIX(llvmo::FunctionPass_O::static_class_symbol);
 SMART_PTR_FIX(core::LightUserData_O::static_class);
 TAGGED_POINTER_FIX(chem::CDBond_O::static_creator);
 TAGGED_POINTER_FIX(chem::TwisterDriver_O::static_creator);
 TAGGED_POINTER_FIX(chem::ImproperTorsion_O::static_creator);
 SMART_PTR_FIX(core::SexpSaveArchive_O::static_class_symbol);
 SMART_PTR_FIX(chem::EnergyStretch_O::static_class_symbol);
 SMART_PTR_FIX(adapt::SymbolSet_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::ReturnInst_O::static_class_symbol);
 TAGGED_POINTER_FIX(clbind::globalClassMap);
 SMART_PTR_FIX(core::StringStream_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::SparseLargeSquareMatrix_O::static_creator);
 SMART_PTR_FIX(chem::AtomTest_O::static_class_symbol);
 TAGGED_POINTER_FIX(_lisp);
 SMART_PTR_FIX(core::FileStatus_O::static_class);
 TAGGED_POINTER_FIX(llvmo::Module_O::static_creator);
 SMART_PTR_FIX(llvmo::ConstantFP_O::static_class);
 SMART_PTR_FIX(llvmo::Metadata_O::static_class);
 TAGGED_POINTER_FIX(core::PosixTime_O::static_creator);
 TAGGED_POINTER_FIX(chem::EnergyComponent_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::ResumeInst_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::Metadata_O::static_creator);
 TAGGED_POINTER_FIX(core::SmallMultimap_O::static_creator);
 SMART_PTR_FIX(chem::IterateAtoms_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::BitVector_O::static_creator);
 TAGGED_POINTER_FIX(core::FunctionValueEnvironment_O::static_creator);
 SMART_PTR_FIX(chem::Coupling_O::static_class_symbol);
 SMART_PTR_FIX(chem::Constitution_O::static_class);
 SMART_PTR_FIX(chem::NumericalFunction_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::PdbReader_O::static_creator);
 SMART_PTR_FIX(core::WeakKeyHashTable_O::static_class_symbol);
 SMART_PTR_FIX(core::Iterator_O::static_class);
 SMART_PTR_FIX(chem::Logical_O::static_class);
 TAGGED_POINTER_FIX(chem::EnergyAnchorRestraint_O::static_creator);
 SMART_PTR_FIX(llvmo::TargetOptions_O::static_class_symbol);
 SMART_PTR_FIX(core::ForeignData_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::SmallMap_O::static_creator);
 SMART_PTR_FIX(chem::CDBond_O::static_class_symbol);
 SMART_PTR_FIX(chem::ImproperTorsion_O::static_class_symbol);
 SMART_PTR_FIX(chem::EnergyFixedNonbondRestraint_O::static_class);
 TAGGED_POINTER_FIX(llvmo::Target_O::static_creator);
 SMART_PTR_FIX(geom::OMatrix_O::static_class);
 SMART_PTR_FIX(chem::StereoisomerAtom_O::static_class_symbol);
 SMART_PTR_FIX(chem::StereoisomerAtoms_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::Function_O::static_creator);
 SMART_PTR_FIX(chem::Monomer_O::static_class);
 TAGGED_POINTER_FIX(chem::EntityNameSet_O::static_creator);
 SMART_PTR_FIX(chem::Command_O::static_class_symbol);
 SMART_PTR_FIX(chem::ZMatrixAngleInternal_O::static_class);
 SMART_PTR_FIX(core::SymbolMacroletEnvironment_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::CallInst_O::static_class);
 SMART_PTR_FIX(llvmo::TargetMachine_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::MonomerContext_O::static_creator);
 SMART_PTR_FIX(chem::ResidueTest_O::static_class_symbol);
 SMART_PTR_FIX(chem::ForceMatchReport_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::SexpSaveArchive_O::static_creator);
 SMART_PTR_FIX(chem::BondMatchNode_O::static_class_symbol);
 SMART_PTR_FIX(geom::BoundingBox_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::AfterMatchBondTest_O::static_creator);
 SMART_PTR_FIX(core::TagbodyEnvironment_O::static_class);
 SMART_PTR_FIX(llvmo::TerminatorInst_O::static_class);
 SMART_PTR_FIX(core::Stream_O::static_class_symbol);
 SMART_PTR_FIX(chem::EnergyAnchorRestraint_O::static_class_symbol);
 SMART_PTR_FIX(core::Str_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::Module_O::static_class);
 SMART_PTR_FIX(chem::FFVdwDb_O::static_class);
 SMART_PTR_FIX(core::InvocationHistoryFrameIterator_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::ExecutionEngine_O::static_class_symbol);
 SMART_PTR_FIX(core::Cons_O::static_class_symbol);
 SMART_PTR_FIX(chem::SpecificContextSet_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::Argument_O::static_class);
 SMART_PTR_FIX(llvmo::MDNode_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::ReadTable_O::static_creator);
 SMART_PTR_FIX(core::StrWithFillPtr_O::static_class);
 TAGGED_POINTER_FIX(core::BlockEnvironment_O::static_creator);
 TAGGED_POINTER_FIX(chem::Mate_O::static_creator);
 SMART_PTR_FIX(chem::ZMatrixInternal_O::static_class);
 TAGGED_POINTER_FIX(core::Class_O::static_creator);
 SMART_PTR_FIX(core::WeakPointer_O::static_class);
 TAGGED_POINTER_FIX(units::Unit_O::static_creator);
 SMART_PTR_FIX(llvmo::DIBuilder_O::static_class);
 SMART_PTR_FIX(llvmo::VectorType_O::static_class);
 SMART_PTR_FIX(chem::AtomTest_O::static_class);
 SMART_PTR_FIX(chem::Logical_O::static_class_symbol);
 SMART_PTR_FIX(core::HashTable_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::PathMessage_O::static_creator);
 SMART_PTR_FIX(chem::RestrainedPiBond_O::static_class_symbol);
 SMART_PTR_FIX(chem::TagSet_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::DISubprogram_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::MDString_O::static_class);
 SMART_PTR_FIX(chem::SpecificContext_O::static_class_symbol);
 SMART_PTR_FIX(core::Path_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::DIFile_O::static_creator);
 SMART_PTR_FIX(chem::Structure_Old_ListEntry_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::PassManager_O::static_class);
 TAGGED_POINTER_FIX(chem::RestraintAnchor_O::static_creator);
 TAGGED_POINTER_FIX(chem::IterateBonds_O::static_creator);
 SMART_PTR_FIX(chem::StereoInformation_O::static_class);
 SMART_PTR_FIX(chem::OneMonomer_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::PassManagerBuilder_O::static_class);
 SMART_PTR_FIX(chem::FFPtorDb_O::static_class);
 TAGGED_POINTER_FIX(core::ActivationFrame_O::static_creator);
 SMART_PTR_FIX(chem::RestraintDistance_O::static_class);
 SMART_PTR_FIX(chem::SmartsRoot_O::static_class);
 SMART_PTR_FIX(llvmo::LoadInst_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::IterateMatter_O::static_creator);
 TAGGED_POINTER_FIX(chem::Topology_O::static_creator);
 SMART_PTR_FIX(core::Instance_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::LongFloat_O::static_creator);
 TAGGED_POINTER_FIX(chem::ConformationExplorer_O::static_creator);
 TAGGED_POINTER_FIX(chem::AGEdge_O::static_creator);
 SMART_PTR_FIX(core::FileStream_O::static_class_symbol);
 SMART_PTR_FIX(asttooling::AstVisitor_O::static_class_symbol);
 SMART_PTR_FIX(core::CompiledFunction_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::PassManager_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::UnreachableInst_O::static_creator);
 SMART_PTR_FIX(chem::Plug_O::static_class);
 SMART_PTR_FIX(geom::CoordinateArray_O::static_class);
 TAGGED_POINTER_FIX(chem::ComplexRestraint_O::static_creator);
 SMART_PTR_FIX(llvmo::ConstantExpr_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::StringStream_O::static_creator);
 TAGGED_POINTER_FIX(chem::VirtualAtom_O::static_creator);
 SMART_PTR_FIX(core::ForwardReferencedClass_O::static_class);
 TAGGED_POINTER_FIX(core::LexicalEnvironment_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::AtomicRMWInst_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::FunctionPass_O::static_creator);
 SMART_PTR_FIX(chem::TagSet_O::static_class);
 SMART_PTR_FIX(llvmo::Pass_O::static_class);
 TAGGED_POINTER_FIX(chem::AtomIdToAtomMap_O::static_creator);
 SMART_PTR_FIX(chem::Plug_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::Complex_O::static_creator);
 SMART_PTR_FIX(chem::Molecule_O::static_class);
 SMART_PTR_FIX(core::String_O::static_class);
 SMART_PTR_FIX(chem::AtomId_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::Structure_Old_List_O::static_creator);
 TAGGED_POINTER_FIX(core::StructureClass_O::static_creator);
 SMART_PTR_FIX(core::VectorObjects_O::static_class);
 TAGGED_POINTER_FIX(chem::ConstitutionAtom_O::static_creator);
 SMART_PTR_FIX(llvmo::SwitchInst_O::static_class);
 SMART_PTR_FIX(chem::SuperposableConformationCollection_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::NVector_O::static_creator);
 SMART_PTR_FIX(llvmo::Function_O::static_class_symbol);
 SMART_PTR_FIX(core::BroadcastStream_O::static_class);
 SMART_PTR_FIX(core::WeakKeyMapping_O::static_class_symbol);
 SMART_PTR_FIX(core::StringStream_O::static_class);
 SMART_PTR_FIX(chem::BondTest_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::ConstantInt_O::static_class);
 SMART_PTR_FIX(llvmo::TerminatorInst_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::Record_O::static_creator);
 SMART_PTR_FIX(core::ShortFloat_O::static_class_symbol);
 SMART_PTR_FIX(core::StandardClass_O::static_class);
 SMART_PTR_FIX(core::ValueEnvironment_O::static_class);
 TAGGED_POINTER_FIX(chem::Branch_O::static_creator);
 SMART_PTR_FIX(core::Binder_O::static_class_symbol);
 SMART_PTR_FIX(geom::Color_O::static_class);
 SMART_PTR_FIX(chem::EnergyComponent_O::static_class);
 SMART_PTR_FIX(chem::FFItorDb_O::static_class);
 SMART_PTR_FIX(llvmo::UndefValue_O::static_class);
 TAGGED_POINTER_FIX(core::SexpLoadArchive_O::static_creator);
 TAGGED_POINTER_FIX(chem::Stereoisomer_O::static_creator);
 TAGGED_POINTER_FIX(chem::AtomIndexer_O::static_creator);
 TAGGED_POINTER_FIX(chem::RingClosingMate_O::static_creator);
 SMART_PTR_FIX(core::SingleDispatchEffectiveMethodFunction_O::static_class);
 SMART_PTR_FIX(core::LongFloat_O::static_class_symbol);
 SMART_PTR_FIX(chem::BondList_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::BuiltInClass_O::static_creator);
 SMART_PTR_FIX(llvmo::Value_O::static_class);
 SMART_PTR_FIX(llvmo::MCSubtargetInfo_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::CDFragment_O::static_creator);
 SMART_PTR_FIX(chem::NVector_O::static_class);
 SMART_PTR_FIX(chem::AtomReferenceBase_O::static_class_symbol);
 SMART_PTR_FIX(chem::AtomIdToAtomMap_O::static_class);
 TAGGED_POINTER_FIX(llvmo::MDString_O::static_creator);
 SMART_PTR_FIX(chem::ChemDraw_O::static_class_symbol);
 SMART_PTR_FIX(core::SynonymStream_O::static_class);
 TAGGED_POINTER_FIX(llvmo::ArrayType_O::static_creator);
 SMART_PTR_FIX(core::FunctionContainerEnvironment_O::static_class);
 TAGGED_POINTER_FIX(chem::AtomId_O::static_creator);
 SMART_PTR_FIX(chem::AtomId_O::static_class);
 SMART_PTR_FIX(llvmo::VAArgInst_O::static_class_symbol);
 SMART_PTR_FIX(chem::EnergyComponent_O::static_class_symbol);
 SMART_PTR_FIX(chem::Rotamer_O::static_class);
 SMART_PTR_FIX(geom::Color_O::static_class_symbol);
 SMART_PTR_FIX(core::BroadcastStream_O::static_class_symbol);
 SMART_PTR_FIX(chem::CDFragment_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::TagbodyFrame_O::static_creator);
 TAGGED_POINTER_FIX(chem::RestraintChiral_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::DIBasicType_O::static_creator);
 TAGGED_POINTER_FIX(core::MacroletEnvironment_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::PassManagerBase_O::static_creator);
 SMART_PTR_FIX(chem::Rotamer_O::static_class_symbol);
 SMART_PTR_FIX(core::WeakKeyMapping_O::static_class);
 SMART_PTR_FIX(chem::Oligomer_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::IRBuilder_O::static_class_symbol);
 SMART_PTR_FIX(chem::InPlug_O::static_class_symbol);
 SMART_PTR_FIX(chem::Bond_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::TerminatorInst_O::static_creator);
 SMART_PTR_FIX(chem::ConformationExplorerEntry_O::static_class_symbol);
 SMART_PTR_FIX(chem::BondListMatchNode_O::static_class_symbol);
 SMART_PTR_FIX(chem::TypeAssignmentRules_O::static_class_symbol);
 SMART_PTR_FIX(core::Environment_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::TargetOptions_O::static_class);
 SMART_PTR_FIX(core::ReadTable_O::static_class_symbol);
 SMART_PTR_FIX(core::SymbolToEnumConverter_O::static_class);
 SMART_PTR_FIX(chem::MultiMonomer_O::static_class);
 TAGGED_POINTER_FIX(core::LoadTimeValues_O::static_creator);
 SMART_PTR_FIX(core::DirectoryEntry_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::StandardClass_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::BasicBlock_O::static_creator);
 TAGGED_POINTER_FIX(chem::ChemInfoNode_O::static_creator);
 SMART_PTR_FIX(chem::FFPtorDb_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::GlobalVariable_O::static_creator);
 TAGGED_POINTER_FIX(adapt::QDomNode_O::static_creator);
 TAGGED_POINTER_FIX(core::LeafSNode_O::static_creator);
 TAGGED_POINTER_FIX(chem::EnergyFixedNonbondRestraint_O::static_creator);
 TAGGED_POINTER_FIX(core::VaList_dummy_O::static_creator);
 TAGGED_POINTER_FIX(core::CxxClass_O::static_creator);
 TAGGED_POINTER_FIX(core::Null_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::DIDescriptor_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::VectorType_O::static_creator);
 SMART_PTR_FIX(core::StandardClass_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::EngineBuilder_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::FFItorDb_O::static_creator);
 TAGGED_POINTER_FIX(chem::RestraintDihedral_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::APInt_O::static_creator);
 SMART_PTR_FIX(chem::SmartsRoot_O::static_class_symbol);
 SMART_PTR_FIX(core::Specializer_O::static_class);
 SMART_PTR_FIX(core::LoadTimeValues_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::VectorObjects_O::static_creator);
 SMART_PTR_FIX(core::FuncallableStandardClass_O::static_class);
 SMART_PTR_FIX(core::CompileTimeEnvironment_O::static_class);
 SMART_PTR_FIX(llvmo::ConstantDataArray_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::Triple_O::static_creator);
 TAGGED_POINTER_FIX(core::StrWithFillPtr_O::static_creator);
 SMART_PTR_FIX(core::SimpleBitVector_O::static_class);
 TAGGED_POINTER_FIX(core::Str_O::static_creator);
 SMART_PTR_FIX(core::SymbolToEnumConverter_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::ConstantArray_O::static_class_symbol);
 SMART_PTR_FIX(core::ActivationFrame_O::static_class);
 SMART_PTR_FIX(llvmo::DICompositeType_O::static_class_symbol);
 SMART_PTR_FIX(core::ArrayObjects_O::static_class);
 TAGGED_POINTER_FIX(chem::Trajectory_O::static_creator);
 SMART_PTR_FIX(core::IOFileStream_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::DILexicalBlock_O::static_creator);
 TAGGED_POINTER_FIX(chem::RestraintDistance_O::static_creator);
 SMART_PTR_FIX(units::Dimension_O::static_class);
 TAGGED_POINTER_FIX(core::ArrayObjects_O::static_creator);
 SMART_PTR_FIX(core::FileStream_O::static_class);
 SMART_PTR_FIX(llvmo::ConstantExpr_O::static_class);
 SMART_PTR_FIX(chem::TrajectoryFrame_O::static_class);
 TAGGED_POINTER_FIX(chem::FFPtor_O::static_creator);
 SMART_PTR_FIX(core::RecursiveDirectoryIterator_O::static_class_symbol);
 SMART_PTR_FIX(chem::ConstitutionAtom_O::static_class_symbol);
 SMART_PTR_FIX(chem::FullLargeSquareMatrix_O::static_class);
 SMART_PTR_FIX(core::SingleDispatchEffectiveMethodFunction_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::User_O::static_class_symbol);
 SMART_PTR_FIX(chem::WildElementDict_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::Linker_O::static_creator);
 TAGGED_POINTER_FIX(core::Integer_O::static_creator);
 TAGGED_POINTER_FIX(core::HashTableEql_O::static_creator);
 SMART_PTR_FIX(chem::AntechamberRoot_O::static_class_symbol);
 SMART_PTR_FIX(core::Fixnum_dummy_O::static_class_symbol);
 SMART_PTR_FIX(core::RandomState_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::ConformationCollection_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::CompositeType_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::DIScope_O::static_creator);
 SMART_PTR_FIX(chem::ConstitutionAtoms_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::Coupling_O::static_creator);
 TAGGED_POINTER_FIX(chem::TypeAssignmentRules_O::static_creator);
 SMART_PTR_FIX(core::SourceManager_O::static_class_symbol);
 SMART_PTR_FIX(chem::Matter_O::static_class_symbol);
 SMART_PTR_FIX(chem::ZMatrixAngleInternal_O::static_class_symbol);
 SMART_PTR_FIX(chem::OutPlug_O::static_class);
 SMART_PTR_FIX(adapt::IndexedObjectBag_O::static_class);
 SMART_PTR_FIX(core::IntArray_O::static_class_symbol);
 SMART_PTR_FIX(core::CatchEnvironment_O::static_class);
 SMART_PTR_FIX(llvmo::UnreachableInst_O::static_class_symbol);
 SMART_PTR_FIX(chem::Coupling_O::static_class);
 TAGGED_POINTER_FIX(core::WrappedPointer_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::EngineBuilder_O::static_creator);
 TAGGED_POINTER_FIX(chem::Plug_O::static_creator);
 SMART_PTR_FIX(core::StandardObject_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::ChemDraw_O::static_creator);
 TAGGED_POINTER_FIX(chem::FFTypesDb_O::static_creator);
 SMART_PTR_FIX(core::LongFloat_O::static_class);
 SMART_PTR_FIX(chem::SpanningLoop_O::static_class);
 SMART_PTR_FIX(llvmo::FunctionPass_O::static_class);
 SMART_PTR_FIX(chem::Aggregate_O::static_class_symbol);
 SMART_PTR_FIX(asttooling::AstVisitor_O::static_class);
 SMART_PTR_FIX(units::NamedUnit_O::static_class);
 SMART_PTR_FIX(llvmo::BlockAddress_O::static_class);
 SMART_PTR_FIX(chem::VirtualAtom_O::static_class);
 SMART_PTR_FIX(core::LightUserData_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::DILexicalBlock_O::static_class_symbol);
 SMART_PTR_FIX(core::CandoException_O::static_class);
 TAGGED_POINTER_FIX(llvmo::SwitchInst_O::static_creator);
 SMART_PTR_FIX(core::HashTableEql_O::static_class);
 TAGGED_POINTER_FIX(llvmo::FunctionType_O::static_creator);
 TAGGED_POINTER_FIX(adapt::ObjectSet_O::static_creator);
 SMART_PTR_FIX(chem::StereoInformation_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::SearchStatistics_O::static_creator);
 SMART_PTR_FIX(chem::PlugWithMates_O::static_class);
 TAGGED_POINTER_FIX(llvmo::ImmutablePass_O::static_creator);
 TAGGED_POINTER_FIX(core::StackValueEnvironment_O::static_creator);
 TAGGED_POINTER_FIX(chem::ResidueList_O::static_creator);
 SMART_PTR_FIX(chem::RingTest_O::static_class);
 SMART_PTR_FIX(chem::RestraintChiral_O::static_class);
 SMART_PTR_FIX(core::ExternalObject_O::static_class);
 SMART_PTR_FIX(llvmo::DITypeArray_O::static_class_symbol);
 SMART_PTR_FIX(core::AnsiStream_O::static_class);
 SMART_PTR_FIX(core::StructureObject_O::static_class_symbol);
 SMART_PTR_FIX(core::LeafSNode_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::SpanningLoop_O::static_creator);
 SMART_PTR_FIX(llvmo::ArrayType_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::FFStretch_O::static_creator);
 TAGGED_POINTER_FIX(core::WeakKeyHashTable_O::static_creator);
 SMART_PTR_FIX(llvmo::CallInst_O::static_class_symbol);
 SMART_PTR_FIX(chem::AGVertex_O::static_class);
 TAGGED_POINTER_FIX(llvmo::MDNode_O::static_creator);
 SMART_PTR_FIX(core::DirectoryIterator_O::static_class);
 SMART_PTR_FIX(chem::CalculatePositionAlongBond_O::static_class);
 TAGGED_POINTER_FIX(core::RuntimeVisibleEnvironment_O::static_creator);
 SMART_PTR_FIX(chem::RepresentedEntityNameSet_O::static_class);
 SMART_PTR_FIX(chem::OligomerPart_Base_O::static_class_symbol);
 SMART_PTR_FIX(core::Null_O::static_class_symbol);
 SMART_PTR_FIX(core::SourceManager_O::static_class);
 TAGGED_POINTER_FIX(core::SymbolMacroletEnvironment_O::static_creator);
 TAGGED_POINTER_FIX(chem::Chain_O::static_creator);
 SMART_PTR_FIX(chem::PdbMonomerDatabase_O::static_class);
 SMART_PTR_FIX(core::Cons_O::static_class);
 TAGGED_POINTER_FIX(chem::RootMatchNode_O::static_creator);
 TAGGED_POINTER_FIX(core::DirectoryEntry_O::static_creator);
 SMART_PTR_FIX(chem::Structure_Old_List_O::static_class_symbol);
 SMART_PTR_FIX(core::StringOutputStream_O::static_class);
 TAGGED_POINTER_FIX(core::LoadArchive_O::static_creator);
 TAGGED_POINTER_FIX(core::Metaobject_O::static_creator);
 SMART_PTR_FIX(chem::Matter_O::static_class);
 SMART_PTR_FIX(core::StackValueEnvironment_O::static_class);
 SMART_PTR_FIX(chem::ConformationExplorerEntryStage_O::static_class);
 SMART_PTR_FIX(llvmo::ImmutablePass_O::static_class);
 SMART_PTR_FIX(llvmo::Value_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::DILexicalBlock_O::static_class);
 TAGGED_POINTER_FIX(chem::RingCoupling_O::static_creator);
 TAGGED_POINTER_FIX(core::WeakKeyMapping_O::static_creator);
 TAGGED_POINTER_FIX(chem::FFStretchDb_O::static_creator);
 TAGGED_POINTER_FIX(chem::CalculatePositionRelativeToOrigin_O::static_creator);
 TAGGED_POINTER_FIX(chem::ProperTorsion_O::static_creator);
 SMART_PTR_FIX(core::LexicalEnvironment_O::static_class);
 SMART_PTR_FIX(llvmo::DIDerivedType_O::static_class);
 SMART_PTR_FIX(chem::CoordinateSystem_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::DISubroutineType_O::static_creator);
 TAGGED_POINTER_FIX(chem::Entity_O::static_creator);
 SMART_PTR_FIX(llvmo::Module_O::static_class_symbol);
 SMART_PTR_FIX(chem::SearchStatistics_O::static_class_symbol);
 SMART_PTR_FIX(chem::Aggregate_O::static_class);
 SMART_PTR_FIX(core::SmallMap_O::static_class);
 SMART_PTR_FIX(core::GlueEnvironment_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::ConformationCollectionEntry_O::static_creator);
 SMART_PTR_FIX(chem::ZMatrix_O::static_class);
 SMART_PTR_FIX(chem::FFPtor_O::static_class);
 TAGGED_POINTER_FIX(chem::IterateRestraints_O::static_creator);
 SMART_PTR_FIX(chem::ConformationCollectionEntry_O::static_class_symbol);
 SMART_PTR_FIX(chem::StepReport_O::static_class);
 TAGGED_POINTER_FIX(chem::AntechamberFocusAtomMatch_O::static_creator);
 SMART_PTR_FIX(llvmo::FunctionPassManager_O::static_class);
 SMART_PTR_FIX(chem::PdbWriter_O::static_class_symbol);
 SMART_PTR_FIX(chem::FFTypesDb_O::static_class);
 TAGGED_POINTER_FIX(chem::FFAngle_O::static_creator);
 TAGGED_POINTER_FIX(chem::AtomOrBondMatchNode_O::static_creator);
 SMART_PTR_FIX(llvmo::PassManagerBase_O::static_class);
 TAGGED_POINTER_FIX(core::StdClass_O::static_creator);
 SMART_PTR_FIX(chem::RestraintFixedNonbond_O::static_class);
 TAGGED_POINTER_FIX(chem::IterateAtoms_O::static_creator);
 TAGGED_POINTER_FIX(core::LogicalPathname_O::static_creator);
 SMART_PTR_FIX(chem::AntechamberRoot_O::static_class);
 SMART_PTR_FIX(chem::StepReport_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::FFParameter_O::static_creator);
 TAGGED_POINTER_FIX(chem::SpecificContextSet_O::static_creator);
 TAGGED_POINTER_FIX(chem::PlugWithMates_O::static_creator);
 SMART_PTR_FIX(chem::ReportBase_O::static_class);
 SMART_PTR_FIX(llvmo::UnreachableInst_O::static_class);
 SMART_PTR_FIX(llvmo::MCSubtargetInfo_O::static_class);
 SMART_PTR_FIX(core::BitVector_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::User_O::static_creator);
 TAGGED_POINTER_FIX(core::BitVectorWithFillPtr_O::static_creator);
 SMART_PTR_FIX(chem::EnergyDihedral_O::static_class);
 TAGGED_POINTER_FIX(asttooling::AstVisitor_O::static_creator);
 SMART_PTR_FIX(core::HashTableEq_O::static_class);
 SMART_PTR_FIX(core::Integer_O::static_class_symbol);
 SMART_PTR_FIX(core::SourcePosInfo_O::static_class);
 SMART_PTR_FIX(core::LambdaListHandler_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::NamedMDNode_O::static_class);
 SMART_PTR_FIX(chem::FFAngle_O::static_class);
 SMART_PTR_FIX(core::Pathname_O::static_class);
 SMART_PTR_FIX(chem::MonomerPack_O::static_class);
 TAGGED_POINTER_FIX(llvmo::InvokeInst_O::static_creator);
 SMART_PTR_FIX(geom::OMatrix_O::static_class_symbol);
 SMART_PTR_FIX(chem::FFNonbondDb_O::static_class);
 SMART_PTR_FIX(llvmo::ReturnInst_O::static_class);
 TAGGED_POINTER_FIX(chem::RestraintAngle_O::static_creator);
 SMART_PTR_FIX(llvmo::Constant_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::StoreInst_O::static_creator);
 TAGGED_POINTER_FIX(core::Vector_O::static_creator);
 SMART_PTR_FIX(chem::RestrainedExoCyclicAtom_O::static_class);
 SMART_PTR_FIX(core::SingleFloat_dummy_O::static_class_symbol);
 SMART_PTR_FIX(core::MultiStringBuffer_O::static_class_symbol);
 SMART_PTR_FIX(core::Vector_O::static_class_symbol);
 SMART_PTR_FIX(core::Float_O::static_class);
 SMART_PTR_FIX(chem::MonomerCoordinates_O::static_class);
 SMART_PTR_FIX(chem::RestrainedPiBond_O::static_class);
 SMART_PTR_FIX(chem::OligomerPart_Base_O::static_class);
 SMART_PTR_FIX(llvmo::InsertPoint_O::static_class_symbol);
 SMART_PTR_FIX(core::PosixTimeDuration_O::static_class);
 SMART_PTR_FIX(core::HashTableEq_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::DataLayoutPass_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::Restraint_O::static_creator);
 SMART_PTR_FIX(chem::MultiMonomer_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::CompiledFunction_O::static_creator);
 SMART_PTR_FIX(core::CxxObject_O::static_class);
 SMART_PTR_FIX(chem::IterateResidues_O::static_class_symbol);
 SMART_PTR_FIX(chem::NumericalFunction_O::static_class);
 TAGGED_POINTER_FIX(llvmo::Attribute_O::static_creator);
 SMART_PTR_FIX(chem::AbstractLargeSquareMatrix_O::static_class_symbol);
 SMART_PTR_FIX(adapt::SymbolList_O::static_class);
 SMART_PTR_FIX(core::WrappedPointer_O::static_class_symbol);
 SMART_PTR_FIX(chem::Entity_O::static_class_symbol);
 SMART_PTR_FIX(chem::BondTest_O::static_class);
 SMART_PTR_FIX(core::RecursiveDirectoryIterator_O::static_class);
 TAGGED_POINTER_FIX(chem::OligomerPart_Link_O::static_creator);
 TAGGED_POINTER_FIX(geom::CoordinateArray_O::static_creator);
 SMART_PTR_FIX(llvmo::InvokeInst_O::static_class_symbol);
 SMART_PTR_FIX(core::StackValueEnvironment_O::static_class_symbol);
 SMART_PTR_FIX(core::CompiledFunction_O::static_class);
 TAGGED_POINTER_FIX(core::Number_O::static_creator);
 SMART_PTR_FIX(chem::AtomTable_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::ConstantDataSequential_O::static_class_symbol);
 SMART_PTR_FIX(chem::ConstitutionVirtualAtom_O::static_class);
 SMART_PTR_FIX(core::FunctionValueEnvironment_O::static_class_symbol);
 SMART_PTR_FIX(chem::BondMatchNode_O::static_class);
 SMART_PTR_FIX(core::SimpleBitVector_O::static_class_symbol);
 SMART_PTR_FIX(chem::ChemInfoMatch_O::static_class_symbol);
 SMART_PTR_FIX(chem::CalculatePositionRelativeToOrigin_O::static_class);
 TAGGED_POINTER_FIX(llvmo::ConstantFP_O::static_creator);
 SMART_PTR_FIX(geom::BoundingBox_O::static_class);
 TAGGED_POINTER_FIX(core::FileStream_O::static_creator);
 TAGGED_POINTER_FIX(core::Bignum_O::static_creator);
 SMART_PTR_FIX(chem::AntechamberBondTest_O::static_class);
 SMART_PTR_FIX(chem::FrameRecognizer_O::static_class);
 SMART_PTR_FIX(chem::EntityNameSet_O::static_class);
 SMART_PTR_FIX(chem::SuperposeEngine_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::Fixnum_dummy_O::static_creator);
 SMART_PTR_FIX(llvmo::UnaryInstruction_O::static_class_symbol);
 SMART_PTR_FIX(chem::CipPrioritizer_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::Bond_O::static_creator);
 TAGGED_POINTER_FIX(core::SimpleBitVector_O::static_creator);
 TAGGED_POINTER_FIX(chem::ForceMatchReport_O::static_creator);
 SMART_PTR_FIX(llvmo::SwitchInst_O::static_class_symbol);
 SMART_PTR_FIX(core::UserData_O::static_class);
 TAGGED_POINTER_FIX(llvmo::TargetMachine_O::static_creator);
 TAGGED_POINTER_FIX(core::Float_O::static_creator);
 SMART_PTR_FIX(chem::CalculatePosition_O::static_class_symbol);
 SMART_PTR_FIX(core::Reader_O::static_class_symbol);
 SMART_PTR_FIX(chem::AfterMatchBondTest_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::ConstantStruct_O::static_class);
 SMART_PTR_FIX(chem::StereoisomerAtom_O::static_class);
 SMART_PTR_FIX(core::ConcatenatedStream_O::static_class);
 SMART_PTR_FIX(chem::AtomIndexer_O::static_class);
 SMART_PTR_FIX(chem::FFStretchDb_O::static_class);
 TAGGED_POINTER_FIX(chem::CandoDatabase_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::ConstantArray_O::static_creator);
 SMART_PTR_FIX(chem::PlugWithMates_O::static_class_symbol);
 SMART_PTR_FIX(chem::IterateBonds_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::DIScope_O::static_class);
 SMART_PTR_FIX(chem::Atom_O::static_class);
 SMART_PTR_FIX(chem::Minimizer_O::static_class);
 SMART_PTR_FIX(core::ValueFrame_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::ConstantStruct_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::Path_O::static_creator);
 SMART_PTR_FIX(core::Class_O::static_class_symbol);
 SMART_PTR_FIX(chem::EnergyFunction_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::DITypeArray_O::static_class);
 SMART_PTR_FIX(chem::RestraintDihedral_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::Aggregate_O::static_creator);
 TAGGED_POINTER_FIX(core::Ratio_O::static_creator);
 SMART_PTR_FIX(chem::RingTest_O::static_class_symbol);
 SMART_PTR_FIX(core::RegexMatch_O::static_class_symbol);
 SMART_PTR_FIX(geom::OVector3_O::static_class);
 SMART_PTR_FIX(llvmo::DebugInfo_O::static_class_symbol);
 SMART_PTR_FIX(core::Regex_O::static_class);
 TAGGED_POINTER_FIX(llvmo::ConstantDataArray_O::static_creator);
 TAGGED_POINTER_FIX(core::SingleFloat_dummy_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::MCSubtargetInfo_O::static_creator);
 SMART_PTR_FIX(core::Function_O::static_class);
 SMART_PTR_FIX(core::TagbodyEnvironment_O::static_class_symbol);
 SMART_PTR_FIX(chem::FFNonbond_O::static_class_symbol);
 SMART_PTR_FIX(core::Reader_O::static_class);
 TAGGED_POINTER_FIX(chem::RepresentedEntityNameSet_O::static_creator);
 TAGGED_POINTER_FIX(chem::Logical_O::static_creator);
 TAGGED_POINTER_FIX(chem::CalculatePosition_O::static_creator);
 SMART_PTR_FIX(core::PosixTimeDuration_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::UserData_O::static_creator);
 SMART_PTR_FIX(core::EchoStream_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::EchoStream_O::static_creator);
 TAGGED_POINTER_FIX(core::Environment_O::static_creator);
 SMART_PTR_FIX(chem::ConformationExplorerMatch_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::DISubprogram_O::static_class);
 TAGGED_POINTER_FIX(chem::FFVdw_O::static_creator);
 SMART_PTR_FIX(chem::AtomReference_O::static_class);
 TAGGED_POINTER_FIX(chem::StereoisomerAtom_O::static_creator);
 SMART_PTR_FIX(core::FileStatus_O::static_class_symbol);
 SMART_PTR_FIX(core::BitVectorWithFillPtr_O::static_class);
 TAGGED_POINTER_FIX(units::Quantity_O::static_creator);
 SMART_PTR_FIX(chem::Branch_O::static_class_symbol);
 SMART_PTR_FIX(chem::MonomerContext_O::static_class);
 TAGGED_POINTER_FIX(llvmo::DataLayout_O::static_creator);
 TAGGED_POINTER_FIX(chem::OneMonomer_O::static_creator);
 SMART_PTR_FIX(chem::Structure_Old_List_O::static_class);
 SMART_PTR_FIX(chem::CDText_O::static_class);
 TAGGED_POINTER_FIX(llvmo::DIArray_O::static_creator);
 SMART_PTR_FIX(llvmo::DebugLoc_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::FunctionContainerEnvironment_O::static_creator);
 SMART_PTR_FIX(llvmo::VAArgInst_O::static_class);
 TAGGED_POINTER_FIX(chem::TrajectoryFrame_O::static_creator);
 SMART_PTR_FIX(core::TwoWayStream_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::StructType_O::static_creator);
 SMART_PTR_FIX(chem::FFPtor_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::GlobalValue_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::FunctionPassManager_O::static_creator);
 SMART_PTR_FIX(chem::Minimizer_O::static_class_symbol);
 SMART_PTR_FIX(chem::ZMatrixDihedralInternal_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::PassManagerBuilder_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::IndirectBrInst_O::static_class_symbol);
 SMART_PTR_FIX(core::SmallMultimap_O::static_class);
 SMART_PTR_FIX(chem::CipPrioritizer_O::static_class);
 TAGGED_POINTER_FIX(chem::BondList_O::static_creator);
 SMART_PTR_FIX(chem::Alias_O::static_class_symbol);
 SMART_PTR_FIX(core::Ratio_O::static_class);
 TAGGED_POINTER_FIX(core::ValueFrame_O::static_creator);
 SMART_PTR_FIX(adapt::QDomNode_O::static_class_symbol);
 SMART_PTR_FIX(chem::EnergyChiralRestraint_O::static_class_symbol);
 SMART_PTR_FIX(core::GlueEnvironment_O::static_class);
 TAGGED_POINTER_FIX(chem::Oligomer_O::static_creator);
 TAGGED_POINTER_FIX(chem::IterateResidues_O::static_creator);
 SMART_PTR_FIX(core::Null_O::static_class);
 SMART_PTR_FIX(chem::ChemInfoNode_O::static_class);
 SMART_PTR_FIX(chem::AtomTable_O::static_class);
 SMART_PTR_FIX(llvmo::IRBuilderBase_O::static_class);
 TAGGED_POINTER_FIX(chem::AtomTable_O::static_creator);
 SMART_PTR_FIX(chem::DirectionalCoupling_O::static_class);
 SMART_PTR_FIX(llvmo::LandingPadInst_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::RegexMatch_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::APFloat_O::static_creator);
 SMART_PTR_FIX(llvmo::DIDerivedType_O::static_class_symbol);
 TAGGED_POINTER_FIX(adapt::StringList_O::static_creator);
 SMART_PTR_FIX(core::StringInputStream_O::static_class);
 SMART_PTR_FIX(core::LogicalPathname_O::static_class_symbol);
 SMART_PTR_FIX(core::FunctionValueEnvironment_O::static_class);
 TAGGED_POINTER_FIX(llvmo::PassManagerBuilder_O::static_creator);
 TAGGED_POINTER_FIX(chem::CalculatePositionAlongBond_O::static_creator);
 SMART_PTR_FIX(chem::FFNonbondCrossTermTable_O::static_class);
 TAGGED_POINTER_FIX(core::ValueEnvironment_O::static_creator);
 TAGGED_POINTER_FIX(core::StandardObject_O::static_creator);
 SMART_PTR_FIX(chem::ConformationExplorerEntry_O::static_class);
 SMART_PTR_FIX(llvmo::ValueAsMetadata_O::static_class);
 TAGGED_POINTER_FIX(llvmo::Pass_O::static_creator);
 TAGGED_POINTER_FIX(adapt::SymbolSet_O::static_creator);
 SMART_PTR_FIX(core::SingleDispatchGenericFunction_O::static_class);
 SMART_PTR_FIX(chem::ComplexRestraint_O::static_class_symbol);
 SMART_PTR_FIX(core::HashTable_O::static_class);
 SMART_PTR_FIX(adapt::IterateCons_O::static_class);
 SMART_PTR_FIX(chem::RingClosingPlug_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::ConstantStruct_O::static_creator);
 SMART_PTR_FIX(adapt::SymbolSet_O::static_class);
 SMART_PTR_FIX(chem::IterateBonds_O::static_class);
 SMART_PTR_FIX(chem::CandoDatabase_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::Value_O::static_creator);
 SMART_PTR_FIX(core::IntArray_O::static_class);
 TAGGED_POINTER_FIX(core::BranchSNode_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::VAArgInst_O::static_creator);
 SMART_PTR_FIX(chem::AGEdge_O::static_class_symbol);
 SMART_PTR_FIX(chem::CDNode_O::static_class_symbol);
 SMART_PTR_FIX(core::VectorDisplaced_O::static_class);
 SMART_PTR_FIX(core::VectorObjectsWithFillPtr_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::RingClosingPlug_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::BranchInst_O::static_creator);
 SMART_PTR_FIX(core::StrWithFillPtr_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::AllocaInst_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::ForeignData_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::LandingPadInst_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::AllocaInst_O::static_creator);
 SMART_PTR_FIX(core::PosixTime_O::static_class_symbol);
 SMART_PTR_FIX(chem::ReportBase_O::static_class_symbol);
 SMART_PTR_FIX(geom::OVector3_O::static_class_symbol);
 SMART_PTR_FIX(chem::StatusTracker_O::static_class_symbol);
 SMART_PTR_FIX(core::WeakHashTable_O::static_class_symbol);
 SMART_PTR_FIX(chem::VirtualSphere_O::static_class_symbol);
 SMART_PTR_FIX(chem::Chain_O::static_class);
 TAGGED_POINTER_FIX(chem::Twister_O::static_creator);
 TAGGED_POINTER_FIX(chem::AntechamberBondTest_O::static_creator);
 SMART_PTR_FIX(adapt::IndexedObjectBag_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::LLVMContext_O::static_creator);
 SMART_PTR_FIX(chem::FFVdwDb_O::static_class_symbol);
 SMART_PTR_FIX(adapt::QDomNode_O::static_class);
 TAGGED_POINTER_FIX(core::AnsiStream_O::static_creator);
 SMART_PTR_FIX(llvmo::TargetSubtargetInfo_O::static_class);
 TAGGED_POINTER_FIX(chem::FFPtorDb_O::static_creator);
 TAGGED_POINTER_FIX(core::InvocationHistoryFrameIterator_O::static_creator);
 TAGGED_POINTER_FIX(chem::AbstractLargeSquareMatrix_O::static_creator);
 SMART_PTR_FIX(llvmo::PointerType_O::static_class_symbol);
 SMART_PTR_FIX(chem::Molecule_O::static_class_symbol);
 SMART_PTR_FIX(core::Environment_O::static_class);
 TAGGED_POINTER_FIX(core::StringOutputStream_O::static_creator);
 SMART_PTR_FIX(core::VaList_dummy_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::EnergyDihedral_O::static_creator);
 SMART_PTR_FIX(chem::CalculatePositionUsingInternals_O::static_class);
 SMART_PTR_FIX(llvmo::DICompositeType_O::static_class);
 SMART_PTR_FIX(llvmo::LLVMContext_O::static_class);
 SMART_PTR_FIX(chem::ZMatrixBondInternal_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::MultiStringBuffer_O::static_creator);
 SMART_PTR_FIX(chem::PdbWriter_O::static_class);
 SMART_PTR_FIX(adapt::SymbolList_O::static_class_symbol);
 SMART_PTR_FIX(core::BranchSNode_O::static_class);
 SMART_PTR_FIX(llvmo::FunctionType_O::static_class);
 SMART_PTR_FIX(llvmo::AllocaInst_O::static_class);
 SMART_PTR_FIX(llvmo::DISubroutineType_O::static_class);
 SMART_PTR_FIX(chem::MacroModelFile_O::static_class_symbol);
 SMART_PTR_FIX(chem::ConformationExplorerEntryStage_O::static_class_symbol);
 SMART_PTR_FIX(chem::TwisterDriver_O::static_class_symbol);
 SMART_PTR_FIX(core::CxxClass_O::static_class_symbol);
 SMART_PTR_FIX(core::Vector_O::static_class);
 TAGGED_POINTER_FIX(chem::WildElementDict_O::static_creator);
 SMART_PTR_FIX(llvmo::DataLayout_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::CalculatePositionUsingInternals_O::static_creator);
 SMART_PTR_FIX(llvmo::BasicBlock_O::static_class);
 SMART_PTR_FIX(llvmo::AtomicRMWInst_O::static_class);
 SMART_PTR_FIX(core::StructureClass_O::static_class);
 SMART_PTR_FIX(llvmo::StoreInst_O::static_class);
 TAGGED_POINTER_FIX(llvmo::ModulePass_O::static_creator);
 SMART_PTR_FIX(llvmo::ConstantFP_O::static_class_symbol);
 TAGGED_POINTER_FIX(units::Dimension_O::static_creator);
 TAGGED_POINTER_FIX(core::Function_O::static_creator);
 SMART_PTR_FIX(llvmo::Target_O::static_class_symbol);
 SMART_PTR_FIX(geom::CoordinateArrayWithHash_O::static_class);
 SMART_PTR_FIX(chem::FFBaseDb_O::static_class_symbol);
 SMART_PTR_FIX(chem::CDBond_O::static_class);
 SMART_PTR_FIX(core::FunctionFrame_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::Symbol_O::static_creator);
 SMART_PTR_FIX(core::LoadArchive_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::CompositeType_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::Argument_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::ConstantInt_O::static_creator);
 TAGGED_POINTER_FIX(chem::ReportBase_O::static_creator);
 SMART_PTR_FIX(core::TagbodyFrame_O::static_class);
 SMART_PTR_FIX(chem::CalculatePosition_O::static_class);
 SMART_PTR_FIX(chem::StereoisomerVirtualAtom_O::static_class);
 SMART_PTR_FIX(core::StdClass_O::static_class);
 SMART_PTR_FIX(llvmo::ConstantDataArray_O::static_class);
 SMART_PTR_FIX(chem::ProperTorsion_O::static_class);
 SMART_PTR_FIX(chem::BondList_O::static_class);
 SMART_PTR_FIX(chem::ChemInfo_O::static_class_symbol);
 SMART_PTR_FIX(core::Character_dummy_O::static_class_symbol);
 SMART_PTR_FIX(chem::FFNonbondCrossTermTable_O::static_class_symbol);
 SMART_PTR_FIX(core::CatchEnvironment_O::static_class_symbol);
 SMART_PTR_FIX(chem::RestraintAnchor_O::static_class_symbol);
 SMART_PTR_FIX(chem::JumpPlug_O::static_class);
 SMART_PTR_FIX(chem::ChemInfo_O::static_class);
 SMART_PTR_FIX(core::Float_O::static_class_symbol);
 SMART_PTR_FIX(core::SNode_O::static_class);
 TAGGED_POINTER_FIX(chem::FFBaseDb_O::static_creator);
 SMART_PTR_FIX(chem::StereoConfiguration_O::static_class);
 SMART_PTR_FIX(llvmo::LLVMContext_O::static_class_symbol);
 SMART_PTR_FIX(core::Rational_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::DIType_O::static_creator);
 TAGGED_POINTER_FIX(chem::JumpPlug_O::static_creator);
 SMART_PTR_FIX(llvmo::DataLayout_O::static_class);
 SMART_PTR_FIX(llvmo::DIBasicType_O::static_class);
 SMART_PTR_FIX(core::Bignum_O::static_class_symbol);
 SMART_PTR_FIX(core::Str_O::static_class);
 TAGGED_POINTER_FIX(core::SourceFileInfo_O::static_creator);
 SMART_PTR_FIX(llvmo::DIDescriptor_O::static_class);
 SMART_PTR_FIX(chem::PdbReader_O::static_class);
 SMART_PTR_FIX(llvmo::InsertPoint_O::static_class);
 SMART_PTR_FIX(chem::EnergyDihedral_O::static_class_symbol);
 SMART_PTR_FIX(chem::Stereoisomer_O::static_class);
 SMART_PTR_FIX(llvmo::DICompileUnit_O::static_class_symbol);
 SMART_PTR_FIX(chem::EnergyFunction_O::static_class);
 TAGGED_POINTER_FIX(core::SaveArchive_O::static_creator);
 SMART_PTR_FIX(chem::IterateMatter_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::OligomerPart_Base_O::static_creator);
 SMART_PTR_FIX(llvmo::StoreInst_O::static_class_symbol);
 SMART_PTR_FIX(chem::RingClosingPlug_O::static_class);
 TAGGED_POINTER_FIX(chem::AtomTest_O::static_creator);
 TAGGED_POINTER_FIX(core::HashTableEqual_O::static_creator);
 SMART_PTR_FIX(core::StandardObject_O::static_class);
 SMART_PTR_FIX(llvmo::EngineBuilder_O::static_class);
 SMART_PTR_FIX(llvmo::GlobalVariable_O::static_class);
 TAGGED_POINTER_FIX(core::SourceManager_O::static_creator);
 SMART_PTR_FIX(llvmo::BlockAddress_O::static_class_symbol);
 SMART_PTR_FIX(geom::OVector2_O::static_class);
 SMART_PTR_FIX(chem::NVector_O::static_class_symbol);
 SMART_PTR_FIX(chem::Twister_O::static_class);
 SMART_PTR_FIX(chem::Mate_O::static_class);
 SMART_PTR_FIX(llvmo::DIType_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::AtomReferenceBase_O::static_creator);
 TAGGED_POINTER_FIX(core::Package_O::static_creator);
 TAGGED_POINTER_FIX(chem::MonomerCoordinates_O::static_creator);
 SMART_PTR_FIX(chem::FFItor_O::static_class_symbol);
 SMART_PTR_FIX(chem::ConstitutionAtom_O::static_class);
 TAGGED_POINTER_FIX(llvmo::TargetLibraryInfo_O::static_creator);
 TAGGED_POINTER_FIX(chem::Minimizer_O::static_creator);
 SMART_PTR_FIX(core::RegexMatch_O::static_class);
 SMART_PTR_FIX(clbind::ClassRegistry_O::static_class_symbol);
 SMART_PTR_FIX(chem::SpecificContext_O::static_class);
 TAGGED_POINTER_FIX(core::WeakPointer_O::static_creator);
 TAGGED_POINTER_FIX(adapt::SymbolList_O::static_creator);
 SMART_PTR_FIX(llvmo::DIFile_O::static_class);
 SMART_PTR_FIX(chem::Mate_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::Monomer_O::static_creator);
 SMART_PTR_FIX(chem::StereoisomerAtoms_O::static_class);
 SMART_PTR_FIX(chem::OneTypeRule_O::static_class_symbol);
 SMART_PTR_FIX(chem::ResidueList_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::FuncallableStandardClass_O::static_creator);
 SMART_PTR_FIX(llvmo::DIArray_O::static_class);
 SMART_PTR_FIX(core::T_O::static_class);
 SMART_PTR_FIX(chem::Twister_O::static_class_symbol);
 SMART_PTR_FIX(core::Package_O::static_class);
 SMART_PTR_FIX(core::FunctionFrame_O::static_class);
 TAGGED_POINTER_FIX(chem::TagSet_O::static_creator);
 SMART_PTR_FIX(core::IOStreamStream_O::static_class);
 TAGGED_POINTER_FIX(chem::EnergyNonbond_O::static_creator);
 SMART_PTR_FIX(chem::CDText_O::static_class_symbol);
 SMART_PTR_FIX(chem::MessageReport_O::static_class);
 TAGGED_POINTER_FIX(core::IntArray_O::static_creator);
 SMART_PTR_FIX(core::HashTableEqual_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::SuperposeSelectedAtoms_O::static_creator);
 SMART_PTR_FIX(llvmo::DICompileUnit_O::static_class);
 SMART_PTR_FIX(llvmo::Instruction_O::static_class);
 TAGGED_POINTER_FIX(core::SingleDispatchGenericFunction_O::static_creator);
 SMART_PTR_FIX(chem::StructureComparer_O::static_class);
 SMART_PTR_FIX(chem::AtomIndexer_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::Command_O::static_creator);
 SMART_PTR_FIX(chem::Bond_O::static_class);
 TAGGED_POINTER_FIX(chem::MessageReport_O::static_creator);
 SMART_PTR_FIX(chem::SparseLargeSquareMatrix_O::static_class_symbol);
 SMART_PTR_FIX(core::VectorObjects_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::SequentialType_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::Pass_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::String_O::static_creator);
 SMART_PTR_FIX(chem::DirectionalCoupling_O::static_class_symbol);
 SMART_PTR_FIX(core::LoadArchive_O::static_class);
 SMART_PTR_FIX(core::BitVector_O::static_class);
 SMART_PTR_FIX(core::SymbolMacroletEnvironment_O::static_class);
 TAGGED_POINTER_FIX(core::LightUserData_O::static_creator);
 SMART_PTR_FIX(adapt::StringSet_O::static_class);
 TAGGED_POINTER_FIX(chem::StereoisomerVirtualAtom_O::static_creator);
 TAGGED_POINTER_FIX(chem::Residue_O::static_creator);
 SMART_PTR_FIX(core::SmallMultimap_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::Target_O::static_class);
 SMART_PTR_FIX(llvmo::LLVMTargetMachine_O::static_class_symbol);
 SMART_PTR_FIX(chem::ZMatrixDihedralInternal_O::static_class);
 SMART_PTR_FIX(chem::EnergyNonbond_O::static_class_symbol);
 SMART_PTR_FIX(clbind::ClassRep_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::ZMatrixInternal_O::static_creator);
 SMART_PTR_FIX(llvmo::TargetLibraryInfo_O::static_class_symbol);
 SMART_PTR_FIX(chem::AtomReferenceBase_O::static_class);
 SMART_PTR_FIX(core::SingleDispatchMethod_O::static_class);
 SMART_PTR_FIX(chem::ConformationCollectionEntry_O::static_class);
 SMART_PTR_FIX(chem::ImproperTorsion_O::static_class);
 SMART_PTR_FIX(chem::Residue_O::static_class_symbol);
 SMART_PTR_FIX(chem::SuperposeSelectedAtoms_O::static_class);
 SMART_PTR_FIX(core::HashTableEqualp_O::static_class);
 SMART_PTR_FIX(llvmo::ResumeInst_O::static_class_symbol);
 SMART_PTR_FIX(core::LexicalEnvironment_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::RestrainedExoCyclicAtom_O::static_creator);
 SMART_PTR_FIX(core::SpecialForm_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::MacroModelFile_O::static_creator);
 TAGGED_POINTER_FIX(llvmo::DIDerivedType_O::static_creator);
 TAGGED_POINTER_FIX(core::StructureObject_O::static_creator);
 TAGGED_POINTER_FIX(core::SourcePosInfo_O::static_creator);
 SMART_PTR_FIX(chem::SpanningLoop_O::static_class_symbol);
 TAGGED_POINTER_FIX(geom::OMatrix_O::static_creator);
 SMART_PTR_FIX(llvmo::AttributeSet_O::static_class);
 SMART_PTR_FIX(llvmo::APFloat_O::static_class_symbol);
 SMART_PTR_FIX(adapt::IterateCons_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::FullLargeSquareMatrix_O::static_creator);
 TAGGED_POINTER_FIX(chem::Structure_Old_ListEntry_O::static_creator);
 SMART_PTR_FIX(chem::MonomerCoordinates_O::static_class_symbol);
 SMART_PTR_FIX(chem::EntityNameSetBase_O::static_class_symbol);
 SMART_PTR_FIX(chem::RestraintAnchor_O::static_class);
 SMART_PTR_FIX(adapt::ObjectSet_O::static_class_symbol);
 SMART_PTR_FIX(units::Dimension_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::ArrayType_O::static_class);
 SMART_PTR_FIX(llvmo::StructType_O::static_class);
 SMART_PTR_FIX(chem::RootMatchNode_O::static_class);
 SMART_PTR_FIX(llvmo::Type_O::static_class_symbol);
 SMART_PTR_FIX(chem::ZMatrixEntry_O::static_class_symbol);
 TAGGED_POINTER_FIX(adapt::IterateCons_O::static_creator);
 TAGGED_POINTER_FIX(chem::Alias_O::static_creator);
 SMART_PTR_FIX(chem::StereoConfiguration_O::static_class_symbol);
 SMART_PTR_FIX(chem::Stereoisomer_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::Linker_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::RecursiveDirectoryIterator_O::static_creator);
 SMART_PTR_FIX(llvmo::DIArray_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::Stream_O::static_creator);
 TAGGED_POINTER_FIX(core::CompileTimeEnvironment_O::static_creator);
 TAGGED_POINTER_FIX(geom::OVector3_O::static_creator);
 SMART_PTR_FIX(chem::FFVdw_O::static_class);
 SMART_PTR_FIX(core::HashTableEqual_O::static_class);
 TAGGED_POINTER_FIX(chem::FFVdwDb_O::static_creator);
 TAGGED_POINTER_FIX(core::WeakHashTable_O::static_creator);
 SMART_PTR_FIX(chem::Branch_O::static_class);
 SMART_PTR_FIX(chem::Angle_O::static_class);
 SMART_PTR_FIX(chem::ReadAmberParameters_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::FunctionPassManager_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::StructureComparer_O::static_creator);
 SMART_PTR_FIX(core::Regex_O::static_class_symbol);
 SMART_PTR_FIX(chem::FFTypesDb_O::static_class_symbol);
 SMART_PTR_FIX(chem::CalculatePositionAlongBond_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::Metadata_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::Regex_O::static_creator);
 TAGGED_POINTER_FIX(chem::ZMatrixEntry_O::static_creator);
 TAGGED_POINTER_FIX(chem::CDNode_O::static_creator);
 SMART_PTR_FIX(core::Archive_O::static_class_symbol);
 SMART_PTR_FIX(core::Metaobject_O::static_class);
 SMART_PTR_FIX(chem::ReadAmberParameters_O::static_class);
 SMART_PTR_FIX(llvmo::PHINode_O::static_class);
 SMART_PTR_FIX(chem::ZMatrixBondInternal_O::static_class);
 TAGGED_POINTER_FIX(chem::StatusTracker_O::static_creator);
 TAGGED_POINTER_FIX(chem::FFAngleDb_O::static_creator);
 SMART_PTR_FIX(core::Metaobject_O::static_class_symbol);
 SMART_PTR_FIX(core::FunctionContainerEnvironment_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::CoordinateSystem_O::static_creator);
 SMART_PTR_FIX(chem::Constitution_O::static_class_symbol);
 SMART_PTR_FIX(chem::ConstitutionVirtualAtom_O::static_class_symbol);
 TAGGED_POINTER_FIX(core::BroadcastStream_O::static_creator);
 SMART_PTR_FIX(chem::MinimizerLog_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::EntityNameSetBase_O::static_creator);
 TAGGED_POINTER_FIX(chem::Molecule_O::static_creator);
 SMART_PTR_FIX(chem::CandoDatabase_O::static_class);
 TAGGED_POINTER_FIX(core::HashTable_O::static_creator);
 SMART_PTR_FIX(llvmo::PHINode_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::IRBuilderBase_O::static_creator);
 SMART_PTR_FIX(llvmo::IntegerType_O::static_class_symbol);
 SMART_PTR_FIX(chem::Topology_O::static_class);
 SMART_PTR_FIX(llvmo::TargetLibraryInfo_O::static_class);
 SMART_PTR_FIX(llvmo::IRBuilder_O::static_class);
 SMART_PTR_FIX(chem::SparseLargeSquareMatrix_O::static_class);
 TAGGED_POINTER_FIX(core::TagbodyEnvironment_O::static_creator);
 TAGGED_POINTER_FIX(core::SingleDispatchEffectiveMethodFunction_O::static_creator);
 SMART_PTR_FIX(core::LambdaListHandler_O::static_class);
 SMART_PTR_FIX(core::SexpSaveArchive_O::static_class);
 SMART_PTR_FIX(llvmo::DIType_O::static_class);
 TAGGED_POINTER_FIX(chem::SuperposableConformationCollection_O::static_creator);
 TAGGED_POINTER_FIX(core::DoubleFloat_O::static_creator);
 TAGGED_POINTER_FIX(chem::OneTypeRule_O::static_creator);
 SMART_PTR_FIX(core::WeakKeyHashTable_O::static_class);
 SMART_PTR_FIX(llvmo::AtomicRMWInst_O::static_class_symbol);
 SMART_PTR_FIX(core::DirectoryIterator_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::OligomerPart_Monomer_O::static_creator);
 SMART_PTR_FIX(clbind::ClassRegistry_O::static_class);
 SMART_PTR_FIX(core::Integer_O::static_class);
 SMART_PTR_FIX(core::UserData_O::static_class_symbol);
 TAGGED_POINTER_FIX(chem::ZMatrixDihedralInternal_O::static_creator);
 TAGGED_POINTER_FIX(chem::ConstitutionAtoms_O::static_creator);
 SMART_PTR_FIX(chem::EnergyImproperRestraint_O::static_class);
 SMART_PTR_FIX(chem::Restraint_O::static_class);
 SMART_PTR_FIX(chem::ConformationCollection_O::static_class);
 TAGGED_POINTER_FIX(clbind::ClassRegistry_O::static_creator);
 TAGGED_POINTER_FIX(core::SpecialForm_O::static_creator);
 SMART_PTR_FIX(core::Stream_O::static_class);
 SMART_PTR_FIX(llvmo::TargetSubtargetInfo_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::UndefValue_O::static_creator);
 SMART_PTR_FIX(core::BuiltInClass_O::static_class);
 SMART_PTR_FIX(chem::ForceField_O::static_class);
 SMART_PTR_FIX(chem::RingCoupling_O::static_class);
 SMART_PTR_FIX(core::ForeignData_O::static_class);
 SMART_PTR_FIX(chem::ConstitutionBond_O::static_class_symbol);
 SMART_PTR_FIX(chem::Trajectory_O::static_class_symbol);
 SMART_PTR_FIX(chem::VirtualAtom_O::static_class_symbol);
 SMART_PTR_FIX(chem::StructureComparer_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::ConstantPointerNull_O::static_creator);
 SMART_PTR_FIX(llvmo::FenceInst_O::static_class);
 SMART_PTR_FIX(core::Real_O::static_class);
 SMART_PTR_FIX(chem::Structure_Old_ListEntry_O::static_class);
 SMART_PTR_FIX(chem::RingClosingMate_O::static_class_symbol);
 SMART_PTR_FIX(core::Path_O::static_class);
 TAGGED_POINTER_FIX(chem::CipPrioritizer_O::static_creator);
 SMART_PTR_FIX(chem::FFItorDb_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::DISubroutineType_O::static_class_symbol);
 SMART_PTR_FIX(core::WrappedPointer_O::static_class);
 SMART_PTR_FIX(core::HashTableEql_O::static_class_symbol);
 SMART_PTR_FIX(chem::TwisterDriver_O::static_class);
 TAGGED_POINTER_FIX(chem::ResidueTest_O::static_creator);
 SMART_PTR_FIX(chem::Topology_O::static_class_symbol);
 TAGGED_POINTER_FIX(llvmo::DITypeArray_O::static_creator);
 SMART_PTR_FIX(core::BlockEnvironment_O::static_class);
 SMART_PTR_FIX(chem::RootMatchNode_O::static_class_symbol);
 SMART_PTR_FIX(chem::RepresentedEntityNameSet_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::DIDescriptor_O::static_class_symbol);
 SMART_PTR_FIX(core::StringOutputStream_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::ExecutionEngine_O::static_class);
 TAGGED_POINTER_FIX(core::Binder_O::static_creator);
 SMART_PTR_FIX(chem::OneTypeRule_O::static_class);
 SMART_PTR_FIX(llvmo::DIScope_O::static_class_symbol);
 SMART_PTR_FIX(llvmo::ConstantPointerNull_O::static_class);
 SMART_PTR_FIX(llvmo::Attribute_O::static_class);
 TAGGED_POINTER_FIX(asttooling::RegMap::RegistryData);
 SMART_PTR_FIX(llvmo::AtomicCmpXchgInst_O::static_class_symbol);
 SMART_PTR_FIX(chem::IterateRestraints_O::static_class);
 SMART_PTR_FIX(llvmo::APInt_O::static_class_symbol);
 SMART_PTR_FIX(chem::ConformationExplorer_O::static_class);
 SMART_PTR_FIX(llvmo::UnaryInstruction_O::static_class);
#endif // defined(GC_GLOBALS)
#if defined(GC_GLOBAL_SYMBOLS)
#endif // defined(GC_GLOBAL_SYMBOLS)
