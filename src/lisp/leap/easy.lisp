(in-package :leap)

(defun add-gaff ()
  (load-atom-type-rules "ATOMTYPE_GFF.DEF")
  (load-amber-params "gaff.dat"))

(defun easy-gaff (&optional (parm-file "gaff.dat"))
  (leap.core:clear-path)
  (leap.core:add-path "amber:dat;leap;prep;")
  (leap.core:add-path "amber:dat;leap;lib;")
  (leap.core:add-path "amber:dat;leap;parm;")
  (leap.core:add-path "amber:dat;leap;cmd;")
  (leap.core:add-path "amber:dat;antechamber;")
  (leap.core:add-path *default-pathname-defaults*)
  (leap.core:clear-force-field)
  (load-atom-type-rules "ATOMTYPE_GFF.DEF")
  (load-amber-params parm-file))

(defun easy-gaff2 (&optional (parm-file "gaff2.dat"))
  (leap.core:clear-path)
  (leap.core:add-path "amber:dat;leap;prep;")
  (leap.core:add-path "amber:dat;leap;lib;")
  (leap.core:add-path "amber:dat;leap;parm;")
  (leap.core:add-path "amber:dat;leap;cmd;")
  (leap.core:add-path "amber:dat;antechamber;")
  (leap.core:add-path *default-pathname-defaults*)
  (leap.core:clear-force-field)
  (load-atom-type-rules "ATOMTYPE_GFF2.DEF")
  (load-amber-params parm-file))
