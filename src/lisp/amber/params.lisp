(in-package amber.params)

(defun parse-mass-db (fin)
  (let ((nonbond-db (chem:make-ffnonbond-db))
        (atom-types (make-hash-table)))
    (loop for ol = (read-line fin nil :eof)
       until (= (length ol) 0)
       do (let* ((parts (split-sequence:split-sequence-if (lambda (ch)
                                                             (or (char= #\Space ch)
                                                                 (char= #\Tab ch)))
                                                           ol)))
                 (typename (elt parts 0))
                 (mass (elt parts 1))
                 (polarizability (elt parts 2))
                 (nb (chem:make-ffnonbond)))
            (setf (gethash nb atom-types) (intern typename :keyword))
            (chem:set-mass nb (util:parse-float mass))
            (chem:set-polarizability nb (util:parse-float polarizability))
            (chem:ffnonbond-db-add nonbond-db nb)))
  (values nonbond-db atom-types))
