/*
    File: _Dihedral_debugFiniteDifference.cc
*/
/*
Open Source License
Copyright (c) 2016, Christian E. Schafmeister
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 
This is an open source license for the CANDO software from Temple University, but it is not the only one. Contact Temple University at mailto:techtransfer@temple.edu if you would like a different license.
*/
/* -^- */
// FINITE_DIFFERENCE_TEST 
TEST_FORCE( _evaluateEnergyOnly_Dihedral,  delta2*2.0,
(-delta2 + x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
fx1,
index);
TEST_FORCE( _evaluateEnergyOnly_Dihedral,  delta2*2.0,
(x1, -delta2 + y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
fy1,
index);
TEST_FORCE( _evaluateEnergyOnly_Dihedral,  delta2*2.0,
(x1, y1, -delta2 + z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
fz1,
index);
TEST_FORCE( _evaluateEnergyOnly_Dihedral,  delta2*2.0,
(x1, y1, z1, -delta2 + x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
fx2,
index);
TEST_FORCE( _evaluateEnergyOnly_Dihedral,  delta2*2.0,
(x1, y1, z1, x2, -delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
fy2,
index);
TEST_FORCE( _evaluateEnergyOnly_Dihedral,  delta2*2.0,
(x1, y1, z1, x2, y2, -delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
fz2,
index);
TEST_FORCE( _evaluateEnergyOnly_Dihedral,  delta2*2.0,
(x1, y1, z1, x2, y2, z2, -delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
fx3,
index);
TEST_FORCE( _evaluateEnergyOnly_Dihedral,  delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, -delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
fy3,
index);
TEST_FORCE( _evaluateEnergyOnly_Dihedral,  delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
fz3,
index);
TEST_FORCE( _evaluateEnergyOnly_Dihedral,  delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
fx4,
index);
TEST_FORCE( _evaluateEnergyOnly_Dihedral,  delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
fy4,
index);
TEST_FORCE( _evaluateEnergyOnly_Dihedral,  delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
fz4,
index);
TEST_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral, delta2*2.0,
(-delta2 + x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
dhx1x1,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(-delta2 + x1, -delta2 + y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, -delta2 + y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(-delta2 + x1, delta2 + y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, delta2 + y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx1y1,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(-delta2 + x1, y1, -delta2 + z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, -delta2 + z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(-delta2 + x1, y1, delta2 + z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, delta2 + z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx1z1,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(-delta2 + x1, y1, z1, -delta2 + x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, -delta2 + x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(-delta2 + x1, y1, z1, delta2 + x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, delta2 + x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx1x2,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(-delta2 + x1, y1, z1, x2, -delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, -delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(-delta2 + x1, y1, z1, x2, delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx1y2,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(-delta2 + x1, y1, z1, x2, y2, -delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, y2, -delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(-delta2 + x1, y1, z1, x2, y2, delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, y2, delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx1z2,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(-delta2 + x1, y1, z1, x2, y2, z2, -delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, y2, z2, -delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(-delta2 + x1, y1, z1, x2, y2, z2, delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, y2, z2, delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx1x3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(-delta2 + x1, y1, z1, x2, y2, z2, x3, -delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, y2, z2, x3, -delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(-delta2 + x1, y1, z1, x2, y2, z2, x3, delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, y2, z2, x3, delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx1y3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(-delta2 + x1, y1, z1, x2, y2, z2, x3, y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, y2, z2, x3, y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(-delta2 + x1, y1, z1, x2, y2, z2, x3, y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, y2, z2, x3, y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx1z3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(-delta2 + x1, y1, z1, x2, y2, z2, x3, y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, y2, z2, x3, y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(-delta2 + x1, y1, z1, x2, y2, z2, x3, y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, y2, z2, x3, y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx1x4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(-delta2 + x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(-delta2 + x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx1y4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(-delta2 + x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(-delta2 + x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(delta2 + x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
ohx1z4,
index);
TEST_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral, delta2*2.0,
(x1, -delta2 + y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
dhy1y1,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, -delta2 + y1, -delta2 + z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, -delta2 + z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, -delta2 + y1, delta2 + z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, delta2 + z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy1z1,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, -delta2 + y1, z1, -delta2 + x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, -delta2 + x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, -delta2 + y1, z1, delta2 + x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, delta2 + x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy1x2,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, -delta2 + y1, z1, x2, -delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, -delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, -delta2 + y1, z1, x2, delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy1y2,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, -delta2 + y1, z1, x2, y2, -delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, y2, -delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, -delta2 + y1, z1, x2, y2, delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, y2, delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy1z2,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, -delta2 + y1, z1, x2, y2, z2, -delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, y2, z2, -delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, -delta2 + y1, z1, x2, y2, z2, delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, y2, z2, delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy1x3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, -delta2 + y1, z1, x2, y2, z2, x3, -delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, y2, z2, x3, -delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, -delta2 + y1, z1, x2, y2, z2, x3, delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, y2, z2, x3, delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy1y3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, -delta2 + y1, z1, x2, y2, z2, x3, y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, y2, z2, x3, y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, -delta2 + y1, z1, x2, y2, z2, x3, y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, y2, z2, x3, y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy1z3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, -delta2 + y1, z1, x2, y2, z2, x3, y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, y2, z2, x3, y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, -delta2 + y1, z1, x2, y2, z2, x3, y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, y2, z2, x3, y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy1x4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, -delta2 + y1, z1, x2, y2, z2, x3, y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, y2, z2, x3, y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, -delta2 + y1, z1, x2, y2, z2, x3, y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, y2, z2, x3, y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy1y4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, -delta2 + y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, -delta2 + y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, delta2 + y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
ohy1z4,
index);
TEST_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral, delta2*2.0,
(x1, y1, -delta2 + z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
dhz1z1,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, -delta2 + z1, -delta2 + x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, -delta2 + x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, -delta2 + z1, delta2 + x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, delta2 + x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohz1x2,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, -delta2 + z1, x2, -delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, -delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, -delta2 + z1, x2, delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohz1y2,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, -delta2 + z1, x2, y2, -delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, y2, -delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, -delta2 + z1, x2, y2, delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, y2, delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohz1z2,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, -delta2 + z1, x2, y2, z2, -delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, y2, z2, -delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, -delta2 + z1, x2, y2, z2, delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, y2, z2, delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohz1x3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, -delta2 + z1, x2, y2, z2, x3, -delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, y2, z2, x3, -delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, -delta2 + z1, x2, y2, z2, x3, delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, y2, z2, x3, delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohz1y3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, -delta2 + z1, x2, y2, z2, x3, y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, y2, z2, x3, y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, -delta2 + z1, x2, y2, z2, x3, y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, y2, z2, x3, y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohz1z3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, -delta2 + z1, x2, y2, z2, x3, y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, y2, z2, x3, y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, -delta2 + z1, x2, y2, z2, x3, y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, y2, z2, x3, y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohz1x4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, -delta2 + z1, x2, y2, z2, x3, y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, y2, z2, x3, y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, -delta2 + z1, x2, y2, z2, x3, y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, y2, z2, x3, y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
ohz1y4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, -delta2 + z1, x2, y2, z2, x3, y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, y2, z2, x3, y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, -delta2 + z1, x2, y2, z2, x3, y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, delta2 + z1, x2, y2, z2, x3, y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
ohz1z4,
index);
TEST_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral, delta2*2.0,
(x1, y1, z1, -delta2 + x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
dhx2x2,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, -delta2 + x2, -delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, -delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, -delta2 + x2, delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx2y2,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, -delta2 + x2, y2, -delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, y2, -delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, -delta2 + x2, y2, delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, y2, delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx2z2,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, -delta2 + x2, y2, z2, -delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, y2, z2, -delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, -delta2 + x2, y2, z2, delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, y2, z2, delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx2x3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, -delta2 + x2, y2, z2, x3, -delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, y2, z2, x3, -delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, -delta2 + x2, y2, z2, x3, delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, y2, z2, x3, delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx2y3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, -delta2 + x2, y2, z2, x3, y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, y2, z2, x3, y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, -delta2 + x2, y2, z2, x3, y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, y2, z2, x3, y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx2z3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, -delta2 + x2, y2, z2, x3, y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, y2, z2, x3, y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, -delta2 + x2, y2, z2, x3, y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, y2, z2, x3, y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx2x4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, -delta2 + x2, y2, z2, x3, y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, y2, z2, x3, y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, -delta2 + x2, y2, z2, x3, y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, y2, z2, x3, y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx2y4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, -delta2 + x2, y2, z2, x3, y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, y2, z2, x3, y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, -delta2 + x2, y2, z2, x3, y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, delta2 + x2, y2, z2, x3, y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
ohx2z4,
index);
TEST_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral, delta2*2.0,
(x1, y1, z1, x2, -delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, delta2 + y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
dhy2y2,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, -delta2 + y2, -delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, delta2 + y2, -delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, -delta2 + y2, delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, delta2 + y2, delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy2z2,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, -delta2 + y2, z2, -delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, delta2 + y2, z2, -delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, -delta2 + y2, z2, delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, delta2 + y2, z2, delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy2x3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, -delta2 + y2, z2, x3, -delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, delta2 + y2, z2, x3, -delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, -delta2 + y2, z2, x3, delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, delta2 + y2, z2, x3, delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy2y3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, -delta2 + y2, z2, x3, y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, delta2 + y2, z2, x3, y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, -delta2 + y2, z2, x3, y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, delta2 + y2, z2, x3, y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy2z3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, -delta2 + y2, z2, x3, y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, delta2 + y2, z2, x3, y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, -delta2 + y2, z2, x3, y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, delta2 + y2, z2, x3, y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy2x4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, -delta2 + y2, z2, x3, y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, delta2 + y2, z2, x3, y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, -delta2 + y2, z2, x3, y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, delta2 + y2, z2, x3, y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy2y4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, -delta2 + y2, z2, x3, y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, delta2 + y2, z2, x3, y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, -delta2 + y2, z2, x3, y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, delta2 + y2, z2, x3, y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
ohy2z4,
index);
TEST_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral, delta2*2.0,
(x1, y1, z1, x2, y2, -delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, delta2 + z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
dhz2z2,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, -delta2 + z2, -delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, delta2 + z2, -delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, -delta2 + z2, delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, delta2 + z2, delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohz2x3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, -delta2 + z2, x3, -delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, delta2 + z2, x3, -delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, -delta2 + z2, x3, delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, delta2 + z2, x3, delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohz2y3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, -delta2 + z2, x3, y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, delta2 + z2, x3, y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, -delta2 + z2, x3, y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, delta2 + z2, x3, y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohz2z3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, -delta2 + z2, x3, y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, delta2 + z2, x3, y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, -delta2 + z2, x3, y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, delta2 + z2, x3, y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohz2x4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, -delta2 + z2, x3, y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, delta2 + z2, x3, y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, -delta2 + z2, x3, y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, delta2 + z2, x3, y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
ohz2y4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, -delta2 + z2, x3, y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, delta2 + z2, x3, y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, -delta2 + z2, x3, y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, delta2 + z2, x3, y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
ohz2z4,
index);
TEST_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral, delta2*2.0,
(x1, y1, z1, x2, y2, z2, -delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, delta2 + x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
dhx3x3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, z2, -delta2 + x3, -delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, delta2 + x3, -delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, -delta2 + x3, delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, delta2 + x3, delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx3y3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, z2, -delta2 + x3, y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, delta2 + x3, y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, -delta2 + x3, y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, delta2 + x3, y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx3z3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, z2, -delta2 + x3, y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, delta2 + x3, y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, -delta2 + x3, y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, delta2 + x3, y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx3x4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, z2, -delta2 + x3, y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, delta2 + x3, y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, -delta2 + x3, y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, delta2 + x3, y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx3y4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, z2, -delta2 + x3, y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, delta2 + x3, y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, -delta2 + x3, y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, delta2 + x3, y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
ohx3z4,
index);
TEST_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral, delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, -delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, delta2 + y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
dhy3y3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, -delta2 + y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, delta2 + y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, -delta2 + y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, delta2 + y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy3z3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, -delta2 + y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, delta2 + y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, -delta2 + y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, delta2 + y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy3x4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, -delta2 + y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, delta2 + y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, -delta2 + y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, delta2 + y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
ohy3y4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, -delta2 + y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, delta2 + y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, -delta2 + y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, delta2 + y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
ohy3z4,
index);
TEST_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral, delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, y3, -delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, delta2 + z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
dhz3z3,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, y3, -delta2 + z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, delta2 + z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, -delta2 + z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, delta2 + z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
ohz3x4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, y3, -delta2 + z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, delta2 + z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, -delta2 + z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, delta2 + z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
ohz3y4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, y3, -delta2 + z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, delta2 + z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, -delta2 + z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, delta2 + z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
ohz3z4,
index);
TEST_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral, delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, y3, z3, -delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, delta2 + x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
dhx4x4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, y3, z3, -delta2 + x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, delta2 + x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, -delta2 + x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, delta2 + x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
ohx4y4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, y3, z3, -delta2 + x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, delta2 + x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, -delta2 + x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, delta2 + x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
ohx4z4,
index);
TEST_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral, delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, -delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, delta2 + y4, z4, V, DN, IN, cosPhase, sinPhase),
dhy4y4,
index);
TEST_OFF_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral,
delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, -delta2 + y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, delta2 + y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, -delta2 + y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, delta2 + y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
ohy4z4,
index);
TEST_DIAGONAL_HESSIAN( _evaluateEnergyOnly_Dihedral, delta2*2.0,
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, -delta2 + z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, V, DN, IN, cosPhase, sinPhase),
(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, delta2 + z4, V, DN, IN, cosPhase, sinPhase),
dhz4z4,
index);
